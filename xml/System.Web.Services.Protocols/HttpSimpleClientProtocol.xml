<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d50f1489d37dfa83d618abba7f89416b5b7b423c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257642" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c00b4-101">Stellt mithilfe der einfachen Bindungen des HTTP-GET-Protokolls und des HTTP-POST-Protokolls die Basisklasse für die Kommunikation mit einem XML-Webdienst dar.</span><span class="sxs-lookup"><span data-stu-id="c00b4-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c00b4-102">Diese Klasse gibt den größten Teil der Implementierung für die Kommunikation mit einem XML-Webdienst über HTTP mithilfe von Encodern an, um die Parameter und die Rückgabewerte in gängige MIME-Formate zu codieren.</span><span class="sxs-lookup"><span data-stu-id="c00b4-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="c00b4-103">Diese Encoder werden von der <xref:System.Web.Services.Protocols.MimeFormatter> -Klasse abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="c00b4-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="c00b4-104">Standardmäßig wird eine Proxy Klasse, die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> von abgeleitet wird, mit dem MIME-Typ "application/x-www-form-urlencoded" und der Antwort in Plain XML von codiert.</span><span class="sxs-lookup"><span data-stu-id="c00b4-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="c00b4-105">Benutzerdefinierte MIME-Formatierer können mithilfe des <xref:System.Web.Services.Protocols.HttpMethodAttribute> -Attributs angegeben werden. es gibt jedoch keine Unterstützung für die Integration in eine Dienst Beschreibung und eine Proxy Generierung.</span><span class="sxs-lookup"><span data-stu-id="c00b4-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="c00b4-106">`Notes to Inheritors:`Wenn Sie diese Klasse überschreiben, können Sie Methoden in der abgeleiteten Klasse einführen, die für einen bestimmten Typ eines XML-Webdiensts spezifisch sind.</span><span class="sxs-lookup"><span data-stu-id="c00b4-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="c00b4-107">Mit den-Methoden werden einfach die Parameter aufgezeichnet und die-Basisklasse aufgerufen, um die Kommunikation mit der Website zu übernehmen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="c00b4-108">Wenn die eingeführten Methoden asynchron sind, müssen Sie <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> -Methode und die-Methode abrufen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="c00b4-109">Wenn die eingeführten Methoden synchron sind, wird die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> -Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="c00b4-110">Der überschriebene Konstruktor legt die <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> -Eigenschaft in der Regel auf den URI der XML-Webdienst Methode fest.</span><span class="sxs-lookup"><span data-stu-id="c00b4-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="c00b4-111">Das Web Services Description Language Tool (WSDL. exe) generiert abgeleitete Klassen <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> von für eine angegebene Dienst Beschreibung.</span><span class="sxs-lookup"><span data-stu-id="c00b4-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c00b4-112">Das folgende Codebeispiel ist eine Proxy Klasse, die von WSDL. exe für `Math` den folgenden XML-Webdienst generiert wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="c00b4-113">Die Proxy Klasse wird von <xref:System.Web.Services.Protocols.HttpGetClientProtocol>abgeleitet, das von der abstrakten <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> -Klasse abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c00b4-114">Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die vorherige Proxy Klasse erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c00b4-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c00b4-115">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="c00b4-115">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c00b4-116">Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c00b4-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="c00b4-117">Der Name der XML-Webdienstmethode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-117">The name of the XML Web service method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="c00b4-118">Die beim Erstellen von <see cref="T:System.Net.WebRequest" /> zu verwendende URL.</span><span class="sxs-lookup"><span data-stu-id="c00b4-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="c00b4-119">Ein Array von Objekten mit den Parametern, die an die XML-Webdienstmethode zu übergeben sind.</span><span class="sxs-lookup"><span data-stu-id="c00b4-119">An array of objects containing the parameters to pass to the XML Web service method.</span></span> <span data-ttu-id="c00b4-120">Die Reihenfolge der Werte im Array entspricht der Reihenfolge der Parameter in der Aufrufmethode der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="c00b4-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="c00b4-121">Der Delegat, der aufgerufen werden soll, wenn der asynchrone Methodenaufruf abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="c00b4-121">The delegate to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="c00b4-122">Wenn <paramref name="callback" /> auf <see langword="null" /> festgelegt ist, wird der Delegat nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-122">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="c00b4-123">Die von einem Client gelieferten zusätzlichen Informationen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-123">The additional information supplied by a client.</span></span></param>
        <summary><span data-ttu-id="c00b4-124">Startet den asynchronen Aufruf einer Methode eines XML-Webdiensts.</span><span class="sxs-lookup"><span data-stu-id="c00b4-124">Starts an asynchronous invocation of a method of an XML Web service.</span></span></summary>
        <returns><span data-ttu-id="c00b4-125">Ein <see cref="T:System.IAsyncResult" />, das an die <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />-Methode übergeben werden kann, um die Rückgabewerte von der XML-Webdienstmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c00b4-126">Der `methodName` -Parameter wird verwendet, um die Typen der Parameter und Rückgabewerte der Methode zu suchen, die die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="c00b4-127">Sie wird auch verwendet, um benutzerdefinierte Attribute zu suchen, die möglicherweise der-Methode hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="c00b4-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="c00b4-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> und<xref:System.Xml.Serialization.XmlElementAttribute> stellen zusätzliche Informationen über die abgeleitete Methode bereit, die für das HTTP-Protokoll erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="c00b4-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="c00b4-129">`asyncState`wird an <xref:System.IAsyncResult> <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> und ist in der enthalten, die von der-Methode zurückgegeben wird. `callback`</span><span class="sxs-lookup"><span data-stu-id="c00b4-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="c00b4-130">Es ist hilfreich, wenn Informationen aus dem Kontext des asynchronen Aufrufes an die Behandlung des asynchronen Ergebnisses in `callback`übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="c00b4-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c00b4-131">Das folgende Codebeispiel ist ein ASP.net Web Form, das einen XML-Webdienst namens `Math`aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="c00b4-132">Innerhalb der `EnterBtn_Click` -Funktion wird das Webformular gestartet und vervollständigt einen asynchronen Aufruf `Add` der XML-Webdienst Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="c00b4-133">Das folgende Codebeispiel ist eine Proxy Klasse, die vom Web Services Description Language Tool (WSDL. exe) für den `Math` folgenden XML-Webdienst generiert wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="c00b4-134">Innerhalb der `BeginAdd` -Methode der Proxy Klasse startet die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -Methode einen `Add` asynchronen Aufruf der XML-Webdienst Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="c00b4-135">Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die vorherige Proxy Klasse erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c00b4-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="c00b4-136">Die Anforderung hat den Servercomputer erreicht, wurde jedoch nicht erfolgreich verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="c00b4-136">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c00b4-137">Das <see cref="T:System.IAsyncResult" />, das von der <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="c00b4-138">Schließt den asynchronen Aufruf einer XML-Webdienstmethode unter Verwendung von HTTP ab.</span><span class="sxs-lookup"><span data-stu-id="c00b4-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="c00b4-139">Ein Array von Objekten mit dem Rückgabewert und allen als Verweis übergebenen Parametern oder <paramref name="out" />-Parametern für die XML-Webdienstmethode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c00b4-140">Das folgende Codebeispiel ist ein ASP.net Web Form, das einen XML-Webdienst namens `Math`aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="c00b4-141">Innerhalb der `EnterBtn_Click` -Funktion wird das Webformular gestartet und vervollständigt einen asynchronen Aufruf `Add` der XML-Webdienst Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="c00b4-142">Das folgende Codebeispiel ist eine Proxy Klasse, die vom Web Services Description Language Tool (WSDL. exe) für den `Math` folgenden XML-Webdienst generiert wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="c00b4-143">Innerhalb der `EndAdd` -Methode der Proxy Klasse startet die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -Methode einen `Add` asynchronen Aufruf der XML-Webdienst Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="c00b4-144">Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die oben angegebene Proxy Klasse erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c00b4-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c00b4-145"><paramref name="asyncResult" /> ist nicht der Rückgabewert aus der <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-145"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="c00b4-146">Der Name der XML-Webdienstmethode in der abgeleiteten Klasse, die die <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="c00b4-147">Die URL der vom Client angeforderten XML-Webdienstmethode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-147">The URL of the XML Web service method that the client is requesting.</span></span></param>
        <param name="parameters"><span data-ttu-id="c00b4-148">Ein Array von Objekten mit den Parametern, die an den remoten XML-Webdienst übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="c00b4-148">An array of objects containing the parameters to pass to the remote XML Web service.</span></span> <span data-ttu-id="c00b4-149">Die Reihenfolge der Werte im Array entspricht der Reihenfolge der Parameter in der Aufrufmethode der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="c00b4-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="c00b4-150">Ruft eine XML-Webdienstmethode unter Verwendung von HTTP auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-150">Invokes an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="c00b4-151">Ein Array von Objekten mit dem Rückgabewert und allen durch Verweis übergebenen Parametern oder <paramref name="out" />-Parametern der abgeleiteten Klassenmethode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c00b4-152">Der `methodName` -Parameter wird verwendet, um die Typen der Parameter und Rückgabewerte der Methode zu suchen, die die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="c00b4-153">Sie wird auch verwendet, um benutzerdefinierte Attribute zu suchen, die möglicherweise der-Methode hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="c00b4-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="c00b4-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute>und <xref:System.Xml.Serialization.XmlElementAttribute> stellen zusätzliche Informationen über die abgeleitete Methode bereit, die für das SOAP-Protokoll erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="c00b4-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c00b4-155">Das folgende Codebeispiel ist ein ASP.net Web Form, das einen XML-Webdienst namens `Math`aufruft.</span><span class="sxs-lookup"><span data-stu-id="c00b4-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="c00b4-156">Innerhalb der `EnterBtn_Click` Funktion Ruft das Webformular die `Add` XML-Webdienst Methode synchron auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="c00b4-157">Das folgende Codebeispiel ist eine Proxy Klasse, die vom Web Services Description Language Tool (WSDL. exe) für den `Math` folgenden XML-Webdienst generiert wird.</span><span class="sxs-lookup"><span data-stu-id="c00b4-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="c00b4-158">Innerhalb der `Add` -Methode der Proxy Klasse ruft die <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> -Methode die `Add` Webdienst Methode synchron auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c00b4-159">Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die oben angegebene Proxy Klasse erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c00b4-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="c00b4-160">Die Anforderung hat den Servercomputer erreicht, wurde jedoch nicht erfolgreich verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="c00b4-160">The request reached the server computer, but was not processed successfully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c00b4-161">Ruft die angegebene Methode asynchron auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-161">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="c00b4-162">Der Name der aufzurufenden Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-162">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="c00b4-163">Die Anforderungs-URL des aufgerufenen Webdiensts.</span><span class="sxs-lookup"><span data-stu-id="c00b4-163">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="c00b4-164">Die an die Methode zu übergebenden Parameter.</span><span class="sxs-lookup"><span data-stu-id="c00b4-164">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="c00b4-165">Der nach Abschluss des Methodenaufrufs aufgerufene Delegat.</span><span class="sxs-lookup"><span data-stu-id="c00b4-165">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="c00b4-166">Ruft die angegebene Methode asynchron auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-166">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userState" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="c00b4-167">Der Name der aufzurufenden Methode.</span><span class="sxs-lookup"><span data-stu-id="c00b4-167">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="c00b4-168">Die Anforderungs-URL des aufgerufenen Webdiensts.</span><span class="sxs-lookup"><span data-stu-id="c00b4-168">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="c00b4-169">Die an die Methode zu übergebenden Parameter.</span><span class="sxs-lookup"><span data-stu-id="c00b4-169">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="c00b4-170">Der nach Abschluss des Methodenaufrufs aufgerufene Delegat.</span><span class="sxs-lookup"><span data-stu-id="c00b4-170">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="c00b4-171">Ein Objekt mit zugeordneten Zustandsinformationen, die nach Abschluss der Methode an den <paramref name="callback" />-Delegaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="c00b4-171">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</span></span></param>
        <summary><span data-ttu-id="c00b4-172">Ruft die angegebene Methode unter Beibehaltung eines zugeordneten Zustands asynchron auf.</span><span class="sxs-lookup"><span data-stu-id="c00b4-172">Invokes the specified method asynchronously while maintaining an associated state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
