<Type Name="UrlEncodedParameterWriter" FullName="System.Web.Services.Protocols.UrlEncodedParameterWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c2d3e5f111ed5f53a06b2c7dcb3ab5b070c7fb5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlEncodedParameterWriter extends System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlEncodedParameterWriter&#xA;Inherits MimeParameterWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlEncodedParameterWriter abstract : System::Web::Services::Protocols::MimeParameterWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt URL-Codierungsfunktionen für Writer ausgehender Anforderungsparameter für mit HTTP und ohne SOAP implementierte Webdienstclients bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> und andere Klassen in der <xref:System.Web.Services.Protocols> Namespace unterstützt die .NET Framework-Implementierungen von Webdiensten über HTTP-GET und HTTP-POST-Vorgänge. Web Service Autoren und Leser serialisieren und deserialisieren, bzw. die Parameter oder Rückgabeobjekt Webmethoden und den HTTP-Anforderung oder Antwort Streams. Web Service Autoren und Leser HTTP für den Transport verwenden, jedoch nicht mit den standardmäßigen SOAP-Nachrichten austauschen.  
  
 Die abstrakte <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> Klasse erbt von der abstrakten <xref:System.Web.Services.Protocols.MimeParameterWriter> -Klasse, indem URL-Codierungsfunktionen für die clientseitige Schreiben von Webmethodenparameter in HTTP-Anforderungsstreams.  
  
 Sie in der Regel nicht benötigen, verwenden Sie <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> oder seiner untergeordneten Klassen direkt. Stattdessen, wenn das Tool Wsdl.exe Clientproxycode entsprechend der HTTP-GET oder HTTP-POST-Implementierungen generiert, es gilt die <xref:System.Web.Services.Protocols.HttpMethodAttribute> an jede Webmethode und legt des Attributs <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> Eigenschaft in den entsprechenden Typ.  
  
> [!NOTE]
>  Das Hypertext Transfer-Protokoll – HTTP/1.1 gibt die Verwendung einer Variante auf Nachrichtenformat Multipurpose Internet Mail Extensions (MIME), die selbst e-Mail-Nachrichten an verschiedene Inhaltstypen, Text- und binäre ermöglicht.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlEncodedParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlEncodedParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encode">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codiert alle Parameterwerte für eine Webmethode und schreibt diese in den angegebenen Writer.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.IO.TextWriter" />-Objekt, das in die HTTP-Anforderung schreibt.</param>
        <param name="values">Die Parameterwerte der Webmethode.</param>
        <summary>Codiert alle Parameterwerte für eine Webmethode und schreibt diese in den angegebenen Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> Methode ruft die andere Überladung <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, für jede der Parameterwerte, einschließlich der einzelnen Elemente in Arrays.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.IO.TextWriter" />-Objekt, das in die HTTP-Anforderung schreibt.</param>
        <param name="name">Der Name des zu codierenden Parameters.</param>
        <param name="value">Der Wert des zu codierenden Parameters.</param>
        <summary>Codiert einen angegebenen Parameterwert und schreibt diesen in den angegebenen Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Signaturen von der <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> -Methode, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, die für jede Webmethode aufgerufen wird, ruft diese Signatur der der <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> -Methode für jede der Parameterwerte, einschließlich der einzelnen Elemente in Arrays.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</param>
        <summary>Gibt einen Initialisierer für die angegebene Methode zurück.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Initialisierer für die angegebene Methode enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Initialisierer ist ein Objekt übergeben, die als Parameter an die <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> Methode. Für die <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> -Klasse, die Initialisierung ist der Wert der <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> -Eigenschaft der Eingabe <xref:System.Web.Services.Protocols.LogicalMethodInfo> Objekt. Die Eigenschaft ist ein <xref:System.Reflection.ParameterInfo> Array. Die <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> Methode wird aufgerufen, während der dienstinitialisierung. Später, zu dem Zeitpunkt, der eine Anforderung wird aufgefüllt, den Initialisierer-Objekt übergeben wird die <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> Methode einer anderen <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> Instanz. Das andere Objekt führt das eigentliche schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Ein durch die <see cref="T:System.Reflection.ParameterInfo" />-Eigenschaft der <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />-Klasse abgerufenes <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Array.</param>
        <summary>Initialisiert eine Instanz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> Methode wird aufgerufen, die zum Zeitpunkt der Anforderung wird aufgefüllt.  
  
 Der Eingabeparameter `initializer`, abgerufen wird, durch Aufrufen der <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> Methode in einer anderen Instanz während der Clientinitialisierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Codierung ab, die zum Schreiben von Parametern in die HTTP-Anforderung verwendet wird, oder legt sie fest.</summary>
        <value>Codierung, die zum Schreiben von Parametern in die HTTP-Anforderung verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Codierung, dargestellt durch die <xref:System.Text.Encoding> Klasse, die definiert, wie Zeichen in eine Bytefolge transformiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>