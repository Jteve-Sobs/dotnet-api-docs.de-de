<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="698d4d7d7b5735d3214092e9017dbbb6e9302918" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70625352" /></Metadata><TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpPostClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die Basisklasse für XML-Webdienst-Clientproxys, die das HTTP-POST-Protokoll verwenden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein XML-Webdienst Client das HTTP-POST-Protokoll verwendet, werden Parameter standardmäßig im HTTP-Text mit URL-Codierungsregeln codiert und verwenden Plain XML für die Antwort. Dieses Protokoll verwendet Klassen, die von <xref:System.Web.Services.Protocols.MimeFormatter> abgeleitet werden, um Parameter und Rückgabewerte in Standard-MIME-Formate zu codieren. Die zu verwendenden Encoder werden in der Dienst Beschreibung angegeben.  
  
 Wenn Sie einen XML-Webdienst Client mithilfe von ASP.NET erstellen, muss eine Proxy Klasse, die indirekt oder <xref:System.Web.Services.Protocols.WebClientProtocol> direkt von abgeleitet wird, für den XML-Webdienst erstellt werden, der aufgerufen werden soll. Wenn der XML-Webdienst Client mithilfe von http aufgerufen wird, leiten Sie <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>die Proxy Klasse ab, die <xref:System.Web.Services.Protocols.WebClientProtocol>wiederum von abgeleitet wird.  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>und <xref:System.Web.Services.Protocols.HttpPostClientProtocol> werden von <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>abgeleitet, wobei die Unterstützung für das Aufrufen einer XML-Webdienst Methode mithilfe von HTTP-GET bzw. HTTP-Post bereitgestellt wird. Clients, die einen XML-Webdienst mithilfe von SOAP <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>aufrufen, sollten von abgeleitet werden.  
  
 Ausführliche Informationen zum Erstellen einer Proxy Klasse finden Sie unter [Erstellen eines XML-Webdienst Proxys](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).  
  
   
  
## Examples  
 Das folgende Beispiel ist eine Proxy Klasse, die vom Hilfsprogramm WSDL. exe für `Math` den folgenden XML-Webdienst generiert wird. Die Proxy Klasse wird von <xref:System.Web.Services.Protocols.HttpPostClientProtocol>abgeleitet, das von der abstrakten <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> -Klasse abgeleitet wird.  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 Das folgende Beispiel zeigt den `Math` XML-Webdienst, von dem die vorherige Proxy Klasse erstellt wurde.  
  
 [!code-aspx-csharp[Classic HttpPostClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpPostClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/sourcevb.asmx)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpPostClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Der beim Erstellen der <see cref="T:System.Uri" /> zu verwendende <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Erstellt eine <see cref="T:System.Net.WebRequest" />-Instanz für die angegebene URL.</summary>
        <returns>Die <see cref="T:System.Net.WebRequest" />-Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt die Basisversion von <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> , um anzugeben, dass die HTTP-Anforderung an den XML-Webdienst mithilfe von HTTP-Post erstellt wird. Wenn Sie diese Methode überschreiben, können Sie <xref:System.Net.WebRequest> das-Objekt anpassen, bevor die XML-webService Request erstellt wird. Beispielsweise können Sie der Anforderung einen benutzerdefinierten Header hinzufügen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <paramref name="uri" />-Parameter ist NULL oder von der Länge Null.</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>
