<Type Name="LogicalMethodInfo" FullName="System.Web.Services.Protocols.LogicalMethodInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73c233ea7d76163e3cbd175f5e14caa4bb2cc785" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70361041" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogicalMethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogicalMethodInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogicalMethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalMethodInfo sealed" />
  <TypeSignature Language="F#" Value="type LogicalMethodInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24482-101">Stellt die Attribute und Metadaten für eine XML-Webdienstmethode dar.</span><span class="sxs-lookup"><span data-stu-id="24482-101">Represents the attributes and metadata for an XML Web service method.</span></span> <span data-ttu-id="24482-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="24482-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo>wird hauptsächlich von einer SOAP-Erweiterung verwendet, um die Details der XML-Webdienst Methode abzuhören, mit der die SOAP-Erweiterung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="24482-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo> is used primarily by a SOAP extension to interrogate the details of the XML Web service method with which the SOAP extension is configured to run.</span></span> <span data-ttu-id="24482-104">Abhängig von der Konfiguration der SOAP-Erweiterung können Details über die XML-Webdienst Methode in der <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> -Methode von <xref:System.Web.Services.Protocols.SoapExtension> gefunden werden, die einen <xref:System.Web.Services.Protocols.LogicalMethodInfo>annimmt.</span><span class="sxs-lookup"><span data-stu-id="24482-104">Depending on how the SOAP extension is configured, it can find out details about the XML Web service method in the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method of <xref:System.Web.Services.Protocols.SoapExtension> that takes a <xref:System.Web.Services.Protocols.LogicalMethodInfo>.</span></span> <span data-ttu-id="24482-105">Gibt Details wie die Parameter der XML-Webdienst Methode an, indem auf <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> die-Eigenschaft und alle benutzerdefinierten Attribute zugegriffen wird, die mithilfe der <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> -Eigenschaft auf die XML-Webdienst Methode angewendet werden. <xref:System.Web.Services.Protocols.LogicalMethodInfo></span><span class="sxs-lookup"><span data-stu-id="24482-105">The <xref:System.Web.Services.Protocols.LogicalMethodInfo> provides details such as the XML Web service method's parameters by accessing the <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> property and any custom attributes applied to the XML Web service method using the <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> property.</span></span>  
  
 <span data-ttu-id="24482-106">Weitere Informationen zu SOAP-Erweiterungen finden Sie <xref:System.Web.Services.Protocols.SoapExtension> unter der-Klasse oder der [SOAP-Nachrichten Änderung mithilfe von SOAP-Erweiterungen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/esw638yk(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="24482-106">For more details on SOAP extensions see the <xref:System.Web.Services.Protocols.SoapExtension> class or [SOAP Message Modification Using SOAP Extensions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/esw638yk(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
    <altmember cref="T:System.Reflection.MethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.LogicalMethodInfo : System.Reflection.MethodInfo -&gt; System.Web.Services.Protocols.LogicalMethodInfo" Usage="new System.Web.Services.Protocols.LogicalMethodInfo methodInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method_info As MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.LogicalMethodInfo : System.Reflection.MethodInfo -&gt; System.Web.Services.Protocols.LogicalMethodInfo" Usage="new System.Web.Services.Protocols.LogicalMethodInfo method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="24482-107">Eine <see cref="T:System.Reflection.MethodInfo" /> zum Initialisieren der zur <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> gehörenden Eigenschaften von <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="24482-107">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <param name="method_info"><span data-ttu-id="24482-108">Eine <see cref="T:System.Reflection.MethodInfo" /> zum Initialisieren der zur <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> gehörenden Eigenschaften von <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="24482-108">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <summary><span data-ttu-id="24482-109">Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Klasse, an die die <see cref="T:System.Reflection.MethodInfo" /> übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="24482-109">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class with the <see cref="T:System.Reflection.MethodInfo" /> passed in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24482-110">Die <see cref="P:System.Reflection.MethodBase.IsStatic" />-Eigenschaft des <paramref name="methodInfo" />-Parameters ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="24482-110">The <see cref="P:System.Reflection.MethodBase.IsStatic" /> property of the <paramref name="methodInfo" /> parameter is <see langword="true" />.</span></span>  
  
<span data-ttu-id="24482-111">- oder -</span><span class="sxs-lookup"><span data-stu-id="24482-111">-or-</span></span> 
<span data-ttu-id="24482-112">Die <see cref="M:System.Reflection.MethodBase.GetParameters" />-Methode des <paramref name="methodInfo" />-Parameters enthält nicht alle Parameter, die für die durch die Instanz von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="24482-112">The <see cref="M:System.Reflection.MethodBase.GetParameters" /> method of the <paramref name="methodInfo" /> parameter does not contain all the parameters required by the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncCallbackParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncCallbackParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncCallbackParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncCallbackParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncCallbackParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncCallbackParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-113">Ruft die Parameterinformationen für den <paramref name="AsyncCallback" />-Parameter einer Begin-Methode bei einem asynchronen Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="24482-113">Gets the parameter information for the <paramref name="AsyncCallback" /> parameter of a Begin method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="24482-114">Eine <see cref="T:System.Reflection.ParameterInfo" />, die den <paramref name="AsyncCallback" />-Parameter bei einem asynchronen Aufruf einer <see langword="Begin" />-Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-114">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncCallback" /> parameter of a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-115">Das asynchrone Entwurfsmuster in der Common Language Runtime umfasst das Aufrufen `Begin` einer Methode, um den asynchronen Methodenaufruf zu starten `End` , und eine-Methode, um den Aufruf abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="24482-115">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="24482-116">Die `Begin` -Methode nimmt neben den Parametern, die durch die synchrone Version der-Methode definiert werden, zwei zusätzliche Parameter an: eine zum Speichern eines Delegaten und eine zum Speichern von Zustandsinformationen, die an den Delegaten weitergegeben werden müssen.</span><span class="sxs-lookup"><span data-stu-id="24482-116">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="24482-117">Diese Eigenschaft stellt den-Parameter für den Delegaten mit dem Parameter `AsyncCallback`Namen dar.</span><span class="sxs-lookup"><span data-stu-id="24482-117">This property represents the parameter for the delegate with a parameter name of `AsyncCallback`.</span></span>  
  
 <span data-ttu-id="24482-118">Weitere Informationen zum asynchronen Aufrufen von XML-Webdiensten finden Sie unter [asynchrones kommunizieren mit XML-Webdiensten](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="24482-118">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="24482-119">Asynchrones Kommunizieren mit XML-Webdiensten</span><span class="sxs-lookup"><span data-stu-id="24482-119">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsyncResultParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncResultParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncResultParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncResultParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncResultParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResultParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-120">Ruft den Rückgabewert bei einem asynchronen Aufruf einer <see langword="Begin" />-Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-120">Gets the return value of a <see langword="Begin" /> asynchronous method invocation.</span></span></summary>
        <value><span data-ttu-id="24482-121">Eine <see cref="T:System.Reflection.ParameterInfo" />, die das bei einem asynchronen Aufruf der <see langword="Begin" />-Methode zurückgegebene <see cref="T:System.IAsyncResult" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-121">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <see cref="T:System.IAsyncResult" /> returned from a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-122">Das asynchrone Entwurfsmuster in der Common Language Runtime umfasst das Aufrufen `Begin` einer Methode, um den asynchronen Methodenaufruf zu starten `End` , und eine-Methode, um den Aufruf abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="24482-122">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="24482-123">Die `Begin` -Methode gibt in der Regel sofort mit einem <xref:System.IAsyncResult> Objekt zurück, das die-Schnittstelle implementiert `End` , die dann zu einem späteren Zeitpunkt an die-Methode weitergegeben werden kann, um den asynchronen Methodenaufruf abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="24482-123">The `Begin` method typically returns immediately with an object implementing the <xref:System.IAsyncResult> interface, which can then be passed to the `End` method at a later time to complete the asynchronous method invocation.</span></span> <span data-ttu-id="24482-124">Das zurückgegebene Objekt, <xref:System.IAsyncResult> das die-Schnittstelle implementiert, wird durch diese Eigenschaft dargestellt.</span><span class="sxs-lookup"><span data-stu-id="24482-124">The returned object implementing the <xref:System.IAsyncResult> interface is represented by this property.</span></span>  
  
 <span data-ttu-id="24482-125">Weitere Informationen zum asynchronen Aufrufen von XML-Webdiensten finden Sie unter [asynchrones kommunizieren mit XML-Webdiensten](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="24482-125">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="24482-126">Asynchrones Kommunizieren mit XML-Webdiensten</span><span class="sxs-lookup"><span data-stu-id="24482-126">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsyncStateParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncStateParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncStateParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncStateParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncStateParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncStateParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-127">Ruft die Parameterinformationen für den <paramref name="AsyncState" />-Parameter einer <see langword="Begin" />-Methode bei einem asynchronen Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="24482-127">Gets the parameter information for the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="24482-128">Eine <see cref="T:System.Reflection.ParameterInfo" />, die den <paramref name="AsyncState" />-Parameter einer <see langword="Begin" />-Methode bei einem asynchronen Aufruf darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-128">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-129">Das asynchrone Entwurfsmuster in der Common Language Runtime umfasst das Aufrufen `Begin` einer Methode, um den asynchronen Methodenaufruf zu starten `End` , und eine-Methode, um den Aufruf abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="24482-129">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="24482-130">Die `Begin` -Methode nimmt neben den Parametern, die durch die synchrone Version der-Methode definiert werden, zwei zusätzliche Parameter an: eine zum Speichern eines Delegaten und eine zum Speichern von Zustandsinformationen, die an den Delegaten weitergegeben werden müssen.</span><span class="sxs-lookup"><span data-stu-id="24482-130">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="24482-131">Diese Eigenschaft stellt die Zustandsinformationen dar, die an den-Delegaten übermittelt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="24482-131">This property represents the state information that needs to be passed into the delegate.</span></span>  
  
 <span data-ttu-id="24482-132">Weitere Informationen zum asynchronen Aufrufen von XML-Webdiensten finden Sie unter [asynchrones kommunizieren mit XML-Webdiensten](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="24482-132">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="24482-133">Asynchrones Kommunizieren mit XML-Webdiensten</span><span class="sxs-lookup"><span data-stu-id="24482-133">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (object target, object[] values, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(object target, object[] values, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (target As Object, values As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logicalMethodInfo.BeginInvoke (target, values, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="24482-134">Die Instanz von <see cref="T:System.Object" />, für die die Methode aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="24482-134">The instance of the <see cref="T:System.Object" /> on which to invoke the method on.</span></span></param>
        <param name="values"><span data-ttu-id="24482-135">Eine Argumentliste für die aufgerufene Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-135">An argument list for the invoked method.</span></span> <span data-ttu-id="24482-136">Dies ist ein Array von Objekten mit derselben Nummer, derselben Reihenfolge und demselben Typ wie die Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-136">This is an array of objects with the same number, order, and type as the parameters of the method.</span></span> <span data-ttu-id="24482-137">Wenn für die Methode keine Parameter erforderlich sind, sollte <paramref name="values" /><see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="24482-137">If the method does not require any parameters, <paramref name="values" /> should be <see langword="null" />.</span></span></param>
        <param name="callback"><span data-ttu-id="24482-138">Der Delegat, der aufgerufen werden soll, wenn der asynchrone Aufruf abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="24482-138">The delegate to call when the asynchronous invoke is complete.</span></span> <span data-ttu-id="24482-139">Wenn <paramref name="callback" /> auf <see langword="null" /> festgelegt ist, wird der Delegat nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="24482-139">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="24482-140">Die dem Delegaten übergebenen Zustandsinformationen.</span><span class="sxs-lookup"><span data-stu-id="24482-140">State information that is passed on to the delegate.</span></span></param>
        <summary><span data-ttu-id="24482-141">Beginnt einen asynchronen Aufruf der Methode, die durch diese <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="24482-141">Begins an asynchronous invocation of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-142">Ein <see cref="T:System.IAsyncResult" />, das an <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> übergeben wird, um die Rückgabewerte des Remotemethodenaufrufs abzurufen.</span><span class="sxs-lookup"><span data-stu-id="24482-142">An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> to obtain the return values from the remote method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#1)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#1)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="24482-143">Der <paramref name="target" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="24482-143">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24482-144">Anzahl, Typ und Reihenfolge der Parameter in <paramref name="values" /> stimmen nicht mit der Signatur der aufgerufenen Methode überein.</span><span class="sxs-lookup"><span data-stu-id="24482-144">The number, type, and order of parameters in <paramref name="values" /> do not match the signature of the invoked method.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="24482-145">Der Aufrufer verfügt nicht über die Berechtigung zum Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-145">The caller does not have permission to invoke the method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo BeginMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo BeginMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ BeginMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginMethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-146">Ruft die Attribute und Metadaten für eine <see langword="Begin" />-Methode bei einem asynchronen Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="24482-146">Gets the attributes and metadata for a <see langword="Begin" /> method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="24482-147">Eine <see cref="T:System.Reflection.MethodInfo" />, die die Attribute und Metadaten für einen asynchronen Aufruf der <see langword="Begin" />-Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-147">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24482-148">Erstellt ein Array von <see cref="T:System.Reflection.MethodInfo" />, wenn ein Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="24482-148">Given an array of <see cref="T:System.Reflection.MethodInfo" />, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create methodInfos" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create method_infos" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="24482-149">Ein Array von <see cref="T:System.Reflection.MethodInfo" />, das die asynchronen und synchronen Methoden darstellt, für die <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Objekte erstellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="24482-149">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="method_infos"><span data-ttu-id="24482-150">Ein Array von <see cref="T:System.Reflection.MethodInfo" />, das die asynchronen und synchronen Methoden darstellt, für die <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Objekte erstellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="24482-150">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <summary><span data-ttu-id="24482-151">Erstellt ein Array von <see cref="T:System.Reflection.MethodInfo" />, wenn ein Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> vorhanden ist, in dem Informationen sowohl über asynchrone als auch über synchrone Methoden enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="24482-151">Given an array of <see cref="T:System.Reflection.MethodInfo" /> that can contain information about both asynchronous and synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-152">Ein Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, das die Methoden in <paramref name="methodInfos" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-152">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24482-153"><paramref name="methodInfos" /> enthält eine asynchrone <see langword="Begin" />-Methode ohne entsprechende <see langword="End" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-153">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] * System.Web.Services.Protocols.LogicalMethodTypes -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create (methodInfos, types)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] * System.Web.Services.Protocols.LogicalMethodTypes -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create (method_infos, types)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="types" Type="System.Web.Services.Protocols.LogicalMethodTypes" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="24482-154">Ein Array von <see cref="T:System.Reflection.MethodInfo" />, das die asynchronen und synchronen Methoden darstellt, für die <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Objekte erstellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="24482-154">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="method_infos"><span data-ttu-id="24482-155">Ein Array von <see cref="T:System.Reflection.MethodInfo" />, das die asynchronen und synchronen Methoden darstellt, für die <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Objekte erstellt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="24482-155">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="types"><span data-ttu-id="24482-156">Eine bitweise Kombination der <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="24482-156">A bitwise combination of the <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> values.</span></span> <span data-ttu-id="24482-157">Bestimmt, ob in das zurückgegebene Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> ausschließlich asynchrone Methoden, ausschließlich synchrone Methoden oder beide aufgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="24482-157">Determines whether just asynchronous or synchronous methods or both are included in the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></param>
        <summary><span data-ttu-id="24482-158">Erstellt ein Array von <see cref="T:System.Reflection.MethodInfo" />, wenn ein Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> vorhanden ist, wobei das zurückgegebene Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> nur auf asynchrone oder nur auf synchrone Methoden beschränkt werden kann.</span><span class="sxs-lookup"><span data-stu-id="24482-158">Given an array of <see cref="T:System.Reflection.MethodInfo" />, where the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> can be restricted to only asynchronous or synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-159">Ein Array von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, das die Methoden in <paramref name="methodInfos" /> gefiltert nach dem Wert von <paramref name="types" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-159">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />, filtered by the value of <paramref name="types" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24482-160"><paramref name="methodInfos" /> enthält eine asynchrone <see langword="Begin" />-Methode ohne entsprechende <see langword="End" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-160">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider CustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider CustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ CustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributeProvider : System.Reflection.ICustomAttributeProvider" Usage="System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-161">Ruft die benutzerdefinierten Attribute ab, die der Methode zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-161">Gets the custom attributes applied to the method.</span></span></summary>
        <value><span data-ttu-id="24482-162">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />, der die benutzerdefinierten Attribute für die Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-162">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-163">Ruft die Klasse ab, die die durch die aktuelle <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode deklariert.</span><span class="sxs-lookup"><span data-stu-id="24482-163">Gets the class that declares the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="24482-164">Der <see cref="T:System.Type" /> der Klasse, die die durch die <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode deklariert.</span><span class="sxs-lookup"><span data-stu-id="24482-164">The <see cref="T:System.Type" /> for the class declaring the method represented by the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-165">Die <xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A> -Eigenschaft ruft einen Verweis auf ein <xref:System.Type> -Objekt für den Typ ab, der diesen Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="24482-165">The <xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A> property retrieves a reference to a <xref:System.Type> for the type that declares this member.</span></span> <span data-ttu-id="24482-166">Ein Member einer Klasse (oder Schnittstelle) wird entweder deklariert oder von einer Basisklasse (oder Schnittstelle) geerbt.</span><span class="sxs-lookup"><span data-stu-id="24482-166">A member of a class (or interface) is either declared or inherited from a base class (or interface).</span></span> <span data-ttu-id="24482-167">Der zurück <xref:System.Type> gegebene ist möglicherweise nicht identisch mit <xref:System.Type> dem der Klasse, die den XML-Webdienst implementiert (wenn diese Klasse von einer Basisklasse abgeleitet ist und die von dieser Klasse dargestellte Methode in <xref:System.Type> dieser Basisklasse deklariert ist, dann ist die zurückgegebene die Basisklasse).</span><span class="sxs-lookup"><span data-stu-id="24482-167">The returned <xref:System.Type> might not be the same as the <xref:System.Type> of the class implementing the XML Web service (if that class derives from a base class and the method represented by this class is declared in that base class then the <xref:System.Type> returned is the base class).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object[] EndInvoke (object target, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] EndInvoke(object target, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (target As Object, asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(System::Object ^ target, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : obj * IAsyncResult -&gt; obj[]" Usage="logicalMethodInfo.EndInvoke (target, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="24482-168">Die Instanz von <see cref="T:System.Object" />, für die die Methode aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="24482-168">The instance of the <see cref="T:System.Object" /> on which to invoke the method.</span></span></param>
        <param name="asyncResult"><span data-ttu-id="24482-169">Das von <see cref="T:System.IAsyncResult" /> zurückgegebene <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="24482-169">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="24482-170">Beendet einen asynchronen Aufruf der durch die aktuelle <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellten Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-170">Ends an asynchronous invocation of the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-171">Ein Array von Objekten mit dem Rückgabewert und allen als Verweis übergebenen Parametern oder Out-Parametern der abgeleiteten Klassenmethode.</span><span class="sxs-lookup"><span data-stu-id="24482-171">An array of objects containing the return value and any by-reference or out parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#2)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#2)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="24482-172">Der <paramref name="target" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="24482-172">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="24482-173">Der Aufrufer verfügt nicht über die Berechtigung zum Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-173">The caller does not have permission to invoke the method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="24482-174">Die aufgerufene Methode löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="24482-174">The invoked method throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EndMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EndMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EndMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndMethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-175">Ruft die Attribute und Metadaten für eine <see langword="End" />-Methode bei einem asynchronen Methodenaufruf ab.</span><span class="sxs-lookup"><span data-stu-id="24482-175">Gets the attributes and metadata for an <see langword="End" /> method of an asynchronous invocation to a method.</span></span></summary>
        <value><span data-ttu-id="24482-176">Eine <see cref="T:System.Reflection.MethodInfo" />, die die Attribute und Metadaten für einen asynchronen Aufruf der <see langword="End" />-Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-176">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for an <see langword="End" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public object GetCustomAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCustomAttribute(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetCustomAttribute : Type -&gt; obj" Usage="logicalMethodInfo.GetCustomAttribute type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="24482-177">Der <see cref="T:System.Type" />, dem die benutzerdefinierten Attribute zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-177">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span></span></param>
        <summary><span data-ttu-id="24482-178">Gibt das erste dem Typ zugewiesene benutzerdefinierte Attribut zurück, sofern diesem benutzerdefinierte Attribute zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-178">Returns the first custom attribute applied to the type, if any custom attributes are applied to the type.</span></span></summary>
        <returns><span data-ttu-id="24482-179">Ein <see cref="T:System.Object" /> mit dem ersten benutzerdefinierten Attribut, das dem <paramref name="type" />-Parameter zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="24482-179">An <see cref="T:System.Object" /> containing the first custom attribute applied to the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="24482-180">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="24482-180">The custom attribute type can not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] GetCustomAttributes(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetCustomAttributes : Type -&gt; obj[]" Usage="logicalMethodInfo.GetCustomAttributes type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="24482-181">Der <see cref="T:System.Type" />, dem die benutzerdefinierten Attribute zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-181">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span></span></param>
        <summary><span data-ttu-id="24482-182">Gibt die benutzerdefinierten Attribute zurück, die dem angegebenen Typ zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-182">Returns the custom attributes applied to the specified type.</span></span></summary>
        <returns><span data-ttu-id="24482-183">Ein Array von <see cref="T:System.Object" /> mit den benutzerdefinierten Attributen, die <paramref name="type" /> zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="24482-183">An array of <see cref="T:System.Object" /> containing the custom attributes applied to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="24482-184">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="24482-184">The custom attribute type can not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] InParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] InParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ InParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InParameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-185">Ruft die Parameter ab, die an die durch die Instanz von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="24482-185">Gets the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="24482-186">Ein Array vom Typ <see cref="T:System.Reflection.ParameterInfo" /> mit den Parametern, die an die durch die Instanz von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="24482-186">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-187">Verwenden Sie eine Instanz <xref:System.Reflection.ParameterInfo> von, um Informationen über den Datentyp des Parameters, den Standardwert usw. zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="24482-187">Use an instance of <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="24482-188"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A>Gibt ein Array von <xref:System.Reflection.ParameterInfo> -Objekten zurück, die die Parameter darstellen, die in einer Methode an eine Methode geleitet werden.</span><span class="sxs-lookup"><span data-stu-id="24482-188"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object[] Invoke (object target, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] Invoke(object target, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (target As Object, values As Object()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj[] -&gt; obj[]" Usage="logicalMethodInfo.Invoke (target, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="24482-189">Die Instanz des <see cref="T:System.Object" /> zum Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-189">The instance of the <see cref="T:System.Object" /> to invoke the method.</span></span></param>
        <param name="values"><span data-ttu-id="24482-190">Eine Argumentliste für die aufgerufene Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-190">An argument list for the invoked method.</span></span> <span data-ttu-id="24482-191">Dies ist ein Array von Objekten mit derselben Nummer, derselben Reihenfolge und demselben Typ wie die Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-191">This is an array of objects with the same number, order, and type as the parameters of the method.</span></span> <span data-ttu-id="24482-192">Wenn für die Methode keine Parameter erforderlich sind, sollte der <paramref name="values" />-Parameter <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="24482-192">If the method does not require any parameters, the <paramref name="values" /> parameter should be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="24482-193">Ruft die durch die aktuelle <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode auf.</span><span class="sxs-lookup"><span data-stu-id="24482-193">Invokes the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-194">Ein Array vom Typ <see cref="T:System.Object" />, das den Rückgabewert und die Out-Parameter der aufgerufenen Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-194">An array of type <see cref="T:System.Object" /> representing the return value and out parameters of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="24482-195">Der <paramref name="target" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="24482-195">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24482-196">Anzahl, Typ und Reihenfolge der Parameter im <paramref name="values" />-Parameter stimmen nicht mit der Signatur der aufgerufenen Methode überein.</span><span class="sxs-lookup"><span data-stu-id="24482-196">The number, type, and order of parameters in the <paramref name="values" /> parameter do not match the signature of the invoked method.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="24482-197">Der Aufrufer verfügt nicht über die Berechtigung zum Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-197">The caller does not have permission to invoke the method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="24482-198">Die aufgerufene Methode löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="24482-198">The invoked method throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-199">Ruft einen Wert ab, der angibt, ob die durch die Instanz von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellte Methode asynchron aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="24482-199">Gets a value indicating whether the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is invoked asynchronously.</span></span></summary>
        <value><span data-ttu-id="24482-200"><see langword="true" />, wenn die Methode asynchron aufgerufen wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24482-200"><see langword="true" /> if the method is invoked asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBeginMethod">
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member IsBeginMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod methodInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBeginMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member IsBeginMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="24482-201">Die <see cref="T:System.Reflection.MethodInfo" />, die eine <see langword="Begin" />-Methode für einen asynchronen Aufruf sein kann.</span><span class="sxs-lookup"><span data-stu-id="24482-201">The <see cref="T:System.Reflection.MethodInfo" /> that might be a <see langword="Begin" /> method of an asynchronous invocation.</span></span></param>
        <param name="method_info"><span data-ttu-id="24482-202">Die <see cref="T:System.Reflection.MethodInfo" />, die eine <see langword="Begin" />-Methode für einen asynchronen Aufruf sein kann.</span><span class="sxs-lookup"><span data-stu-id="24482-202">The <see cref="T:System.Reflection.MethodInfo" /> that might be a <see langword="Begin" /> method of an asynchronous invocation.</span></span></param>
        <summary><span data-ttu-id="24482-203">Gibt einen Wert zurück, der angibt, ob die übergebene Methode eine <see langword="Begin" />-Methode für einen asynchronen Aufruf darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-203">Returns a value indicating whether the method passed in represents a <see langword="Begin" /> method of an asynchronous invocation.</span></span></summary>
        <returns><span data-ttu-id="24482-204"><see langword="true" />, wenn der <paramref name="methodInfo" />-Parameter eine <see langword="Begin" />-Methode für einen asynchronen Aufruf ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24482-204"><see langword="true" /> if the <paramref name="methodInfo" /> parameter is a <see langword="Begin" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#1)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#1)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndMethod">
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member IsEndMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod methodInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member IsEndMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="24482-205">Die <see cref="T:System.Reflection.MethodInfo" />, die eine <see langword="End" />-Methode für einen asynchronen Aufruf sein kann.</span><span class="sxs-lookup"><span data-stu-id="24482-205">The <see cref="T:System.Reflection.MethodInfo" /> that might be an <see langword="End" /> method of an asynchronous invocation.</span></span></param>
        <param name="method_info"><span data-ttu-id="24482-206">Die <see cref="T:System.Reflection.MethodInfo" />, die eine <see langword="End" />-Methode für einen asynchronen Aufruf sein kann.</span><span class="sxs-lookup"><span data-stu-id="24482-206">The <see cref="T:System.Reflection.MethodInfo" /> that might be an <see langword="End" /> method of an asynchronous invocation.</span></span></param>
        <summary><span data-ttu-id="24482-207">Gibt einen Wert zurück, der angibt, ob die übergebene Methode eine <see langword="End" />-Methode für einen asynchronen Aufruf darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-207">Returns a value indicating whether the method passed in represents an <see langword="End" /> method of an asynchronous invocation.</span></span></summary>
        <returns><span data-ttu-id="24482-208"><see langword="true" />, wenn der <paramref name="methodInfo" />-Parameter eine <see langword="End" />-Methode für einen asynchronen Aufruf ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24482-208"><see langword="true" /> if the <paramref name="methodInfo" /> parameter is an <see langword="End" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#2)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#2)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVoid">
      <MemberSignature Language="C#" Value="public bool IsVoid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVoid" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsVoid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVoid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVoid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVoid : bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsVoid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-209">Ruft einen Wert ab, der angibt, ob der Rückgabetyp der durch die Instanz von <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellten Methode <see langword="void" /> ist.</span><span class="sxs-lookup"><span data-stu-id="24482-209">Gets a value indicating whether the return type for the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is <see langword="void" />.</span></span></summary>
        <value><span data-ttu-id="24482-210"><see langword="true" />, wenn der Rückgabetyp void ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24482-210"><see langword="true" /> if the return type is void; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ MethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-211">Ruft die Attribute und Metadaten für eine asynchrone Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-211">Gets the attributes and metadata for a synchronous method.</span></span></summary>
        <value><span data-ttu-id="24482-212">Eine <see cref="T:System.Reflection.MethodInfo" />, die die Attribute und Metadaten für eine Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-212">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a method.</span></span> <span data-ttu-id="24482-213">Wenn <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /><see langword="true" /> ist, ist der Wert dieser Eigenschaft <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="24482-213">If <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> is <see langword="true" />, then the value of this property is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#3)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#3)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-214">Ruft den Namen der durch diese <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellten Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-214">Gets the name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="24482-215">Der Name der durch diese <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> dargestellten Methode.</span><span class="sxs-lookup"><span data-stu-id="24482-215">The name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] OutParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] OutParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ OutParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutParameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-216">Ruft die Out-Parameter für die Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-216">Gets the out parameters for the method.</span></span></summary>
        <value><span data-ttu-id="24482-217">Ein Array von <see cref="T:System.Reflection.ParameterInfo" />, das die Out-Parameter für die Methode in ihrer Reihenfolge darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-217">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the out parameters for the method, in order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-218"><xref:System.Reflection.ParameterInfo> Verwenden Sie, um Informationen über den Datentyp des Parameters, den Standardwert usw. zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="24482-218">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ Parameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-219">Ruft die Parameter für die Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-219">Gets the parameters for the method.</span></span></summary>
        <value><span data-ttu-id="24482-220">Ein Array von <see cref="T:System.Reflection.ParameterInfo" />, das die Parameter für die Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-220">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the parameters for the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24482-221"><xref:System.Reflection.ParameterInfo> Verwenden Sie, um Informationen über den Datentyp des Parameters, den Standardwert usw. zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="24482-221">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="24482-222"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A>Gibt ein Array von <xref:System.Reflection.ParameterInfo> -Objekten zurück, die die Parameter darstellen, die in einer Methode an eine Methode geleitet werden.</span><span class="sxs-lookup"><span data-stu-id="24482-222"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Web.Services.Protocols.LogicalMethodInfo.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-223">Ruft den Rückgabetyp dieser Methode ab.</span><span class="sxs-lookup"><span data-stu-id="24482-223">Gets the return type of this method.</span></span></summary>
        <value><span data-ttu-id="24482-224">Der <see cref="T:System.Type" />, den diese Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="24482-224">The <see cref="T:System.Type" /> returned by this method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributeProvider : System.Reflection.ICustomAttributeProvider" Usage="System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24482-225">Ruft die benutzerdefinierten Attribute für den Rückgabetyp ab.</span><span class="sxs-lookup"><span data-stu-id="24482-225">Gets the custom attributes for the return type.</span></span></summary>
        <value><span data-ttu-id="24482-226">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />, der die benutzerdefinierten Attribute für den Rückgabetyp darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-226">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the return type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="logicalMethodInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24482-227">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-227">Returns a string that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="24482-228">Ein <see cref="T:System.String" />, der den aktuellen <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="24482-228">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
