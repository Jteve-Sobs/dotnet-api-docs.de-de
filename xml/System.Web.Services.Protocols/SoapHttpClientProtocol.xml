<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a8d28cbbb49b45ea128a63abb46a05a242bd425" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70318113" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Klassenclient an, von dem Proxys bei Verwendung von SOAP abgeleitet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen XML-Webdienst Client erstellen, muss eine Proxy Klasse, die indirekt oder direkt von <xref:System.Web.Services.Protocols.WebClientProtocol> abgeleitet wird, für den XML-Webdienst erstellt werden. Wenn der XML-Webdienst Client mithilfe von SOAP aufruft, muss die Proxy Klasse <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>von abgeleitet werden, <xref:System.Web.Services.Protocols.HttpWebClientProtocol>die von abgeleitet wird. <xref:System.Web.Services.Protocols.HttpWebClientProtocol>wiederum wird von <xref:System.Web.Services.Protocols.WebClientProtocol>abgeleitet.  
  
 Um mit einem XML-Webdienst zu kommunizieren, erstellen Sie eine Proxy Klasse, die indirekt <xref:System.Web.Services.Protocols.WebClientProtocol> oder direkt von für den XML-Webdienst abgeleitet ist, den Sie aufzurufen möchten. Anstatt die Proxy Klasse manuell zu erstellen, verwenden Sie das Web Services Description Language Tool (WSDL. exe), um eine Proxy Klasse für die Dienst Beschreibung eines bestimmten XML-Webdiensts zu erstellen. Wenn eine Proxy Klasse für das SOAP-Protokoll generiert wird, werden synchrone Aufrufe von XML-Webdienst Methoden <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> über die-Methode durchgeführt, während asynchrone <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> Aufrufe mithilfe der <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> -Methode und der-Methode durchgeführt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel ist eine Proxy Klasse, die von WSDL. exe für `Math` den XML-Webdienst generiert wird. Die Proxy Klasse wird von <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>abgeleitet, das von der abstrakten <xref:System.Web.Services.Protocols.WebClientProtocol> -Klasse abgeleitet wird.  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel zeigt den `Math` XML-Webdienst, von dem die vorherige Proxy Klasse generiert wurde.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]  
  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <block subset="none" type="overrides"><para>Wenn Sie diese Klasse überschreiben, können Sie Methoden in der abgeleiteten Klasse einführen, die für einen bestimmten Typ von XML-Webdienst spezifisch sind. Die-Methoden erfassen die Parameter und wenden die-Basisklasse an, um die Kommunikation mit dem XML-Webdienst zu durchführen. Wenn die eingeführten Methoden asynchron sind, müssen Sie <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> die-Methode <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> und die-Methode aufzurufen. Wenn die eingeführten Methoden synchron sind, wird die <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> -Methode aufgerufen. Der überschriebene Konstruktor legt die <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> -Eigenschaft in der Regel auf die URL der XML-Webdienst Methode fest.</para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">Der Name der XML-Webdienstmethode in der abgeleiteten Klasse, die die <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode aufruft.</param>
        <param name="parameters">Ein Array von Objekten mit den Parametern, die an den XML-Webdienst übergeben werden sollen. Die Reihenfolge der Werte im Array entspricht der Reihenfolge der Parameter in der Aufrufmethode der abgeleiteten Klasse.</param>
        <param name="callback">Der Delegat, der aufgerufen werden soll, wenn der asynchrone Aufruf abgeschlossen ist. Wenn <paramref name="callback" /> auf <see langword="null" /> festgelegt ist, wird der Delegat nicht aufgerufen.</param>
        <param name="asyncState">Zusätzliche vom Aufrufer bereitgestellte Informationen.</param>
        <summary>Startet den asynchronen Aufruf einer XML-Webdienstmethode unter Verwendung von SOAP.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das an die <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />-Methode übergeben wird, um die Rückgabewerte des Remotemethodenaufrufs abzurufen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel wird die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -Methode nicht direkt aufgerufen, es sei denn, Sie haben eine eigene Proxy Klasse für einen XML-Webdienst aufgebaut.  
  
 Eine vom Web Services Description Language Tool (WSDL. exe) aus einer Dienst Beschreibung generierte Proxy Klasse macht die XML-Webdienst Methoden als Namen verfügbar, die von der Proxy Klasse abgeleitet werden, um die XML-Webdienst Methoden synchron aufzurufen. Um die XML-Webdienst Methoden asynchron aufzurufen, werden der Proxy Klasse für jede XML-Webdienst Methode zwei zusätzliche Methoden hinzugefügt, `Begin` eine mit dem Präfix, das dem Namen der XML-Webdienst Methode `End` hinzugefügt wurde, und eine, die das Präfix hinzugefügt hat.  
  
 Die Proxy Klasse ruft die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -Methode zum Starten eines asynchronen Aufruf Aufrufs der XML-Webdienst Methode auf. Wenn ein XML-Webdienst z. b. eine XML-Webdienst `Add`Methode mit dem Namen verfügbar macht, enthält `BeginAdd`die Proxy Klasse eine Methode mit dem Namen, mit der ein Aufruf der XML-Webdienst Methode gestartet wird. Innerhalb des Codes für `BeginAdd`wird ein-Anruf an die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -Methode ausgegeben, und die Ergebnisse werden in den erwarteten Rückgabetyp für `Add`eingefügt.  
  
 Wird verwendet, um die benutzerdefinierten Attribute zu suchen, die möglicherweise der-Methode hinzugefügt <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>wurden, z. b.. `methodName` <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>bietet zusätzliche Informationen über die abgeleitete Methode, die für das SOAP-Protokoll erforderlich ist.  
  
 `asyncState`wird an <xref:System.IAsyncResult> <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> und ist in der enthalten, die von der-Methode zurückgegeben wird. `callback` Der `asyncState` -Parameter kann verwendet werden, um Informationen über den Kontext des asynchronen Aufrufes `callback` im-Parameter angegebenen-Aufrufes an den Delegaten zu übergeben, der das Ergebnis behandelt.  
  
   
  
## Examples  
 Das folgende Codebeispiel ist eine vom Web Services Description Language Tool (WSDL. exe) für den `Math` XML-Webdienst generierte Proxy Klasse. Innerhalb der `BeginAdd` -Methode der Proxy Klasse startet die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> -Methode einen asynchronen Aufruf der `Add` XML-Webdienst Methode.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die vorherige Proxy Klasse erstellt wurde.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Die Anforderung hat den Servercomputer erreicht, wurde jedoch nicht erfolgreich verarbeitet.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anforderung war nicht gültig für den aktuellen Zustand des Objekts.</exception>
        <exception cref="T:System.Net.WebException">Fehler beim Zugriff auf das Netzwerk.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird dynamisch an einen im Discoverydokument unter <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> beschriebenen XML-Webdienst gebunden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein XML-Webdienst Client kann mithilfe der <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> -Methode dynamisch an einen XML-Webdienst gebunden werden, der in der Proxy Klasse referenziert ist. In der Regel <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> bezieht sich die-Eigenschaft auf die Basisadresse des XML-Webdiensts. Bevor Sie jedoch die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> -Methode aufrufen, legen Sie die <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> -Eigenschaft auf eine URL eines Discovery-Dokuments fest. Die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> -Methode versucht, eine Entsprechung im Discovery-Dokument für die in der Proxy Klasse definierte Bindung zu finden und Sie dann dynamisch zu binden. Bei erfolgreicher Ausführung werden nachfolgende Methodenaufrufe an den XML-Webdienst weitergeleitet, der im Discovery-Dokument beschrieben wird.  
  
 Wenn die Proxy Klasse mit dem Web Services Description Language Tool (WSDL. exe) erstellt wird, definiert die Proxy Klasse die von den XML-Webdienst Methoden implementierte Bindung, die <xref:System.Web.Services.WebServiceBindingAttribute>mit dem aufgerufen wird. Wenn ein XML-Webdienst mehrere Bindungen implementiert, erstellt WSDL. exe eine Proxy Klasse für jede Bindung. Wird auf jede Proxy Klasse angewendet <xref:System.Web.Services.WebServiceBindingAttribute> , die den Namen der Bindung und deren Namespace definiert. Das Discovery-Dokument, auf <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> das Sie die-Eigenschaft festlegen, muss einen Verweis auf einen XML-Webdienst enthalten, der denselben Bindungs Namen und Namespace implementiert, oder es wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel ist eine Proxy Klasse, die mit dem Hilfsprogramm WSDL. exe `Math` für den XML-Webdienst generiert wurde. Ein <xref:System.Web.Services.WebServiceBindingAttribute> wird auf die `Math` Proxy Klasse angewendet, wobei der Bindungs Name `MathSoap` auf und dessen Namespace `http://tempuri.org/`auf festgelegt wird.  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel ist ein Webdienst Client, der die vorherige Proxy Klasse verwendet. Im- <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> Ereignis des Webformulars ruft der XML-Webdienst Client die Methode auf, die versucht, dynamisch an die vom Benutzer bereitgestellte URL zu binden. `EnterBtn_Click`  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Die in der Proxyklasse definierte Bindung konnte im Discoverydokument unter <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> nicht gefunden werden.

- oder - 
Für die Proxyklasse wurde keine Bindung definiert.</exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)">XML-Webdienstsuche</related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />, das von der <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Beendet den asynchronen Aufruf einer XML-Webdienstmethode unter Verwendung von SOAP.</summary>
        <returns>Ein Array von Objekten mit dem Rückgabewert und allen durch Verweis übergebenen Parametern oder <see langword="out" />-Parametern der abgeleiteten Klassenmethode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel wird die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -Methode nicht direkt aufgerufen, es sei denn, Sie haben eine eigene Proxy Klasse für einen XML-Webdienst aufgebaut.  
  
 Eine vom Web Services Description Language Tool (WSDL. exe) für einen XML-Webdienst generierte Proxy Klasse macht die XML-Webdienst Methoden als Namen aus der Proxy Klasse zum synchronen Aufrufen der XML-Webdienst Methoden verfügbar. Um die XML-Webdienst Methoden asynchron aufrufen zu können, werden der Proxy Klasse für jede XML-Webdienst Methode zwei zusätzliche Methoden hinzugefügt `Begin` , eine mit dem Präfix, das dem Namen der XML-Webdienst `End` Methode hinzugefügt wurde, und eine, die das Präfix hinzugefügt hat.  
  
 Die Proxy Klasse ruft die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -Methode auf, um einen asynchronen Aufruf der XML-Webdienst Methode abzuschließen. Wenn ein XML-Webdienst z. b. eine XML-Webdienst `Add`Methode mit dem Namen verfügbar macht, enthält `EndAdd`die Proxy Klasse eine Methode mit dem Namen, um einen asynchronen Aufruf einer XML-Webdienst Methode abzuschließen. Innerhalb des Codes für `EndAdd` wird ein-Anruf an die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -Methode vorgenommen, und dann werden die Ergebnisse in den erwarteten Rückgabetyp für `Add`eingefügt.  
  
   
  
## Examples  
 Das folgende Codebeispiel ist eine Proxy Klasse, die von WSDL. exe für `Math` den XML-Webdienst generiert wird. Innerhalb der `EndAdd` -Methode der Proxy Klasse schließt die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> -Methode den `Add` asynchronen Aufruf der XML-Webdienst Methode ab.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die vorherige Proxy Klasse erstellt wurde.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> ist nicht der Rückgabewert aus der <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode.</exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Die Anforderung hat den Servercomputer erreicht, wurde jedoch nicht erfolgreich verarbeitet.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anforderung war nicht gültig für den aktuellen Zustand des Objekts.</exception>
        <exception cref="T:System.Net.WebException">Fehler beim Zugriff auf das Netzwerk.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Eine <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />, die den <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> zum Initialisieren des <see cref="T:System.Xml.XmlReader" /> zur Verfügung stellt.</param>
        <param name="bufferSize">Die ursprüngliche Puffergröße des vom <see cref="T:System.IO.StreamReader" /> verwendeten <see cref="T:System.Xml.XmlReader" />.</param>
        <summary>Gibt einen mit der <see cref="T:System.Xml.XmlReader" />-Eigenschaft des <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />-Parameters initialisierten <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> zurück.</summary>
        <returns>Ein mit der <see cref="T:System.Xml.XmlReader" />-Eigenschaft des <paramref name="message" />-Parameters initialisierter <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Der beim Erstellen der <see cref="T:System.Uri" /> zu verwendende <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Erstellt einen <see cref="T:System.Net.WebRequest" /> für das angegebene <paramref name="uri" />.</summary>
        <returns>Die <see cref="T:System.Net.WebRequest" /> für die angegebene URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann überschrieben werden, um die <xref:System.Net.WebRequest> anzupassen, bevor die XML-Web-Service Request erstellt wird. Beispielsweise können Sie der Anforderung einen benutzerdefinierten Header hinzufügen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <paramref name="uri" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Eine <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />, die den <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> zum Initialisieren des <see cref="T:System.Xml.XmlWriter" /> zur Verfügung stellt.</param>
        <param name="bufferSize">Die ursprüngliche Puffergröße des vom <see cref="T:System.IO.StreamWriter" /> verwendeten <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Gibt einen mit der <see cref="T:System.Xml.XmlWriter" />-Eigenschaft des <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />-Parameters initialisierten <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> zurück.</summary>
        <returns>Ein mit der <see cref="T:System.Xml.XmlWriter" />-Eigenschaft des <paramref name="message" />-Parameters initialisierter <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (methodName, parameters)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">Der Name der XML-Webdienstmethode.</param>
        <param name="method_name">Der Name der XML-Webdienstmethode.</param>
        <param name="parameters">Ein Array von Objekten mit den Parametern, die an den XML-Webdienst übergeben werden sollen. Die Reihenfolge der Werte im Array entspricht der Reihenfolge der Parameter in der Aufrufmethode der abgeleiteten Klasse.</param>
        <summary>Ruft eine XML-Webdienstmethode unter Verwendung von SOAP synchron auf.</summary>
        <returns>Ein Array von Objekten mit dem Rückgabewert und allen <see langword="reference" />-Parametern bzw. <see langword="out" />-Parametern der abgeleiteten Klassenmethode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> -Methode nicht direkt aufgerufen, es sei denn, Sie entwickeln eine eigene Proxy Klasse für einen XML-Webdienst.  
  
 Eine vom Web Services Description Language Tool (WSDL. exe) für einen XML-Webdienst generierte Proxy Klasse macht die XML-Webdienst Methoden als Namen aus der Proxy Klasse verfügbar. Die Proxy Klasse ruft die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> -Methode auf, um einen XML-Webdienst-Methodenaufruf aufzurufen. Wenn ein XML-Webdienst z. b. eine XML-Webdienst `Add`Methode mit dem Namen verfügbar macht, enthält die `Add`Proxy Klasse auch eine Methode mit dem Namen. Innerhalb des Codes für die `Add` -Methode in der Proxy Klasse wird ein synchroner-Befehl über die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> -Methode an die XML-Webdienst Methode gerichtet, und dann werden die Ergebnisse in den `Add`erwarteten Rückgabetyp für eingefügt.  
  
 Der `methodName` -Parameter wird verwendet, um die benutzerdefinierten Attribute zu suchen, die möglicherweise der-Methode <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>hinzugefügt wurden, z. b.. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>bietet zusätzliche Informationen über die abgeleitete Methode, die für das SOAP-Protokoll erforderlich ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel ist eine Proxy Klasse, die von WSDL. exe für `Math` den XML-Webdienst generiert wird. Innerhalb der `Add` -Methode der Proxy Klasse ruft die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> -Methode die `Add` XML-Webdienst Methode auf.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 Das folgende Codebeispiel stellt den `Math` XML-Webdienst dar, von dem die vorherige Proxy Klasse erstellt wurde.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Die Anforderung hat den Servercomputer erreicht, wurde jedoch nicht erfolgreich verarbeitet.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anforderung war nicht gültig für den aktuellen Zustand des Objekts.</exception>
        <exception cref="T:System.Net.WebException">Fehler beim Zugriff auf das Netzwerk.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die angegebene Methode asynchron auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Der Name der aufzurufenden Methode.</param>
        <param name="parameters">Die an die Methode zu übergebenden Parameter.</param>
        <param name="callback">Der nach Abschluss des Methodenaufrufs aufgerufene Delegat.</param>
        <summary>Ruft die angegebene Methode asynchron auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Der Name der aufzurufenden Methode.</param>
        <param name="parameters">Die an die Methode zu übergebenden Parameter.</param>
        <param name="callback">Der nach Abschluss des Methodenaufrufs aufgerufene Delegat.</param>
        <param name="userState">Ein Objekt, mit dem Zustandsinformationen an den <paramref name="callback" />-Delegaten übergeben werden.</param>
        <summary>Ruft die angegebene Methode asynchron auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des SOAP-Protokolls ab, mit dem die SOAP-Anforderung an den XML-Webdienst ausgeführt wird, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />-Werte. Die Standardeinstellung ist <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> -Eigenschaft wird in der vom Web Services Description Language Tool (WSDL. exe) generierten Proxy Klasse standardmäßig <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> auf festgelegt, wenn ein WSDL-Dokument für einen XML-Webdienst SOAP-Version 1,1 unterstützt. Wenn ein XML-Webdienst jedoch nur SOAP 1,2 unterstützt, legt WSDL. exe <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> die- <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>Eigenschaft auf fest. Wenn Sie die Version des SOAP-Protokolls beim Erstellen der Proxy Klasse mit WSDL. exe auswählen möchten, `/protocol` verwenden Sie den `SOAP` - `SOAP12` Schalter mit den Einstellungen <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> oder, um <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>die-Eigenschaft auf <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> bzw. festzulegen. .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Version des Protokolls, das für die Kommunikation mit einem XML-Webdienst verwendet wird, mit SOAP 1,2 festgelegt.  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>
