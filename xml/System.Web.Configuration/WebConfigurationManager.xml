<Type Name="WebConfigurationManager" FullName="System.Web.Configuration.WebConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4ea54418289971f48f7850c92aa6ecbd9bdb67b" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46693745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.WebConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type WebConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den Zugriff auf Konfigurationsdateien, wenn diese für Webanwendungen gelten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.WebConfigurationManager> -Klasse können Sie den Zugriff auf Computer und die Anwendung Informationen.  
  
 Mithilfe von <xref:System.Web.Configuration.WebConfigurationManager> ist die bevorzugte Methode für die Arbeit mit Konfigurationsdateien, die im Zusammenhang mit Webanwendungen. Verwenden Sie für Clientanwendungen, die <xref:System.Configuration.ConfigurationManager> Klasse.  
  
 Ihre Anwendung erweitern kann die <xref:System.Configuration> eingibt, oder verwenden sie direkt zum Behandeln von Konfigurationsinformationen, wie in der folgenden Liste erläutert:  
  
-   `Handling configuration` Zum Behandeln von Konfigurationsinformationen mithilfe der standard-Typen verwenden Sie einen der folgenden Ansätze:  
  
    -   `Accessing a section` Um die Konfigurationsinformationen für Ihre Anwendung zugreifen zu können, müssen Sie eine der verwenden die `GetSection` von bereitgestellten Methoden <xref:System.Web.Configuration.WebConfigurationManager>. Für `<appSettings>` und `<connectionStrings>`, Sie verwenden die <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> und <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> Eigenschaften. Diese Methoden nur-Lese Vorgänge ausführen, verwenden Sie eine einzelne zwischengespeicherte Instanz der Konfiguration und sind multithread beachten.  
  
    -   `Accessing configuration files` Ihre Anwendung gelesen und Konfigurationseinstellungen auf jeder Ebene, für sich selbst oder für andere Anwendungen oder der Computer, lokal oder Remote zu schreiben. Verwenden Sie eine der der `open` von bereitgestellten Methoden <xref:System.Web.Configuration.WebConfigurationManager>. Diese Methoden zurück, eine <xref:System.Configuration.Configuration> -Objekt, das wiederum die erforderlichen Methoden und Eigenschaften zum Behandeln der zugrunde liegenden Konfigurationsdateien bereitstellt. Diese Methoden führen Lese- oder Schreibvorgänge und erstellen Sie die Konfigurationsdaten neu, jedes Mal, wenn eine Datei geöffnet wird.  
  
    -   `Advanced configuration` Behandlung von erweiterten Konfiguration wird bereitgestellt, von den Typen <xref:System.Configuration.SectionInformation>, <xref:System.Configuration.PropertyInformation>, <xref:System.Configuration.PropertyInformationCollection>, <xref:System.Configuration.ElementInformation>, <xref:System.Configuration.ContextInformation>, <xref:System.Configuration.ConfigurationSectionGroup>, und <xref:System.Configuration.ConfigurationSectionGroupCollection>.  
  
-   `Extending configuration standard types` Sie können auch benutzerdefinierte Konfigurationselemente bereitstellen, durch das Erweitern der Standardkonfigurationstypen wie z. B. <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, und <xref:System.Configuration.ConfigurationSection> mithilfe eines programmgesteuerten oder ein Modell der attributierten. Finden Sie in der <xref:System.Configuration.ConfigurationSection> -Klasse für ein Beispiel für einen standard-Konfigurationstyp programmgesteuert zu erweitern. Finden Sie in der <xref:System.Configuration.ConfigurationElement> -Klasse für ein Beispiel für ein Modell der attributierten mit Standardkonfiguration zu erweitern.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem  
  
 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Die <see cref="T:System.Configuration.Configuration" /> Klasse ermöglicht den programmgesteuerten Zugriff für die Bearbeitung von Konfigurationsdateien. Verwenden Sie eine der offenen gebotenen Methoden <see cref="T:System.Web.Configuration.WebConfigurationManager" />. Diese Methoden zurück, eine <see cref="T:System.Configuration.Configuration" /> -Objekt, das wiederum die erforderlichen Methoden und Eigenschaften zum Behandeln der zugrunde liegenden Konfigurationsdateien bereitstellt. Sie können diese Dateien zum Lesen oder Schreiben wie folgt zugreifen: 
Verwenden Sie <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> oder <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> zum Lesen von Konfigurationsinformationen. Beachten Sie, dass der Benutzer oder Prozess, der liest die folgenden Berechtigungen: 
-Read-Berechtigung für die Konfigurationsdatei unter der aktuellen Ebene der Hierarchie.  
  
-Leseberechtigungen Sie für das übergeordnete Element von Konfigurationsdateien.  
  
Wenn Ihre Anwendung schreibgeschützten Zugriff auf die eigene Konfiguration erfordert, sollten Sie mithilfe der <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> Methoden. Diese Methoden ermöglichen den Zugriff auf die zwischengespeicherte Konfigurationswerte für die aktuelle Anwendung, die über eine bessere Leistung als verfügt die <see cref="T:System.Configuration.Configuration" /> Klasse.  
  
 <block subset="none" type="note"><para>  
 Wenn Sie eine statische <see langword="GetSection" /> Methode, eine <paramref name="path" /> Parameter Path-Parameter muss finden Sie in der Anwendung, in dem der Code ausgeführt wird; andernfalls wird der Parameter ignoriert, und die Konfigurationsinformationen für die derzeit die Ausführung Anwendung wird zurückgegeben.  
  
</para></block>  
  
Verwenden Sie eine der der <see cref="Overload:System.Configuration.Configuration.Save" /> Methoden zum Schreiben von Konfigurationsinformationen. Beachten Sie, dass der Benutzer oder Prozess, der schreibt die folgenden Berechtigungen: 
-Schreiben Sie-Berechtigung für die Konfigurationsdatei und das Verzeichnis unter der aktuellen Ebene der Hierarchie.  
  
-Leseberechtigungen Sie für alle Konfigurationsdateien.</para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
    <related type="Article" href="http://msdn.microsoft.com/library/a202175f-a85a-44fd-bc35-c8b5c82f31c3">Übersicht über die Konfiguration von ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anwendungseinstellungen der Website ab.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt, das das <see cref="T:System.Configuration.AppSettingsSection" />-Objekt für die Standardkonfiguration der aktuellen Webanwendung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Configuration.AppSettingsSection> Objekt enthält der Konfigurationsdatei `<appSettings>` Abschnitt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#8)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte kein gültiges <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt mit den Anwendungseinstellungsdaten abgerufen werden.</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Verbindungszeichenfolgen der Website ab.</summary>
        <value>Ein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt, das den Inhalt des <see cref="T:System.Configuration.ConnectionStringsSection" />-Objekts für die Standardkonfiguration der aktuellen Webanwendung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> Eigenschaft, um den Zugriff auf Konfigurationsinformationen und Auflisten der Ergebnisse. Verwenden Sie eine bestimmte Verbindungszeichenfolge für den Zugriff auf das zurückgegebene <xref:System.Configuration.ConnectionStringSettingsCollection> durch den Namen des gewünschten Verbindungszeichenfolge als Indexer.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#7)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte kein gültiges <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt abgerufen werden.</exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSection">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Standardkonfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationManager" />
        <related type="Article" href="http://msdn.microsoft.com/library/a202175f-a85a-44fd-bc35-c8b5c82f31c3">Übersicht über die Konfiguration von ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist. Beachten Sie, dass bei der Verwendung von <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> als Laufzeitvorgang Sicherheitseinschränkungen bestehen. Daher ist es u. U. nicht möglich, zur Laufzeit auf einen Abschnitt zuzugreifen, um diesen zu ändern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> heißt aus in einer Webanwendung wird im Abschnitt aus der Konfigurationsdatei, die vom System gemäß der Webanwendungs-Hierarchie aktiviert.  
  
> [!CAUTION]
>  Wenn Ihre Anwendung ein anderes Protokoll als HTTP, verwendet der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die sowohl einen Abschnittsnamen auch den Pfad in der Parameterliste akzeptiert, ist derjenige verwenden. Sie müssen der Konfigurationsdateipfad angeben, da das System keine Annahmen über der Ebene der Konfigurationshierarchie vornehmen kann. Bei Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die akzeptiert nur einen Abschnittsnamen, das System versucht immer um die Konfigurationseinstellungen auf Anwendungsebene zurückzugeben. Beachten Sie jedoch, dass wenn der angegebene Pfad außerhalb der aktuellen Anwendung ist, die Überladung mit einem Pfad auch die Konfigurationseinstellungen auf Anwendungsebene für die aktuell ausgeführte Anwendung zurückgegeben wird.  
  
 Rufen Sie <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> aus in einer Clientanwendung. In diesem Fall ruft der Abschnitt "Default" ab, aus der Konfigurationsdatei, die vom System gemäß der Clientkonfigurationshierarchie aktiviert wird. In der Regel ist dies der Datei "Machine.config", es sei denn, Sie eine zugeordnete Konfiguration verfügen. Zuordnen von Konfigurationsdateien finden Sie in die Zuordnungsmethoden beschrieben.  
  
> [!NOTE]
>  Die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Methode ist eine Run-Time-Methode, die im Abschnitt einer Konfigurationsdatei auf der Hierarchieebene verwendet wird, in dem die Anwendung ausgeführt wird. Verwenden Sie für einen nicht-Run-Time-Vorgang <xref:System.Configuration.Configuration.GetSection%2A> stattdessen. Diese Methode funktioniert auf einem angegebenen Abschnitt einer Konfigurationsdatei, die Sie mithilfe einer der überladenen Methoden zum Öffnen einer Konfigurationsdatei abrufen <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>.  
  
   
  
## Examples  
 Die Beispiele in diesem Abschnitt zeigen, wie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Methode.  
  
 Das folgende Beispiel zeigt einen Abschnitt, der entweder aus einer Webanwendung oder eine Konsolenanwendung zugegriffen werden kann.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> -Methode zum Abrufen einer <xref:System.Configuration.ConfigurationSection> Objekt aus einer Konfigurationsdatei.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides">
          <para>Der Rückgabewert muss in den erwarteten Konfigurationstyp vor der Verwendung umgewandelt werden. Um die möglichen Umwandlungsfehlern Ausnahmen zu vermeiden, sollten Sie eine bedingte Umwandlungsoperation wie verwenden die <see langword="as" /> Operator in c# oder die Funktion in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String, path As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetSection : string * string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection (sectionName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <param name="path">Der virtuelle Konfigurationsdateipfad.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der Webanwendung am angegebenen Speicherort ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist. Beachten Sie, dass bei der Verwendung von <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> als Laufzeitvorgang Sicherheitseinschränkungen bestehen. Daher ist es u. U. nicht möglich, zur Laufzeit auf einen Abschnitt zuzugreifen, um diesen zu ändern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> heißt aus in einer Webanwendung wird im Abschnitt aus der Konfigurationsdatei, die durch den angegebenen Pfad in der Konfigurationshierarchie definiert.  
  
> [!CAUTION]
>  Wenn Ihre Anwendung ein anderes Protokoll als HTTP, verwendet der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die sowohl einen Abschnittsnamen auch den Pfad in der Parameterliste akzeptiert, ist derjenige verwenden. Sie müssen der Konfigurationsdateipfad angeben, da das System keine Annahmen über der Ebene der Konfigurationshierarchie vornehmen kann. Bei Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die akzeptiert nur einen Abschnittsnamen, das System versucht immer um die Konfigurationseinstellungen auf Anwendungsebene zurückzugeben. Beachten Sie jedoch, dass wenn der angegebene Pfad außerhalb der aktuellen Anwendung ist, die Überladung mit einem Pfad auch die Konfigurationseinstellungen auf Anwendungsebene für die aktuell ausgeführte Anwendung zurückgegeben wird.  
  
 Diese Methode kann nicht in einer Clientanwendung aus aufgerufen werden.  
  
 Wenn Sie den Konfigurationsabschnitt aus der Konfigurationsdatei, die in das aktuelle Verzeichnis Webanwendungsebene verwenden abrufen möchten die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Methode ist eine Run-Time-Methode, die auf den Abschnitt einer Konfigurationsdatei auf die Ebene der Hierarchie, in dem die Anwendung ausgeführt wird. Verwenden Sie für einen nicht-Run-Time-Vorgang <xref:System.Configuration.Configuration.GetSection%2A> stattdessen. Diese Methode funktioniert auf einem angegebenen Abschnitt einer Konfigurationsdatei, die Sie erhalten mit einer der der `open` Konfigurationsmethoden für die Datei.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Methode.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> -Methode zum Abrufen einer <xref:System.Configuration.ConfigurationSection> Objekt aus einer bestimmten Konfigurationsdatei.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#5)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode wird außerhalb einer Webanwendung aufgerufen.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides">
          <para>Der Rückgabewert muss in den erwarteten Konfigurationstyp vor der Verwendung umgewandelt werden. Um die möglichen Umwandlungsfehlern Ausnahmen zu vermeiden, sollten Sie eine bedingte Umwandlungsoperation wie verwenden die <see langword="as" /> Operator in c# oder die Funktion in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationSection">
      <MemberSignature Language="C#" Value="public static object GetWebApplicationSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWebApplicationSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWebApplicationSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWebApplicationSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetWebApplicationSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, falls der Abschnitt nicht vorhanden ist, oder ein internes Objekt, falls der Zugriff auf den Abschnitt zur Laufzeit nicht möglich ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> heißt aus in einer Webanwendung wird im Abschnitt aus der Konfigurationsdatei, die vom System gemäß der Webanwendungs-Hierarchie aktiviert.  
  
 Rufen Sie <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> aus in einer Clientanwendung. In diesem Fall ruft der Abschnitt "Default" ab, aus der Konfigurationsdatei, die vom System gemäß der Clientkonfigurationshierarchie aktiviert wird. In der Regel ist dies der Datei "Machine.config", es sei denn, Sie eine zugeordnete Konfiguration verfügen. Zuordnen von Konfigurationsdateien finden Sie in die Zuordnungsmethoden beschrieben.  
  
> [!NOTE]
>  Die <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> Methode ist ein Laufzeit-Vorgang, der fungiert, und im Abschnitt der Konfigurationsdatei der Anwendung befindet sich auf der aktuellen Ebene. Die <xref:System.Configuration.Configuration.GetSection%2A> -Methode, allerdings wird nicht zur Laufzeit aber verhält sich auf dem angegebenen Abschnitt durch eine der Methoden zum Öffnen der Konfigurationsdateien abgerufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> Methode.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> -Methode zum Abrufen einer <xref:System.Configuration.ConfigurationSection> Objekt aus der Standardkonfigurationsdatei.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#6)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides">
          <para>Der Rückgabewert muss in den erwarteten Konfigurationstyp vor der Verwendung umgewandelt werden. Um die möglichen Umwandlungsfehlern Ausnahmen zu vermeiden, sollten Sie eine bedingte Umwandlungsoperation wie verwenden die <see langword="as" /> Operator in c# oder die Funktion in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei auf dem aktuell verwendeten Computer als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> -Methode öffnet die Computerkonfigurationsdatei auf dem Computer, in dem die Anwendung ausgeführt wird. Diese Datei befindet sich in der standard windir%\Microsoft.NET\Framework\version\config %windir%\Microsoft.NET\Framework\Version\Config.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#9)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration locationSubPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Computerkonfiguration gilt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei auf dem aktuell verwendeten Computer als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode öffnet die Computerkonfigurationsdatei, die im angegebenen Verzeichnis gilt die `locationSubPath` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#10)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode öffnet die Computerkonfigurationsdatei, die im angegebenen Verzeichnis befindet der `locationSubPath` Parameter und auf dem Computer, die gemäß der `server` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#11)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <param name="userToken">Ein zu verwendendes Kontotoken.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, auf eine Konfigurationsdatei, die mithilfe eines Identitätswechsels.  
  
> [!NOTE]
>  Die Kontotoken wird normalerweise von einer Instanz von abgerufen der <xref:System.Security.Principal.WindowsIdentity> Klasse oder durch einen Aufruf von nicht verwaltetem Code, z. B. durch einen Aufruf der Win32-API `LogonUser`. Weitere Informationen zum Aufrufen von nicht verwaltetem Code finden Sie unter [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#12)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Für den <paramref name="server" />-Parameter oder den <paramref name="userToken" />-Parameter wurden keine gültigen Werte angegeben.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="http://msdn.microsoft.com/library/eca7606e-ebfb-4f47-b8d9-289903fdc045">Verwenden nicht verwalteter DLL-Funktionen</related>
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <param name="userName">Der vollständige Benutzername (Domäne\Benutzer) zum Öffnen der Datei.</param>
        <param name="password">Das Kennwort für den Benutzernamen.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, auf eine Konfigurationsdatei, die mithilfe eines Identitätswechsels.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#13)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter waren ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Standardcomputerkonfigurationsdatei zu verwendende <see cref="T:System.Configuration.ConfigurationFileMap" />-Objekt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration (fileMap, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle einer Standardcomputerkonfigurationsdatei zu verwendende <see cref="T:System.Configuration.ConfigurationFileMap" />-Objekt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen Dateispeicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden den Mechanismus zum zuordnen, wenn Sie Ihre virtuelle Verzeichnishierarchie zu einem physikalischen Verzeichnis zuordnen möchten.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie eine virtuelle Verzeichnishierarchie eine physische zuordnen. Die hier gezeigte Beispiel wird in den überladenen Membern verwendet.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen virtuellen Pfads Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#21)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#21)]  
  
 Im vorherige Beispiel verwendet die folgende benutzerdefinierte Methode zum Generieren einer <xref:System.Configuration.ConfigurationFileMap> Objekt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 Finden Sie unter <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> für ein Beispiel, das zeigt, wie Sie eine virtuelle Verzeichnishierarchie eine physische zuordnen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Zuordnung einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung, des angegebenen virtuellen Pfads und des angegebenen Websitenamens Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#22)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#22)]  
  
 Finden Sie unter <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> für ein Beispiel, das zeigt, wie Sie eine virtuelle Verzeichnishierarchie eine physische zuordnen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Zuordnung einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen virtuellen Pfads, des Websitenamens und des Speicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#23)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#23)]  
  
 Finden Sie unter <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> für ein Beispiel, das zeigt, wie Sie eine virtuelle Verzeichnishierarchie eine physische zuordnen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</summary>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei. Wenn <see langword="null" /> festgelegt ist, wird die Stammdatei Web.config geöffnet.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#14)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads und des Websitenamens Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#15)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens und des Speicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Ressource, Ihren Code Berechtigung "Lesen" Berechtigungen für alle Konfigurationsdateien, die von der sie die Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss Ihr Code darüber verfügen über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis, in dem sie vorhanden ist.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#16)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts und des Servers Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Remoteressource, Ihren Code benötigt Administratorrechte auf dem Remotecomputer.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#17)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Serverparameter war ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <param name="userToken">Ein zu verwendendes Kontotoken.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts, des Servers und des Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, auf eine Konfigurationsdatei, die mithilfe eines Identitätswechsels.  
  
> [!NOTE]
>  Die Kontotoken wird normalerweise von einer Instanz von abgerufen der <xref:System.Security.Principal.WindowsIdentity> Klasse oder durch einen Aufruf von nicht verwaltetem Code, z. B. durch einen Aufruf der Win32-API `LogonUser`. Weitere Informationen zum Aufrufen von nicht verwaltetem Code finden Sie unter [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Remoteressource, Ihren Code benötigt Administratorrechte auf dem Remotecomputer.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode zum Zugriff auf Konfigurationsinformationen.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#19)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userToken" />-Parameter war ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="http://msdn.microsoft.com/library/eca7606e-ebfb-4f47-b8d9-289903fdc045">Verwenden nicht verwalteter DLL-Funktionen</related>
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <param name="userName">Der vollständige Benutzername (Domäne\Benutzer) zum Öffnen der Datei.</param>
        <param name="password">Das Kennwort für den Benutzernamen.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts, des Servers und des Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, auf eine Konfigurationsdatei, die mithilfe eines Identitätswechsels.  
  
 Zum Abrufen der <xref:System.Configuration.Configuration> Objekt für eine Remoteressource, Ihren Code benötigt Administratorrechte auf dem Remotecomputer.  
  
 Müssen Sie möglicherweise führen Sie die [ASP.NET IIS-Registrierungstool (Aspnet_regiis.exe)](http://msdn.microsoft.com/library/6491c41e-e2b0-481f-9863-db3614d5f96b) mit der `-config+` Option aus, um den Zugriff auf die Konfigurationsdateien auf dem Remotecomputer aktivieren.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Zugriff auf Konfigurationsinformationen mit dem <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#18)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter waren ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <related type="Article" href="http://msdn.microsoft.com/library/6491c41e-e2b0-481f-9863-db3614d5f96b">ASP.NET IIS-Registrierungstool (Aspnet_regiis.exe)</related>
      </Docs>
    </Member>
  </Members>
</Type>