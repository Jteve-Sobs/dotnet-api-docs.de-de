<Type Name="WebConfigurationManager" FullName="System.Web.Configuration.WebConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ac243a40751720d4b5b7d7fe42adb150d7ef092" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77100895" /></Metadata><TypeSignature Language="C#" Value="public static class WebConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.WebConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type WebConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den Zugriff auf Konfigurationsdateien, wenn diese für Webanwendungen gelten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.WebConfigurationManager>-Klasse ermöglicht den Zugriff auf Computer-und Anwendungsinformationen.  
  
 Die Verwendung von <xref:System.Web.Configuration.WebConfigurationManager> ist die bevorzugte Methode zum Arbeiten mit Konfigurationsdateien, die sich auf Webanwendungen beziehen. Verwenden Sie für Client Anwendungen die <xref:System.Configuration.ConfigurationManager>-Klasse.  
  
 Die Anwendung kann die <xref:System.Configuration> Typen erweitern oder Sie direkt verwenden, um Konfigurationsinformationen zu verarbeiten, wie in der folgenden Liste erläutert:  
  
-   [https://login.microsoftonline.com/consumers/](`Handling configuration`). Wenn Sie Konfigurationsinformationen mithilfe der Standardtypen verarbeiten möchten, verwenden Sie einen der folgenden Ansätze:  
  
    -   [https://login.microsoftonline.com/consumers/](`Accessing a section`). Wenn Sie auf Konfigurationsinformationen für Ihre Anwendung zugreifen möchten, müssen Sie eine der `GetSection` Methoden verwenden, die von <xref:System.Web.Configuration.WebConfigurationManager>bereitgestellt werden. Für `<appSettings>` und `<connectionStrings>`verwenden Sie die Eigenschaften <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> und <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A>. Mit diesen Methoden werden schreibgeschützte Vorgänge durchgeführt, eine einzelne zwischengespeicherte Instanz der Konfiguration verwendet und Multithread-fähig.  
  
    -   [https://login.microsoftonline.com/consumers/](`Accessing configuration files`). Die Anwendung kann Konfigurationseinstellungen auf jeder Ebene, für sich selbst oder für andere Anwendungen oder Computer lokal oder Remote lesen und schreiben. Sie verwenden eine der `open` Methoden, die von <xref:System.Web.Configuration.WebConfigurationManager>bereitgestellt werden. Diese Methoden geben ein <xref:System.Configuration.Configuration> Objekt zurück, das wiederum die erforderlichen Methoden und Eigenschaften bereitstellt, um die zugrunde liegenden Konfigurationsdateien zu verarbeiten. Diese Methoden führen Lese-oder Schreibvorgänge aus und erstellen die Konfigurationsdaten jedes Mal neu, wenn eine Datei geöffnet wird.  
  
    -   [https://login.microsoftonline.com/consumers/](`Advanced configuration`). Erweiterte Konfigurations Behandlung wird durch die Typen <xref:System.Configuration.SectionInformation>, <xref:System.Configuration.PropertyInformation>, <xref:System.Configuration.PropertyInformationCollection>, <xref:System.Configuration.ElementInformation>, <xref:System.Configuration.ContextInformation>, <xref:System.Configuration.ConfigurationSectionGroup>und <xref:System.Configuration.ConfigurationSectionGroupCollection>bereitgestellt.  
  
-   [https://login.microsoftonline.com/consumers/](`Extending configuration standard types`). Sie können Ihre benutzerdefinierten Konfigurationselemente auch bereitstellen, indem Sie die Standard Konfigurationstypen wie <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>und <xref:System.Configuration.ConfigurationSection> mithilfe eines programmatischen oder attributierten Modells erweitern. Ein Beispiel für die programmgesteuerte Erweiterung eines Standard Konfigurationstyp finden Sie in der <xref:System.Configuration.ConfigurationSection>-Klasse. Ein Beispiel für die Erweiterung eines Standard Konfigurations Typs mithilfe des attributierten Modells finden Sie in der <xref:System.Configuration.ConfigurationElement>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit dem auf Konfigurationsinformationen zugreifen können.  
  
 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> -Methode.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Die <see cref="T:System.Configuration.Configuration" />-Klasse ermöglicht den programmgesteuerten Zugriff zum Bearbeiten von Konfigurationsdateien. Sie verwenden eine der geöffneten Methoden, die von <see cref="T:System.Web.Configuration.WebConfigurationManager" />bereitgestellt werden. Diese Methoden geben ein <see cref="T:System.Configuration.Configuration" /> Objekt zurück, das wiederum die erforderlichen Methoden und Eigenschaften bereitstellt, um die zugrunde liegenden Konfigurationsdateien zu verarbeiten. Sie können wie folgt auf diese Dateien zum Lesen oder Schreiben zugreifen: 
Mit <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> oder <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> können Sie Konfigurationsinformationen lesen. Beachten Sie, dass der Benutzer oder der Prozess, der liest, über die folgenden Berechtigungen verfügen muss: 
-Leseberechtigung für die Konfigurationsdatei auf der aktuellen Konfigurations Hierarchieebene.  
  
: Leseberechtigungen für alle übergeordneten Konfigurationsdateien.  
  
Wenn Ihre Anwendung schreibgeschützten Zugriff auf Ihre eigene Konfiguration benötigt, empfiehlt es sich, die <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" />-Methoden zu verwenden. Diese Methoden ermöglichen den Zugriff auf die zwischengespeicherten Konfigurationswerte für die aktuelle Anwendung, die eine bessere Leistung als die <see cref="T:System.Configuration.Configuration" /> Klasse aufweist.  
  
 <block subset="none" type="note"><para>  
 Wenn Sie eine statische <see langword="GetSection" /> Methode verwenden, die einen <paramref name="path" />-Parameter annimmt, muss der path-Parameter auf die Anwendung verweisen, in der der Code ausgeführt wird. Andernfalls wird der-Parameter ignoriert, und es werden Konfigurationsinformationen für die aktuell laufende Anwendung zurückgegeben.  
  
</para></block>  
  
 Sie verwenden eine der-<see cref="Overload:System.Configuration.Configuration.Save" /> Methoden, um Konfigurationsinformationen zu schreiben. Beachten Sie, dass der Benutzer oder der Prozess, der schreibt, über die folgenden Berechtigungen verfügen muss: 
-Schreib Berechtigung für die Konfigurationsdatei und das Verzeichnis auf der aktuellen Konfigurations Hierarchieebene.  
  
: Leseberechtigungen für alle Konfigurationsdateien.</para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178683(v=vs.100)">ASP.NET Konfiguration (Übersicht)</related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anwendungseinstellungen der Website ab.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt, das das <see cref="T:System.Configuration.AppSettingsSection" />-Objekt für die Standardkonfiguration der aktuellen Webanwendung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Configuration.AppSettingsSection>-Objekt enthält den `<appSettings>` Abschnitt der Konfigurationsdatei.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#8)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte kein gültiges <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt mit den Anwendungseinstellungsdaten abgerufen werden.</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Verbindungszeichenfolgen der Website ab.</summary>
        <value>Ein <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt, das den Inhalt des <see cref="T:System.Configuration.ConnectionStringsSection" />-Objekts für die Standardkonfiguration der aktuellen Webanwendung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A>-Eigenschaft auf Konfigurationsinformationen zugreifen und die Ergebnisse auflisten. Wenn Sie auf eine bestimmte Verbindungs Zeichenfolge zugreifen möchten, verwenden Sie die zurückgegebene <xref:System.Configuration.ConnectionStringSettingsCollection> mit dem Namen der gewünschten Verbindungs Zeichenfolge als Indexer.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#7)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte kein gültiges <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />-Objekt abgerufen werden.</exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSection">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Standardkonfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationManager" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178683(v=vs.100)">ASP.NET Konfiguration (Übersicht)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist. Beachten Sie, dass bei der Verwendung von <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> als Laufzeitvorgang Sicherheitseinschränkungen bestehen. Daher ist es u. U. nicht möglich, zur Laufzeit auf einen Abschnitt zuzugreifen, um diesen zu ändern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> innerhalb einer Webanwendung aufgerufen wird, ruft er den Abschnitt aus der Konfigurationsdatei ab, die vom System entsprechend der Webanwendungs-Konfigurations Hierarchie ausgewählt wurde.  
  
> [!CAUTION]
>  Wenn Ihre Anwendung ein anderes Protokoll als HTTP verwendet, ist die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die sowohl einen Abschnittsnamen als auch einen Pfad in der Parameterliste annimmt. Sie müssen den Pfad der Konfigurationsdatei angeben, da das System keine Annahmen über die Ebene der Konfigurations Hierarchie treffen kann. Wenn Sie die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung verwenden, die nur einen Abschnittsnamen annimmt, versucht das System immer, die Konfigurationseinstellungen auf Anwendungsebene zurückzugeben. Beachten Sie jedoch, dass die Überladung, die einen Pfad annimmt, auch die Konfigurationseinstellungen auf Anwendungsebene für die aktuell laufende Anwendung zurückgibt, wenn der angegebene Pfad außerhalb der aktuellen Anwendung liegt.  
  
 Sie können <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> aus einer Client Anwendung heraus abrufen. In diesem Fall wird der Standardabschnitt aus der vom System ausgewählten Konfigurationsdatei entsprechend der Client Konfigurations Hierarchie abgerufen. In der Regel ist dies die Datei Machine. config, es sei denn, Sie verfügen über eine zugeordnete Konfiguration. Informationen zum Mapping von Konfigurationsdateien finden Sie in den folgenden Methoden für die Zuordnung.  
  
> [!NOTE]
>  Bei der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode handelt es sich um eine Lauf Zeit Methode, die für den Abschnitt einer Konfigurationsdatei auf der Hierarchieebene ausgeführt wird, in der die Anwendung ausgeführt wird. Verwenden Sie für einen nicht-Lauf Zeit Vorgang stattdessen <xref:System.Configuration.Configuration.GetSection%2A>. Diese Methode wird für den angegebenen Abschnitt einer Konfigurationsdatei verwendet, die Sie mithilfe einer der überladenen Methoden zum Öffnen einer Konfigurationsdatei (<xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>) erhalten.  
  
   
  
## Examples  
 In den Beispielen in diesem Abschnitt wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode auf Konfigurationsinformationen zugreifen.  
  
 Das folgende Beispiel zeigt einen Abschnitt, auf den entweder von einer Webanwendung oder einer Konsolenanwendung aus zugegriffen werden kann.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>-Methode verwendet wird, um ein <xref:System.Configuration.ConfigurationSection>-Objekt aus einer Konfigurationsdatei zu erhalten.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides"><para>Der Rückgabewert muss vor der Verwendung in den erwarteten Konfigurationstyp umgewandelt werden. Um mögliche Umwandlungs Ausnahmen zu vermeiden, sollten Sie einen bedingten Umwandlungs Vorgang wie den <see langword="as" /> C# Operator in oder die-Funktion in Visual Basic verwenden.</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String, path As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetSection : string * string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection (sectionName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <param name="path">Der virtuelle Konfigurationsdateipfad.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der Webanwendung am angegebenen Speicherort ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, wenn der Abschnitt nicht vorhanden ist. Beachten Sie, dass bei der Verwendung von <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> als Laufzeitvorgang Sicherheitseinschränkungen bestehen. Daher ist es u. U. nicht möglich, zur Laufzeit auf einen Abschnitt zuzugreifen, um diesen zu ändern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> innerhalb einer Webanwendung aufgerufen wird, ruft er den Abschnitt aus der Konfigurationsdatei ab, die durch den angegebenen Pfad in der Konfigurations Hierarchie definiert ist.  
  
> [!CAUTION]
>  Wenn Ihre Anwendung ein anderes Protokoll als HTTP verwendet, ist die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung, die sowohl einen Abschnittsnamen als auch einen Pfad in der Parameterliste annimmt. Sie müssen den Pfad der Konfigurationsdatei angeben, da das System keine Annahmen über die Ebene der Konfigurations Hierarchie treffen kann. Wenn Sie die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> Überladung verwenden, die nur einen Abschnittsnamen annimmt, versucht das System immer, die Konfigurationseinstellungen auf Anwendungsebene zurückzugeben. Beachten Sie jedoch, dass die Überladung, die einen Pfad annimmt, auch die Konfigurationseinstellungen auf Anwendungsebene für die aktuell laufende Anwendung zurückgibt, wenn der angegebene Pfad außerhalb der aktuellen Anwendung liegt.  
  
 Diese Methode kann nicht innerhalb einer Client Anwendung aufgerufen werden.  
  
 Wenn Sie den Konfigurations Abschnitt aus der Konfigurationsdatei auf der aktuellen Ebene des Webanwendungs Verzeichnisses abrufen möchten, verwenden Sie die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode.  
  
> [!NOTE]
>  Bei der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode handelt es sich um eine Lauf Zeit Methode, die im Abschnitt einer Konfigurationsdatei auf der Hierarchieebene ausgeführt wird, in der die Anwendung ausgeführt wird. Verwenden Sie für einen nicht-Lauf Zeit Vorgang stattdessen <xref:System.Configuration.Configuration.GetSection%2A>. Diese Methode wird für den angegebenen Abschnitt einer Konfigurationsdatei verwendet, die Sie mithilfe einer der Methoden der `open`-Konfigurationsdatei abrufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>-Methode verwendet wird, um ein <xref:System.Configuration.ConfigurationSection>-Objekt aus einer angegebenen Konfigurationsdatei zu erhalten.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#5)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode wird außerhalb einer Webanwendung aufgerufen.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides"><para>Der Rückgabewert muss vor der Verwendung in den erwarteten Konfigurationstyp umgewandelt werden. Um mögliche Umwandlungs Ausnahmen zu vermeiden, sollten Sie einen bedingten Umwandlungs Vorgang wie den <see langword="as" /> C# Operator in oder die-Funktion in Visual Basic verwenden.</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationSection">
      <MemberSignature Language="C#" Value="public static object GetWebApplicationSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWebApplicationSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWebApplicationSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWebApplicationSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetWebApplicationSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">Der Konfigurationsabschnittsname.</param>
        <summary>Ruft den angegebenen Konfigurationsabschnitt aus der Konfigurationsdatei der aktuellen Webanwendung ab.</summary>
        <returns>Das angegebene Konfigurationsabschnittsobjekt oder <see langword="null" />, falls der Abschnitt nicht vorhanden ist, oder ein internes Objekt, falls der Zugriff auf den Abschnitt zur Laufzeit nicht möglich ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> innerhalb einer Webanwendung aufgerufen wird, ruft er den Abschnitt aus der Konfigurationsdatei ab, die vom System entsprechend der Webanwendungs-Konfigurations Hierarchie ausgewählt wurde.  
  
 Sie können <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> aus einer Client Anwendung heraus abrufen. In diesem Fall wird der Standardabschnitt aus der vom System ausgewählten Konfigurationsdatei entsprechend der Client Konfigurations Hierarchie abgerufen. In der Regel ist dies die Datei Machine. config, es sei denn, Sie verfügen über eine zugeordnete Konfiguration. Informationen zum Mapping von Konfigurationsdateien finden Sie in den folgenden Methoden für die Zuordnung.  
  
> [!NOTE]
>  Bei der <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>-Methode handelt es sich um einen Lauf Zeit Vorgang, der für den Abschnitt der Anwendungs Konfigurationsdatei auf der aktuellen Ebene ausgeführt wird. Die <xref:System.Configuration.Configuration.GetSection%2A>-Methode ist jedoch kein Lauf Zeit Vorgang, sondern für den angegebenen Abschnitt, der über eine der Methoden zum Öffnen der Konfigurationsdateien abgerufen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
> [!NOTE]
>  In diesem Beispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>-Methode verwendet wird, um ein <xref:System.Configuration.ConfigurationSection> Objekt aus der Standard Konfigurationsdatei zu erhalten.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#6)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <block subset="none" type="overrides"><para>Der Rückgabewert muss vor der Verwendung in den erwarteten Konfigurationstyp umgewandelt werden. Um mögliche Umwandlungs Ausnahmen zu vermeiden, sollten Sie einen bedingten Umwandlungs Vorgang wie den <see langword="as" /> C# Operator in oder die-Funktion in Visual Basic verwenden.</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei auf dem aktuell verwendeten Computer als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>-Methode öffnet die Computer Konfigurationsdatei auf dem Computer, auf dem die Anwendung ausgeführt wird. Diese Datei befindet sich im Standardbuildverzeichnis%windir%\Microsoft.NET\Framework\version\CONFIG.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#9)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration locationSubPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Computerkonfiguration gilt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei auf dem aktuell verwendeten Computer als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird die Computer Konfigurationsdatei geöffnet, die auf das vom `locationSubPath`-Parameter angegebene Verzeichnis anwendbar ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#10)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode öffnet die Computer Konfigurationsdatei, die sich in dem Verzeichnis befindet, das durch den `locationSubPath`-Parameter angegeben wird, und auf dem Computer, der durch den `server`-Parameter angegeben wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#11)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <param name="userToken">Ein zu verwendendes Kontotoken.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um mithilfe des Identitäts Wechsels auf eine Konfigurationsdatei zuzugreifen.  
  
> [!NOTE]
>  Das Konto Token wird in der Regel von einer Instanz der <xref:System.Security.Principal.WindowsIdentity>-Klasse oder durch einen nicht verwalteten Code aufgerufen, z. b. durch einen aufgerufenen Windows-API-`LogonUser`. Weitere Informationen zu Aufrufen von nicht verwaltetem Code finden Sie unter verwenden [nicht verwalteter DLL-Funktionen](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#12)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Für den <paramref name="server" />-Parameter oder den <paramref name="userToken" />-Parameter wurden keine gültigen Werte angegeben.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="https://msdn.microsoft.com/library/eca7606e-ebfb-4f47-b8d9-289903fdc045">Verwenden nicht verwalteter DLL-Funktionen</related>
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">Der Anwendungspfad, für den die Konfiguration gilt.</param>
        <param name="server">Der vollqualifizierte Name des Servers, dessen Konfiguration zurückgegeben werden soll.</param>
        <param name="userName">Der vollständige Benutzername (Domäne\Benutzer) zum Öffnen der Datei.</param>
        <param name="password">Das Kennwort für den Benutzernamen.</param>
        <summary>Öffnet die angegebene Computerkonfigurationsdatei auf dem angegebenen Server als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um mithilfe des Identitäts Wechsels auf eine Konfigurationsdatei zuzugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#13)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter waren ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Standardcomputerkonfigurationsdatei zu verwendende <see cref="T:System.Configuration.ConfigurationFileMap" />-Objekt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration (fileMap, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle einer Standardcomputerkonfigurationsdatei zu verwendende <see cref="T:System.Configuration.ConfigurationFileMap" />-Objekt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die Computerkonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen Dateispeicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden den Zuordnungs Mechanismus, wenn Sie die virtuelle Verzeichnishierarchie einem physischen Verzeichnis zuordnen müssen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie eine virtuelle Verzeichnishierarchie einer physischen Verzeichnishierarchie zugeordnet wird. Das hier gezeigte Beispiel wird in den überladenen Membern verwendet.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen virtuellen Pfads Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#21)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#21)]  
  
 Im vorangehenden Beispiel wird die folgende benutzerdefinierte Methode verwendet, um ein <xref:System.Configuration.ConfigurationFileMap>-Objekt zu generieren.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 In <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> finden Sie ein Beispiel, das veranschaulicht, wie eine virtuelle Verzeichnishierarchie einer physischen Verzeichnishierarchie zugeordnet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Zuordnung einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung, des angegebenen virtuellen Pfads und des angegebenen Websitenamens Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#22)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#22)]  
  
 In <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> finden Sie ein Beispiel, das veranschaulicht, wie eine virtuelle Verzeichnishierarchie einer physischen Verzeichnishierarchie zugeordnet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">Das anstelle der Zuordnung einer Standard-Webanwendungskonfigurationsdatei zu verwendende <see cref="T:System.Web.Configuration.WebConfigurationFileMap" />-Objekt.</param>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die angegebene Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe der angegebenen Dateizuordnung und des angegebenen virtuellen Pfads, des Websitenamens und des Speicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A>-Methode gezeigt.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#23)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#23)]  
  
 In <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> finden Sie ein Beispiel, das veranschaulicht, wie eine virtuelle Verzeichnishierarchie einer physischen Verzeichnishierarchie zugeordnet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt.</summary>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei. Wenn <see langword="null" /> festgelegt ist, wird die Stammdatei Web.config geöffnet.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#14)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads und des Websitenamens Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#15)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens und des Speicherorts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das <xref:System.Configuration.Configuration> Objekt für eine Ressource abzurufen, muss der Code über Leseberechtigungen für alle Konfigurationsdateien verfügen, von denen er Einstellungen erbt. Um eine Konfigurationsdatei zu aktualisieren, muss der Code zusätzlich über Schreibberechtigungen für die Konfigurationsdatei und das Verzeichnis verfügen, in dem Sie vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#16)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts und des Servers Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen des <xref:System.Configuration.Configuration> Objekts für eine Remote Ressource muss Ihr Code über Administratorrechte auf dem Remote Computer verfügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#17)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Serverparameter war ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <param name="userToken">Ein zu verwendendes Kontotoken.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts, des Servers und des Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um mithilfe des Identitäts Wechsels auf eine Konfigurationsdatei zuzugreifen.  
  
> [!NOTE]
>  Das Konto Token wird in der Regel von einer Instanz der <xref:System.Security.Principal.WindowsIdentity>-Klasse oder durch einen nicht verwalteten Code aufgerufen, z. b. durch einen aufgerufenen Windows-API-`LogonUser`. Weitere Informationen zu Aufrufen von nicht verwaltetem Code finden Sie unter verwenden [nicht verwalteter DLL-Funktionen](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
 Zum Abrufen des <xref:System.Configuration.Configuration> Objekts für eine Remote Ressource muss Ihr Code über Administratorrechte auf dem Remote Computer verfügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode verwendet wird, um auf Konfigurationsinformationen zuzugreifen.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#19)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userToken" />-Parameter war ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="https://msdn.microsoft.com/library/eca7606e-ebfb-4f47-b8d9-289903fdc045">Verwenden nicht verwalteter DLL-Funktionen</related>
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der virtuelle Pfad zur Konfigurationsdatei.</param>
        <param name="site">Der Name der Anwendungswebsite, wie in der Konfiguration von Internetinformationsdienste (IIS) angezeigt.</param>
        <param name="locationSubPath">Die bestimmte Ressource, für die die Konfiguration gilt.</param>
        <param name="server">Der Netzwerkname des Servers, auf dem sich die Webanwendung befindet.</param>
        <param name="userName">Der vollständige Benutzername (Domäne\Benutzer) zum Öffnen der Datei.</param>
        <param name="password">Das Kennwort für den Benutzernamen.</param>
        <summary>Öffnet die Webanwendungskonfigurationsdatei als <see cref="T:System.Configuration.Configuration" />-Objekt, um mithilfe des angegebenen virtuellen Pfads, des Websitenamens, des Speicherorts, des Servers und des Sicherheitskontexts Lese- oder Schreibvorgänge zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.Configuration.Configuration" /> -Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um mithilfe des Identitäts Wechsels auf eine Konfigurationsdatei zuzugreifen.  
  
 Zum Abrufen des <xref:System.Configuration.Configuration> Objekts für eine Remote Ressource muss Ihr Code über Administratorrechte auf dem Remote Computer verfügen.  
  
 Möglicherweise müssen Sie das [ASP.NET IIS-Registrierungs Tool (Aspnet_regiis. exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/k6h9cz8h(v=vs.90)) mit der Option `-config+` ausführen, um den Zugriff auf die Konfigurationsdateien auf dem Remote Computer zu aktivieren.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie mit der <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>-Methode auf Konfigurationsinformationen zugreifen können.  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#18)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="server" />-Parameter oder der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter waren ungültig.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Es konnte keine gültige Konfigurationsdatei geladen werden.</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/k6h9cz8h(v=vs.90)">ASP.NET IIS-Registrierungs Tool (Aspnet_regiis. exe)</related>
      </Docs>
    </Member>
  </Members>
</Type>
