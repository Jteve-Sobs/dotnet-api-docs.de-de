<Type Name="HttpModuleAction" FullName="System.Web.Configuration.HttpModuleAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53ebd26f44b6a3146276f4211f884a1c59f495b0" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72850394" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpModuleAction : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpModuleAction extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpModuleAction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpModuleAction&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpModuleAction sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpModuleAction = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguriert die <see cref="T:System.Web.Configuration.HttpModulesSection" />-Module. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.HttpModuleAction>-Klasse bietet eine Möglichkeit, Programm gesteuert auf das `add` Element des Abschnitts `httpModules` einer Konfigurationsdatei zuzugreifen und diese zu ändern.  
  
 Der <xref:System.Web.Configuration.HttpModuleAction> Typ ist Teil einer Gruppe, die die Typen <xref:System.Web.Configuration.HttpModuleActionCollection>, Collection und <xref:System.Web.Configuration.HttpModulesSection> enthält.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Werte deklarativ für mehrere Attribute des `add`-Elements des `httpModules` Abschnitts angegeben werden, auf die auch als Member der <xref:System.Web.Configuration.HttpModuleAction>-Klasse zugegriffen werden kann.  
  
 Im folgenden Beispiel für eine Konfigurationsdatei wird gezeigt, wie Werte deklarativ für den Abschnitt `httpModules` angegeben werden.  
  
 Weitere Informationen finden Sie in den [Vorgehensweise: Erstellen und konfigurieren Sie ein HTTP-Modul](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/tfd6k449(v=vs.85)), um zu erfahren, wie ein HTTP-Modul erstellt und konfiguriert wird.  
  
```  
<httpModules>  
    <add name="TimerModule"   
      type="Samples.Aspnet.Configuration.RequestTimeInterval, RequestTimeInterval Version=1.0.1557.23158, Culture=neutral,  
      PublicKeyToken=7bfb33146a87b52e, processorArchitecture=MSIL"/>  
</httpModules>  
```  
  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.HttpModuleAction>-Klasse veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#1)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.HttpModuleActionCollection" />
    <altmember cref="T:System.Web.Configuration.HttpModulesSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpModuleAction (string name, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleAction.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpModuleAction(System::String ^ name, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.HttpModuleAction : string * string -&gt; System.Web.Configuration.HttpModuleAction" Usage="new System.Web.Configuration.HttpModuleAction (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Modulname.</param>
        <param name="type">Eine durch Trennzeichen getrennte Liste, die den Modultypnamen und die Assemblyinformationen enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.HttpModuleAction" />-Klasse unter Verwendung der übergebenen Parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Modulname ist ein Alias, den Sie verwenden können, um Ereignishandler den Modul Ereignissen zuzuordnen. ASP.NET sucht zunächst im privaten \bin-Verzeichnis der Anwendung und dann im globalen Assemblycache (GAC) nach der Assembly-DLL.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie ein <xref:System.Web.Configuration.HttpModuleAction>-Objekt erstellt wird.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#3)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cf5eacd0-d3ec-4879-b6da-5fd5e4372202">Globaler Assemblycache</related>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.HttpModuleAction.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.HttpModuleAction.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Modulnamen ab oder legt diesen fest.</summary>
        <value>Der Modulname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Modulname wird verwendet, um dieses <xref:System.Web.Configuration.HttpModuleAction> Objekt zu identifizieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.HttpModuleAction.Name%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#4)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpModuleAction.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.Configuration.HttpModuleAction.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Modultyp ab oder legt diesen fest.</summary>
        <value>Eine durch Trennzeichen getrennte Liste, die den Modultypnamen und die Assemblyinformationen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die vom <xref:System.Web.Configuration.HttpModuleAction.Type%2A>definierte Assembly zu finden, sucht ASP.net zuerst im privaten Verzeichnis der Anwendung und dann im Systemassemblycache nach der Assembly-DLL.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zugriff auf die <xref:System.Web.Configuration.HttpModuleAction.Type%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#5)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
