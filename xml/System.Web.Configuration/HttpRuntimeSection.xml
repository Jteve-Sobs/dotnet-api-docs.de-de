<Type Name="HttpRuntimeSection" FullName="System.Web.Configuration.HttpRuntimeSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc2af80fdfdbd2c42ebbc699e946182c7aefb730" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86846619" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRuntimeSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpRuntimeSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpRuntimeSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRuntimeSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRuntimeSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type HttpRuntimeSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguriert die ASP.NET-HTTP-Laufzeit. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection>Ermöglicht es Ihnen, diese Parameter zu behandeln, die sich auf das Verhalten der ASP.NET-Laufzeit auswirken.  
  
 Er verweist auf den Knoten in der Konfigurationsdatei, der durch das-Element angegeben wird, `<httpRuntime>` und kann auf jeder Ebene in der Konfigurations Hierarchie verwendet werden.  
  
 Der- <xref:System.Web.Configuration.HttpRuntimeSection> Abschnitt enthält Anweisungen, die Folgendes verwalten:  
  
-   Ausführungs Timeouts anfordern.  
  
-   Direktiven für die Thread Planung auf Anwendungsebene.  
  
-   Direktiven, die Anwendungs Warteschlangen-Limits steuern.  
  
-   Anforderungs Länge.  
  
 Wenn Sie mehr als eine Anwendung in einem einzelnen Prozess ausführen, sollten Sie diesen Abschnitt sperren, damit Anwendungen ihre relative Priorität nicht aufeinander erhöhen können.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRuntimeSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRuntimeSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.HttpRuntimeSection" />-Klasse mit Standardeinstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein-Objekt erstellt wird <xref:System.Web.Configuration.HttpRuntimeSection> .  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#2)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowDynamicModuleRegistration">
      <MemberSignature Language="C#" Value="public bool AllowDynamicModuleRegistration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDynamicModuleRegistration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDynamicModuleRegistration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDynamicModuleRegistration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDynamicModuleRegistration : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("allowDynamicModuleRegistration", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("allowDynamicModuleRegistration", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" />-Methodenaufrufe zulässig sind, oder legt diesen fest. Der Standardwert ist <see langword="true" />.</summary>
        <value><see langword="true" />, wenn <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" />-Methodenaufrufe zulässig sind; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApartmentThreading">
      <MemberSignature Language="C#" Value="public bool ApartmentThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApartmentThreading" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApartmentThreading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApartmentThreading : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("apartmentThreading", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("apartmentThreading", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Apartmentthreading für Anwendungen aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Apartmentthreading für Anwendungen aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert ist `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRequestQueueLimit">
      <MemberSignature Language="C#" Value="public int AppRequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppRequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppRequestQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppRequestQueueLimit : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("appRequestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("appRequestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die maximale Anzahl von Anforderungen angibt, die von ASP.NET für die Anwendung in der Warteschlange gespeichert werden können, oder legt diese fest.</summary>
        <value>Die maximale Anzahl von Anforderungen, die in der Warteschlange gespeichert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET fügt Anforderungen ein, wenn nicht genügend freie Threads vorhanden sind, um Sie zu verarbeiten.  
  
> [!NOTE]
>  Wenn die Anzahl der in der Warteschlange befindlichen Anforderungen den von dieser Einstellung festgelegten Grenzwert überschreitet, werden eingehende Anforderungen mit dem Fehler "503-Server zu ausgelastet" zurückgewiesen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#16)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("asyncPreloadMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("asyncPreloadMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Modus der Anforderungsentität ab, die asynchron vorab geladen wird, oder legt diesen fest.</summary>
        <value>Der Modus der Anforderungsentität.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft muss festgelegt werden, bevor <xref:System.Web.RequestNotification.ExecuteRequestHandler> in der ASP.NET-Pipeline festgelegt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRegexMatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultRegexMatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultRegexMatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRegexMatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultRegexMatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRegexMatchTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("defaultRegexMatchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("defaultRegexMatchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, wie lange ein regulärer Ausdruck zulässig ist, um eine Übereinstimmung zu erzielen, oder legt dies fest.</summary>
        <value>Die Zeit, die für den Vergleich mit regulären Ausdrücken zulässig ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayNotificationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DelayNotificationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DelayNotificationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayNotificationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DelayNotificationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DelayNotificationTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("delayNotificationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("delayNotificationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Verzögerung bei Änderungsbenachrichtigungen ab oder legt diese fest.</summary>
        <value>Die Zeit in Sekunden, die die Verzögerung bei Änderungsbenachrichtigungen angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen der-Eigenschaft können Sie das Problem beheben, das durch einige Antivirussoftware verursacht wird, wenn Informationen zurück in die gescannten Dateien geschrieben werden <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A> .  
  
> [!NOTE]
>  Das Problem tritt auf, weil Dateiänderungen, die durch eine antivirenüberprüfung verursacht wurden, nicht vom Benutzer unterschieden werden können. Das Endergebnis ist der Neustart der Anwendung, deren Dateien gescannt werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#11)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Anwendungsdomäne aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Anwendungsdomäne aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Einstellung wirkt sich auf die Anwendungsdomäne oder Domänen auf der aktuellen Knotenebene und darunter aus.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.Enable%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#14)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#14)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/app-domains/use">Verwenden von Anwendungsdomänen</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeaderChecking">
      <MemberSignature Language="C#" Value="public bool EnableHeaderChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeaderChecking" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeaderChecking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeaderChecking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeaderChecking : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableHeaderChecking", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableHeaderChecking", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Headerüberprüfung aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Headerüberprüfung aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zweck dieser Eigenschaft besteht darin, die Codierung der Wagen Rücklauf-und Zeilenumbruch Zeichen (und) zu aktivieren, die `\r` `\n` in Antwort Headern gefunden werden.  
  
 In ausgehenden Antwort Headern werden die Zeichen, die durch die Codes 0x1F und niedriger dargestellt werden, codiert und auch das Zeichen 0x7F (Delete-Zeichen). Die einzige Ausnahme besteht darin, dass das Zeichen 0x09 (das Tabstopp Zeichen) unverändert ist.  
  
 Diese Codierung kann dabei helfen, Injection-Angriffe zu vermeiden, die eine Anwendung ausnutzen, die nicht vertrauenswürdige Daten in der Kopfzeile wieder gibt.  
  
> [!NOTE]
>  Diese Eigenschaft gilt nicht für die Statuszeile selbst (Statuscode und Statusbeschreibung), sollte jedoch auf andere Header angewendet werden. Obwohl [ &lt; HttpRuntime &gt; ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) auf jeder Ebene festgelegt werden kann, gilt diese Eigenschaft nur für die Computer-und Anwendungsebene.  
  
 Wenn diese Eigenschaft ist ( `true` Standardeinstellung), werden die `\r` `\n` in einem Antwortheader gefundenen-oder-Zeichen in `%0d` und codiert `%0a` . Dadurch werden Header einschleusungs Angriffe durch den eingefügten Material Teil derselben Kopfzeile besiegt. Dadurch wird die Antwort möglicherweise nicht mehr geöffnet, aber es sollten keine Angriffsvektoren für den Client geöffnet werden. Das wiederholen nicht vertrauenswürdiger Daten ist in keiner Situation eine gute Idee.  
  
> [!IMPORTANT]
>  HTTP-Header Fortsetzungen basieren auf Headern, die mehrere Zeilen umfassen, und erfordern neue Zeilen. Wenn Sie Header Fortsetzungen verwenden müssen, müssen Sie die- <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A> Eigenschaft auf festlegen `false` . Da bei der Betrachtung von Headern die Leistung beeinträchtigt wird, kann das Deaktivieren dieses Features die Leistung der Anwendung verbessern, wenn Sie sicher sind, dass Sie bereits die richtigen Überprüfungen durchführen. Bevor Sie dieses Feature deaktivieren, stellen Sie sicher, dass Sie in diesem Bereich bereits die richtigen Vorsichtsmaßnahmen treffen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#20)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/network-programming/http">HTTP</related>
      </Docs>
    </Member>
    <Member MemberName="EnableKernelOutputCache">
      <MemberSignature Language="C#" Value="public bool EnableKernelOutputCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableKernelOutputCache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableKernelOutputCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableKernelOutputCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableKernelOutputCache : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableKernelOutputCache", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableKernelOutputCache", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Ausgabezwischenspeicherung aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ausgabezwischenspeicherung aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit eine Antwort zwischengespeichert werden kann, müssen die folgenden Kriterien erfüllt sein:  
  
-   Zwischenspeichern muss explizit durch eine Page-Direktive oder durch die Caching-API aktiviert werden.  
  
-   Das Zwischenspeichern muss über eine Ablauf Richtlinie verfügen, damit der Kernel weiß, wann er verworfen werden soll.  
  
-   Caching darf keine Variablen Header oder-Parameter aufweisen.  
  
-   Für die Anforderung darf keine Authentifizierung erforderlich sein.  
  
> [!NOTE]
>  Diese Eigenschaft ist nur relevant, wenn Internetinformationsdienste (IIS), Version 6,0 oder höher, installiert ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#3)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xsbfdd8c(v=vs.100)">ASP.NET Caching-Features</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668225(v=vs.100)">Überblick über Leistung</related>
      </Docs>
    </Member>
    <Member MemberName="EnableVersionHeader">
      <MemberSignature Language="C#" Value="public bool EnableVersionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVersionHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableVersionHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableVersionHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVersionHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableVersionHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableVersionHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ASP.NET einen Versionsheader ausgeben soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ausgabe des Versionsheaders aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Attribut wird von Visual Studio verwendet, um zu bestimmen, welche Version von ASP.NET verwendet wird. Es ist für Produktionsstandorte nicht erforderlich und kann deaktiviert werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#17)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#17)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/assembly/versioning">Versionsverwaltung für Assemblys</related>
      </Docs>
    </Member>
    <Member MemberName="EncoderType">
      <MemberSignature Language="C#" Value="public string EncoderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncoderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncoderType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("encoderType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("encoderType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines benutzerdefinierten Typs ab, mit dem HTML- und URL-Codierung bearbeitet werden kann, oder legt ihn fest.</summary>
        <value>Der Name eines Typs, mit dem die HTML- und URL-Codierung behandelt werden können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet den <xref:System.Web.Util.HttpEncoder> -Typ als Standard Handler für HTML-und URL-Codierungs Tasks.  
  
 Um das Codierungs Verhalten anzupassen, können Sie eine Klasse erstellen, die vom-Typ erbt <xref:System.Web.Util.HttpEncoder> . In der Konfigurationsdatei für eine Anwendung legen Sie das- <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> Attribut des- `httpRuntime` Elements auf den voll qualifizierten Zeichen folgen Namen des benutzerdefinierten Typs fest. Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ExecutionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ExecutionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ExecutionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("executionTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("executionTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zulässige Ausführungszeit für die Anforderung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />-Wert, der die zulässige Ausführungszeit für die Anforderung angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> Eigenschaft gibt die maximale Anzahl von Sekunden an, die eine Anforderung ausgeführt werden darf, bevor Sie automatisch von ASP.net heruntergefahren wird. Der Standardwert ist 110 Sekunden. Dieses Timeout gilt nur, wenn das debug-Attribut im- `<compilation>` Element auf festgelegt ist `false` .  
  
 Wenn das Timeout abläuft, wird eine Ausnahme ausgelöst. Sie können die zugehörigen Informationen im Anwendungsordner des Ereignis Protokolls aufzeichnen. Hierzu aktivieren Sie die Anwendungs Integritäts Überwachung im- `<healthMonitoring>` Konfigurationselement.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#10)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die Anforderungsausführungszeit hat das vom Ausführungstimeout festgelegte Zeitlimit überschritten.</exception>
      </Docs>
    </Member>
    <Member MemberName="FcnMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FcnMode FcnMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FcnMode FcnMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FcnMode As FcnMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FcnMode FcnMode { System::Web::Configuration::FcnMode get(); void set(System::Web::Configuration::FcnMode value); };" />
      <MemberSignature Language="F#" Value="member this.FcnMode : System.Web.Configuration.FcnMode with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("fcnMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("fcnMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FcnMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Enumerationswert ab oder legt einen Enumerationswert fest, der den Benachrichtigungsmodus für eine Dateiänderung angibt.</summary>
        <value>Ein <see cref="T:System.Web.Configuration.FcnMode" />-Enumerationswert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxQueryStringLength">
      <MemberSignature Language="C#" Value="public int MaxQueryStringLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxQueryStringLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxQueryStringLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxQueryStringLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxQueryStringLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxQueryStringLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxQueryStringLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximal mögliche Länge einer Abfragezeichenfolge in einer HTTP-Anforderung als Anzahl der Zeichen ab oder legt diese fest.</summary>
        <value>Die maximale Länge der Abfragezeichenfolge als Anzahl der Zeichen. Der Standard ist 2048.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength%2A> Eigenschaft kann eine beliebige Ganzzahl sein, 0 (null) oder größer. Wenn die Länge einer Abfrage Zeichenfolge die Größenbeschränkung überschreitet, gibt ASP.NET den `HTTP 400` Statuscode (ungültige Anforderung) zurück.  
  
> [!NOTE]
>  Äußerst kleine Werte können eine Website unbrauchbar machen.  
  
 Sie können diesen Wert in einer Konfigurationsdatei festlegen, indem Sie das- `maxQueryStringLength` Attribut des- `httpRuntime` Elements festlegen. Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
> [!NOTE]
>  Es gibt auch eine IIS-Einstellung, die die Länge der Abfrage Zeichenfolge steuert. Siehe das- `maxQueryString` Attribut in [Anforderungs \<requestLimits> Limits ](http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestLength">
      <MemberSignature Language="C#" Value="public int MaxRequestLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRequestLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRequestLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxRequestLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxRequestLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anforderungsgröße ab oder legt diese fest.</summary>
        <value>Die maximale Anforderungsgröße in Kilobyte. Die Standardgröße beträgt 4096 KB (4 MB).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> Eigenschaft gibt den Grenzwert für den Puffer Schwellenwert des Eingabestreams an. Diese Beschränkung kann beispielsweise verwendet werden, um Denial-of-Service-Angriffe zu verhindern, die von Benutzern verursacht werden, die große Dateien auf dem Server bereitstellen.  
  
 Der dieser Eigenschaft zugewiesene Wert sollte größer oder gleich dem Wert sein, der der Eigenschaft zugewiesen ist <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie der aktuelle <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> Eigenschafts Wert abgerufen wird.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#19)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Der ausgewählte Wert ist kleiner als <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxUrlLength">
      <MemberSignature Language="C#" Value="public int MaxUrlLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUrlLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUrlLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxUrlLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxUrlLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxUrlLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxUrlLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximal mögliche Länge einer URL in einer HTTP-Anforderung als Anzahl der Zeichen ab oder legt diese fest.</summary>
        <value>Die Länge der URL als Anzahl der Zeichen. Der Standard ist 260.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> Eigenschaft kann eine beliebige Ganzzahl sein, 0 (null) oder größer.  
  
> [!NOTE]
>  Äußerst kleine Werte können eine Website unbrauchbar machen.  
  
 Wenn die Länge der Anforderungs-URL (die den Wert der- <xref:System.Web.HttpRequest.Path%2A> Eigenschaft ist) das konfigurierte Größenlimit überschreitet, gibt ASP.NET den Statuscode HTTP 400 (ungültige Anforderung) zurück.  
  
 Sie können diesen Wert in einer Konfigurationsdatei festlegen, indem Sie das- <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> Attribut des- `httpRuntime` Elements festlegen. Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWaitChangeNotification">
      <MemberSignature Language="C#" Value="public int MaxWaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxWaitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxWaitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne zwischen der ersten Änderungsbenachrichtigung und dem Zeitpunkt des Neustarts der Anwendungsdomäne ab oder legt diese fest.</summary>
        <value>Die maximale Zeitspanne in Sekunden zwischen der ersten Änderungsbenachrichtigung und dem Zeitpunkt des Neustarts der Anwendungsdomäne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein empfohlener Wert für die- <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A> Eigenschaft würde die Zeitspanne überschreiten, die eine Kopie während des Bereitstellungs Prozesses vervollständigen soll.  
  
> [!NOTE]
>  Der Inhalt wird möglicherweise zwischengespeichert angezeigt, wenn Sie ihn unmittelbar nach einem Kopier-und Bereitstellungs Prozess anzeigen. Dies ist das typische Verhalten. Die Änderungen treten in Kraft, wenn die von Ihnen angegebene Wartezeit abgelaufen ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#4)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/app-domains/application-domains">Übersicht über Anwendungs Domänen</related>
      </Docs>
    </Member>
    <Member MemberName="MinFreeThreads">
      <MemberSignature Language="C#" Value="public int MinFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("minFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("minFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Mindestanzahl von Threads ab, die verfügbar sein müssen, bevor eine Ressourcenanforderung in diesem Konfigurationsbereich bedient werden kann, oder legt diese fest.</summary>
        <value>Die Mindestanzahl verfügbarer Threads im CLR (Common Language Runtime)-Threadpool, bevor eine Anforderung in diesem Konfigurationsbereich bedient wird. Der Standardwert ist <c>8</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> Eigenschaft definiert die Mindestanzahl freier Threads, um eine Anforderung auszuführen. Wenn eine ausreichende Anzahl von Threads nicht verfügbar ist, bleibt die Anforderung in die Warteschlange eingereiht, und regelmäßige Überprüfungen der Thread Verfügbarkeit werden fortgesetzt, bis die erforderliche Menge an Threads vorhanden ist. Der Standardwert ist `8`.  
  
> [!NOTE]
>  ASP.NET hält diese Anzahl von Threads frei für Anforderungen, die zusätzliche Threads zum Abschließen der Verarbeitung erfordern.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#8)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/threads-and-threading">Threads und Threading</related>
        <related type="Article" href="/dotnet/standard/threading/using-threads-and-threading">Verwenden von Threads und Threading</related>
      </Docs>
    </Member>
    <Member MemberName="MinLocalRequestFreeThreads">
      <MemberSignature Language="C#" Value="public int MinLocalRequestFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLocalRequestFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLocalRequestFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLocalRequestFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLocalRequestFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("minLocalRequestFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("minLocalRequestFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Mindestanzahl freier Threads ab, die erforderlich sind, um eine lokale Anforderung zu bedienen.</summary>
        <value>Die Mindestanzahl freier, lokalen Anforderungen zugewiesener Threads. Der Standardwert ist 4.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A> Eigenschaft definiert die Anzahl freier Threads, die ASP.net verfügbar hält, um die Ausführung neuer lokaler Anforderungen zuzulassen. Die Absicht besteht darin, einen möglichen Deadlock mit rekursiver Neueintragung in den Webserver zu vermeiden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#5)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/threads-and-threading">Threads und Threading</related>
        <related type="Article" href="/dotnet/standard/threading/using-threads-and-threading">Verwenden von Threads und Threading</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelaxedUrlToFileSystemMapping">
      <MemberSignature Language="C#" Value="public bool RelaxedUrlToFileSystemMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property RelaxedUrlToFileSystemMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RelaxedUrlToFileSystemMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RelaxedUrlToFileSystemMapping : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("relaxedUrlToFileSystemMapping", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("relaxedUrlToFileSystemMapping", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die URL in einer HTTP-Anforderung erforderlich ist, damit ein gültiger Windows-Dateipfad vorliegt, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn die URL nicht Windows-Pfadregeln entsprechen muss, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> Eigenschaft bestimmt, wie die URL in einer eingehenden HTTP-Anforderung überprüft wird. Wenn diese Eigenschaft ist `false` , wird die URL mit denselben Regeln überprüft, die bestimmen, ob ein Windows-Dateisystempfad gültig ist.  
  
 Sie können diesen Wert in einer Konfigurationsdatei festlegen, indem Sie das- <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> Attribut des- `httpRuntime` Elements festlegen. Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLengthDiskThreshold">
      <MemberSignature Language="C#" Value="public int RequestLengthDiskThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLengthDiskThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLengthDiskThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLengthDiskThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestLengthDiskThreshold : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("requestLengthDiskThreshold", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("requestLengthDiskThreshold", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schwellenwert für die Eingabestreampufferung ab oder legt diesen fest.</summary>
        <value>Die Anzahl von Bytes, die für den Schwellenwert der Eingabestreampufferung angegeben sind. Der Standardwert ist 80 Kilobytes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> -Eigenschaft gibt den Schwellenwert für die Eingabestreampufferung in Byte an. Der Wert darf den <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> Eigenschafts Wert nicht überschreiten. Nachdem eine Anforderungs Entität diesen Schwellenwert überschreitet, wird Sie transparent auf dem Datenträger gepuffert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#12)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Der ausgewählte Wert ist größer als <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestPathInvalidCharacters">
      <MemberSignature Language="C#" Value="public string RequestPathInvalidCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPathInvalidCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathInvalidCharacters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPathInvalidCharacters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPathInvalidCharacters : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("requestPathInvalidCharacters", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("requestPathInvalidCharacters", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste von Zeichen ab, die in einem Pfad, der Teil einer HTTP-Anforderung ist, als ungültig angegeben werden, oder legt diese fest.</summary>
        <value>Eine durch Trennzeichen getrennte Liste ungültiger Zeichen. Die folgende Liste enthält den Standardsatz ungültiger Zeichen: 
 <c>&lt;,&gt;,*,%,&amp;,:,\\</c></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diesen Wert in einer Konfigurationsdatei festzulegen, können Sie dem-Attribut des-Elements eine durch Trennzeichen getrennte Zeichenfolge zuweisen `requestPathInvalidCharacters` `httpRuntime` . Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationMode">
      <MemberSignature Language="C#" Value="public Version RequestValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RequestValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationMode As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ RequestValidationMode { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationMode : Version with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("requestValidationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("requestValidationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Versionsnummer ab, die angibt, welche ASP.NET-versionsspezifische Validierungsmethode verwendet wird, oder legt diese fest.</summary>
        <value>Ein Wert, der angibt, welche ASP.NET-versionsspezifische Validierungsmethode verwendet wird. Der Standardwert ist <c>4,5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode%2A> Eigenschaft gibt an, welcher ASP.net-Ansatz für die Validierung verwendet wird. Dies kann der Algorithmus sein, der in Versionen von ASP.net vor Version 4 verwendet wird, oder die Version, die in verwendet wird [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] . Die-Eigenschaft kann auf die folgenden Werte festgelegt werden:  
  
-   `4.5 (the default).` In diesem Modus werden Werte verzögert geladen, d. h., Sie werden erst gelesen, wenn Sie angefordert werden.  
  
-   `4.0` Das- <xref:System.Web.HttpRequest> Objekt legt intern ein Flag fest, das angibt, dass die Anforderungs Überprüfung ausgelöst werden soll, wenn auf HTTP-Anforderungs Daten zugegriffen wird. Dadurch wird sichergestellt, dass die Anforderungs Validierung ausgelöst wird, bevor während der Anforderung auf Daten wie Cookies und URLs zugegriffen wird. Die Anforderungs Validierungs Einstellungen des `<pages>` Elements (sofern vorhanden) in der Konfigurationsdatei oder der [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) -Direktive auf einer einzelnen Seite werden ignoriert.  
  
-   `2.0`. Die Anforderungs Validierung ist nur für Seiten aktiviert, nicht für alle HTTP-Anforderungen. Außerdem werden die Anforderungs Validierungs Einstellungen des `<pages>` Elements (sofern vorhanden) in der Konfigurationsdatei oder der [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) -Direktive auf einer einzelnen Seite verwendet, um zu bestimmen, welche Seiten Anforderungen überprüft werden sollen.  

-   `0.0`. Die Anforderungs Validierung ist für die Anwendung deaktiviert. `0.0` wird nur in ASP.NET 4,6 und höher erkannt.
  
 Der Wert, den Sie dieser Eigenschaft zuweisen, wird nicht überprüft, um eine bestimmte Version von ASP.net abzugleichen. 

 In ASP.NET 4,5 und früher werden alle numerischen Werte kleiner als `4.0` (z. b `3.7` `2.9` ., oder `2.0` ) als interpretiert `2.0` . Jede Zahl, die größer als `4.5` ist, wird als interpretiert `4.5` .  

 In ASP.NET 4,6 und höher wird jeder numerische Wert, der größer als  `0.0` und kleiner als `4.0` (z `3.7` `2.9` . b., oder `1.0` ) ist, als interpretiert `2.0` . Jede Zahl, die größer als `4.5` ist, wird als `4.5`
  
 Um diesen Wert in einer Konfigurationsdatei festzulegen, können Sie dem-Attribut des-Elements einen Wert zuweisen `requestValidationMode` `httpRuntime` . Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationType">
      <MemberSignature Language="C#" Value="public string RequestValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestValidationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("requestValidationType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("requestValidationType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines Typs ab, der zur Validierung von HTTP-Anforderungen dient, oder legt ihn fest.</summary>
        <value>Der Name eines Typs, mit dem Validierungsaufgaben bearbeitet werden. Die Standardeinstellung ist der vollqualifizierte Name des <see cref="T:System.Web.Util.RequestValidator" />-Typs, der von ASP.NET zur Validierung verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das ASP.net Request Validation-Verhalten anzupassen, können Sie eine Klasse erstellen, die vom-Typ erbt <xref:System.Web.Util.RequestValidator> . In der Konfigurationsdatei für eine Anwendung legen Sie das- `requestValidationType` Attribut des- `httpRuntime` Elements auf den voll qualifizierten Zeichen folgen Namen des benutzerdefinierten Typs fest. Weitere Informationen finden Sie unter [httpRuntime-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireRootedSaveAsPath">
      <MemberSignature Language="C#" Value="public bool RequireRootedSaveAsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireRootedSaveAsPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireRootedSaveAsPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireRootedSaveAsPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireRootedSaveAsPath : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("requireRootedSaveAsPath", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("requireRootedSaveAsPath", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Dateiname ein vollqualifizierter physikalischer Dateipfad sein muss, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Dateiname ein vollqualifizierter physikalischer Dateipfad sein muss, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A> Eigenschaft gibt an, ob das Dateinamen Argument für `SaveAs` Methoden ein Stammpfad sein muss. Der ASP.NET-Prozess muss über die Berechtigung zum Erstellen von Dateien am angegebenen Speicherort verfügen.  
  
 Weitere Informationen finden Sie in den in der-Klasse definierten Save-Methoden <xref:System.Configuration.Configuration> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#7)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SendCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SendCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendCacheControlHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sendCacheControlHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sendCacheControlHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der <c>cache-control:private</c>-Header als Teil der HTTP-Antwort gesendet wird, oder legt ihn fest.</summary>
        <value><see langword="true" /> , wenn der <c>Cache-Control: Private</c> -Header gesendet werden soll. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpResponse> -Klasse überprüft die <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A?displayProperty=nameWithType> -Eigenschaft und die- <xref:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader%2A?displayProperty=nameWithType> Eigenschaft, um zu bestimmen, ob der- `cache-control:private` Header in der HTTP-Antwort gesendet werden soll. Wenn eine der beiden Eigenschaften auf festgelegt ist `false` , wird der Header nicht gesendet. Wenn der Cache-Control-Header auf festgelegt ist `private` , wird die Antwort vom Client nicht in einem freigegebenen Cache zwischengespeichert.  
  
 Die Unterstützung für die- <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> Eigenschaft in der- <xref:System.Web.Configuration.HttpRuntimeSection> Klasse wird aus Gründen der Kompatibilität mit Legacy Anwendungen bereitgestellt. diese Eigenschaft ist in der .NET Framework Version 2,0 veraltet. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Configuration.OutputCacheSection>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="httpRuntimeSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zulässige Leerlaufzeitspanne einer Anwendung vor deren Beendigung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />-Wert, der die für den Leerlauf der Anwendung zulässige Zeitspanne angibt, bevor sie beendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A> Eigenschaft gibt die Zeitspanne an, bevor eine Anwendung ordnungsgemäß heruntergefahren wird. Der Standardwert ist 90 Sekunden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#6)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public string TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFramework As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFramework { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetFramework : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Übernimmt oder bestimmt das Ziel-.NET Framework.</summary>
        <value>Das Ziel-.NET Framework</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFullyQualifiedRedirectUrl">
      <MemberSignature Language="C#" Value="public bool UseFullyQualifiedRedirectUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFullyQualifiedRedirectUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFullyQualifiedRedirectUrl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseFullyQualifiedRedirectUrl : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("useFullyQualifiedRedirectUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("useFullyQualifiedRedirectUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die clientseitigen Umleitungen vollqualifiziert sind, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn clientseitige Umleitungen vollqualifiziert sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A> -Eigenschaft gibt an, ob Client seitige Umleitungen voll qualifiziert sind (in der Form `http://server/path` ) oder ob stattdessen relative Umleitungen an den Client gesendet werden.  
  
> [!NOTE]
>  Einige Browser haben möglicherweise Probleme beim Laden von Seiten in Sitzungen ohne Cookies, wenn dieser Wert ist `false` .  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#15)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitChangeNotification">
      <MemberSignature Language="C#" Value="public int WaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("waitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("waitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Wartezeit vor der nächsten Änderungsbenachrichtigung ab oder legt diese fest.</summary>
        <value>Die Wartezeit vor der nächsten Änderungsbenachrichtigung in Sekunden, die einen Neustart der Anwendungsdomäne auslöst. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein empfohlener Wert für <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A> würde den Zeitraum überschreiten, in dem eine Kopie während des Bereitstellungs Vorgangs fertiggestellt wird.  
  
> [!NOTE]
>  Der Inhalt wird möglicherweise zwischengespeichert angezeigt, wenn Sie ihn unmittelbar nach einem Kopier-und Bereitstellungs Prozess anzeigen. Dies ist das typische Verhalten. Die Änderungen treten in Kraft, wenn die von Ihnen angegebene Wartezeit abgelaufen ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#18)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/app-domains/application-domains">Übersicht über Anwendungs Domänen</related>
      </Docs>
    </Member>
  </Members>
</Type>
