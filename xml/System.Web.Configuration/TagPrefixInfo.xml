<Type Name="TagPrefixInfo" FullName="System.Web.Configuration.TagPrefixInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4518ae388b5f060230fbb27bdc3e721db9a3245b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TagPrefixInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TagPrefixInfo extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TagPrefixInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TagPrefixInfo&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagPrefixInfo sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Konfigurationselement, das Informationen über Tags enthält.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.TagPrefixInfo> -Klasse ermöglicht den programmgesteuerten Zugriff auf und ändern die Tagpräfix Informationen in einer Konfigurationsdatei gespeichert. Es bietet die gleiche Funktionalität wie ASP.NET `@Register` Richtlinie. Tagpräfixe ordnen Sie einen "Namespace" in ASP.NET auf die Assemblys und Namespaces, die aus Gründen der benutzerdefinierten Steuerelemente und Benutzersteuerelemente ordnungsgemäß ausgeführt werden muss. <xref:System.Web.Configuration.TagPrefixInfo> Objekte werden als Mitglieder gespeichert ein <xref:System.Web.Configuration.TagPrefixCollection> Objekt. Die <xref:System.Web.Configuration.TagPrefixCollection> -Klasse ermöglicht den programmgesteuerten Zugriff auf und Ändern der `controls` -Unterabschnitt des der `pages` Abschnitt einer Konfigurationsdatei.  
  
 <xref:System.Web.Configuration.TagPrefixInfo> Objekte werden hinzugefügt, um die Auflistung mit den `add` Element- und Angabe eines Werts für die `tagPrefix` Attribut zusammen mit Werten für andere relevante Attribute. Die anderen erforderliche Informationen hängt von der Art des Steuerelements, das Sie mit dem angegebenen Tagpräfix verwenden:  
  
-   Wenn sie ein benutzerdefiniertes Steuerelement ist, müssen Sie definieren die <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>, <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A>, und <xref:System.Web.Configuration.TagPrefixInfo.Source%2A> Eigenschaften.  
  
-   Wenn sie ein benutzerdefiniertes Steuerelement ist, müssen Sie definieren die <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>, <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A>, und <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> Eigenschaften. Die <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> Eigenschaft ist nicht erforderlich, wenn das Steuerelement im Anwendungscodeverzeichnis befindet.  
  
 Die gleiche `tagPrefix` Wert kann zum Zuordnen mehrerer Assemblys oder Namespaces verwendet werden.  
  
> [!NOTE]
>  Wenn eine Quelle angegeben wird, muss das Benutzersteuerelement selbst nicht im selben Verzeichnis wie die Seite. Wenn dies der Fall, erhalten Sie einen Laufzeitfehler beim Laden der Seite.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Werte für verschiedene Attribute der deklarativ angeben, die `controls` Abschnitt, die auch als Member zugegriffen werden kann die <xref:System.Web.Configuration.TagPrefixInfo> Klasse.  
  
```  
  
<system.web>  
  <pages>  
    <controls>  
      <!—- Searches all linked assemblies for the namespace -->  
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>  
      <!-- Uses a specified assembly -->  
      <add tagPrefix="MyTags2" namespace="MyNameSpace"   
        assembly="MyAssembly"/>  
      <!-- Uses the specified source for the user control -->  
      <add tagprefix="MyTags3" tagname="MyCtrl" src="MyControl.ascx"/>  
    </controls>  
   </pages>  
</system.web>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.TagPrefixInfo> Klasse Tag Präfix Einstellungen programmgesteuert ändern. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.PagesSection" />
    <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagPrefixInfo (string tagPrefix, string nameSpace, string assembly, string tagName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagPrefix, string nameSpace, string assembly, string tagName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagPrefix As String, nameSpace As String, assembly As String, tagName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagPrefixInfo(System::String ^ tagPrefix, System::String ^ nameSpace, System::String ^ assembly, System::String ^ tagName, System::String ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="nameSpace" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix, das einer Quelldatei oder einem Namespace und einer Assembly zugeordnet wird.</param>
        <param name="nameSpace">Der dem Tagpräfix zugeordnete Namespace.</param>
        <param name="assembly">Die Assembly, in der sich der Namespace befindet.</param>
        <param name="tagName">Der Name des Steuerelements, das auf der Seite verwendet werden soll.</param>
        <param name="source">Der Name der Datei, die das Benutzersteuerelement enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.TagPrefixInfo" />-Klasse unter Verwendung der übergebenen Werte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine Instanz von der <xref:System.Web.Configuration.TagPrefixInfo> -Klasse und initialisiert sie mit den übergebenen Parametern. Die Parameter für die Angabe von Werten richten sich nach der Art des Steuerelements auf die Sie mit dem angegebenen Tagpräfix verweisen. Für dieses Tagpräfix nicht erforderliche Parameter sollte leer bleiben. (Verwenden Sie eine leere Zeichenfolge.)  
  
-   Wenn das Steuerelement ein benutzerdefiniertes Steuerelement ist, müssen Sie angeben, dass die Werte für die `tagPrefix`, `tagName`, und `source` Parameter.  
  
-   Wenn das Steuerelement ein benutzerdefiniertes Steuerelement ist, müssen Sie angeben, dass die Werte für die `tagPrefix` und `nameSpace` Parameter. Wenn das Steuerelement nicht im Anwendungscodeverzeichnis ist, müssen Sie auch angeben der `assembly` Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.TagPrefixInfo.%23ctor%2A> Konstruktor. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#32](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#32)]
 [!code-vb[System.Web.Configuration.PagesSection#32](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("assembly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Assembly ab, die die Steuerelementimplementierung enthält, oder legt diesen fest.</summary>
        <value>Der Name der Assembly (ohne Erweiterung). Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt die Assembly, in der sich das Steuerelement befindet. Es gilt nur für ein benutzerdefiniertes Steuerelement und ist nicht erforderlich, wenn das Steuerelement im Anwendungscodeverzeichnis befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (prefix As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prefix">Das zu vergleichende Objekt.</param>
        <summary>Vergleicht diese Instanz mit einem anderen Objekt.</summary>
        <returns>
          <see langword="true" />, wenn die Objekte identisch sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashwert für die aktuelle Instanz zurück.</summary>
        <returns>Ein Hashwert für die aktuelle Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("namespace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace ab, in dem sich das Steuerelement befindet, oder legt diesen fest.</summary>
        <value>Der Name des Namespaces. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namespace, in dem sich das Steuerelement befindet. Dies gilt nur für benutzerdefinierte Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("src")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen und Pfad der Datei ab, die das Benutzersteuerelement enthält.</summary>
        <value>Der Name und der Pfad der Datei, die das Benutzersteuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namen und Pfad der Datei mit der Implementierung des Steuerelements. Dies gilt nur für Benutzersteuerelemente. Der Pfad kann relativ zu der Anwendung oder das Stammverzeichnis der Anwendung sein.  
  
> [!NOTE]
>  Das Benutzersteuerelement selbst darf nicht im selben Verzeichnis wie die Seite sein. Wenn dies der Fall, erhalten Sie einen Laufzeitfehler beim Laden der Seite.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Source%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tagName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Benutzersteuerelements ab oder legt diesen fest.</summary>
        <value>Der Name des Benutzersteuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namen des Steuerelements. Dies gilt nur für Benutzersteuerelemente. Dies ist der Wert, der das Tagpräfix in der ASP-Code ausführen muss. Z. B. "MyControl" in `<myTag: myControl />`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Source" />
      </Docs>
    </Member>
    <Member MemberName="TagPrefix">
      <MemberSignature Language="C#" Value="public string TagPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property TagPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tagPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Tagpräfix ab, das einer Quelldatei oder einem Namespace und einer Assembly zugeordnet ist, oder legt dieses fest.</summary>
        <value>Das Tagpräfix.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> -Eigenschaft definiert den Alias für den Namespace verwendet werden, in dem sich das Steuerelement befindet. Dies gilt für Benutzer und benutzerdefinierte Steuerelemente. Dies ist der Wert, der in der ASP-Code vor der Tagname. Beispiel: "MyTag" in `<myTag: myControl />`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.PagesSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#30](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#30)]
 [!code-vb[System.Web.Configuration.PagesSection#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
  </Members>
</Type>