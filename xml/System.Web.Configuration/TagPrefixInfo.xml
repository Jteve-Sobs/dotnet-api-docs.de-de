<Type Name="TagPrefixInfo" FullName="System.Web.Configuration.TagPrefixInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20a1bb867986bf42a754f63d7e4955af3018bdae" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86681228" /></Metadata><TypeSignature Language="C#" Value="public sealed class TagPrefixInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TagPrefixInfo extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TagPrefixInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TagPrefixInfo&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagPrefixInfo sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type TagPrefixInfo = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Konfigurationselement, das Informationen über Tags enthält.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.TagPrefixInfo> Klasse ermöglicht den programmgesteuerten Zugriff auf und das Ändern von Tagpräfix Informationen, die in einer Konfigurationsdatei gespeichert sind. Sie bietet die gleiche Funktionalität wie die ASP.net- `@Register` Direktive. Tagpräfixe ordnen einen "Namespace" in ASP.NET den Assemblys und Namespaces zu, die für benutzerdefinierte Steuerelemente und Benutzer Steuerelemente eingeschlossen werden müssen, damit Sie ordnungsgemäß funktionieren. <xref:System.Web.Configuration.TagPrefixInfo> -Objekte werden als Member eines- <xref:System.Web.Configuration.TagPrefixCollection> Objekts gespeichert. Die- <xref:System.Web.Configuration.TagPrefixCollection> Klasse ermöglicht es Ihnen, Programm gesteuert auf den `controls` unter Abschnitt des-Abschnitts einer Konfigurationsdatei zuzugreifen und diese zu ändern `pages` .  
  
 <xref:System.Web.Configuration.TagPrefixInfo> der Auflistung werden Objekte mithilfe des-Elements hinzugefügt, und es werden `add` ein Wert für das- `tagPrefix` Attribut sowie Werte für andere relevante Attribute angegeben. Die anderen erforderlichen Informationen variieren je nach Art des Steuer Elements, das Sie mit dem angegebenen Tagpräfix verwenden werden:  
  
-   Wenn es sich um ein Benutzer Steuerelement handelt, müssen Sie die <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A> Eigenschaften, und definieren <xref:System.Web.Configuration.TagPrefixInfo.Source%2A> .  
  
-   Wenn es sich um ein benutzerdefiniertes Steuerelement handelt, müssen Sie die <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A> Eigenschaften, und definieren <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> . Die- <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> Eigenschaft ist nicht erforderlich, wenn sich das Steuerelement im Anwendungscode Verzeichnis befindet.  
  
 Der gleiche `tagPrefix` Wert kann verwendet werden, um mehrere Assemblys oder Namespaces zuzuordnen.  
  
> [!NOTE]
>  Wenn eine Quelle angegeben wird, darf sich das Benutzer Steuerelement nicht im selben Verzeichnis wie die Seite befinden. Wenn dies der Fall ist, erhalten Sie einen Laufzeitfehler, wenn Sie versuchen, die Seite zu laden.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Werte deklarativ für mehrere Attribute des `controls` Abschnitts angegeben werden, auf die auch als Member der-Klasse zugegriffen werden kann <xref:System.Web.Configuration.TagPrefixInfo> .  
  
```  
  
<system.web>  
  <pages>  
    <controls>  
      <!-- Searches all linked assemblies for the namespace -->  
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>  
      <!-- Uses a specified assembly -->  
      <add tagPrefix="MyTags2" namespace="MyNameSpace"   
        assembly="MyAssembly"/>  
      <!-- Uses the specified source for the user control -->  
      <add tagprefix="MyTags3" tagname="MyCtrl" src="MyControl.ascx"/>  
    </controls>  
   </pages>  
</system.web>  
```  
  
 Im folgenden Codebeispiel wird gezeigt, wie die-Klasse verwendet wird <xref:System.Web.Configuration.TagPrefixInfo> , um Tagpräfix Einstellungen Programm gesteuert zu ändern. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.PagesSection" />
    <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagPrefixInfo (string tagPrefix, string nameSpace, string assembly, string tagName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagPrefix, string nameSpace, string assembly, string tagName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagPrefix As String, nameSpace As String, assembly As String, tagName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagPrefixInfo(System::String ^ tagPrefix, System::String ^ nameSpace, System::String ^ assembly, System::String ^ tagName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.TagPrefixInfo : string * string * string * string * string -&gt; System.Web.Configuration.TagPrefixInfo" Usage="new System.Web.Configuration.TagPrefixInfo (tagPrefix, nameSpace, assembly, tagName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="nameSpace" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">Das Tagpräfix, das einer Quelldatei oder einem Namespace und einer Assembly zugeordnet wird.</param>
        <param name="nameSpace">Der dem Tagpräfix zugeordnete Namespace.</param>
        <param name="assembly">Die Assembly, in der sich der Namespace befindet.</param>
        <param name="tagName">Der Name des Steuerelements, das auf der Seite verwendet werden soll.</param>
        <param name="source">Der Name der Datei, die das Benutzersteuerelement enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.TagPrefixInfo" />-Klasse unter Verwendung der übergebenen Werte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine Instanz der <xref:System.Web.Configuration.TagPrefixInfo> -Klasse und initialisiert sie mit den bestandenen Parametern. Die Parameter, für die Sie Werte angeben, hängen von der Art des Steuer Elements ab, auf das mit dem angegebenen Tagpräfix verwiesen wird. Parameter, die für das Tagpräfix nicht erforderlich sind, sollten leer gelassen werden. (Verwenden Sie eine leere Zeichenfolge.)  
  
-   Wenn das Steuerelement ein Benutzer Steuerelement ist, müssen Sie Werte für `tagPrefix` die `tagName` Parameter, und angeben `source` .  
  
-   Wenn das Steuerelement ein benutzerdefiniertes Steuerelement ist, müssen Sie Werte für die `tagPrefix` Parameter und angeben `nameSpace` . Wenn sich das Steuerelement nicht im Anwendungscode Verzeichnis befindet, müssen Sie auch den- `assembly` Parameter angeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des- <xref:System.Web.Configuration.TagPrefixInfo.%23ctor%2A> Konstruktors veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
 [!code-csharp[System.Web.Configuration.PagesSection#32](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#32)]
 [!code-vb[System.Web.Configuration.PagesSection#32](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("assembly")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("assembly")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Assembly ab, die die Steuerelementimplementierung enthält, oder legt diesen fest.</summary>
        <value>Der Name der Assembly (ohne Erweiterung). Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt die Assembly an, in der sich das Steuerelement befindet. Sie gilt nur für ein benutzerdefiniertes Steuerelement und ist nicht erforderlich, wenn sich das Steuerelement im Anwendungscode Verzeichnis befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.TagPrefixInfo.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (prefix As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tagPrefixInfo.Equals prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prefix">Das zu vergleichende Objekt.</param>
        <summary>Vergleicht diese Instanz mit einem anderen Objekt.</summary>
        <returns><see langword="true" />, wenn die Objekte identisch sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tagPrefixInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashwert für die aktuelle Instanz zurück.</summary>
        <returns>Ein Hashwert für die aktuelle Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("namespace")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("namespace")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace ab, in dem sich das Steuerelement befindet, oder legt diesen fest.</summary>
        <value>Der Name des Namespaces. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namespace an, in dem sich das Steuerelement befindet. Dies gilt nur für benutzerdefinierte Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.TagPrefixInfo.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("src")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("src")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen und Pfad der Datei ab, die das Benutzersteuerelement enthält.</summary>
        <value>Der Name und der Pfad der Datei, die das Benutzersteuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namen und den Pfad der Datei an, die die Implementierung des Benutzer Steuer Elements enthält. Dies gilt nur für Benutzer Steuerelemente. Der Pfad ist möglicherweise relativ zur Anwendung oder zum Anwendungs Stamm.  
  
> [!NOTE]
>  Das Benutzer Steuerelement selbst darf sich nicht im gleichen Verzeichnis befinden wie die Seite. Wenn dies der Fall ist, erhalten Sie einen Laufzeitfehler, wenn Sie versuchen, die Seite zu laden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.Source%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("tagName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("tagName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Benutzersteuerelements ab oder legt diesen fest.</summary>
        <value>Der Name des Benutzersteuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Namen des Steuer Elements an. Dies gilt nur für Benutzer Steuerelemente. Dies ist der Wert, der dem Tagpräfix im ASP.NET-Code folgt. Beispiel: "myControl" in `<myTag: myControl />` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Source" />
      </Docs>
    </Member>
    <Member MemberName="TagPrefix">
      <MemberSignature Language="C#" Value="public string TagPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property TagPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagPrefix : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.TagPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("tagPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("tagPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Tagpräfix ab, das einer Quelldatei oder einem Namespace und einer Assembly zugeordnet ist, oder legt dieses fest.</summary>
        <value>Das Tagpräfix.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> Eigenschaft definiert den Alias für den Namespace, in dem sich das Steuerelement befindet. Dies gilt für Benutzer-und benutzerdefinierte Steuerelemente. Dies ist der Wert, der dem Tagnamen im ASP.NET-Code vorangestellt wird. Beispiel: "MyTag" in `<myTag: myControl />` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.Configuration.PagesSection> .  
  
 [!code-csharp[System.Web.Configuration.PagesSection#30](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#30)]
 [!code-vb[System.Web.Configuration.PagesSection#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
  </Members>
</Type>
