<Type Name="OutputCacheProfile" FullName="System.Web.Configuration.OutputCacheProfile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c45c818b4543e6c4700409af17b4d95d703f339d" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967267" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutputCacheProfile : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutputCacheProfile extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.OutputCacheProfile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutputCacheProfile&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputCacheProfile sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type OutputCacheProfile = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguriert das Ausgabecacheprofil, das von den Anwendungsseiten verwendet werden kann. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Configuration.OutputCacheProfile>-Klasse bietet eine Möglichkeit, Programm gesteuert auf das `add` Element des `outputCacheProfiles` Abschnitts im `caching` Abschnitt einer Konfigurationsdatei zuzugreifen und diese zu ändern.

 Das <xref:System.Web.Configuration.OutputCacheProfile>-Objekt zentralisiert häufig verwendete Konfigurationseinstellungen, z. b. Abhängigkeiten, Cache Speicherort und Cache Ablaufzeit, sodass diese nicht auf jeder Seite angegeben werden müssen.

 Der <xref:System.Web.Configuration.OutputCacheProfile> kann mithilfe des `CacheProfile`-Attributs der-Direktive auf eine Seite angewendet werden.

> [!NOTE]
>  Die-Direktive kann alle in einem <xref:System.Web.Configuration.OutputCacheProfile>-Objekt enthaltenen Einstellungen außer dem <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>-Attribut überschreiben. Dadurch wird die <xref:System.Web.Configuration.OutputCacheProfile> aktiviert oder deaktiviert, ohne dass die Direktiven in allen Seiten geändert werden müssen, die Sie möglicherweise überschrieben haben.

 Die <xref:System.Web.Caching.CacheDependency>-Klasse überwacht die Abhängigkeiten, sodass das zwischengespeicherte Element automatisch entfernt wird, wenn sich ein zwischengespeichertes Element ändert.



## Examples
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles%2A>-Auflistung verwendet wird, um auf Ihre <xref:System.Web.Configuration.OutputCacheProfile> Objekte zuzugreifen.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#1)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheProfileCollection" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zd1ysf1y(v=vs.100)">Gewusst wie: Deklaratives Festlegen der cacheability einer Seite</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z852zf6b(v=vs.100)">Gewusst wie: Programm gesteuertes Festlegen der cacheability einer Seite</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheProfile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutputCacheProfile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.OutputCacheProfile : string -&gt; System.Web.Configuration.OutputCacheProfile" Usage="new System.Web.Configuration.OutputCacheProfile name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der zu verwendende Name.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.Configuration.OutputCacheProfile" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitdauer der Zwischenspeicherung der Seite bzw. des Steuerelements ab oder legt diese fest.</summary>
        <value>Die Zeitdauer in Sekunden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> der die Zeit in Sekunden darstellt, in der die Seite oder das Benutzer Steuerelement zwischengespeichert wird. Wenn diese Eigenschaft festgelegt wird, wird eine Ablauf Richtlinie für HTTP-Antworten von der Seite oder dem Steuerelement festgelegt, auf die Sie angewendet wird, und die Ausgabe wird automatisch zwischengespeichert.

> [!NOTE]
>  Der <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> muss entweder im Profil oder in der Direktive einer Seite mit dem Profil definiert werden.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#10)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#10)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zwischenspeicherung aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Zwischenspeicherung aktiviert ist, andernfalls <see langword="false" />. Standardwert: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>-Eigenschaft ermöglicht es, den zwischen Speicherungs Mechanismus nur an einem Ort zu aktivieren oder zu deaktivieren. Er wirkt sich auf alle Seiten oder Steuerelemente aus, die diese <xref:System.Web.Configuration.OutputCacheProfile>verwenden.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#12)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#12)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As OutputCacheLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::OutputCacheLocation Location { System::Web::UI::OutputCacheLocation get(); void set(System::Web::UI::OutputCacheLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Web.UI.OutputCacheLocation with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("location")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speicherort des Ausgabecaches ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.OutputCacheLocation" />-Enumerationswerte. Der Standardwert lautet <see langword="Any" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> auf `Any`festgelegt ist, kann sich der Ausgabe Cache auf dem Browser Client befinden, von dem die Anforderung stammt. auf einem Proxy Server oder einem anderen Server, der an der Anforderung teilnimmt; oder auf dem Server, auf dem die Anforderung verarbeitet wurde.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.Location%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#5)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.OutputCacheLocation" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.Configuration.OutputCacheProfile" />-Namen ab oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Web.Configuration.OutputCacheProfile" />-Name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.Configuration.OutputCacheProfile.Name%2A>, um dem Attribut `CacheProfile` der Direktive einen Wert zuzuweisen, wenn Sie die <xref:System.Web.Configuration.OutputCacheProfile> Werte auf eine Seite oder ein Steuerelement anwenden möchten.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.Name%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#11)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoStore : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der sekundäre Speicher aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der sekundäre Speicher aktiviert ist, andernfalls <see langword="false" />. Standardwert: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Seite, für die die <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A?displayProperty=nameWithType>-Eigenschaft auf festgelegt ist `true` gibt eine Antwort aus, die in ihrem Header angibt, um eine sekundäre Speicherung sensibler Informationen zu verhindern.

 Das Festlegen dieses Attributs auf `true` entspricht dem Aufrufen der <xref:System.Web.HttpCachePolicy.SetNoStore%2A?displayProperty=nameWithType> Methode während einer Webanforderung.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#4)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SqlDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDependency : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlDependency")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />-Eigenschaft ab oder legt diese fest.</summary>
        <value>Der <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> definiert eine Beziehung zwischen einer Webanwendung und einer Instanz von SQL Server und ermöglicht so die Erkennung von Änderungen an den Daten auf dem Server. Der <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> stellt sicher, dass Ausgabe zwischengespeicherte Seiten immer dann aus dem Cache entfernt werden, wenn sich die SQL-Tabelle ändert, von der Sie abhängen

> [!NOTE]
>  Die <xref:System.Web.Caching.SqlCacheDependency>-Klasse überwacht die Tabelle, sodass das Element bei einer Änderung der Tabelle automatisch aus dem Cache entfernt wird. Diese Klasse kann nicht vererbt werden.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#7)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#7)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncoding : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByContentEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den durch Semikolons getrennten Satz von Inhaltscodierungen ab, der zwischengespeichert werden soll, oder legt diesen fest.</summary>
        <value>Die Liste von Inhaltscodierungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> Einstellungen sind dieselben, die vom `VaryByContentEncoding`-Attribut der-Direktive verwendet werden.

 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> wird in .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](/dotnet/framework/migration-guide/versions-and-dependencies).

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByControl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />-Eigenschaft ab oder legt diese fest.</summary>
        <value>Der <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> ist ein durch Semikolons getrennter Satz von IDs von Steuerelementen, die zwischengespeichert werden sollen.

 Weitere Informationen finden Sie unter zwischen [Speichern mehrerer Versionen der Ausgabe von Benutzer Steuer](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)Elementen.

> [!NOTE]
>  Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> Einstellungen sind dieselben, die vom `VaryByControls`-Attribut der-Direktive verwendet werden.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#3)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">Zwischenspeichern mehrerer Versionen der Benutzer Steuerelement Ausgabe</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">Gewusst wie: Zwischenspeichern mehrerer Versionen eines Benutzer Steuer Elements basierend auf Parametern</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCustom As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByCustom { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByCustom : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByCustom")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />-Eigenschaft ab oder legt diese fest.</summary>
        <value>Der <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> kann ein beliebiger Text sein, der die benutzerdefinierten Ausgabe Cache Anforderungen darstellt. Wenn eine benutzerdefinierte Zeichenfolge eingegeben wird, müssen Sie die <xref:System.Web.HttpApplication.GetVaryByCustomString%2A>-Methode in der Datei Global. asax der Anwendung überschreiben.

> [!NOTE]
>  Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> Einstellungen sind dieselben, die vom `VaryByCustom`-Attribut der-Direktive verwendet werden.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#9)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#9)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">Zwischenspeichern mehrerer Versionen der Benutzer Steuerelement Ausgabe</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5ecf4420(v=vs.100)">Gewusst wie: Zwischenspeichern von Versionen einer Seite basierend auf benutzerdefinierten Zeichen folgen</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByHeader")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />-Eigenschaft ab oder legt diese fest.</summary>
        <value>Der <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> ist ein durch Semikolons getrennter Satz von Headern, der zum variieren der zwischengespeicherten Ausgabe verwendet wird. Dabei handelt es sich um die der Anforderung zugeordneten HTTP-Header. Weitere Informationen finden Sie unter [Caching Multiple Version of a page](https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100)).

> [!NOTE]
>  Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> Einstellungen sind dieselben, die vom `VaryByHeader`-Attribut von verwendet werden. Die Variation von allen Headern durch Festlegen des Werts von "*" wird nicht empfohlen. Dies kann einen Cache Überlauf oder einen Denial-of-Service-Angriff auf dem Webserver zur Folge haben.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#2)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100)">Zwischenspeichern mehrerer Versionen einer Seite</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByParam As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByParam { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParam : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByParam")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />-Eigenschaft ab oder legt diese fest.</summary>
        <value>Der <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> ist ein durch Semikolons getrennter Satz von Parametern, die verwendet werden, um die zwischengespeicherte Ausgabe zu variieren. Sie ermöglicht das variieren der zwischengespeicherten Ausgabe durch die Abfrage Zeichenfolge oder die Formular Bereitstellungs Parameter. Beispielsweise können Sie die Ausgabe des Benutzer Steuer Elements in den Cache ändern, indem Sie den Namen des Benutzer Steuer Elements zusammen mit einer Abfrage Zeichenfolge oder einem Formular Post-Parameter angeben. Weitere Informationen finden Sie unter zwischen [Speichern mehrerer Versionen der Ausgabe von Benutzer Steuer](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)Elementen.

 Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> Einstellung muss entweder im Profil oder in der Direktive der Seite mit dem Profil definiert werden.

> [!NOTE]
>  Die <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A?displayProperty=nameWithType> Einstellungen sind dieselben, die vom `VaryByParam`-Attribut von verwendet werden. Es wird nicht empfohlen, den Wert von "*" zu verändern, indem Sie den Wert "*" festlegen. Dies kann einen Cache Überlauf oder einen Denial-of-Service-Angriff auf dem Webserver zur Folge haben.



## Examples
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A>-Eigenschaft veranschaulicht.

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#8)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#8)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">Caching ASP.NET Seiten</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100)">Zwischenspeichern mehrerer Versionen einer Seite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">Gewusst wie: Zwischenspeichern mehrerer Versionen eines Benutzer Steuer Elements basierend auf Parametern</related>
      </Docs>
    </Member>
  </Members>
</Type>
