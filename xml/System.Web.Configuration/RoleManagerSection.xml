<Type Name="RoleManagerSection" FullName="System.Web.Configuration.RoleManagerSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6df6b6b9b0ca8c116bf034e813de48d207c06616" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70467006" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoleManagerSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoleManagerSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.RoleManagerSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleManagerSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleManagerSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type RoleManagerSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert Konfigurationseinstellungen für die Unterstützung der Rollenverwaltungsinfrastruktur von Webanwendungen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bietet eine Möglichkeit, Programm gesteuert auf den Inhalt `roleManager` des-Abschnitts der Konfigurationsdatei zuzugreifen und ihn zu ändern.  
  
   
  
## Examples  
 In diesem Abschnitt finden Sie zwei Codebeispiele. Der erste veranschaulicht, wie Werte für mehrere Eigenschaften der <xref:System.Web.Configuration.RoleManagerSection> Klasse deklarativ angegeben werden. Im zweiten Beispiel wird die Verwendung des <xref:System.Web.Configuration.RoleManagerSection> -Typs veranschaulicht.  
  
 Im folgenden Beispiel für eine Konfigurationsdatei wird gezeigt, wie Werte für mehrere Eigenschaften der <xref:System.Web.Configuration.RoleManagerSection> -Klasse deklarativ angegeben werden.  
  
```  
<system.web>  
  <roleManager   
    enabled="false"   
    cacheRolesInCookie="false"   
    cookieName=".ASPXROLES" cookieTimeout="30"  
    cookiePath="/" cookieRequireSSL="false"  
    cookieSlidingExpiration="true" createPersistentCookie="false"  
    cookieProtection="All"   
    defaultProvider="AspNetSqlRoleProvider"  
    maxCachedResults="25"  >  
    <providers>  
      <add   
        name="AspNetSqlRoleProvider"  
        connectionStringName="LocalSqlServer"   
        applicationName="/"  
        type="System.Web.Security.SqlRoleProvider, System.Web,  
          Version=2.0.3600.0, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a" />  
      <add   
        name="AspNetWindowsTokenRoleProvider"   
        applicationName="/"  
        type="System.Web.Security.WindowsTokenRoleProvider, System.Web,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
    </providers>  
  </roleManager>  
</system.web>  
```  
  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Web.Configuration.RoleManagerSection> -Typs veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#1)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Security.RoleManagerModule" />
    <altmember cref="T:System.Web.Security.Roles" />
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleManagerSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.RoleManagerSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleManagerSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.RoleManagerSection" />-Klasse mit Standardeinstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> Konstruktor ist nicht für die direkte Verwendung im Code vorgesehen. Sie wird vom ASP.NET-Konfigurationssystem aufgerufen. Sie erhalten eine Instanz der <xref:System.Web.Configuration.RoleManagerSection> -Klasse, indem Sie die <xref:System.Configuration.Configuration.GetSection%2A> -Methode verwenden.  
  
 In der folgenden Tabelle sind die Standardeinstellungen aufgeführt, die für <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> den-Konstruktor verwendet werden.  
  
|Eigenschaft|Standardwert|  
|--------------|-------------------|  
|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|". ASPXROLES|  
|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|"/"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in Minuten|  
|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|"Aspnetzqlroleprovider"|  
|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|Eine leere Zeichenfolge ("")|  
|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public bool CacheRolesInCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheRolesInCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cacheRolesInCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Rollen des aktuellen Benutzers in einem Cookie zwischengespeichert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Rollen des aktuellen Benutzers in einem Cookie zwischengespeichert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> -Eigenschaft gibt einen booleschen Wert zurück, der angibt, ob der Cookie-Speicher für Rollennamen aktiviert ist.  
  
 Wenn die <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> -Eigenschaft in der `true` Konfigurationsdatei auf festgelegt ist, werden die Rollen Informationen für jeden Benutzer in einem Cookie auf dem Client gespeichert. Wenn die Rollen Verwaltung prüft, ob ein Benutzer einer bestimmten Rolle gehört, wird das Rollen Cookie vor dem Aufrufen des Rollen Anbieters überprüft, um die Liste der Rollen in der Datenquelle zu überprüfen. Das Cookie wird auf dem Client dynamisch aktualisiert, um die zuletzt überprüften Rollennamen zwischenzuspeichern.  
  
 Sie können die Zuverlässigkeit der Rollennamen, die in einem Cookie zwischengespeichert werden, verbessern <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> , indem Sie eine- `roleManager` Eigenschaft angeben, wenn Sie den-Abschnitt der Konfigurationsdatei konfigurieren. Die Standard <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft ist `All`, die Rollennamen im Cookie verschlüsselt und überprüft, ob der Cookie-Inhalt nicht geändert wurde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#2)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Cookies zum Zwischenspeichern von Rollennamen ab oder legt diesen fest.</summary>
        <value>Der Name des Cookies zum Zwischenspeichern von Rollennamen. Der Standardname lautet ".ASPXROLES".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> -Eigenschaft gibt den Namen des Cookies zurück, das zum Zwischenspeichern von Rollennamen verwendet wird. Sie können den Namen des Cookies angeben, in dem Rollen für die Anwendung zwischengespeichert werden, `cookieName` indem Sie das-Attribut in der Datei "Web. config" für Ihre ASP.NET-Anwendung festlegen. Dies ist hilfreich, wenn Sie ein Cookie für Ihre Anwendung eindeutig identifizieren möchten oder wenn ein Cookie von mehreren Anwendungen gemeinsam verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#3)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookiePath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Pfad für das Cookie zum Zwischenspeichern von Rollennamen ab oder legt diesen fest.</summary>
        <value>Der Pfad des Cookies zum Speichern von Rollennamen. Der Standardwert ist "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können den Pfad des Cookies angeben, in dem Rollennamen für die Anwendung zwischengespeichert werden, `cookiePath` indem Sie das-Attribut in der Datei "Web. config" für Ihre ASP.NET-Anwendung festlegen. Die <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> -Eigenschaft gibt den Wert `cookiePath` des Attributs aus der Datei "Web. config" zurück. Beim Pfad wird Groß-/Kleinschreibung beachtet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#4)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.CookieProtection CookieProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.CookieProtection CookieProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieProtection As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::CookieProtection CookieProtection { System::Web::Security::CookieProtection get(); void set(System::Web::Security::CookieProtection value); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtection : System.Web.Security.CookieProtection with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieProtection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Sicherheit zum Schutz des Cookies ab, in dem Rollennamen zwischengespeichert werden, oder legt diesen fest.</summary>
        <value>Der Typ der Sicherheit für das Cookie, in dem Rollennamen zwischengespeichert werden. Die Standardeinstellung ist <see langword="All" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> -Eigenschaft beschreibt, wie Informationen in einem Cookie sicher gespeichert werden. Sie können den Sicherheitstyp des Cookies angeben, in dem Rollen für die Anwendung zwischengespeichert werden `cookieProtection` , indem Sie das-Attribut in der Datei "Web. config" für Ihre ASP.NET-Anwendung festlegen. Das `cookieProtection` -Attribut nimmt <xref:System.Web.Security.CookieProtection> einen-Enumerationswert `None`von, `Validation` `Encryption`, oder an `All`. Die Standardeinstellung ist `All`. Achten Sie darauf, dass Sie den Standardwert <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> für die-Eigenschaft verwenden, wenn Sie die Datenvalidierung und-Verschlüsselung zum Schutz des Cookies verwenden möchten. Um den Schutz Ihres Cookies zu verbessern, können Sie auch die <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> -Eigenschaft `true`auf festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#5)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.CookieProtection" />
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public bool CookieRequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieRequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieRequireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das Cookie zum Zwischenspeichern von Rollennamen eine SSL-Verbindung (Secure Sockets Layer) erforderlich ist, damit es an den Server zurückgesendet werden kann.</summary>
        <value><see langword="true" />, wenn eine SSL-Verbindung erforderlich ist, um das Cookie, in dem Rollennamen zwischengespeichert werden, an den Server zurückzusenden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, ob SSL zum Zurückgeben des Rollennamen Cookies an den Server erforderlich ist, `cookieRequireSSL` indem Sie das-Attribut in der Datei "Web. config" für Ihre ASP.NET-Anwendung festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#6)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Cookie.Secure" />
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool CookieSlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieSlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSlidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der angibt, ob das Cookie zum Zwischenspeichern von Rollennamen in regelmäßigen Abständen zurückgesetzt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Datum und Uhrzeit für den Ablauf der Gültigkeit des Rollennamencookies in regelmäßigen Abständen zurückgesetzt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, ob das Cookie, das zum Zwischenspeichern von Rollennamen verwendet wird, zu einem bestimmten Zeitpunkt in regelmäßigen Abständen zurück `cookieSlidingExpiration` gesetzt oder abgelaufen ist, indem Sie das-Attribut in der Web. config-Datei für Ihre ASP.NET-Anwendung verwenden. Wenn `true`der Wert ist, wird der Cookieablauf anfänglich auf das aktuelle Datum <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> und die aktuelle Uhrzeit sowie die-Eigenschaft in Minuten festgelegt. Während der Benutzer weiterhin aktiv die ASP.NET-Anwendung verwendet, werden das Ablaufdatum und die Ablaufzeit des Cookies automatisch aktualisiert, wenn weniger als die <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Hälfte der restlichen Werte vorhanden sind. Die Standardeinstellung ist `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#7)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CookieTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CookieTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Minuten ab, nach deren Verstreichen die Gültigkeit des Cookies zum Zwischenspeichern von Rollennamen abläuft, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.TimeSpan" />, bei der es sich um die Anzahl der Minuten handelt, nach deren Verstreichen die Gültigkeit des Cookies zum Zwischenspeichern von Rollennamen abläuft. Der Standardwert beträgt 30 (Minuten).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> -Eigenschaft legt einen Wert fest, der die Anzahl der Minuten angibt, bevor das Rollennamen Cookie abläuft. Der Standardwert ist 30 Minuten. Wenn die <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> -Eigenschaft `false`ist, <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> wird die-Eigenschaft ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#8)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public bool CreatePersistentCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreatePersistentCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("createPersistentCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob ein sitzungsbasiertes oder ein persistentes Cookie zum Zwischenspeichern von Rollennamen verwendet wird.</summary>
        <value><see langword="true" />, um das Rollennamencookie als über mehrere Browsersitzungen persistentes Cookie festzulegen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> -Eigenschaft gibt an, ob das Cookie, das zum Zwischenspeichern von Rollennamen verwendet wird, ein Sitzungs basiertes Cookie sein soll, d. h. das Cookie geht verloren, wenn der Browser geschlossen wird, oder ein dauerhaftes Cookie, was bedeutet, dass das Cookie über Browsersitzungen. Der Standardwert `false`ist, womit angegeben wird, dass ein Sitzungs basiertes Cookie zum Zwischenspeichern von Rollennamen verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#9)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProvider : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Standardanbieters für die Rollenverwaltung ab oder legt diesen fest.</summary>
        <value>Der Name eines Anbieters in <see cref="P:System.Web.Configuration.RoleManagerSection.Providers" />. Der Standardwert ist "AspNetSqlRoleProvider".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> -Eigenschaft muss einem benannten Wert `providers` im-unter Abschnitt des `roleManager` -Abschnitts einer Konfigurationsdatei entsprechen. Eine leere Zeichenfolge ("") ist kein gültiger Wert für die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> -Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#10)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.RoleManagerSection.Providers" />
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Domäne ab, die dem Cookie zum Zwischenspeichern von Rollennamen zugeordnet ist, oder legt diesen fest.</summary>
        <value>Die <see cref="P:System.Web.HttpCookie.Domain" /> des Cookies zum Zwischenspeichern von Rollennamen. Der Standardwert ist eine leere Zeichenfolge (<see langword="&quot;&quot;" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> -Eigenschaft wird in der Konfiguration für eine ASP.NET-Anwendung festgelegt `domain` , indem das `roleManager` -Attribut des-Konfigurations Elements verwendet wird. Wenn in der Konfiguration für das `domain` -Attribut kein Wert angegeben ist, gibt die `null` <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> -Eigenschaft zurück, und die Rollennamen- <xref:System.Web.HttpCookie.Domain%2A> Cookie-Domäne wird standardmäßig auf das Verhalten der-Eigenschaft festgelegt. Der Standardwert ist eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das ASP.NET-Rollenverwaltungsfeature aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das ASP.NET-Rollenverwaltungsfeature aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> -Eigenschaft gibt einen booleschen Wert zurück, der angibt, ob zur Laufzeit auf das Feature "ASP.net Role Management" zugegriffen werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#12)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public int MaxCachedResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedResults { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int with get, set" Usage="System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxCachedResults", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl der Rollen ab, die von ASP.NET im Rollencookie zwischengespeichert werden, oder legt diese fest.</summary>
        <value>Ein Wert, der die maximale Anzahl der Rollen angibt, die von ASP.NET im Rollencookie zwischengespeichert werden. Der Standard ist 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Roles.MaxCachedResults%2A> -Eigenschaft gibt eine ganze Zahl zurück, die die maximale Anzahl von Rollen angibt, die von ASP.net im Rollen Cookie zwischengespeichert werden. Der Standard ist 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Security.Roles.CacheRolesInCookie" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Configuration.ProviderSettingsCollection" />-Objekt von <see cref="T:System.Configuration.ProviderSettings" />-Elementen ab.</summary>
        <value>Eine <see cref="T:System.Configuration.ProviderSettingsCollection" /> mit den im <see langword="providers" />-Unterabschnitt des <see langword="roleManager" />-Abschnitts der Konfigurationsdatei definierten Anbietereinstellungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rollen Verwaltungs Anbieter sind Komponenten, die Zugriff auf die Rollen Typen für einen Standort bereitstellen. Rollen Verwaltungs Anbieter können im `providers` -unter Abschnitt `roleManager` des-Abschnitts einer Konfigurationsdatei angegeben werden.  
  
 Die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> -Eigenschaft gibt den Anbieter an, der standardmäßig verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.RoleManagerSection.Providers%2A> -Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#13)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
