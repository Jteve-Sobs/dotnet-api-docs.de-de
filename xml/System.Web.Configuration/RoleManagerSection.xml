<Type Name="RoleManagerSection" FullName="System.Web.Configuration.RoleManagerSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b447232600887a73517e8aa1eb1f261769ea4ce0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55409751" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoleManagerSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoleManagerSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.RoleManagerSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoleManagerSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleManagerSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type RoleManagerSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert Konfigurationseinstellungen für die Unterstützung der Rollenverwaltungsinfrastruktur von Webanwendungen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection> -Klasse bietet eine Möglichkeit zum programmgesteuerten Zugriff auf und ändern Sie den Inhalt von der `roleManager` Abschnitt der Konfigurationsdatei.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Die erste wird veranschaulicht, wie Werte für mehrere Eigenschaften der deklarativ angegeben die <xref:System.Web.Configuration.RoleManagerSection> Klasse. Die zweite zeigt, wie die <xref:System.Web.Configuration.RoleManagerSection> Typ.  
  
 Der folgenden Beispielkonfigurationsdatei wird veranschaulicht, wie Werte für mehrere Eigenschaften der deklarativ angegeben die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
```  
<system.web>  
  <roleManager   
    enabled="false"   
    cacheRolesInCookie="false"   
    cookieName=".ASPXROLES" cookieTimeout="30"  
    cookiePath="/" cookieRequireSSL="false"  
    cookieSlidingExpiration="true" createPersistentCookie="false"  
    cookieProtection="All"   
    defaultProvider="AspNetSqlRoleProvider"  
    maxCachedResults="25"  >  
    <providers>  
      <add   
        name="AspNetSqlRoleProvider"  
        connectionStringName="LocalSqlServer"   
        applicationName="/"  
        type="System.Web.Security.SqlRoleProvider, System.Web,  
          Version=2.0.3600.0, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a" />  
      <add   
        name="AspNetWindowsTokenRoleProvider"   
        applicationName="/"  
        type="System.Web.Security.WindowsTokenRoleProvider, System.Web,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
    </providers>  
  </roleManager>  
</system.web>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection> Typ.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#1)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Security.RoleManagerModule" />
    <altmember cref="T:System.Web.Security.Roles" />
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollenverwaltung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleManagerSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.RoleManagerSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleManagerSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.RoleManagerSection" />-Klasse mit Standardeinstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> Konstruktor ist nicht direkt aus Ihrem Code verwendet werden. Sie wird vom Konfigurationssystem ASP.NET aufgerufen. Sie erhalten eine Instanz von der <xref:System.Web.Configuration.RoleManagerSection> Klasse, indem die <xref:System.Configuration.Configuration.GetSection%2A> Methode.  
  
 Die folgende Tabelle zeigt die Standardeinstellungen, die verwendet werden, für die <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> Konstruktor.  
  
|Eigenschaft|Standardwert|  
|--------------|-------------------|  
|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|". ASPXROLES"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|"/"|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  
|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30 Minuten|  
|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  
|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|"AspNetSqlRoleProvider"|  
|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|Eine leere Zeichenfolge ("")|  
|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public bool CacheRolesInCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheRolesInCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cacheRolesInCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Rollen des aktuellen Benutzers in einem Cookie zwischengespeichert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Rollen des aktuellen Benutzers in einem Cookie zwischengespeichert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> Eigenschaft gibt einen booleschen Wert, der angibt, ob für den Rollennamen, aus denen Cookie-Speicherung aktiviert ist.  
  
 Wenn die <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> -Eigenschaftensatz auf `true` Rolleninformationen für jeden Benutzer wird in der Konfigurationsdatei in einem Cookie auf dem Client gespeichert. Wenn Rollenverwaltung überprüft, um festzustellen, ob ein Benutzer in einer bestimmten Rolle ist, wird die Gültigkeit des Rollencookies überprüft vor dem Aufrufen des Rollenanbieters, um die Liste der Rollen in der Datenquelle zu überprüfen. Das Cookie wird auf dem Client Zwischenspeichern von der zuletzt überprüften Rollennamen dynamisch aktualisiert werden.  
  
 Sie können angeben, verbessern die Zuverlässigkeit der Rollennamen, die in einem Cookie, indem Sie angeben zwischengespeichert werden einer <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft beim Konfigurieren der `roleManager` Abschnitt der Konfigurationsdatei. Der Standardwert <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft `All`, dem Rollennamen in das Cookie verschlüsselt und überprüft, dass der Inhalt von Cookies nicht geändert wurden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#2)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Cookies zum Zwischenspeichern von Rollennamen ab oder legt diesen fest.</summary>
        <value>Der Name des Cookies zum Zwischenspeichern von Rollennamen. Der Standardname lautet ".ASPXROLES".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> -Eigenschaft gibt den Namen des Cookies, das verwendet wird, zum Zwischenspeichern von Rollennamen. Sie können den Namen des Cookies, in denen Rollen zwischengespeichert werden, für Ihre Anwendung angeben, durch Festlegen der `cookieName` Attribut in der Datei "Web.config" für Ihre ASP.NET-Anwendung. Dies ist nützlich, wenn ein Cookie für die Anwendung eindeutig identifiziert werden sollen oder wenn ein Cookie in mehreren Anwendungen gemeinsam verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#3)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookiePath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Pfad für das Cookie zum Zwischenspeichern von Rollennamen ab oder legt diesen fest.</summary>
        <value>Der Pfad des Cookies zum Speichern von Rollennamen. Der Standardwert ist "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können den Pfad des Cookies, in dem Rollennamen zwischengespeichert werden, für Ihre Anwendung angeben, durch Festlegen der `cookiePath` Attribut in der Datei "Web.config" für Ihre ASP.NET-Anwendung. Die <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> -Eigenschaft gibt den Wert, der die `cookiePath` Attribut aus der Datei "Web.config". Der Pfad ist Groß-/Kleinschreibung beachtet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#4)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.CookieProtection CookieProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.CookieProtection CookieProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieProtection As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::CookieProtection CookieProtection { System::Web::Security::CookieProtection get(); void set(System::Web::Security::CookieProtection value); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtection : System.Web.Security.CookieProtection with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieProtection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Sicherheit zum Schutz des Cookies ab, in dem Rollennamen zwischengespeichert werden, oder legt diesen fest.</summary>
        <value>Der Typ der Sicherheit für das Cookie, in dem Rollennamen zwischengespeichert werden. Die Standardeinstellung ist <see langword="All" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft beschreibt, wie Informationen in einem Cookie sicher gespeichert werden. Sie können den Sicherheitstyp des Cookies, in denen Rollen zwischengespeichert werden, für Ihre Anwendung angeben, durch Festlegen der `cookieProtection` Attribut in der Datei "Web.config" für Ihre ASP.NET-Anwendung. Die `cookieProtection` -Attribut nimmt eine <xref:System.Web.Security.CookieProtection> Enumerationswert der `All`, `Encryption`, `None`, oder `Validation`. Die Standardeinstellung ist `All`. Achten Sie darauf, dass Sie mit der Standardwert für die <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft ggf. datenvalidierung und Verschlüsselung zum Schutz des Cookies. Sie können auch festlegen, um den Schutz des Cookies zu verbessern, die <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> Eigenschaft `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#5)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.CookieProtection" />
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public bool CookieRequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieRequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieRequireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das Cookie zum Zwischenspeichern von Rollennamen eine SSL-Verbindung (Secure Sockets Layer) erforderlich ist, damit es an den Server zurückgesendet werden kann.</summary>
        <value><see langword="true" />, wenn eine SSL-Verbindung erforderlich ist, um das Cookie, in dem Rollennamen zwischengespeichert werden, an den Server zurückzusenden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, ob SSL, zum Zurücksenden des Rollennamencookies an den Server erforderlich ist durch Festlegen der `cookieRequireSSL` Attribut in der Datei "Web.config" für Ihre ASP.NET-Anwendung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#6)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Cookie.Secure" />
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool CookieSlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CookieSlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSlidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der angibt, ob das Cookie zum Zwischenspeichern von Rollennamen in regelmäßigen Abständen zurückgesetzt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Datum und Uhrzeit für den Ablauf der Gültigkeit des Rollennamencookies in regelmäßigen Abständen zurückgesetzt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, ob das Cookie, das zum Zwischenspeichern von Rollennamen verwendet wird ist in regelmäßigen Abständen zurückgesetzt wird oder an einem festen Punkt rechtzeitig mit der `cookieSlidingExpiration` Attribut in der Datei "Web.config" für Ihre ASP.NET-Anwendung. Wenn `true`, Ablauf der Cookies wird anfangs festgelegt, um das aktuelle Datum und die Uhrzeit sowie die <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Eigenschaft, in Minuten. Während der Benutzer weiterhin die ASP.NET-Anwendung aktiv verwenden, das Ablaufdatum und die Uhrzeit des Cookies wird automatisch aktualisiert, ist es weniger als die Hälfte der der <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> verbleibenden. Die Standardeinstellung ist `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#7)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CookieTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CookieTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.RoleManagerSection.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Minuten ab, nach deren Verstreichen die Gültigkeit des Cookies zum Zwischenspeichern von Rollennamen abläuft, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.TimeSpan" />, bei der es sich um die Anzahl der Minuten handelt, nach deren Verstreichen die Gültigkeit des Cookies zum Zwischenspeichern von Rollennamen abläuft. Der Standardwert beträgt 30 (Minuten).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Eigenschaft festlegt, einen Wert, der die Anzahl der Minuten vor Ablauf des Rollennamencookies angibt. Der Standardwert ist 30 Minuten. Wenn die <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> Eigenschaft `false`, <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Eigenschaft wird ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#8)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public bool CreatePersistentCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreatePersistentCookie { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("createPersistentCookie", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob ein sitzungsbasiertes oder ein persistentes Cookie zum Zwischenspeichern von Rollennamen verwendet wird.</summary>
        <value><see langword="true" />, um das Rollennamencookie als über mehrere Browsersitzungen persistentes Cookie festzulegen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> Eigenschaft gibt an, und zwar unabhängig davon, ob das Cookie zum Zwischenspeichern von Rollennamen verwendet wird, das sein soll, ein sitzungsbasiertes, was bedeutet, dass das Cookie verloren geht, wenn der Browser geschlossen wird, oder ein dauerhaftes Cookie, das bedeutet, dass das Cookie über verfügbar ist Browser-Sitzungen. Der Standardwert ist `false`, was bedeutet, dass ein sitzungsbasiertes Zwischenspeichern von Rollennamen verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#9)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProvider : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.DefaultProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Standardanbieters für die Rollenverwaltung ab oder legt diesen fest.</summary>
        <value>Der Name eines Anbieters in <see cref="P:System.Web.Configuration.RoleManagerSection.Providers" />. Der Standardwert ist "AspNetSqlRoleProvider".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> pufferlängeneigenschaft muss einen benannten Wert in der `providers` Unterabschnitt der `roleManager` Abschnitt einer Konfigurationsdatei. Eine leere Zeichenfolge ("") ist kein gültiger Wert für die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#10)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.RoleManagerSection.Providers" />
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.RoleManagerSection.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Domäne ab, die dem Cookie zum Zwischenspeichern von Rollennamen zugeordnet ist, oder legt diesen fest.</summary>
        <value>Die <see cref="P:System.Web.HttpCookie.Domain" /> des Cookies zum Zwischenspeichern von Rollennamen. Der Standardwert ist eine leere Zeichenfolge (<see langword="&quot;&quot;" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> Eigenschaft in der Konfiguration für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `domain` Attribut der `roleManager` Konfigurationselement. Wenn kein Wert, in der Konfiguration für angegeben wird die `domain` -Attribut der <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> -Eigenschaft gibt `null` und die Rollennamen Rollennamencookie verwendet standardmäßig das Verhalten von der <xref:System.Web.HttpCookie.Domain%2A> Eigenschaft. Der Standardwert ist eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.RoleManagerSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das ASP.NET-Rollenverwaltungsfeature aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das ASP.NET-Rollenverwaltungsfeature aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> Eigenschaft gibt ein boolescher Wert, der zurück, unabhängig davon, ob das ASP.NET-Rollenverwaltungsfeature zur Laufzeit zugegriffen werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#12)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public int MaxCachedResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedResults { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int with get, set" Usage="System.Web.Configuration.RoleManagerSection.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxCachedResults", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl der Rollen ab, die von ASP.NET im Rollencookie zwischengespeichert werden, oder legt diese fest.</summary>
        <value>Ein Wert, der die maximale Anzahl der Rollen angibt, die von ASP.NET im Rollencookie zwischengespeichert werden. Der Standard ist 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Roles.MaxCachedResults%2A> Eigenschaft gibt eine ganze Zahl, die für die maximale Anzahl von Rollen, die ASP.NET im Rollencookie zwischengespeichert. Der Standard ist 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Security.Roles.CacheRolesInCookie" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.RoleManagerSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.RoleManagerSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Configuration.ProviderSettingsCollection" />-Objekt von <see cref="T:System.Configuration.ProviderSettings" />-Elementen ab.</summary>
        <value>Eine <see cref="T:System.Configuration.ProviderSettingsCollection" /> mit den im <see langword="providers" />-Unterabschnitt des <see langword="roleManager" />-Abschnitts der Konfigurationsdatei definierten Anbietereinstellungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Management-Rollenanbieter sind Komponenten, die Zugriff auf die Typen von Rollen für einen Standort bereitstellen. Sie können angeben, dass Management Rollenanbieter in der `providers` Unterabschnitt der `roleManager` Abschnitt einer Konfigurationsdatei.  
  
 Die <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> Eigenschaft gibt an, der Anbieter, der standardmäßig verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Configuration.RoleManagerSection.Providers%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.RoleManagerSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#13)]
 [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>