<Type Name="TagMapInfo" FullName="System.Web.Configuration.TagMapInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="401a8264011b5116ce0950a895a81f9ac23e767e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69140461" /></Metadata><TypeSignature Language="C#" Value="public sealed class TagMapInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TagMapInfo extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TagMapInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TagMapInfo&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagMapInfo sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type TagMapInfo = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält eine Anweisung zur Neuzuordnung eines einzelnen Konfigurationstags. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Web.Configuration.TagMapInfo> der-Klasse können Sie die Typen von Tags zur Kompilierzeit neu zuordnen. Diese Neuzuordnung bewirkt, dass der zugeordnete Typ anstelle des ursprünglichen Tagtyps für alle Seiten und Steuerelemente in der ASP.NET-Anwendung im Bereich der Konfigurationsdatei verwendet wird.  
  
 Die <xref:System.Web.Configuration.TagMapCollection> -Klasse ermöglicht es Ihnen, Programm gesteuert auf den `tagMapping` unter Abschnitt `pages` des-Abschnitts einer Konfigurationsdatei zuzugreifen und diese zu ändern. `tagMappings` Im unter Abschnitt können Sie Zuordnungen zwischen Tagtypen hinzufügen und entfernen, indem Sie die voll qualifizierten starken Namen der Typen angeben.  
  
> [!NOTE]
>  Im Gegensatz zu anderen Attributen und Auflistungen im Abschnitt hat das `pages` Neuzuordnen von Tags keine übereinstimmende ASP.NET Page-Direktive.  
  
   
  
## Examples  
 Der folgende Konfigurationsdatei Auszug zeigt, wie Werte für mehrere Eigenschaften der <xref:System.Web.Configuration.TagMapInfo> -Klasse deklarativ angegeben werden.  
  
```  
<system.web>  
  <pages>  
    <tagMapping>  
      <add  
        tagType=  
          "System.Web.UI.WebControls.WebParts.WebPartManager"  
        mappedTagType=  
          "Microsoft.Sharepoint.WebPartPartManager,   
           MSPS.Web.dll, Version='2.0.0.0'"   
      />  
    </tagMapping>  
  </pages>  
</system.web>  
```  
  
 Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.Configuration.TagMapCollection> -Klasse verwendet wird, um tagMapping-Einstellungen Programm gesteuert zu ändern. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.PagesSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#17)]
 [!code-vb[System.Web.Configuration.PagesSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.PagesSection" />
    <altmember cref="T:System.Web.Configuration.TagMapCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagMapInfo (string tagTypeName, string mappedTagTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagTypeName, string mappedTagTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagTypeName As String, mappedTagTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagMapInfo(System::String ^ tagTypeName, System::String ^ mappedTagTypeName);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.TagMapInfo : string * string -&gt; System.Web.Configuration.TagMapInfo" Usage="new System.Web.Configuration.TagMapInfo (tagTypeName, mappedTagTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagTypeName" Type="System.String" />
        <Parameter Name="mappedTagTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagTypeName">Der vollqualifizierte Name des Typs für das Tag, das neu zugeordnet wird.</param>
        <param name="mappedTagTypeName">Der Name des Typs, dem das Tag neu zugeordnet wird, sowie die unterstützenden Details.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.TagMapInfo" />-Klasse auf der Grundlage der übergebenen Eigenschaftswerte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Web.Configuration.TagMapInfo.%23ctor%2A> -Konstruktors veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.PagesSection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#42)]
 [!code-vb[System.Web.Configuration.PagesSection#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.TagType" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
        <related type="Article" href="https://msdn.microsoft.com/library/8f8c2c90-f15d-400e-87e7-a757e4f04d0e">Assemblynamen</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tagMapInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Das zu vergleichende Objekt.</param>
        <summary>Vergleicht diese Instanz mit einem anderen Objekt.</summary>
        <returns><see langword="true" />, wenn die Objekte identisch sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tagMapInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashwert für die aktuelle Instanz zurück.</summary>
        <returns>Ein Hashwert für die aktuelle Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="MappedTagType">
      <MemberSignature Language="C#" Value="public string MappedTagType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedTagType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
      <MemberSignature Language="VB.NET" Value="Public Property MappedTagType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappedTagType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MappedTagType : string with get, set" Usage="System.Web.Configuration.TagMapInfo.MappedTagType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mappedTagType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Typs ab, dem das Tag neu zugeordnet wird, oder legt diesen fest.</summary>
        <value>Der Name des Typs, dem das Tag neu zugeordnet wird. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Neuzuordnen von Tags erfolgt zum Zeitpunkt der Kompilierung. Diese Neuzuordnung bewirkt, dass der zugeordnete Typ ( <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A> der durch die-Eigenschaft angegeben wird) anstelle des ursprünglichen Tagtyps (angegeben durch <xref:System.Web.Configuration.TagMapInfo.TagType%2A> die-Eigenschaft) für alle Seiten und Steuerelemente in der ASP.NET-Anwendung im Bereich der Konfigurationsdatei verwendet wird.  
  
> [!NOTE]
>  Ein leerer Zeichen folgen Wert für diese Eigenschaft bewirkt, dass das Konfigurationssystem eine Ausnahme auslöst, wenn das Objekt serialisiert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A>-Eigenschaft veranschaulicht. Es ist Teil eines größeren Beispiels für den <xref:System.Web.Configuration.PagesSection> -Typ.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
        <related type="Article" href="https://msdn.microsoft.com/library/8f8c2c90-f15d-400e-87e7-a757e4f04d0e">Assemblynamen</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.TagMapInfo.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="tagMapInfo.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="serializeCollectionKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagType">
      <MemberSignature Language="C#" Value="public string TagType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.TagType" />
      <MemberSignature Language="VB.NET" Value="Public Property TagType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagType : string with get, set" Usage="System.Web.Configuration.TagMapInfo.TagType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tagType", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des ursprünglichen Typs für das neu zugeordnete Tag ab, oder legt diesen fest.</summary>
        <value>Der Name des ursprünglichen Typs für das Tag, das neu zugeordnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Neuzuordnen von Tags erfolgt zum Zeitpunkt der Kompilierung. Diese Neuzuordnung bewirkt, dass der zugeordnete Typ ( <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A> der durch die-Eigenschaft angegeben wird) anstelle des ursprünglichen Tagtyps (angegeben durch <xref:System.Web.Configuration.TagMapInfo.TagType%2A> die-Eigenschaft) für alle Seiten und Steuerelemente in der ASP.NET-Anwendung im Bereich der Konfigurationsdatei verwendet wird.  
  
> [!NOTE]
>  Ein leerer Zeichen folgen Wert für diese Eigenschaft bewirkt, dass das Konfigurationssystem eine Ausnahme auslöst, wenn das Objekt serialisiert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TagMapInfo.TagType%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.PagesSection> -Klasse bereitgestellt wird.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
        <related type="Article" href="https://msdn.microsoft.com/library/8f8c2c90-f15d-400e-87e7-a757e4f04d0e">Assemblynamen</related>
      </Docs>
    </Member>
  </Members>
</Type>
