<Type Name="LowerCaseStringConverter" FullName="System.Web.Configuration.LowerCaseStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd5c041fbbe1b24fd2d5b7f1ba30fbf9634c4a23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538264" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LowerCaseStringConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LowerCaseStringConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.LowerCaseStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LowerCaseStringConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LowerCaseStringConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Unterstützung für die Konvertierung eines Objekts in eine Zeichenfolge aus Kleinbuchstaben bereit. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.LowerCaseStringConverter> Klasse einem Objekt Gelegenheit zu in eine Zeichenfolge in Kleinbuchstaben konvertiert werden. Diese Klasse bietet auch Unterstützung, um sicherzustellen, dass ein Objekttyp an, die in eine Zeichenfolge in Kleinbuchstaben konvertiert werden kann, bevor die Konvertierung nicht durchgeführt wird.  
  
 Die Methoden der <xref:System.Web.Configuration.LowerCaseStringConverter> nehmen als Parameter ein Objekt, implementiert die <xref:System.ComponentModel.ITypeDescriptorContext> Schnittstelle. Diese Schnittstelle stellt Kontextinformationen über eine Komponente bereit. Diese Schnittstelle ist in der Regel zur Entwurfszeit verwendet, um Informationen zu einem Container zur Entwurfszeit bereitzustellen. Die <xref:System.ComponentModel.ITypeDescriptorContext> häufig im typkonvertierung verwendet wird.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LowerCaseStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LowerCaseStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Web.Configuration.LowerCaseStringConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.LowerCaseStringConverter.%23ctor%2A> Konstruktor.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#2)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Ein Objekt, das die <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle implementiert.</param>
        <param name="type">Der Typ des zu konvertierenden Objekts.</param>
        <summary>Bestimmt, ob ein Objekt auf der Grundlage der angegebenen Parameter in eine Zeichenfolge aus Kleinbuchstaben konvertiert werden kann.</summary>
        <returns>
          <see langword="true" />, wenn die Parameter ein Objekt beschreiben, das in ein Zeichenfolgenobjekt aus Kleinbuchstaben konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet ein Objekt, implementiert die <xref:System.ComponentModel.ITypeDescriptorContext> Schnittstelle als die `ctx` Parameter. Diese Schnittstelle stellt Kontextinformationen über eine Komponente bereit. Diese Schnittstelle ist in der Regel zur Entwurfszeit verwendet, um Informationen zu einem Container zur Entwurfszeit bereitzustellen. Die <xref:System.ComponentModel.ITypeDescriptorContext> häufig im typkonvertierung verwendet wird. Überschreiben Sie diese Methode in einer abgeleiteten Klasse, wenn benutzerdefiniertes Verhalten erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie diese Methode verwendet wird.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#3)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Ein Objekt, das die <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle implementiert.</param>
        <param name="type">Der Typ des zu konvertierenden Objekts.</param>
        <summary>Bestimmt, ob ein Objekt auf der Grundlage der angegebenen Parameter in eine Zeichenfolge aus Kleinbuchstaben konvertiert werden kann.</summary>
        <returns>
          <see langword="true" />, wenn die Parameter ein Objekt beschreiben, das in ein Zeichenfolgenobjekt aus Kleinbuchstaben konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet ein Objekt, implementiert die <xref:System.ComponentModel.ITypeDescriptorContext> Schnittstelle als die `ctx` Parameter. Diese Schnittstelle stellt Kontextinformationen über eine Komponente bereit. Diese Schnittstelle ist in der Regel zur Entwurfszeit verwendet, um Informationen zu einem Container zur Entwurfszeit bereitzustellen. Die <xref:System.ComponentModel.ITypeDescriptorContext> häufig im typkonvertierung verwendet wird. Überschreiben Sie diese Methode in einer abgeleiteten Klasse, wenn benutzerdefiniertes Verhalten erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie diese Methode verwendet wird.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#4)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">Ein Objekt, das die <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle implementiert.</param>
        <param name="ci">Ein Objekt, das die <see cref="T:System.Globalization.CultureInfo" />-Klasse implementiert.</param>
        <param name="data">Das zu konvertierende Objekt.</param>
        <summary>Konvertiert auf der Grundlage der angegebenen Parameter ein Objekt von seinem ursprünglichen Wert in eine Zeichenfolge aus Kleinbuchstaben.</summary>
        <returns>Ein Zeichenfolgenobjekt aus Kleinbuchstaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet ein Objekt, implementiert die <xref:System.ComponentModel.ITypeDescriptorContext> Schnittstelle als die `ctx` Parameter. Diese Schnittstelle stellt Kontextinformationen über eine Komponente bereit. Diese Schnittstelle ist in der Regel zur Entwurfszeit verwendet, um Informationen zu einem Container zur Entwurfszeit bereitzustellen. Die <xref:System.ComponentModel.ITypeDescriptorContext> häufig im typkonvertierung verwendet wird. Die `ci` Parameterobjekt enthält, die kulturelle Informationen. Die `data` Parameterobjekt fungiert als das zu konvertierende Objekt und das resultierende Objekt auf, wenn die Methode abgeschlossen ist. Überschreiben Sie diese Methode in einer abgeleiteten Klasse, wenn benutzerdefiniertes Verhalten erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie diese Methode verwendet wird.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#5)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.LowerCaseStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">Ein Objekt, das die <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle implementiert.</param>
        <param name="ci">Ein Objekt, das die <see cref="T:System.Globalization.CultureInfo" />-Klasse implementiert.</param>
        <param name="value">Das zu konvertierende Objekt.</param>
        <param name="type">Der Typ des zu konvertierenden Objekts.</param>
        <summary>Konvertiert ein Objekt auf der Grundlage der angegebenen Parameter in eine Zeichenfolge aus Kleinbuchstaben.</summary>
        <returns>Ein Zeichenfolgenobjekt aus Kleinbuchstaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet ein Objekt, implementiert die <xref:System.ComponentModel.ITypeDescriptorContext> Schnittstelle als die `ctx` Parameter. Diese Schnittstelle stellt Kontextinformationen über eine Komponente bereit. Diese Schnittstelle ist in der Regel zur Entwurfszeit verwendet, um Informationen zu einem Container zur Entwurfszeit bereitzustellen. Die <xref:System.ComponentModel.ITypeDescriptorContext> häufig im typkonvertierung verwendet wird. Die `ci` Parameterobjekt enthält, die kulturelle Informationen. Die `value` Objekt fungiert als das zu konvertierende Objekt und das resultierende Objekt auf, wenn die Methode abgeschlossen ist. Überschreiben Sie diese Methode in einer abgeleiteten Klasse, wenn benutzerdefiniertes Verhalten erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie diese Methode verwendet wird.  
  
 [!code-csharp[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/CS/LowerCaseStringConverter.cs#6)]
 [!code-vb[System.Web.Configuration.LowerCaseStringConverter#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.LowerCaseStringConverter/VB/LowerCaseStringConverter.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>