<Type Name="ExpressionBuilder" FullName="System.Web.Configuration.ExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8769b69de42a1047c0ab0a291fb5649f702ff335" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70591191" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionBuilder : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExpressionBuilder extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionBuilder&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ExpressionBuilder = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ruft während der Kompilierung eine dynamische Ressource ab.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net wertet Ausdrücke während der Seiten Verarbeitung mithilfe der <xref:System.Web.Configuration.ExpressionBuilder> -Klasse automatisch aus. Die <xref:System.Web.Configuration.ExpressionBuilderCollection> Auflistung, die aus den `expressionBuilders` Elementen besteht, die im `compilation` Abschnitt der Konfiguration enthalten sind. Der <xref:System.Web.Configuration.ExpressionBuilder> enthält bestimmte Werte in Schlüssel-Wert-Paaren.  
  
 Ein Wert wird durch Einschließen eines Ausdrucks der Form abgerufen.  
  
 `<%$ ExpressionPrefix: ExpressionKey %>`  
  
 innerhalb der Seite. Der `ExpressionPrefix` ordnet den Typ des abzurufenden Ausdrucks entweder als Typ eines allgemeinen Ausdrucks-Generators ( <xref:System.Web.Compilation.AppSettingsExpressionBuilder>d. h.) oder als Typ eines benutzerdefinierten Ausdrucks-Generators zu. Der `ExpressionKey` gibt den Schlüssel an, mit dem auf den zurückgegebenen Wert verwiesen wird.  
  
 Wenn Sie sich für die Implementierung eines allgemeinen Ausdrucks-Generator-Typs entscheiden, müssen Sie den Ausdrucks-Generator dem zugeordneten Abschnittsnamen in der Konfiguration zuordnen. Wenn Sie einen benutzerdefinierten Expression-Builder-Typ implementieren möchten, müssen Sie den Ausdrucks-Generator Ihrer benutzerdefinierten Expression-Builder-Klasse zuordnen, die von <xref:System.Web.Configuration.ExpressionBuilder> der-Klasse abgeleitet werden muss.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <related type="Article" href="https://msdn.microsoft.com/library/9ae6373a-853a-4d6e-8639-8c173dacb59f">Übersicht über ASP.net-Ausdrücke</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionBuilder (string expressionPrefix, string theType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix, string theType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionPrefix As String, theType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionBuilder(System::String ^ expressionPrefix, System::String ^ theType);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.ExpressionBuilder : string * string -&gt; System.Web.Configuration.ExpressionBuilder" Usage="new System.Web.Configuration.ExpressionBuilder (expressionPrefix, theType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="theType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Eine Zeichenfolge, die den Typ des abzurufenden Ausdrucks angibt.</param>
        <param name="theType">Eine Zeichenfolge, die den Ausdruckstyp angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.ExpressionBuilder" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.Configuration.ExpressionBuilder> -Objekt erstellt wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Configuration.ExpressionBuilderCollection> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/CS/ExpressionBuilderCollection.cs#2)]
 [!code-vb[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/VB/ExpressionBuilderCollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string with get, set" Usage="System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("expressionPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Typ des abzurufenden Ausdrucks angibt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Typ des abzurufenden Ausdrucks angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> ordnet den Ausdruck dem zugeordneten Abschnittsnamen in der Konfiguration für allgemeine Ausdrucks Typen zu oder ordnet den Ausdruck der benutzerdefinierten Ausdrucks Klasse zu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.ExpressionBuilder.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ExpressionBuilder.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.Configuration.ExpressionBuilder.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Ausdruckstyp angibt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Ausdruckstyp angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> gibt den Typ des Objekts an, das verwendet wird, um den Wert des Ausdrucks zu bestimmen. Der-Typ kann entweder einen Abschnitt innerhalb der Konfiguration oder eine benutzerdefinierte Klasse angeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
