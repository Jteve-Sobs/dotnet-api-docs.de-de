<Type Name="Change" FullName="System.Activities.Presentation.Model.Change">
  <TypeSignature Language="C#" Value="public abstract class Change" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Change extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.Change" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Change" />
  <TypeSignature Language="C++ CLI" Value="public ref class Change abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82cbd-101">Abstrakte Klasse, die eine Änderung an der Modellstruktur beschreibt, sofern sie implementiert wurde.</span><span class="sxs-lookup"><span data-stu-id="82cbd-101">Abstract class that, when implemented, describes a change to the model tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cbd-102">Diese Klasse wird von der Rückgängig-/Wiederholen-Infrastruktur verwendet, um die Änderungen nachzuverfolgen, die während einer Bearbeitungssequenz vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="82cbd-102">This class is used by the undo/redo infrastructure to keep track of the changes made during an editing episode.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Change ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Change();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82cbd-103">Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.Model.Change" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="82cbd-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.Change" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public abstract bool Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.Apply" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Apply () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82cbd-104">Sofern in einer abgeleiteten Klasse implementiert, wird die Änderung für die aktuelle Instanz übernommen.</span><span class="sxs-lookup"><span data-stu-id="82cbd-104">When implemented in a derived class, applies the change to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="82cbd-105"><see langword="true" />, wenn die Änderung für die aktuelle Instanz übernommen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="82cbd-105"><see langword="true" /> if the change was applied to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public abstract string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.Change.Description" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82cbd-106">Sofern in einer abgeleiteten Klasse implementiert, wird eine Beschreibung der Änderung abgerufen.</span><span class="sxs-lookup"><span data-stu-id="82cbd-106">When implemented in a derived class, gets a description of the change.</span></span></summary>
        <value><span data-ttu-id="82cbd-107">Gibt einen <see cref="T:System.String" />zurück, der eine Beschreibung der Änderung enthält.</span><span class="sxs-lookup"><span data-stu-id="82cbd-107">Returns a <see cref="T:System.String" /> that contains a description of the change.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInverse">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.Change GetInverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.Change GetInverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.GetInverse" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInverse () As Change" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::Change ^ GetInverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.Change</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82cbd-108">Sofern in einer abgeleiteten Klasse implementiert, wird die Umkehrung der Änderung abgerufen.</span><span class="sxs-lookup"><span data-stu-id="82cbd-108">When implemented in a derived class, retrieves the inverse of the change.</span></span></summary>
        <returns><span data-ttu-id="82cbd-109">Gibt eine <see cref="T:System.Activities.Presentation.Model.Change" /> zurück, in der die Umkehrung der  aktuellen Instanz enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="82cbd-109">Returns a <see cref="T:System.Activities.Presentation.Model.Change" /> that contains the inverse of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>