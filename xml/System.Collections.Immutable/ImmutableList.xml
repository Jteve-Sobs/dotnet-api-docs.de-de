<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fb0804a3e3775e3142861e15186967e8bb27219" /><Meta Name="ms.sourcegitcommit" Value="3fe2c1a8103f3cbce15cdf2c8a9a7527ad69a40f" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/25/2018" /><Meta Name="ms.locfileid" Value="47067306" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7be16-101">Stellt eine Reihe von Initialisierungsmethoden für Instanzen der <see cref="T:System.Collections.Immutable.ImmutableList`1" /> Klasse bereit.</span><span class="sxs-lookup"><span data-stu-id="7be16-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span>  
  
 <span data-ttu-id="7be16-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span><span class="sxs-lookup"><span data-stu-id="7be16-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="7be16-103">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="7be16-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-104">Der Typ der in gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="7be16-104">The type of items to be stored in the .</span></span></typeparam>
        <summary><span data-ttu-id="7be16-105">Erstellt eine leere unveränderlichen Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-105">Creates an empty immutable list.</span></span></summary>
        <returns><span data-ttu-id="7be16-106">Ein leerer .</span><span class="sxs-lookup"><span data-stu-id="7be16-106">An empty .</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-107">Der Typ der Elemente im .</span><span class="sxs-lookup"><span data-stu-id="7be16-107">The type of items in the .</span></span></typeparam>
        <param name="item"><span data-ttu-id="7be16-108">Das Element, mit dem die Liste vorab aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="7be16-108">The item to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="7be16-109">Erstellt eine neue unveränderlichen Liste, die das angegebene Element enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-109">Creates a new immutable list that contains the specified item.</span></span></summary>
        <returns><span data-ttu-id="7be16-110">Eine neue , die das angegebene Element enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-110">A new  that contains the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-111">Der Typ der Elemente im .</span><span class="sxs-lookup"><span data-stu-id="7be16-111">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="7be16-112">Ein Array, das die Elemente enthält, um die Liste vorab aufzufüllen.</span><span class="sxs-lookup"><span data-stu-id="7be16-112">An array that contains the items to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="7be16-113">Erstellt eine neue unveränderliche Liste, die das angegebene Array von Elementen enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-113">Creates a new immutable list that contains the specified array of items.</span></span></summary>
        <returns><span data-ttu-id="7be16-114">Erstellt eine neue unveränderlichen Liste, die die angegebenen Element enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-114">A new immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableList.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-115">Der Typ der in der Auflistung gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="7be16-115">The type of items stored by the collection.</span></span></typeparam>
        <summary><span data-ttu-id="7be16-116">Erstellt einen neuen unveränderlichen Listen-Builder.</span><span class="sxs-lookup"><span data-stu-id="7be16-116">Creates a new immutable list builder.</span></span></summary>
        <returns><span data-ttu-id="7be16-117">Der Generator für unveränderliche Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="7be16-117">The immutable collection builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-118">Der Typ der Elemente im .</span><span class="sxs-lookup"><span data-stu-id="7be16-118">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="7be16-119">Das Element, das der Liste hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-119">The items to add to the list.</span></span></param>
        <summary><span data-ttu-id="7be16-120">Erstellt eine neue unveränderlichen Liste, die die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-120">Creates a new immutable list that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="7be16-121">Erstellt eine neue unveränderlichen Liste, die die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-121">Returns an immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-122">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-122">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-123">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-123">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-124">Das Objekt, das in der Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-124">The object to locate in the list.</span></span> <span data-ttu-id="7be16-125">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-125">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="7be16-126">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der Liste zurück.</span><span class="sxs-lookup"><span data-stu-id="7be16-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="7be16-127">Der nullbasierte Index des ersten Vorkommens des Elements innerhalb des Bereichs von Elementen in der Liste, der sich vom Index bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-128">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-128">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-129">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-129">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-130">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-130">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-131">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-131">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="7be16-132">Der Gleichheitsvergleich für die Suche.</span><span class="sxs-lookup"><span data-stu-id="7be16-132">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="7be16-133">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der Liste zurück.</span><span class="sxs-lookup"><span data-stu-id="7be16-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="7be16-134">Der nullbasierte Index des ersten Vorkommens des Elements innerhalb des Bereichs von Elementen in der unveränderlichen Liste, der sich vom Index bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-135">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-135">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-136">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-136">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-137">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-137">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-138">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-138">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="7be16-139">Der nullbasierte Startindex für die Suche.</span><span class="sxs-lookup"><span data-stu-id="7be16-139">The zero-based starting index of the search.</span></span> <span data-ttu-id="7be16-140">0 (null) ist in einer leeren Liste gültig.</span><span class="sxs-lookup"><span data-stu-id="7be16-140">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="7be16-141">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der unveränderlichen Liste zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</span><span class="sxs-lookup"><span data-stu-id="7be16-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="7be16-142">Der nullbasierte Index des ersten Vorkommens von des Elements innerhalb des Bereichs von Elementen in der unveränderlichen Liste, der sich vom Index bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-143">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-143">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-144">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-144">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-145">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-145">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-146">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-146">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="7be16-147">Der nullbasierte Startindex für die Suche.</span><span class="sxs-lookup"><span data-stu-id="7be16-147">The zero-based starting index of the search.</span></span> <span data-ttu-id="7be16-148">0 (null) ist in einer leeren Liste gültig.</span><span class="sxs-lookup"><span data-stu-id="7be16-148">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="7be16-149">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="7be16-149">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="7be16-150">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der unveränderlichen Liste zurück, der sich vom angegebenen Index bis zum letzten Element erstreckt.</span><span class="sxs-lookup"><span data-stu-id="7be16-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="7be16-151">Der nullbasierte Index des ersten Vorkommens von des Elements innerhalb des Bereichs von Elementen in der unveränderlichen Liste, der sich vom Index bis zum letzten Element erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-152">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-152">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-153">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-153">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-154">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-154">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-155">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-155">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="7be16-156">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb der gesamten unveränderlichen Liste zurück.</span><span class="sxs-lookup"><span data-stu-id="7be16-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="7be16-157">Der nullbasierte Index des letzten Vorkommens des Elements in der gesamten unveränderlichen Liste, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-158">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-158">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-159">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-159">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-160">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-160">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-161">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-161">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="7be16-162">Der Gleichheitsvergleich für die Suche.</span><span class="sxs-lookup"><span data-stu-id="7be16-162">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="7be16-163">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb der gesamten unveränderlichen Liste zurück.</span><span class="sxs-lookup"><span data-stu-id="7be16-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="7be16-164">Der nullbasierte Index des letzten Vorkommens des Elements in der gesamten unveränderlichen Liste, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-165">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-165">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-166">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-166">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-167">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-167">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-168">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-168">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="7be16-169">Der nullbasierte Startindex für die Rückwärtssuche.</span><span class="sxs-lookup"><span data-stu-id="7be16-169">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="7be16-170">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der unveränderlichen Liste zurück, der sich vom ersten Element bis zum angegebenen Index erstreckt.</span><span class="sxs-lookup"><span data-stu-id="7be16-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="7be16-171">Der nullbasierte Index des letzten Vorkommens des Elements innerhalb des Bereichs von Elementen in der unveränderlichen Liste, der sich vom ersten Element bis zum Index erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-172">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-172">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-173">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-173">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="7be16-174">Das Objekt, das in der unveränderlichen Liste gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-174">The object to locate in the Immutable list.</span></span> <span data-ttu-id="7be16-175">Der Wert kann für Verweistypen NULL sein.</span><span class="sxs-lookup"><span data-stu-id="7be16-175">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="7be16-176">Der nullbasierte Startindex für die Rückwärtssuche.</span><span class="sxs-lookup"><span data-stu-id="7be16-176">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="7be16-177">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="7be16-177">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="7be16-178">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der unveränderlichen Liste zurück, der sich vom ersten Element bis zum angegebenen Index erstreckt.</span><span class="sxs-lookup"><span data-stu-id="7be16-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="7be16-179">Der nullbasierte Index des letzten Vorkommens des Elements innerhalb des Bereichs von Elementen in der unveränderlichen Liste, der sich vom ersten Element bis zum Index erstreckt, sofern gefunden, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="7be16-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberSignature Language="F#" Value="static member Remove : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Remove (list, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-180">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-180">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-181">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-181">The list to search.</span></span></param>
        <param name="value"><span data-ttu-id="7be16-182">Der zu entfernende Wert.</span><span class="sxs-lookup"><span data-stu-id="7be16-182">The value to remove.</span></span></param>
        <summary><span data-ttu-id="7be16-183">Entfernt den angegebenen Wert aus der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-183">Removes the specified value from this list.</span></span></summary>
        <returns><span data-ttu-id="7be16-184">Eine neue unveränderliche Liste mit dem entfernten Element oder diese Liste, wenn das Element nicht in dieser Liste ist.</span><span class="sxs-lookup"><span data-stu-id="7be16-184">A new immutable list with the element removed, or this list if the element is not in this list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member RemoveRange : System.Collections.Immutable.IImmutableList&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.RemoveRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-185">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-185">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-186">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-186">The list to search.</span></span></param>
        <param name="items"><span data-ttu-id="7be16-187">Die zu entfernenden Elemente, wenn Übereinstimmungen in dieser Liste gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="7be16-187">The items to remove if matches are found in this list.</span></span></param>
        <summary><span data-ttu-id="7be16-188">Entfernt die angegebenen Werte aus dieser Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-188">Removes the specified values from this list.</span></span></summary>
        <returns><span data-ttu-id="7be16-189">Eine neue unveränderlichen Liste, aus der die Elemente entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="7be16-189">A new immutable list with the elements removed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Replace (list, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7be16-190">Der Typ der Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-190">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="7be16-191">Die zu durchsuchende Liste.</span><span class="sxs-lookup"><span data-stu-id="7be16-191">The list to search.</span></span></param>
        <param name="oldValue"><span data-ttu-id="7be16-192">Das zu ersetzende Element.</span><span class="sxs-lookup"><span data-stu-id="7be16-192">The element to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="7be16-193">Das durch ein Element zu ersetzende alte Element.</span><span class="sxs-lookup"><span data-stu-id="7be16-193">The element to replace the old element with.</span></span></param>
        <summary><span data-ttu-id="7be16-194">Ersetzt das erste gleiche Element in der Liste mit dem angegebenen Element.</span><span class="sxs-lookup"><span data-stu-id="7be16-194">Replaces the first equal element in the list with the specified element.</span></span></summary>
        <returns><span data-ttu-id="7be16-195">Die neue Liste – selbst wenn der zu ersetzende Wert dem neuen Wert für diese Position entspricht.</span><span class="sxs-lookup"><span data-stu-id="7be16-195">The new list -- even if the value being replaced is equal to the new value for that position.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7be16-196">Wird ausgelöst, wenn der alte Wert nicht in der Liste vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="7be16-196">Thrown when the old value does not exist in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableList : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableList.ToImmutableList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="7be16-197">Der Typ der Elemente in der Sequenz.</span><span class="sxs-lookup"><span data-stu-id="7be16-197">The type of the elements in the sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7be16-198">Die Sequenz, die aufgelistet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7be16-198">The sequence to enumerate.</span></span></param>
        <summary><span data-ttu-id="7be16-199">Listet eine Sequenz auf und erzeugt eine unveränderliche Liste ihrer Inhalte.</span><span class="sxs-lookup"><span data-stu-id="7be16-199">Enumerates a sequence and produces an immutable list of its contents.</span></span></summary>
        <returns><span data-ttu-id="7be16-200">Eine unveränderliche Liste, die die Elemente in der angegebenen Sequenz enthält.</span><span class="sxs-lookup"><span data-stu-id="7be16-200">An immutable list that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>