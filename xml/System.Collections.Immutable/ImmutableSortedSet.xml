<Type Name="ImmutableSortedSet" FullName="System.Collections.Immutable.ImmutableSortedSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="849ab404436655a3695917357c96c360560b7e73" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36644349" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableSortedSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableSortedSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableSortedSet" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableSortedSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableSortedSet abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableSortedSet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33d54-101">Stellt eine Reihe von Initialisierungsmethoden für Instanzen der <see cref="T:System.Collections.Immutable.ImmutableSortedSet`1" /> Klasse bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33d54-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableSortedSet`1" /> class.</span>
      </span>
      <span data-ttu-id="33d54-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="33d54-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="33d54-103">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33d54-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-104">Der Typ der Elemente, die in der unveränderlichen Gruppe gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-104">The type of items to be stored in the immutable set.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="33d54-105">Erstellt eine leere unveränderliche Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-105">Creates an empty immutable sorted set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-106">Eine leere unveränderlich sortierte Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-106">An empty immutable sorted set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (comparer As IComparer(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-107">Der Typ der Elemente in der unveränderlichen Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-107">The type of items in the immutable set.</span>
          </span>
        </typeparam>
        <param name="comparer">
          <span data-ttu-id="33d54-108">Die Implementierung, die beim Vergleich von Elementen in der Gruppe verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-108">The implementation to use when comparing items in the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-109">Erstellt eine leere unveränderlich sortierte Gruppe, die den angegebenen Vergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-109">Creates an empty immutable sorted set that uses the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-110">Eine leere unveränderliche Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-110">An empty immutable set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-111">Der Typ der Elemente in der unveränderlichen Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-111">The type of items in the immutable set.</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="33d54-112">Das Element, mit dem die Gruppe vorab aufgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-112">The item to prepopulate the set with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-113">Erstellt eine neue unveränderlich sortierte Gruppe, die das angegebene Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-113">Creates a new immutable sorted set that contains the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-114">Eine neue unveränderliche Gruppe, die das angegebene Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-114">A new immutable set that contains the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-115">Der Typ der Elemente in der unveränderlichen Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-115">The type of items in the immutable set.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="33d54-116">Ein Array, das die Elemente enthält, um die Gruppe vorab aufzufüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-116">An array that contains the items to prepopulate the set with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-117">Erstellt eine neue unveränderlich sortierte Gruppe, die das angegebene Array von Elementen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-117">Creates a new immutable sorted set that contains the specified array of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-118">Eine neue unveränderliche Gruppe, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-118">A new immutable set that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (comparer As IComparer(Of T), item As T) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer, T item);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IComparer&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create (comparer, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-119">Der Typ der Elemente, die in der unveränderlichen Gruppe gespeichert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-119">The type of items stored in the immutable set.</span>
          </span>
        </typeparam>
        <param name="comparer">
          <span data-ttu-id="33d54-120">Die Implementierung, die beim Vergleich von Elementen in der Gruppe verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-120">The implementation to use when comparing items in the set.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="33d54-121">Das Element, mit dem die Gruppe vorab aufgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-121">The item to prepopulate the set with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-122">Eine neue unveränderlich sortierte Gruppe, die das angegebene Element enthält und den angegebenen Vergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-122">Creates a new immutable sorted set that contains the specified item and uses the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-123">Eine neue unveränderliche Gruppe, die das angegebene Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-123">A new immutable set that contains the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Create&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer, params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; Create&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer, !!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (comparer As IComparer(Of T), ParamArray items As T()) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Create(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer, ... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IComparer&lt;'T&gt; * 'T[] -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.Create (comparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-124">Der Typ der Elemente in der unveränderlichen Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-124">The type of items in the immutable set.</span>
          </span>
        </typeparam>
        <param name="comparer">
          <span data-ttu-id="33d54-125">Die Implementierung, die beim Vergleich von Elementen in der Gruppe verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-125">The implementation to use when comparing items in the set.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="33d54-126">Ein Array, das die Elemente enthält, um die Gruppe vorab aufzufüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-126">An array that contains the items to prepopulate the set with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-127">Eine neue unveränderlich sortierte Gruppe, die den angegebenen Array von Elementen enthält und den angegebenen Vergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-127">Creates a new immutable sorted set that contains the specified array of items and uses the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-128">Eine neue unveränderliche Gruppe, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-128">A new immutable set that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableSortedSet(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableSortedSet.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-129">Der Typ der in der Auflistung gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-129">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="33d54-130">Gibt eine Auflistung zurück, die zum Erstellen einer unveränderlich sortierten Gruppe verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-130">Returns a collection that can be used to build an immutable sorted set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-131">Der Generator für unveränderliche Auflistungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-131">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (comparer As IComparer(Of T)) As ImmutableSortedSet(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableSortedSet.CreateBuilder comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-132">Der Typ der in der Auflistung gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-132">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <param name="comparer">
          <span data-ttu-id="33d54-133">Der zum Vergleichen von Elementen in der Gruppe für Gleichheit verwendete Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-133">The comparer used to compare items in the set for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-134">Gibt eine Auflistung zurück, die zum Erstellen einer unveränderlich sortierten Gruppe verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-134">Returns a collection that can be used to build an immutable sorted set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-135">Die unveränderliche Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-135">The immutable collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-136">Der Typ der in der Auflistung gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-136">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="33d54-137">Die Elemente, die zur Gruppe vor dessen Unveränderlichkeit hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-137">The items to add to the set with before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-138">Erstellt eine neue unveränderliche Auflistung, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-138">Creates a new immutable collection that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-139">Eine neue unveränderliche Gruppe, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-139">The new immutable set that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (comparer As IComparer(Of T), items As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ CreateRange(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IComparer&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.CreateRange (comparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="33d54-140">Der Typ der in der Auflistung gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-140">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <param name="comparer">
          <span data-ttu-id="33d54-141">Der zu verwendende Vergleich zum Vergleichen von Elementen in dieser Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-141">The comparer to use to compare elements in this set.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="33d54-142">Die Elemente, die zur Gruppe vor dessen Unveränderlichkeit hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-142">The items to add to the set before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-143">Erstellt eine neue unveränderliche Auflistung, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-143">Creates a new immutable collection that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-144">Eine neue unveränderliche Gruppe, die die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-144">The new immutable set that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedSet&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;TSource&gt; ToImmutableSortedSet&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!TSource&gt; ToImmutableSortedSet&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedSet(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableSortedSet(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;TSource&gt; ^ ToImmutableSortedSet(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedSet : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="33d54-145">Der Typ der Elemente in der Sequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-145">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="33d54-146">Die Sequenz, die aufgelistet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-146">The sequence to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-147">Listet eine Sequenz auf und erzeugt ein unveränderlich sortierte Gruppe ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-147">Enumerates a sequence and produces an immutable sorted set of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-148">Eine unveränderliche Gruppe, die die Elemente in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-148">An immutable sorted set that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableSortedSet&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableSortedSet&lt;TSource&gt; ToImmutableSortedSet&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Collections.Generic.IComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableSortedSet`1&lt;!!TSource&gt; ToImmutableSortedSet&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Collections.Generic.IComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableSortedSet(Of TSource) (source As IEnumerable(Of TSource), comparer As IComparer(Of TSource)) As ImmutableSortedSet(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableSortedSet&lt;TSource&gt; ^ ToImmutableSortedSet(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Collections::Generic::IComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableSortedSet : seq&lt;'Source&gt; * System.Collections.Generic.IComparer&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="33d54-149">Der Typ der Elemente in der Sequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-149">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="33d54-150">Die Sequenz, die aufgelistet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-150">The sequence to enumerate.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="33d54-151">Der Vergleich zum Initialisieren und Hinzufügen von Mitgliedern zur sortierten Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-151">The comparer to use for initializing and adding members to the sorted set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33d54-152">Listet eine Sequenz auf, erzeugt ein unveränderlich sortierte Gruppe ihrer Inhalte und verwendet den angegeben Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-152">Enumerates a sequence, produces an immutable sorted set of its contents, and uses the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33d54-153">Eine unveränderliche Gruppe, die die Elemente in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33d54-153">An immutable sorted set that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>