<Type Name="IImmutableQueue&lt;T&gt;" FullName="System.Collections.Immutable.IImmutableQueue&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f3e872653eeb758232fc93787d63c2b6a994fe67" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70516661" /></Metadata><TypeSignature Language="C#" Value="public interface IImmutableQueue&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImmutableQueue`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.IImmutableQueue`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImmutableQueue(Of T)&#xA;Implements IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IImmutableQueue : System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IImmutableQueue&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="464ac-101">Der Typ der Elemente in der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="464ac-101">The type of elements in the queue.</span></span></typeparam>
    <summary><span data-ttu-id="464ac-102">Stellt eine unveränderliche FIFO-Auflistung (First-In-First-Out) von Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="464ac-102">Represents an immutable first-in, first-out collection of objects.</span></span>  
  
 <span data-ttu-id="464ac-103">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Grundlegendes zu unveränderlichen Collections und deren Installation</see>)</span><span class="sxs-lookup"><span data-stu-id="464ac-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464ac-104">Da <xref:System.Collections.Immutable.IImmutableQueue%601> unveränderlich ist, wird beim Ändern <xref:System.Collections.Immutable.IImmutableQueue%601> der Verwendung von Methoden wie <xref:System.Collections.Immutable.IImmutableQueue%601.Dequeue%2A> oder <xref:System.Collections.Immutable.IImmutableQueue%601.Enqueue%2A>eine neue Warteschlange mit den angewendeten Änderungen zurückgegeben, und die ursprüngliche Warteschlange bleibt unverändert.</span><span class="sxs-lookup"><span data-stu-id="464ac-104">Because <xref:System.Collections.Immutable.IImmutableQueue%601> is immutable, when you change <xref:System.Collections.Immutable.IImmutableQueue%601> using methods such as <xref:System.Collections.Immutable.IImmutableQueue%601.Dequeue%2A> or <xref:System.Collections.Immutable.IImmutableQueue%601.Enqueue%2A>,  a new queue will be returned with the changes applied and the original queue remains unchanged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464ac-105">Gibt eine neue Warteschlange zurück, deren Elemente entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="464ac-105">Returns a new queue with all the elements removed.</span></span></summary>
        <returns><span data-ttu-id="464ac-106">Eine leere unveränderliche Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="464ac-106">An empty immutable queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Dequeue();" />
      <MemberSignature Language="F#" Value="abstract member Dequeue : unit -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464ac-107">Entfernt das erste Element in der unveränderlichen Warteschlange und gibt die neue Warteschlange zurück.</span><span class="sxs-lookup"><span data-stu-id="464ac-107">Removes the first element in the immutable queue, and returns the new queue.</span></span></summary>
        <returns><span data-ttu-id="464ac-108">Die neue unveränderliche Warteschlange, aus der das erste Element entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="464ac-108">The new immutable queue with the first element removed.</span></span> <span data-ttu-id="464ac-109">Dieser Wert ist nie <c>NULL</c>.</span><span class="sxs-lookup"><span data-stu-id="464ac-109">This value is never <c>null</c>.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="464ac-110">Die Warteschlange ist leer.</span><span class="sxs-lookup"><span data-stu-id="464ac-110">The queue is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Enqueue (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Enqueue(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enqueue (value As T) As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Enqueue(T value);" />
      <MemberSignature Language="F#" Value="abstract member Enqueue : 'T -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Enqueue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="464ac-111">Das hinzuzufügende Element.</span><span class="sxs-lookup"><span data-stu-id="464ac-111">The element to add.</span></span></param>
        <summary><span data-ttu-id="464ac-112">Fügt ein Element am Ende der unveränderlichen Warteschlange hinzu und gibt die neue Warteschlange zurück.</span><span class="sxs-lookup"><span data-stu-id="464ac-112">Adds an element to the end of the immutable queue, and returns the new queue.</span></span></summary>
        <returns><span data-ttu-id="464ac-113">Die neue unveränderliche Warteschlange mit dem angegebenen hinzugefügten Element.</span><span class="sxs-lookup"><span data-stu-id="464ac-113">The new immutable queue with the specified element added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.IImmutableQueue`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.IImmutableQueue&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464ac-114">Ruft einen Wert ab, der angibt, ob diese unveränderliche Warteschlange leer ist.</span><span class="sxs-lookup"><span data-stu-id="464ac-114">Gets a value that indicates whether this immutable queue is empty.</span></span></summary>
        <value><span data-ttu-id="464ac-115"><see langword="true" />, wenn diese Warteschlange leer ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="464ac-115"><see langword="true" /> if this queue is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; 'T" Usage="iImmutableQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464ac-116">Gibt das Element am Anfang der unveränderlichen Warteschlange zurück, ohne es zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="464ac-116">Returns the element at the beginning of the immutable queue without removing it.</span></span></summary>
        <returns><span data-ttu-id="464ac-117">Das Element am Anfang der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="464ac-117">The element at the beginning of the queue.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="464ac-118">Die Warteschlange ist leer.</span><span class="sxs-lookup"><span data-stu-id="464ac-118">The queue is empty.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
