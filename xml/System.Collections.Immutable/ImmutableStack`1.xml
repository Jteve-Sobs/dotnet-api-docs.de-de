<Type Name="ImmutableStack&lt;T&gt;" FullName="System.Collections.Immutable.ImmutableStack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1144dc76f970e2b610c17a48e55af28ccbd4a2aa" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48684091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImmutableStack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Immutable.IImmutableStack&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImmutableStack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Collections.Immutable.IImmutableStack`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableStack`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableStack(Of T)&#xA;Implements IEnumerable(Of T), IImmutableStack(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ImmutableStack sealed : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Immutable::IImmutableStack&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ImmutableStack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IImmutableStack&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Immutable.IImmutableStack&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsEmpty = {IsEmpty}; Top = {_head}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Immutable.ImmutableStackDebuggerProxy`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="adf97-101">Der Typ des Elements im Stapel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="adf97-101">The type of element on the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="adf97-102">Stellt einen unveränderlichen Stapel dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="adf97-102">Represents an immutable stack.</span>
      </span>
      <span data-ttu-id="adf97-103">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="adf97-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="adf97-104">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="adf97-104">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableStack&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableStack`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="immutableStack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-105">Entfernt alle Objekte aus dem unveränderlichen Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-105">Removes all objects from the immutable stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-106">Ein leerer unveränderlicher Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-106">An empty immutable stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableStack&lt;T&gt; Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Immutable.ImmutableStack`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableStack`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Empty { System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack&lt;'T&gt;.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="adf97-107">Ruft einen leeren unveränderlichen Stapel ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-107">Gets an empty immutable stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="adf97-108">Ein leerer unveränderlicher Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-108">An empty immutable stack.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableStack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableStack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableStack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableStack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;.Enumerator" Usage="immutableStack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-109">Gibt einen Enumerator zurück, der den unveränderlichen Stapel durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-109">Returns an enumerator that iterates through the immutable stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-110">Ein Enumerator, der zum Durchlaufen des Stapels verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-110">An enumerator that can be used to iterate through the stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableStack`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.ImmutableStack&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Immutable.IImmutableStack`1.IsEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="adf97-111">Ruft einen Wert ab, der angibt, ob diese Instanz des unveränderlichen Stapels leer ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-111">Gets a value that indicates whether this instance of the immutable stack is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="adf97-112">
            <see langword="true" />, wenn diese Instanz leer ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-112">
              <see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; 'T&#xA;override this.Peek : unit -&gt; 'T" Usage="immutableStack.Peek " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableStack`1.Peek</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-113">Gibt das Objekt oben im Stapel zurück, ohne es zu entfernen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-113">Returns the object at the top of the stack without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-114">Das Objekt am Anfang des Stapels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-114">The object at the top of the stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableStack&lt;T&gt; Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableStack`1&lt;!T&gt; Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="immutableStack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-115">Entfernt das oberste Element aus dem unveränderlichen Stapel und gibt den Stapel nach dem Entfernen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-115">Removes the element at the top of the immutable stack and returns the stack after the removal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-116">Ein Stapel; nie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-116">A stack; never <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableStack&lt;T&gt; Pop (out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableStack`1&lt;!T&gt; Pop([out] !T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.Pop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop (ByRef value As T) As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Pop([Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.Pop :  -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="immutableStack.Pop value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="adf97-117">Der Wert, der aus dem Stapel entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-117">The value to remove from the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adf97-118">Entfernt das angegebene Element aus dem unveränderlichen Stapel und gibt den Stapel nach dem Entfernen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-118">Removes the specified element from the immutable stack and returns the stack after the removal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-119">Ein Stapel; nie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-119">A stack; never <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableStack&lt;T&gt; Push (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableStack`1&lt;!T&gt; Push(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Push (value As T) As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Push(T value);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="immutableStack.Push value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="adf97-120">Das Objekt, das auf dem Stapel abgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-120">The object to push onto the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adf97-121">Fügt ein Objekt am Anfang des unveränderlichen Stapels ein und gibt den neuen Stapel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-121">Inserts an object at the top of the immutable stack and returns the new stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-122">Der neue Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-122">The new stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-123">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-123">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-124">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-124">An enumerator  that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf97-125">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="adf97-125">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="adf97-126">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableStack%601>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="adf97-126">It can be used only when the <xref:System.Collections.Immutable.ImmutableStack%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-127">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-127">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-128">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-128">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf97-129">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="adf97-129">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="adf97-130">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableStack%601>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="adf97-130">It can be used only when the <xref:System.Collections.Immutable.ImmutableStack%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableStack&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableStack&lt;T&gt; IImmutableStack&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableStack`1&lt;!T&gt; System.Collections.Immutable.IImmutableStack&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.System#Collections#Immutable#IImmutableStack&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Function Clear () As IImmutableStack(Of T) Implements IImmutableStack(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableStack&lt;T&gt; ^ System.Collections.Immutable.IImmutableStack&lt;T&gt;.Clear() = System::Collections::Immutable::IImmutableStack&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableStack`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-131">Entfernt alle Elemente aus dem unveränderlichen Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-131">Removes all elements from the immutable stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-132">Der leere unveränderliche Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-132">The empty immutable stack.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf97-133">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="adf97-133">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="adf97-134">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableStack%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableStack%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="adf97-134">It can be used only when the <xref:System.Collections.Immutable.ImmutableStack%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableStack%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableStack&lt;T&gt;.Pop">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableStack&lt;T&gt; IImmutableStack&lt;T&gt;.Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableStack`1&lt;!T&gt; System.Collections.Immutable.IImmutableStack&lt;T&gt;.Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.System#Collections#Immutable#IImmutableStack&lt;T&gt;#Pop" />
      <MemberSignature Language="VB.NET" Value="Function Pop () As IImmutableStack(Of T) Implements IImmutableStack(Of T).Pop" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableStack&lt;T&gt; ^ System.Collections.Immutable.IImmutableStack&lt;T&gt;.Pop() = System::Collections::Immutable::IImmutableStack&lt;T&gt;::Pop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableStack`1.Pop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adf97-135">Entfernt das Element am Anfang des unveränderlichen Stapels und gibt den neuen Stapel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-135">Removes the element at the top of the immutable stack and returns the new stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-136">Der neue Stapel; nie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-136">The new stack; never <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf97-137">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="adf97-137">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="adf97-138">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableStack%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableStack%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="adf97-138">It can be used only when the <xref:System.Collections.Immutable.ImmutableStack%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableStack%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableStack&lt;T&gt;.Push">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableStack&lt;T&gt; IImmutableStack&lt;T&gt;.Push (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableStack`1&lt;!T&gt; System.Collections.Immutable.IImmutableStack&lt;T&gt;.Push(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack`1.System#Collections#Immutable#IImmutableStack&lt;T&gt;#Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Push (value As T) As IImmutableStack(Of T) Implements IImmutableStack(Of T).Push" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableStack&lt;T&gt; ^ System.Collections.Immutable.IImmutableStack&lt;T&gt;.Push(T value) = System::Collections::Immutable::IImmutableStack&lt;T&gt;::Push;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableStack`1.Push(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="adf97-139">Das Element, das auf dem Stapel abgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-139">The element to push onto the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adf97-140">Fügt ein Element am Anfang des unveränderlichen Stapels ein und gibt den neuen Stapel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-140">Inserts an element at the top of the immutable stack and returns the new stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="adf97-141">Der neue Stapel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="adf97-141">The new stack.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf97-142">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="adf97-142">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="adf97-143">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableStack%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableStack%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="adf97-143">It can be used only when the <xref:System.Collections.Immutable.ImmutableStack%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableStack%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>