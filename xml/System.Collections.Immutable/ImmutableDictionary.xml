<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66a7f339c2bd338938bbd71ce4888f9ec7e85142" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="46a10-101">Stellt eine Reihe von Initialisierungsmethoden für Instanzen der <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> Klasse bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46a10-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span>
      </span>
      <span data-ttu-id="46a10-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="46a10-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="46a10-103">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46a10-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; bool" Usage="System.Collections.Immutable.ImmutableDictionary.Contains (map, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-104">Der Typ der Schlüssel im unveränderlichen Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-104">The type of the keys in the immutable dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-105">Der Typ der Werte im unveränderlichen Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-105">The type of the values in the immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="map">
          <span data-ttu-id="46a10-106">Das zu durchsuchende unveränderliche Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-106">The immutable dictionary to search.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="46a10-107">Der im unveränderlichen Wörterbuch zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-107">The key to locate in the immutable dictionary.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="46a10-108">Der Wert, der auf dem angegebenen Schlüssel zu finden ist, wenn der Schlüssel gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-108">The value to locate on the specified key, if the key is found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-109">Bestimmt, ob das angegebene unveränderliche Wörterbuch das angegebene Schlüssel-Wert-Paar enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-110">
            <see langword="true" />, wenn diese Zuordnung das angegebene Schlüssel-Wert-Paar enthält; anderenfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-110">
              <see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-111">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-111">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-112">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-112">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="46a10-113">Erstellt ein leeres unveränderliches Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-113">Creates an empty immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-114">Ein leeres unveränderliches Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-114">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-115">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-115">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-116">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-116">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-117">Die Implementierung zum Bestimmen der Gleichheit der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-117">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-118">Erstellt ein leeres unveränderliches Wörterbuch, das den angegebenen Schlüsselvergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-118">Creates an empty immutable dictionary that uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-119">Ein leeres unveränderliches Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-119">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-120">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-120">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-121">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-121">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-122">Die Implementierung zum Bestimmen der Gleichheit der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-122">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="46a10-123">Die Implementierung zum Bestimmen der Gleichheit der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-123">The implementation to use to determine the equality of values in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-124">Erstellt ein leeres unveränderliches Wörterbuch, das den angegebenen Schlüssel- und Wertevergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-125">Ein leeres unveränderliches Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-125">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-126">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-126">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-127">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-127">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="46a10-128">Erstellt einen neuen unveränderlichen Wörterbuch-Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-128">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-129">Der neue Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-129">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-130">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-130">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-131">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-131">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-132">Der Schlüsselvergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-132">The key comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-133">Erstellt einen neuen unveränderlichen Wörterbuch-Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-133">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-134">Der neue Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-134">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-135">Der Typ der Schlüssel, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-135">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-136">Der Typ der Werte, die vom Wörterbuch gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-136">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-137">Der Schlüsselvergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-137">The key comparer.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="46a10-138">Der Wertevergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-138">The value comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-139">Erstellt einen neuen unveränderlichen Wörterbuch-Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-139">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-140">Der neue Generator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-140">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-141">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-141">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-142">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-142">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="46a10-143">Die Elemente, die zum Auffüllen des Wörterbuchs vor dessen Unveränderlichkeit verwendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-143">The items used to populate the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-144">Erstellt ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-144">Creates a new immutable dictionary that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-145">Ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-145">A new immutable dictionary that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-146">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-146">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-147">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-147">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-148">Die zu verwendete Vergleichs-Implementierung zum Vergleich von Schlüsseln auf ihre Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-148">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="46a10-149">Die Elemente, die zum Wörterbuch vor dessen Unveränderlichkeit hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-149">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-150">Erstellt ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält und den angegebenen Schlüsselvergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-151">Ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält und den angegebenen Vergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-152">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-152">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-153">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-153">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="46a10-154">Die zu verwendete Vergleichs-Implementierung zum Vergleich von Schlüsseln auf ihre Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-154">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="46a10-155">Die Vergleichs-Implementierung zum Vergleich von Werten auf ihre Gleichheit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-155">The comparer implementation to use to compare values for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="46a10-156">Die Elemente, die zum Wörterbuch vor dessen Unveränderlichkeit hinzugefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-156">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-157">Erstellt ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält und den angegebenen Schlüsselvergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-158">Ein neues unveränderliches Wörterbuch, das die angegebenen Elemente enthält und den angegebenen Vergleich verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-159">Der Typ des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-159">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-160">Der Typ des Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-160">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="46a10-161">Das Wörterbuch zum Abrufen des Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-161">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="46a10-162">Der zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-162">The key to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-163">Ruft den Wert für einen bestimmten Schlüssel auf, wenn ein übereinstimmender Schlüssel im Wörterbuch vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-163">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-164">Der Wert für den Schlüssel oder <c>default(TValue)</c>, wenn kein passender Schlüssel gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-165">Der Typ des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-165">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-166">Der Typ des Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-166">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="46a10-167">Das Wörterbuch zum Abrufen des Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-167">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="46a10-168">Der zu suchende Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-168">The key to search for.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="46a10-169">Der zurückzugebende Standardwert, wenn kein übereinstimmender Schlüssel im Wörterbuch gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-169">The default value to return if no matching key is found in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-170">Ruft den Wert für einen bestimmten Schlüssel auf, wenn ein übereinstimmender Schlüssel im Wörterbuch vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-170">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-171">Der Wert für den Schlüssel oder <paramref name="defaultValue" />, wenn kein passender Schlüssel gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-172">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-172">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-173">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-173">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-174">Die Sequenz von aufzulistenden Schlüssel-Wert-Paaren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-174">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-175">Listet eine Sequenz von Schlüssel-Wert-Paaren auf und erzeugt ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-176">Ein unveränderliches Wörterbuch, das die Schlüssel-Wert-Paare in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-177">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-177">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-178">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-178">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-179">Die Sequenz von aufzulistenden Schlüssel-Wert-Paaren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-179">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="46a10-180">Der Schlüsselvergleich, der beim Erstellen des unveränderlichen Wörterbuchs verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-180">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-181">Listet eine Sequenz von Schlüssel-Wert-Paaren auf und erzeugt mithilfe des angegebenen Schlüsselvergleichs ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-182">Ein unveränderliches Wörterbuch, das die Schlüssel-Wert-Paare in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-183">Der Typ der Schlüssel im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-183">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-184">Der Typ der Werte im Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-184">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-185">Die Sequenz von aufzulistenden Schlüssel-Wert-Paaren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-185">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="46a10-186">Der Schlüsselvergleich, der beim Erstellen des unveränderlichen Wörterbuchs verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-186">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="46a10-187">Der Wertevergleich für die Verwendung des unveränderlichen Wörterbuchs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-187">The value comparer to use for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-188">Listet eine Sequenz von Schlüssel-Wert-Paaren auf und erzeugt mithilfe des angegebenen Schlüsselvergleichs ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-189">Ein unveränderliches Wörterbuch, das die Schlüssel-Wert-Paare in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="46a10-190">Der Typ des Elements in der Quellauflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-190">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-191">Der Typ des Schlüssels im resultierenden unveränderlichen Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-191">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-192">Die Quellauflistung, die zum Generieren des unveränderlichen Wörterbuchs verwandt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-192">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="46a10-193">Die Funktion, die zum Transformieren der Schlüssel für das unveränderliche Wörterbuch verwandt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-193">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-194">Erstellt ein unveränderliches Wörterbuch aus einer bestehenden Kollektion von Elementen, mit der Anwendung einer Transformationsfunktion zum Quellschlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-195">Das unveränderliche Wörterbuch, das Elemente von <paramref name="source" /> enthält, mit Schlüsseln, die durch die Anwendung von <paramref name="keySelector" /> transformiert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="46a10-196">Der Typ des Elements in der Quellauflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-196">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-197">Der Typ des Schlüssels im resultierenden unveränderlichen Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-197">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-198">Die Quellauflistung, die zum Generieren des unveränderlichen Wörterbuchs verwandt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-198">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="46a10-199">Die Funktion, die zum Transformieren der Schlüssel für das unveränderliche Wörterbuch verwandt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-199">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="46a10-200">Der Schlüsselvergleich, der für das Wörterbuch verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-200">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-201">Erstellt ein unveränderliches Wörterbuch basierend auf einer Sequenztransformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-201">Constructs an immutable dictionary based on some transformation of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-202">Das unveränderliche Wörterbuch, das Elemente von <paramref name="source" /> enthält, mit Schlüsseln, die durch die Anwendung von <paramref name="keySelector" /> transformiert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="46a10-203">Der Typ der Elemente in der Sequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-203">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-204">Der Typ der Schlüssel im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-204">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-205">Der Typ der Werte im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-205">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-206">Die Sequenz, die aufgelistet werden soll, um das Wörterbuch zu generieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-206">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="46a10-207">Die Funktion, die den Schlüssel für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-207">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="46a10-208">Die Funktion, die den Wert für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-208">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-209">Listet eine Sequenz auf und transformiert sie; und erzeugt ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-210">Ein unveränderliches Wörterbuch, das die Elemente in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-210">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="46a10-211">Der Typ der Elemente in der Sequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-211">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-212">Der Typ der Schlüssel im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-212">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-213">Der Typ der Werte im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-213">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-214">Die Sequenz, die aufgelistet werden soll, um das Wörterbuch zu generieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-214">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="46a10-215">Die Funktion, die den Schlüssel für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-215">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="46a10-216">Die Funktion, die den Wert für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-216">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="46a10-217">Der Schlüsselvergleich, der für das Wörterbuch verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-217">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-218">Listet eine Sequenz auf und transformiert sie; und erzeugt mithilfe des angegebenen Schlüsselvergleichs ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-219">Ein unveränderliches Wörterbuch, das die Elemente in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-219">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="46a10-220">Der Typ der Elemente in der Sequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-220">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="46a10-221">Der Typ der Schlüssel im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-221">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="46a10-222">Der Typ der Werte im resultierenden Wörterbuch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-222">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="46a10-223">Die Sequenz, die aufgelistet werden soll, um das Wörterbuch zu generieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-223">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="46a10-224">Die Funktion, die den Schlüssel für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-224">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="46a10-225">Die Funktion, die den Wert für das Wörterbuch aus jedem Sequenzelement erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-225">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="46a10-226">Der Schlüsselvergleich, der für das Wörterbuch verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-226">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="46a10-227">Der Wertevergleich für die Verwendung des Wörterbuchs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-227">The value comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46a10-228">Listet eine Sequenz auf und transformiert sie; und erzeugt mithilfe des angegebenen Schlüssel- und Wertevergleichs ein unveränderliches Wörterbuch ihrer Inhalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46a10-229">Ein unveränderliches Wörterbuch, das die Elemente in der angegebenen Sequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46a10-229">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>