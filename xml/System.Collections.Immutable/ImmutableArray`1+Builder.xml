<Type Name="ImmutableArray&lt;T&gt;+Builder" FullName="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a123a984ae26c2beee8f6bcdfd98c0eabf182f72" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImmutableArray&lt;T&gt;.Builder : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ImmutableArray`1/Builder&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray`1.Builder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableArray(Of T).Builder&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ImmutableArray&lt;T&gt;::Builder sealed : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c691a-101">Ein beschreibbarer Arrayaccessor, der in eine <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Instanz konvertiert werden kann, ohne zusätzlichen Speicher zu belegen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c691a-101">A writable array accessor that can be converted into an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> instance without allocating extra memory.</span>
      </span>
      <span data-ttu-id="c691a-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="c691a-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-103">Das Objekt, das dem Array hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-103">The object to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-104">Fügt dem Array das angegebene Element hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-104">Adds the specified item to the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-105">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-105">The items to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-106">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-106">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ImmutableArray(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-107">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-107">The items to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-108">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-108">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(System.Collections.Immutable.ImmutableArray`1.Builder{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ImmutableArray(Of T).Builder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-109">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-109">The items to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-110">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-110">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (ParamArray items As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(... cli::array &lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-111">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-111">The items to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-112">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-112">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(System.Collections.Immutable.ImmutableArray{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ImmutableArray(Of T), length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-113">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-113">The items to add to the array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c691a-114">Die Anzahl der aus dem Quellarray hinzuzufügenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-114">The number of elements from the source array to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-115">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-115">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (T[] items, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(!T[] items, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As T(), length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;T&gt; ^ items, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="c691a-116">Das Element, das der Liste hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-116">The items to add to the array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c691a-117">Die Anzahl der aus dem Quellarray hinzuzufügenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-117">The number of elements from the source array to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-118">Fügt das angegebene Element am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-118">Adds the specified items to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange&lt;TDerived&gt;">
      <MemberSignature Language="C#" Value="public void AddRange&lt;TDerived&gt; (System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items) where TDerived : T;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange&lt;(!T) TDerived&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange(Of TDerived As T) (items As ImmutableArray(Of TDerived))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived&gt;&#xA; where TDerived : T void AddRange(System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="c691a-119">Der Typ, der von dem bereits im Array vorhandenen Elementtyp abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-119">The type that derives from the type of item already in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="c691a-120">Die Elemente, die dem Ende des Arrays hinzugefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-120">The items to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-121">Fügt die angegebenen Elemente, die vom derzeit im Array angegebenen Typ abgeleitet werden, am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-121">Adds the specified items that derive from the type currently in the array, to the end of the array</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange&lt;TDerived&gt;">
      <MemberSignature Language="C#" Value="public void AddRange&lt;TDerived&gt; (System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;.Builder items) where TDerived : T;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange&lt;(!T) TDerived&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TDerived&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange(Of TDerived As T) (items As ImmutableArray(Of TDerived).Builder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived&gt;&#xA; where TDerived : T void AddRange(System::Collections::Immutable::ImmutableArray&lt;TDerived&gt;::Builder ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;+Builder" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="c691a-122">Der Typ, der von dem bereits im Array vorhandenen Elementtyp abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-122">The type that derives from the type of item already in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="c691a-123">Die Elemente, die dem Ende des Arrays hinzugefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-123">The items to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-124">Fügt die angegebenen Elemente, die vom derzeit im Array angegebenen Typ abgeleitet werden, am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-124">Adds the specified items that derive from the type currently in the array, to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange&lt;TDerived&gt;">
      <MemberSignature Language="C#" Value="public void AddRange&lt;TDerived&gt; (TDerived[] items) where TDerived : T;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange&lt;(!T) TDerived&gt;(!!TDerived[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.AddRange``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange(Of TDerived As T) (items As TDerived())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived&gt;&#xA; where TDerived : T void AddRange(cli::array &lt;TDerived&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="TDerived[]" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="c691a-125">Der Typ, der von dem bereits im Array vorhandenen Elementtyp abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-125">The type that derives from the type of item already in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="c691a-126">Die Elemente, die dem Ende des Arrays hinzugefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-126">The items to add to end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-127">Fügt die angegebenen Elemente, die vom derzeit im Array angegebenen Typ abgeleitet werden, am Ende des Arrays hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-127">Adds the specified items that derive from the type currently in the array, to the end of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Builder.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c691a-128">Ruft die Länge des internen Arrays ab bzw. legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-128">Get and sets the length of the internal array.</span>
          </span>
          <span data-ttu-id="c691a-129">Wenn sie festgelegt wird, wird das interne Array der angegebenen Kapazität neu zugeordnet, wenn es nicht bereits in der angegebenen Länge vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-129">When set the internal array is             reallocated to the given capacity if it is not already the specified length.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-130">Entfernt alle Elemente aus dem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-130">Removes all items from the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-131">Das Objekt, das im Array gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-131">The object to locate in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-132">Bestimmt, ob das Array einen bestimmten Wert enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-132">Determines whether the array contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-133">
            <see langword="true" />, wenn das Objekt gefunden wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-133">
              <see langword="true" /> if the object is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c691a-134">Das Array, in das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-134">The array to copy to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c691a-135">Der Index, an dem der Kopiervorgang gestartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-135">The index to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-136">Kopiert den aktuellen Inhalt in das angegebene Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-136">Copies the current contents to the specified array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Builder.Count" />
      <MemberSignature Language="VB.NET" Value="Public Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c691a-137">Ruft die Anzahl der Elemente im Array ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-137">Gets or sets the number of items in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c691a-138">Die Anzahl der Elemente im Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-138">The number of items in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c691a-139">Wenn der Wert verringert wird, werden die Arrayinhalte abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="c691a-139">If the value is decreased, the array contents are truncated.</span></span>  
  
 <span data-ttu-id="c691a-140">Wenn der Wert erhöht wird, werden die hinzugefügten Elemente auf ihren Standardwert initialisiert.</span><span class="sxs-lookup"><span data-stu-id="c691a-140">If the value is increased, the added elements are initialized to their default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-141">Ruft ein Objekt ab, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-141">Gets an object that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-142">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-142">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-143">Das Element, das im Array gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-143">The item to locate in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-144">Bestimmt den Index eines bestimmten Elements im Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-144">Determines the index of a specific item in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-145">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-145">The index of <paramref name="item" /> if it’s found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-146">Das Element, das im Array gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-146">The item to locate in the array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-147">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-147">The starting position of the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-148">Bestimmt den Index des angegebenen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-148">Determines the index of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-149">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-149">The index of <paramref name="item" /> if it’s found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-150">Das Element, das im Array gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-150">The item to locate in the array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-151">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-151">The starting position of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c691a-152">Die Anzahl der zu suchenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-152">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-153">Bestimmt den Index des angegebenen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-153">Determines the index of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-154">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-154">The index of <paramref name="item" /> if it’s found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-155">Das Element, das im Array gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-155">The item to locate in the array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-156">Der Index, bei dem mit der Suche begonnen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-156">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c691a-157">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-157">The starting position of the search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="c691a-158">Der Gleichheitsvergleich für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-158">The equality comparer to use in the search</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-159">Bestimmt den Index des angegebenen Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-159">Determines the index for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-160">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-160">The index of <paramref name="item" /> if it’s found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c691a-161">Der nullbasierte Index, an dem das Element eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-161">The zero-based index at which to insert the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="c691a-162">Das Objekt, das in das Array eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-162">The object to insert into the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-163">Fügt ein Element am angegebenen Index in das Array ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-163">Inserts an item in the array at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Builder.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c691a-164">Der Index des abzurufenden oder festzulegenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-164">The index of the item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-165">Ruft das Element am angegebenen Index ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-165">Gets or sets the item at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c691a-166">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-166">The item at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="c691a-167">Der angegebene Index befindet sich nicht im Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-167">The specified index is not in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ItemRef">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.T&amp; ItemRef (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.T&amp; modreq(System.Runtime.InteropServices.InAttribute) ItemRef(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.ItemRef(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemRef (index As Integer) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::T&amp; ^ ItemRef(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.T&amp;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-168">Das Element, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-168">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-169">Bestimmt den nullbasierten Index des letzten Vorkommens des angegebenen Elements in diesem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-169">Determines the 0-based index of the last occurrence of the specified item in this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-170">Der nullbasierte Index, in dem das Element gefunden wurde; oder -1, wenn es nicht gefunden werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-170">The 0-based index where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-171">Das Element, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-171">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-172">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-172">The starting position of the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-173">Bestimmt den nullbasierten Index des letzten Vorkommens des angegebenen Elements in diesem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-173">Determines the 0-based index of the last occurrence of the specified item in this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-174">Der nullbasierte Index im Array, in dem das Element gefunden wurde; oder -1, wenn es nicht gefunden werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-174">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-175">Das Element, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-175">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-176">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-176">The starting position of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c691a-177">Die Anzahl der zu suchenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-177">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-178">Bestimmt den nullbasierten Index des letzten Vorkommens des angegebenen Elements in diesem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-178">Determines the 0-based index of the last occurrence of the specified item in this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-179">Der nullbasierte Index im Array, in dem das Element gefunden wurde; oder -1, wenn es nicht gefunden werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-179">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c691a-180">Das Element, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-180">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c691a-181">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-181">The starting position of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c691a-182">Die Anzahl der zu suchenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-182">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="c691a-183">Der Gleichheitsvergleich für die Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-183">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-184">Bestimmt den nullbasierten Index des letzten Vorkommens des angegebenen Elements in diesem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-184">Determines the 0-based index of the last occurrence of the specified item in this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-185">Der nullbasierte Index im Array, in dem das Element gefunden wurde; oder -1, wenn es nicht gefunden werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-185">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToImmutable">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; MoveToImmutable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; MoveToImmutable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.MoveToImmutable" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveToImmutable () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; MoveToImmutable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-186">Extrahiert das interne Array als <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> und ersetzt es durch ein Array, das eine Länge von 0 (null) hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-186">Extracts the internal array as an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> and replaces it              with a zero length array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c691a-187">Wenn <see cref="P:System.Collections.Immutable.ImmutableArray`1.Builder.Count" /> nicht <see cref="P:System.Collections.Immutable.ImmutableArray`1.Builder.Capacity" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-187">When <see cref="P:System.Collections.Immutable.ImmutableArray`1.Builder.Count" /> doesn't              equal <see cref="P:System.Collections.Immutable.ImmutableArray`1.Builder.Capacity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (element As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T element);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="T" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c691a-188">Das zu entfernende Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-188">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-189">Entfernt das angegebene Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-189">Removes the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-190">
            <see langword="true" />, wenn <paramref name="element" /> gefunden und entfernt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-190">
              <see langword="true" /> if <paramref name="element" /> was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c691a-191">Der nullbasierte Index des zu entfernenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-191">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-192">Entfernt das Element am angegebenen Index aus dem Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-192">Removes the item at the specified index from the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-193">Kehrt die Reihenfolge der Elemente in der Auflistung um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-193">Reverses the order of elements in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-194">Sortiert den Inhalt des Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-194">Sorts the contents of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="c691a-195">Der Vergleich, der für die Sortierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-195">The comparer to use for sorting.</span>
          </span>
          <span data-ttu-id="c691a-196">Wenn der Vergleich <see langword="null" /> ist, wird der Standardvergleich für den Elementtyp im Array verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-196">If comparer is <see langword="null" />, the default comparer for the elements type in the array is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-197">Sortiert den Inhalt des Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-197">Sorts the contents of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="c691a-198">Die <see cref="T:System.Comparison`1" />, die beim Vergleich von Elementen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-198">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-199">Sortiert die Elemente im gesamten Array mithilfe des angegebenen <see cref="T:System.Comparison`1" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-199">Sorts the elements in the entire array using             the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c691a-200">
            <paramref name="comparison" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-200">
              <paramref name="comparison" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c691a-201">Der Startindex für die Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-201">The starting index for the sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c691a-202">Die Anzahl von Elementen, die in die Sortierung eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-202">The number of elements to include in the sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="c691a-203">Der Vergleich, der für die Sortierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-203">The comparer to use for sorting.</span>
          </span>
          <span data-ttu-id="c691a-204">Wenn der Vergleich <see langword="null" /> ist, wird der Standardvergleich für den Elementtyp im Array verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-204">If comparer is <see langword="null" />, the default comparer for the elements type in the array is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c691a-205">Sortiert den Inhalt des Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-205">Sorts the contents of the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Builder.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c691a-206">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-206">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c691a-207">True, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls "false" ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-207">true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-208">Gibt einen Enumerator zurück, der das Array durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-208">Returns an enumerator that iterates through the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-209">Ein Enumerator, der das Array durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-209">An enumerator that iterates through the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c691a-210">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c691a-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c691a-211">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableArray%601.Builder>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c691a-211">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601.Builder> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-212">Gibt einen Enumerator zurück, der das Array durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-212">Returns an enumerator that iterates through the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-213">Ein Enumerator, der das Array durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-213">An enumerator that iterates through the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c691a-214">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="c691a-214">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c691a-215">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableArray%601.Builder>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="c691a-215">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601.Builder> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-216">Erstellt ein neues Array mit dem aktuellen Inhalt dieses <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-216">Creates a new array with the current contents of this <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-217">Ein neues Array mit dem Inhalt dieses <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-217">A new array with the contents of this <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutable">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; ToImmutable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; ToImmutable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Builder.ToImmutable" />
      <MemberSignature Language="VB.NET" Value="Public Function ToImmutable () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; ToImmutable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c691a-218">Gibt ein unveränderliches Array mit dem aktuellen Inhalt dieses <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-218">Returns an immutable array that contains the current contents of this <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c691a-219">Ein unveränderliches Array mit dem aktuellen Inhalt dieses <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c691a-219">An immutable array that contains the current contents of this <see cref="T:System.Collections.Immutable.ImmutableArray`1.Builder" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>