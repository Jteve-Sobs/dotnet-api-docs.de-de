<Type Name="ImmutableSortedSet&lt;T&gt;" FullName="System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2f1ee3320f75a3992585bf511bb7ad93fd311b0" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83475332" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImmutableSortedSet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.Generic.ISet&lt;T&gt;, System.Collections.IList, System.Collections.Immutable.IImmutableSet&lt;T&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImmutableSortedSet`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.Generic.ISet`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableSortedSet`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableSortedSet(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IImmutableSet(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T), ISet(Of T)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ImmutableSortedSet sealed : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::Generic::ISet&lt;T&gt;, System::Collections::IList, System::Collections::Immutable::IImmutableSet&lt;T&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type ImmutableSortedSet&lt;'T&gt; = class&#xA;    interface IImmutableSet&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface ISet&lt;'T&gt;&#xA;    interface IList&#xA;    interface ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public sealed class ImmutableSortedSet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.Generic.IReadOnlySet&lt;T&gt;, System.Collections.Generic.ISet&lt;T&gt;, System.Collections.IList, System.Collections.Immutable.IImmutableSet&lt;T&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImmutableSortedSet`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlySet`1&lt;!T&gt;, class System.Collections.Generic.ISet`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableSortedSet(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IImmutableSet(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T), IReadOnlySet(Of T), ISet(Of T)" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ImmutableSortedSet sealed : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::Generic::IReadOnlySet&lt;T&gt;, System::Collections::Generic::ISet&lt;T&gt;, System::Collections::IList, System::Collections::Immutable::IImmutableSet&lt;T&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type ImmutableSortedSet&lt;'T&gt; = class&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ISet&lt;'T&gt;&#xA;    interface IReadOnlySet&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IImmutableSet&lt;'T&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type ImmutableSortedSet&lt;'T&gt; = class&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ISet&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IImmutableSet&lt;'T&gt;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
    <AssemblyVersion>1.2.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ISet&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Immutable.IImmutableSet&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Immutable.ImmutableSortedSetDebuggerProxy`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="44d52-101">Der Typ der Elemente in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-101">The type of elements in the set.</span></span></typeparam>
    <summary><span data-ttu-id="44d52-102">Stellt die Implementierung einer unveränderlichen sortierten Gruppe dar.</span><span class="sxs-lookup"><span data-stu-id="44d52-102">Represents an immutable sorted set implementation.</span></span>

<span data-ttu-id="44d52-103">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span><span class="sxs-lookup"><span data-stu-id="44d52-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-104">Erstellen Sie eine neue unveränderliche sortierte Gruppe, die bereits mit Elementen aufgefüllt ist, indem Sie die <xref:System.Collections.Immutable.ImmutableSortedSet.CreateRange%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="44d52-104">Create a new immutable sorted set that is prepopulated with items by using the <xref:System.Collections.Immutable.ImmutableSortedSet.CreateRange%2A> method.</span></span> <span data-ttu-id="44d52-105">Wenn Sie eine unveränderliche Gruppe mit Methoden wie z. b. <xref:System.Collections.Immutable.ImmutableSortedSet%601.Add%2A>, <xref:System.Collections.Immutable.ImmutableSortedSet%601.Reverse%2A> oder <xref:System.Collections.Immutable.ImmutableSortedSet%601.Remove%2A>bearbeiten, wird eine Kopie der ursprünglich sortierten Gruppe erstellt, Bearbeitungen angewendet und eine neue unveränderlich sortierte Gruppe zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="44d52-105">When you manipulate an immutable set with methods such as <xref:System.Collections.Immutable.ImmutableSortedSet%601.Add%2A>, <xref:System.Collections.Immutable.ImmutableSortedSet%601.Reverse%2A> or <xref:System.Collections.Immutable.ImmutableSortedSet%601.Remove%2A>, a copy of the original sorted set is made, manipulations applied and a new immutable sorted set is returned.</span></span>

<span data-ttu-id="44d52-106">Wenn Sie mehrere Vorgänge für eine unveränderliche Auflistung ausführen müssen, können Sie die <xref:System.Collections.Immutable.ImmutableSortedSet%601> mithilfe der <xref:System.Collections.Immutable.ImmutableSortedSet%601.ToBuilder%2A>-Methode in eine <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder>kopieren, die Menge bearbeiten und Sie mithilfe der <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder.ToImmutable%2A>-Methode wieder unveränderlich machen.</span><span class="sxs-lookup"><span data-stu-id="44d52-106">If you need to perform multiple operations on an immutable collection, to increase efficiency you can copy the <xref:System.Collections.Immutable.ImmutableSortedSet%601> to a <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder>, using the <xref:System.Collections.Immutable.ImmutableSortedSet%601.ToBuilder%2A> method, manipulate the set and make it immutable again using the <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder.ToImmutable%2A> method.</span></span> <span data-ttu-id="44d52-107">Dadurch wird die ursprüngliche unveränderliche sortierte Gruppe nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="44d52-107">This will not change the original immutable sorted set.</span></span>

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="44d52-108">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="44d52-108">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As T) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Add(T value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-109">Der hinzuzufügende Wert.</span><span class="sxs-lookup"><span data-stu-id="44d52-109">The value to add.</span></span></param>
        <summary><span data-ttu-id="44d52-110">Fügt dieser unveränderlichen sortierten Gruppe den angegebenen Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-110">Adds the specified value to this immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-111">Eine neue Gruppe mit dem hinzugefügten Element oder diese Gruppe, wenn das Element bereits in dieser Gruppe enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-111">A new set with the element added, or this set if the element is already in this set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-112">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-112">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-113">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-113">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-114">Entfernt alle Elemente aus der unveränderlichen sortierten Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-114">Removes all elements from the immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-115">Eine leere Gruppe, aus der die Elemente entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="44d52-115">An empty set with the elements removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-116">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-116">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-117">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-117">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="immutableSortedSet.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Contains(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-118">Der zu suchende Wert.</span><span class="sxs-lookup"><span data-stu-id="44d52-118">The value to check for.</span></span></param>
        <summary><span data-ttu-id="44d52-119">Ermittelt, ob diese unveränderliche sortierte Gruppe den angegebenen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="44d52-119">Determines whether this immutable sorted set contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="44d52-120"><see langword="true" />, wenn die Gruppe den angegebenen Wert enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-120"><see langword="true" /> if the set contains the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-121">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-121">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-122">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-122">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-123">Ruft die Anzahl der Elemente in der unveränderlich sortierten Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-123">Gets the number of elements in the immutable sorted set.</span></span></summary>
        <value><span data-ttu-id="44d52-124">Die Anzahl der Elemente in der unveränderlichen sortierten Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-124">The number of elements in the immutable sorted set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-125">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-125">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-126">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-126">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Immutable.ImmutableSortedSet`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As ImmutableSortedSet(Of T) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-127">Ruft eine leere unveränderliche sortierte Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-127">Gets an empty immutable sorted set.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Except (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Except(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Except(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (other As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Except(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="member this.Except : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Except other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-128">Die Elemente, die aus der Gruppe entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="44d52-128">The items to remove from this set.</span></span></param>
        <summary><span data-ttu-id="44d52-129">Entfernt eine angegebene Gruppe von Elementen aus dieser unveränderlichen sortierten Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-129">Removes a specified set of items from this immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-130">Eine neue Gruppe, aus der die Elemente entfernt wurden; oder die ursprüngliche Gruppe, wenn keines der Elemente in der Gruppe enthalten war.</span><span class="sxs-lookup"><span data-stu-id="44d52-130">A new set with the items removed; or the original set if none of the items were in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-131">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-131">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-132">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-132">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Collections.Immutable.ImmutableSortedSet`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableSortedSet(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Immutable::ImmutableSortedSet&lt;T&gt;::Enumerator GetEnumerator();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Enumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Enumerator" Usage="immutableSortedSet.GetEnumerator " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableSortedSet`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt;::Enumerator GetEnumerator();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Enumerator" Usage="immutableSortedSet.GetEnumerator " FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-133">Gibt einen Enumerator zurück, der die unveränderliche sortierte Gruppe durchläuft.</span><span class="sxs-lookup"><span data-stu-id="44d52-133">Returns an enumerator that iterates through the immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-134">Ein Enumerator, der zum Durchlaufen der Gruppe verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="44d52-134">An enumerator that can be used to iterate through the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="44d52-135">Wenn Sie diesen Enumerator als Werttyp verwenden (d. h. wenn er nicht gekapselt ist), kopieren Sie ihn nicht, indem Sie ihn einer zweiten Variablen zuweisen oder Sie an eine andere Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="44d52-135">When you  use this enumerator as a value type (that is, when it isn't boxed), do not copy it by assigning it to a second variable or by passing it to another method.</span></span> <span data-ttu-id="44d52-136">Wenn dieser Enumerator verworfen wird, gibt er einen änderbaren Verweistyp Stapel an einen Ressourcenpool zurück, und wenn der Werttyp Enumerator kopiert wird (Dies kann versehentlich vorkommen, wenn Sie den Wert weitergeben), besteht das Risiko, dass ein Stapel, der bereits an den Ressourcenpool zurückgegeben wurde, von einer der enumeratorkopien weiterhin verwendet wird. , was zu Daten Beschädigung und Ausnahmen führt.</span><span class="sxs-lookup"><span data-stu-id="44d52-136">When this enumerator is disposed of, it returns a mutable reference type stack to a resource pool, and if the value type enumerator is copied (which can easily happen unintentionally if you pass the value around), there is a risk that a stack that has already been returned to the resource pool may still be in use by one of the enumerator copies, leading to data corruption and exceptions.</span></span>

[<span data-ttu-id="44d52-137">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-137">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-138">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-138">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="immutableSortedSet.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="44d52-139">Der Wert, dessen Position gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-139">The value whose position is being sought.</span></span></param>
        <summary><span data-ttu-id="44d52-140">Ruft die Position, an der der angegebene Wert auftritt, innerhalb dieser unveränderlichen sortierten Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-140">Gets the position within this immutable sorted set that the specified value appears in.</span></span></summary>
        <returns><span data-ttu-id="44d52-141">Der Index des angegebenen <paramref name="item" /> in der sortierten Gruppe, sofern <paramref name="item" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="44d52-141">The index of the specified <paramref name="item" /> in the sorted set, if <paramref name="item" /> is found.</span></span> <span data-ttu-id="44d52-142">Wenn <paramref name="item" /> nicht gefunden wurde und kleiner als mindestens ein Element in dieser Gruppe ist, gibt diese Methode eine negative Zahl zurück, die das bitweise Komplement des Indexes des ersten Elements darstellt, das größer als der Wert ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-142">If <paramref name="item" /> is not found and is less than one or more elements in this set, this method returns a negative number that is the bitwise complement of the index of the first element that is larger than value.</span></span> <span data-ttu-id="44d52-143">Wenn <paramref name="item" /> nicht gefunden wurde und größer als alle Elemente in der Gruppe ist, gibt diese Methode eine negative Zahl zurück, die das bitweise Komplement des Indexes des letzten Elements plus 1 darstellt.</span><span class="sxs-lookup"><span data-stu-id="44d52-143">If <paramref name="item" /> is not found and is greater than any of the elements in the set, this method returns a negative number that is the bitwise complement of the index of the last element plus 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-144">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-144">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-145">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-145">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Intersect (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Intersect(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Intersect(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="member this.Intersect : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Intersect other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-146">Die Gruppe, deren Schnittmenge mit dieser gebildet werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-146">The set to intersect with this one.</span></span></param>
        <summary><span data-ttu-id="44d52-147">Erstellt eine unveränderliche sortierte Gruppe, die Elemente enthält, die sowohl in dieser Gruppe als auch in der angegebenen Gruppe vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-147">Creates an immutable sorted set that contains elements that exist both in this set and in the specified set.</span></span></summary>
        <returns><span data-ttu-id="44d52-148">Eine neue unveränderliche sortierte Gruppe, die Elemente enthält, die in beiden Gruppen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-148">A new immutable sorted set that contains any elements that exist in both sets.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-149">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-149">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-150">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-150">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-151">Ruft einen Wert ab, der angibt, ob diese unveränderliche sortierte Gruppe leer ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-151">Gets a value that indicates whether this immutable sorted set is empty.</span></span></summary>
        <value><span data-ttu-id="44d52-152"><see langword="true" />, wenn die Gruppe leer ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-152"><see langword="true" /> if this set is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-153">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-153">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-154">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-154">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSubsetOf : seq&lt;'T&gt; -&gt; bool&#xA;override this.IsProperSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.IsProperSubsetOf other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-155">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-155">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-156">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe eine echte (strikte) Teilmenge der angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-156">Determines whether the current immutable sorted set is a proper (strict) subset of the specified collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-157"><see langword="true" />, wenn die aktuelle Gruppe eine echte Teilmenge von <paramref name="other" /> ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-157"><see langword="true" /> if the current set is a proper subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="44d52-158">Ein leerer Satz ist eine ordnungsgemäße Teilmenge einer anderen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="44d52-158">An empty set is a proper subset of any other collection.</span></span> <span data-ttu-id="44d52-159">Daher gibt diese Methode `true` zurück, wenn die aktuelle Gruppe leer ist, es sei denn, die `other` Auflistung ist ebenfalls leer.</span><span class="sxs-lookup"><span data-stu-id="44d52-159">Therefore, this method returns `true` if the current set is empty, unless the `other` collection is also empty.</span></span>

[<span data-ttu-id="44d52-160">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-160">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-161">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-161">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsProperSupersetOf : seq&lt;'T&gt; -&gt; bool&#xA;override this.IsProperSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.IsProperSupersetOf other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-162">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-162">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-163">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe eine echte Obermenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-163">Determines whether the current immutable sorted set is a proper superset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-164"><see langword="true" />, wenn die aktuelle Gruppe eine echte Obermenge von <paramref name="other" /> ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-164"><see langword="true" /> if the current set is a proper superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-165">Ein leerer Satz ist eine ordnungsgemäße supermenge einer anderen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="44d52-165">An empty set is a proper superset of any other collection.</span></span> <span data-ttu-id="44d52-166">Daher gibt diese Methode `true` zurück, wenn die durch den `other`-Parameter dargestellte Auflistung leer ist, es sei denn, die aktuelle Gruppe ist ebenfalls leer.</span><span class="sxs-lookup"><span data-stu-id="44d52-166">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, unless the current set is also empty.</span></span>

[<span data-ttu-id="44d52-167">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-167">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-168">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-168">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : seq&lt;'T&gt; -&gt; bool&#xA;override this.IsSubsetOf : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.IsSubsetOf other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-169">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-169">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-170">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe eine Teilmenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-170">Determines whether the current immutable sorted set is a subset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-171"><see langword="true" />, wenn die aktuelle Gruppe eine Teilmenge von <paramref name="other" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-171"><see langword="true" /> if the current set is a subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-172">Ein leerer Satz ist eine Teilmenge eines beliebigen anderen Satzes, einschließlich einer anderen leeren Menge.</span><span class="sxs-lookup"><span data-stu-id="44d52-172">An empty set is a subset of any other set, including another empty set.</span></span> <span data-ttu-id="44d52-173">Daher gibt diese Methode `true` zurück, wenn die aktuelle Gruppe leer ist, auch wenn die `other` Auflistung ebenfalls leer ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-173">Therefore, this method returns `true` if the current set is empty, even if the `other` collection is also empty.</span></span>

[<span data-ttu-id="44d52-174">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-174">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-175">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-175">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member IsSupersetOf : seq&lt;'T&gt; -&gt; bool&#xA;override this.IsSupersetOf : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.IsSupersetOf other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-176">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-176">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-177">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe eine Obermenge einer angegebenen Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-177">Determines whether the current immutable sorted set is a superset of a specified collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-178"><see langword="true" />, wenn die aktuelle Gruppe eine Obermenge von <paramref name="other" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-178"><see langword="true" /> if the current set is a superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-179">Alle Auflistungen, einschließlich leerer Sätze, sind übergeordnete Sammlungen eines leeren Satzes.</span><span class="sxs-lookup"><span data-stu-id="44d52-179">All collections, including empty sets, are supersets of an empty set.</span></span> <span data-ttu-id="44d52-180">Daher gibt diese Methode `true` zurück, wenn die durch den `other`-Parameter dargestellte Auflistung leer ist, auch wenn die aktuelle sortierte Gruppe leer ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-180">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current sorted set is empty.</span></span>

[<span data-ttu-id="44d52-181">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-181">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-182">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-182">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-183">Der Index des Elements, das aus der sortierten Gruppe abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-183">The index of the element to retrieve from the sorted set.</span></span></param>
        <summary><span data-ttu-id="44d52-184">Ruft das Element der unveränderlichen sortierten Gruppe am angegebenen Index ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-184">Gets the element of the immutable sorted set at the given index.</span></span></summary>
        <value><span data-ttu-id="44d52-185">Das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="44d52-185">The element at the given index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-186">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-186">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-187">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-187">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemRef">
      <MemberSignature Language="C#" Value="public ref readonly T ItemRef (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T ItemRef(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.ItemRef(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemRef (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T&amp; ^ ItemRef(int index);" />
      <MemberSignature Language="F#" Value="member this.ItemRef : int -&gt; 'T" Usage="immutableSortedSet.ItemRef index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Readonly">
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="netcore-2.1">
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-188">Der nullbasierte Index des Elements in der Gruppe, die zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-188">The 0-based index of the element in the set to return.</span></span></param>
        <summary><span data-ttu-id="44d52-189">Ruft einen schreibgeschützten Verweis auf das Element der Gruppe am angegebenen <paramref name="index" /> ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-189">Gets a read-only reference of the element of the set at the given <paramref name="index" />.</span></span></summary>
        <returns><span data-ttu-id="44d52-190">Ein schreibgeschützter Verweis auf das Element an der angegebenen Position.</span><span class="sxs-lookup"><span data-stu-id="44d52-190">A read-only reference of the element at the given position.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;T&gt; KeyComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!T&gt; KeyComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.KeyComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyComparer As IComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;T&gt; ^ KeyComparer { System::Collections::Generic::IComparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyComparer : System.Collections.Generic.IComparer&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.KeyComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-191">Ruft den Vergleich ab, der zum Sortieren von Schlüsseln in der unveränderlichen sortierten Gruppe verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-191">Gets the comparer used to sort keys in the immutable sorted set.</span></span></summary>
        <value><span data-ttu-id="44d52-192">Der zum Sortieren von Schlüsseln verwendete Vergleich.</span><span class="sxs-lookup"><span data-stu-id="44d52-192">The comparer used to sort keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-193">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-193">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-194">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-194">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public T Max { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Max" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.Max" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Max As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Max { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Max : 'T" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Max" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-195">Ruft den durch den Vergleich definierten Höchstwert in der unveränderlich sortierten Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-195">Gets the maximum value in the immutable sorted set, as defined by the comparer.</span></span></summary>
        <value><span data-ttu-id="44d52-196">Der Höchstwert in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-196">The maximum value in the set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-197">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-197">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-198">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-198">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public T Min { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Min" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.Min" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Min As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Min { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Min : 'T" Usage="System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Min" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-199">Ruft den durch den Vergleich definierten Mindestwert in der unveränderlich sortierten Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="44d52-199">Gets the minimum value in the immutable sorted set, as defined by the comparer.</span></span></summary>
        <value><span data-ttu-id="44d52-200">Der Mindestwert in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-200">The minimum value in the set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-201">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-201">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-202">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-202">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Overlaps : seq&lt;'T&gt; -&gt; bool&#xA;override this.Overlaps : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.Overlaps other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-203">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-203">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-204">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe und eine angegebene Auflistung gemeinsame Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="44d52-204">Determines whether the current immutable sorted set and a specified collection share common elements.</span></span></summary>
        <returns><span data-ttu-id="44d52-205"><see langword="true" />, wenn die aktuelle Auflistung und <paramref name="other" /> über mindestens ein gemeinsames Element verfügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-205"><see langword="true" /> if the current set and <paramref name="other" /> share at least one common element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-206">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-206">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-207">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-207">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Remove(T value);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'T -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-208">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="44d52-208">The element to remove.</span></span></param>
        <summary><span data-ttu-id="44d52-209">Entfernt den angegebenen Wert aus dieser unveränderlichen sortierten Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-209">Removes the specified value from this immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-210">Eine neue unveränderliche sortierte Gruppe, aus der das Element entfernt wurde, oder diese Gruppe, wenn das Element in der Gruppe nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="44d52-210">A new immutable sorted set with the element removed, or this set if the element was not found in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-211">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-211">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-212">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-212">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Function Reverse () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; seq&lt;'T&gt;" Usage="immutableSortedSet.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-213">Gibt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zum Durchlaufen dieser unveränderlichen sortierten Gruppe in umgekehrter Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="44d52-213">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that iterates over this immutable sorted set in reverse order.</span></span></summary>
        <returns><span data-ttu-id="44d52-214">Ein Enumerator, der die unveränderliche sortierte Gruppe in umgekehrter Reihenfolge durchläuft.</span><span class="sxs-lookup"><span data-stu-id="44d52-214">An enumerator that iterates over the immutable sorted set in reverse order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-215">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-215">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-216">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-216">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="abstract member SetEquals : seq&lt;'T&gt; -&gt; bool&#xA;override this.SetEquals : seq&lt;'T&gt; -&gt; bool" Usage="immutableSortedSet.SetEquals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-217">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-217">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-218">Bestimmt, ob die aktuelle unveränderliche sortierte Gruppe und die angegebene Auflistung dieselben Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="44d52-218">Determines whether the current immutable sorted set and the specified collection contain the same elements.</span></span></summary>
        <returns><span data-ttu-id="44d52-219"><see langword="true" />, wenn die Gruppen gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-219"><see langword="true" /> if the sets are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-220">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-220">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-221">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-221">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricExcept">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; SymmetricExcept (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; SymmetricExcept(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SymmetricExcept (other As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ SymmetricExcept(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="member this.SymmetricExcept : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.SymmetricExcept other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-222">Die andere Sequenz von Elementen.</span><span class="sxs-lookup"><span data-stu-id="44d52-222">The other sequence of items.</span></span></param>
        <summary><span data-ttu-id="44d52-223">Erstellt eine unveränderliche sortierte Gruppe, die Elemente enthält, die entweder in dieser Gruppe oder in einer angegebenen Sequenz, aber nicht in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-223">Creates an immutable sorted set that contains elements that exist either in this set or in a given sequence, but not both.</span></span></summary>
        <returns><span data-ttu-id="44d52-224">Die neue unveränderliche sortierte Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-224">The new immutable sorted set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-225">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-225">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-226">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-226">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;T&gt;.Add : 'T -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;T&gt;.Add : 'T -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ICollection&lt;T&gt;.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="44d52-227">Der hinzuzufügende Wert.</span><span class="sxs-lookup"><span data-stu-id="44d52-227">The value to add.</span></span></param>
        <summary><span data-ttu-id="44d52-228">Fügt der Auflistung den angegebenen Wert hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-228">Adds the specified value to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-229">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-230">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-230">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>

[<span data-ttu-id="44d52-231">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-231">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-232">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-232">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;T&gt;.Clear : unit -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;T&gt;.Clear : unit -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ICollection&lt;T&gt;.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-233">Entfernt alle Elemente aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="44d52-233">Removes all the items from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-234">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-235">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-235">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>

[<span data-ttu-id="44d52-236">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-236">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-237">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-237">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As T(), arrayIndex As Integer) Implements ICollection(Of T).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;T&gt;::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;T&gt;.CopyTo : 'T[] * int -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;T&gt;.CopyTo : 'T[] * int -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ICollection&lt;T&gt;.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="44d52-238">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-238">The one-dimensional array that is the destination of the elements copied from collection.</span></span> <span data-ttu-id="44d52-239">Das Array muss über eine nullbasierte Indizierung verfügen.</span><span class="sxs-lookup"><span data-stu-id="44d52-239">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="44d52-240">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="44d52-240">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="44d52-241">Kopiert die Elemente der Auflistung in ein Array, beginnend an einem bestimmten Arrayindex.</span><span class="sxs-lookup"><span data-stu-id="44d52-241">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-242">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-242">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-243">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-243">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>

[<span data-ttu-id="44d52-244">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-244">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-245">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-245">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-246">„true“ wird zurückgegeben, da unveränderliche Auflistungen immer schreibgeschützt sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-246">Returns true, since immutable collections are always read-only.</span></span> <span data-ttu-id="44d52-247">Siehe Schnittstelle <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-247">See the <see cref="T:System.Collections.Generic.ICollection`1" /> interface.</span></span></summary>
        <value><span data-ttu-id="44d52-248">Ein boolescher Wert, der angibt, ob die Sammlung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-248">A boolean value indicating whether the collection is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;T&gt;.Remove : 'T -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;T&gt;.Remove : 'T -&gt; bool" Usage="immutableSortedSet.System.Collections.Generic.ICollection&lt;T&gt;.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="44d52-249">Das aus der Auflistung zu entfernende Objekt.</span><span class="sxs-lookup"><span data-stu-id="44d52-249">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="44d52-250">Entfernt das erste Vorkommen eines bestimmten Objekts aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="44d52-250">Removes the first occurrence of a specific object from the collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-251"><see langword="true" />, wenn <paramref name="item" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-251"><see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-252">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-253">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-253">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>

[<span data-ttu-id="44d52-254">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-254">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-255">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-255">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-256">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="44d52-256">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-257">Ein Enumerator, mit dem die Auflistung durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="44d52-257">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-258">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-259">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-259">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>

[<span data-ttu-id="44d52-260">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-260">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-261">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-261">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T item) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;T&gt;.Insert : int * 'T -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;T&gt;.Insert : int * 'T -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.IList&lt;T&gt;.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-262">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-262">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="44d52-263">Das in die Gruppe einzufügende Objekt.</span><span class="sxs-lookup"><span data-stu-id="44d52-263">The object to insert into the set.</span></span></param>
        <summary><span data-ttu-id="44d52-264">Fügt ein Element am angegebenen Index in die Gruppe ein.</span><span class="sxs-lookup"><span data-stu-id="44d52-264">Inserts an item in the set at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-265">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-265">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-266">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.IList%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-266">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

[<span data-ttu-id="44d52-267">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-267">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-268">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-268">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System::Collections::Generic::IList&lt;T&gt;::Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IList&lt;T&gt;.Item(int) : 'T with get, set" Usage="System.Collections.Generic.IList&lt;T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-269">Dies ist der nullbasierte Index des Elements, auf das zugegriffen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-269">The zero-based index of the item to access.</span></span></param>
        <summary><span data-ttu-id="44d52-270">Siehe Schnittstelle <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-270">See the <see cref="T:System.Collections.Generic.IList`1" /> interface.</span></span></summary>
        <value><span data-ttu-id="44d52-271">Das Element, das am angegebenen Index gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-271">The element stored at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;T&gt;.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;T&gt;.RemoveAt : int -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.IList&lt;T&gt;.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-272">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="44d52-272">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="44d52-273">Entfernt das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="44d52-273">Removes the  item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-274">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-275">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.IList%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-275">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

[<span data-ttu-id="44d52-276">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-276">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-277">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-277">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ISet&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="bool ISet&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ISet&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ISet&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As T) As Boolean Implements ISet(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ISet&lt;T&gt;.Add(T item) = System::Collections::Generic::ISet&lt;T&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ISet&lt;T&gt;.Add : 'T -&gt; bool&#xA;override this.System.Collections.Generic.ISet&lt;T&gt;.Add : 'T -&gt; bool" Usage="immutableSortedSet.System.Collections.Generic.ISet&lt;T&gt;.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="44d52-278">Der Element, das zur Menge hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-278">The element to add to the set.</span></span></param>
        <summary><span data-ttu-id="44d52-279">Fügt der aktuellen Gruppe ein Element hinzu und gibt einen Wert zurück, um anzugeben, ob das Element erfolgreich hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="44d52-279">Adds an element to the current set and returns a value to indicate if the element was successfully added.</span></span></summary>
        <returns><span data-ttu-id="44d52-280"><see langword="true" />, wenn das Element der Gruppe hinzugefügt wurde. <see langword="false" />, wenn das Element bereits in der Gruppe enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-280"><see langword="true" /> if the element is added to the set; <see langword="false" /> if the element is already in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-281">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-282">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ISet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-282">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ISet%601> interface.</span></span>

[<span data-ttu-id="44d52-283">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-283">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-284">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-284">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ISet&lt;T&gt;.ExceptWith">
      <MemberSignature Language="C#" Value="void ISet&lt;T&gt;.ExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ISet&lt;T&gt;.ExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ISet&lt;T&gt;#ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub ExceptWith (other As IEnumerable(Of T)) Implements ISet(Of T).ExceptWith" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ISet&lt;T&gt;.ExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Generic::ISet&lt;T&gt;::ExceptWith;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ISet&lt;T&gt;.ExceptWith : seq&lt;'T&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ISet&lt;T&gt;.ExceptWith : seq&lt;'T&gt; -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ISet&lt;T&gt;.ExceptWith other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-285">Die Auflistung der Elemente, die aus der Gruppe entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="44d52-285">The collection of items to remove from the set.</span></span></param>
        <summary><span data-ttu-id="44d52-286">Entfernt alle Elemente in der angegebenen Auflistung aus der aktuellen Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-286">Removes all elements in the specified collection from the current set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-287">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-288">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ISet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-288">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ISet%601> interface.</span></span>

[<span data-ttu-id="44d52-289">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-289">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-290">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-290">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ISet&lt;T&gt;.IntersectWith">
      <MemberSignature Language="C#" Value="void ISet&lt;T&gt;.IntersectWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ISet&lt;T&gt;.IntersectWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ISet&lt;T&gt;#IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub IntersectWith (other As IEnumerable(Of T)) Implements ISet(Of T).IntersectWith" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ISet&lt;T&gt;.IntersectWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Generic::ISet&lt;T&gt;::IntersectWith;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ISet&lt;T&gt;.IntersectWith : seq&lt;'T&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ISet&lt;T&gt;.IntersectWith : seq&lt;'T&gt; -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ISet&lt;T&gt;.IntersectWith other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-291">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-291">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-292">Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die in einer angegebenen Auflistung ebenfalls enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-292">Modifies the current set so that it contains only elements that are also in a specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-293">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-293">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-294">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ISet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-294">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ISet%601> interface.</span></span>

[<span data-ttu-id="44d52-295">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-295">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-296">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-296">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith">
      <MemberSignature Language="C#" Value="void ISet&lt;T&gt;.SymmetricExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ISet&lt;T&gt;#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub SymmetricExceptWith (other As IEnumerable(Of T)) Implements ISet(Of T).SymmetricExceptWith" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Generic::ISet&lt;T&gt;::SymmetricExceptWith;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith : seq&lt;'T&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith : seq&lt;'T&gt; -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ISet&lt;T&gt;.SymmetricExceptWith other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-297">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-297">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-298">Ändert die aktuelle Gruppe, sodass sie nur Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung, nicht jedoch in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-298">Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-299">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-299">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-300">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ISet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-300">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ISet%601> interface.</span></span>

[<span data-ttu-id="44d52-301">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-301">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-302">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-302">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ISet&lt;T&gt;.UnionWith">
      <MemberSignature Language="C#" Value="void ISet&lt;T&gt;.UnionWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ISet&lt;T&gt;.UnionWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Generic#ISet&lt;T&gt;#UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub UnionWith (other As IEnumerable(Of T)) Implements ISet(Of T).UnionWith" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ISet&lt;T&gt;.UnionWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Generic::ISet&lt;T&gt;::UnionWith;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ISet&lt;T&gt;.UnionWith : seq&lt;'T&gt; -&gt; unit&#xA;override this.System.Collections.Generic.ISet&lt;T&gt;.UnionWith : seq&lt;'T&gt; -&gt; unit" Usage="immutableSortedSet.System.Collections.Generic.ISet&lt;T&gt;.UnionWith other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-303">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-303">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-304">Ändert die aktuelle Gruppe, sodass sie alle Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-304">Modifies the current set so that it contains all elements that are present in either the current set or the specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-305">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-305">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-306">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Generic.ISet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-306">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Generic.ISet%601> interface.</span></span>

[<span data-ttu-id="44d52-307">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-307">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-308">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-308">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="immutableSortedSet.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="44d52-309">Das eindimensionale Array, das das Ziel der aus der Gruppe kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-309">The one-dimensional array that is the destination of the elements copied from the set.</span></span> <span data-ttu-id="44d52-310">Das Array muss über eine nullbasierte Indizierung verfügen.</span><span class="sxs-lookup"><span data-stu-id="44d52-310">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="44d52-311">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="44d52-311">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="44d52-312">Kopiert die Elemente der Gruppe in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-312">Copies the elements of the set to an array, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-313">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-314">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-314">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

[<span data-ttu-id="44d52-315">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-315">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-316">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-316">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-317">„true“ wird zurückgegeben, da unveränderliche Auflistungen immer threadsicher sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-317">Returns true, since immutable collections are always thread-safe.</span></span> <span data-ttu-id="44d52-318">Siehe Schnittstelle <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-318">See the <see cref="T:System.Collections.ICollection" /> interface.</span></span></summary>
        <value><span data-ttu-id="44d52-319">Ein boolescher Wert, der angibt, ob die Auflistung Thread sicher ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-319">A boolean value indicating whether the collection is thread-safe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-320">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-320">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-321">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet`1>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-321">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet`1> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-322">Siehe <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-322">See <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="44d52-323">Objekt, das zum Synchronisieren des Zugriffs auf die Auflistung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-323">Object used for synchronizing access to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-324">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-324">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-325">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet`1>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-325">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet`1> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="immutableSortedSet.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-326">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="44d52-326">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-327">Ein Enumeratorobjekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="44d52-327">An enumerator object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-328">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-329">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-329">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

[<span data-ttu-id="44d52-330">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-330">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-331">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-331">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="immutableSortedSet.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-332">Das Objekt, das dem Satz hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-332">The object to add to the set.</span></span></param>
        <summary><span data-ttu-id="44d52-333">Fügt der Gruppe ein Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-333">Adds an item to the set.</span></span></summary>
        <returns><span data-ttu-id="44d52-334">Die Position, an der das neue Element eingefügt wurde, oder -1, um anzugeben, dass das Element nicht in die Auflistung eingefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="44d52-334">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-335">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-335">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-336">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-336">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-337">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-337">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-338">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-338">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="44d52-339">Die Gruppe ist schreibgeschützt oder weist eine feste Größe auf.</span><span class="sxs-lookup"><span data-stu-id="44d52-339">The set is read-only or has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="immutableSortedSet.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-340">Entfernt alle Elemente aus der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-340">Removes all items from the set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-341">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-341">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-342">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-342">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-343">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-343">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-344">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-344">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="44d52-345">Ausgelöst in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="44d52-345">Thrown in all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="immutableSortedSet.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-346">Das Objekt, das in der Gruppe gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-346">The object to locate in the set.</span></span></param>
        <summary><span data-ttu-id="44d52-347">Ermittelt, ob die Gruppe einen bestimmten Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="44d52-347">Determines whether the set contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="44d52-348"><see langword="true" />, wenn das Objekt in der Gruppe gefunden wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-348"><see langword="true" /> if the object is found in the set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-349">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-349">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-350">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-350">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-351">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-351">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-352">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-352">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="immutableSortedSet.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-353">Das Objekt, das in der Gruppe gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-353">The object to locate in the set.</span></span></param>
        <summary><span data-ttu-id="44d52-354">Bestimmt den Index eines bestimmten Elements in der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-354">Determines the index of a specific item in the set.</span></span></summary>
        <returns><span data-ttu-id="44d52-355">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="44d52-355">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-356">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-356">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-357">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-357">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-358">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-358">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-359">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-359">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="immutableSortedSet.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-360">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-360">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="44d52-361">Das in die Gruppe einzufügende Objekt.</span><span class="sxs-lookup"><span data-stu-id="44d52-361">The object to insert into the set.</span></span></param>
        <summary><span data-ttu-id="44d52-362">Fügt ein Element am angegebenen Index in die Gruppe ein.</span><span class="sxs-lookup"><span data-stu-id="44d52-362">Inserts an item into the set at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-363">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-363">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-364">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-364">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-365">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-365">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-366">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-366">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="44d52-367">Die Gruppe ist schreibgeschützt oder weist eine feste Größe auf.</span><span class="sxs-lookup"><span data-stu-id="44d52-367">The set is read-only or has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-368">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> eine feste Größe aufweist.</span><span class="sxs-lookup"><span data-stu-id="44d52-368">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="44d52-369">Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-369"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-370">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-370">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-371">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet`1>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-371">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet`1> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44d52-372">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-372">Gets a value that indicates whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="44d52-373">Ist <see langword="true" />, wenn die <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-373"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-374">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-374">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-375">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet`1>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-375">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet`1> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-376">Der Index.</span><span class="sxs-lookup"><span data-stu-id="44d52-376">The index.</span></span></param>
        <summary><span data-ttu-id="44d52-377">Ruft <see cref="T:System.Object" /> am angegebenen Index ab oder legt das Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="44d52-377">Gets or sets the <see cref="T:System.Object" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="44d52-378">Das <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="44d52-378">The <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="immutableSortedSet.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-379">Das aus dem Satz zu entfernende Objekt.</span><span class="sxs-lookup"><span data-stu-id="44d52-379">The object to remove from the set.</span></span></param>
        <summary><span data-ttu-id="44d52-380">Entfernt das erste Vorkommen eines bestimmten Objekts aus der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-380">Removes the first occurrence of a specific object from the set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-381">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-381">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-382">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-382">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-383">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-383">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-384">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-384">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="44d52-385">Die Gruppe ist schreibgeschützt oder weist eine feste Größe auf.</span><span class="sxs-lookup"><span data-stu-id="44d52-385">The set is read-only or has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="immutableSortedSet.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="44d52-386">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="44d52-386">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="44d52-387">Entfernt das Element am angegebenen Index aus der Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-387">Removes the item at the specified index of the set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-388">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-388">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-389">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-389">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>

[<span data-ttu-id="44d52-390">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-390">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-391">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-391">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="44d52-392">Die Gruppe ist schreibgeschützt oder weist eine feste Größe auf.</span><span class="sxs-lookup"><span data-stu-id="44d52-392">The set is read-only or has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As T) As IImmutableSet(Of T) Implements IImmutableSet(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add(T value) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add : 'T -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add : 'T -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-393">Das hinzuzufügende Element.</span><span class="sxs-lookup"><span data-stu-id="44d52-393">The element to add.</span></span></param>
        <summary><span data-ttu-id="44d52-394">Fügt dieser unveränderlichen Gruppe das angegebene Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-394">Adds the specified element to this immutable set.</span></span></summary>
        <returns><span data-ttu-id="44d52-395">Eine neue Gruppe mit dem hinzugefügten Element oder diese Gruppe, wenn das Element bereits in der Gruppe enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="44d52-395">A new set with the element added, or this set if the element is already in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-396">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-397">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-397">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-398">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-398">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-399">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-399">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Function Clear () As IImmutableSet(Of T) Implements IImmutableSet(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear() = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear : unit -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear : unit -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-400">Ruft eine leere unveränderliche Gruppe ab, die dieselbe Sortierungs- und Reihenfolgensematik wie diese Instanz besitzt.</span><span class="sxs-lookup"><span data-stu-id="44d52-400">Retrieves an empty immutable set that has the same sorting and ordering semantics as this instance.</span></span></summary>
        <returns><span data-ttu-id="44d52-401">Eine leere unveränderliche Gruppe, die dieselbe Sortierungs- und Reihenfolgensematik wie diese Instanz besitzt.</span><span class="sxs-lookup"><span data-stu-id="44d52-401">An empty set that has the same sorting and ordering semantics as this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-402">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-402">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-403">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-403">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-404">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-404">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-405">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-405">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Except (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Except(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Except (other As IEnumerable(Of T)) As IImmutableSet(Of T) Implements IImmutableSet(Of T).Except" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Except;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Except other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Except(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-406">Die Elemente, die aus der Gruppe entfernt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="44d52-406">The items to remove from this set.</span></span></param>
        <summary><span data-ttu-id="44d52-407">Entfernt die Elemente in der angegebenen Auflistung aus der aktuellen unveränderlichen Gruppe.</span><span class="sxs-lookup"><span data-stu-id="44d52-407">Removes the elements in the specified collection from the current immutable set.</span></span></summary>
        <returns><span data-ttu-id="44d52-408">Die neue Gruppe, aus der die Elemente entfernt wurden; oder die ursprüngliche Gruppe, wenn keines der Elemente in der Gruppe enthalten war.</span><span class="sxs-lookup"><span data-stu-id="44d52-408">The new set with the items removed; or the original set if none of the items were in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-409">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-409">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-410">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-410">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-411">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-411">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-412">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-412">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Intersect (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Intersect(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Intersect (other As IEnumerable(Of T)) As IImmutableSet(Of T) Implements IImmutableSet(Of T).Intersect" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Intersect;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Intersect other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-413">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-413">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-414">Erstellt eine unveränderliche Gruppe, die Elemente enthält, die sowohl in dieser Gruppe als auch in der angegebenen Gruppe vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-414">Creates an immutable set that contains elements that exist in both this set and the specified set.</span></span></summary>
        <returns><span data-ttu-id="44d52-415">Eine neue unveränderliche Gruppe, die alle Elemente enthält, die in beiden Gruppen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-415">A new immutable set that contains any elements that exist in both sets.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-416">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-416">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-417">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-417">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-418">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-418">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-419">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-419">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T) As IImmutableSet(Of T) Implements IImmutableSet(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove(T value) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove : 'T -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove : 'T -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="44d52-420">Das zu entfernende Element.</span><span class="sxs-lookup"><span data-stu-id="44d52-420">The element to remove.</span></span></param>
        <summary><span data-ttu-id="44d52-421">Fügt dieser unveränderlichen Gruppe das angegebene Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-421">Removes the specified element from this immutable set.</span></span></summary>
        <returns><span data-ttu-id="44d52-422">Eine neue Gruppe, aus der das angegebene Element entfernt wurde, oder die aktuelle Gruppe, wenn das Element in der Gruppe nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="44d52-422">A new set with the specified element removed, or the current set if the element cannot be found in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-423">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-423">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-424">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-424">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-425">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-425">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-426">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-426">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.SymmetricExcept (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function SymmetricExcept (other As IEnumerable(Of T)) As IImmutableSet(Of T) Implements IImmutableSet(Of T).SymmetricExcept" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::SymmetricExcept;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.SymmetricExcept other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-427">Die Auflistung, die mit der aktuellen Gruppe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="44d52-427">The collection to compare to the current set.</span></span></param>
        <summary><span data-ttu-id="44d52-428">Erstellt eine unveränderliche Gruppe, die nur Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung, aber nicht in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-428">Creates an immutable set that contains only elements that are present either in the current set or in the specified collection, but not both.</span></span></summary>
        <returns><span data-ttu-id="44d52-429">Eine neue Gruppe mit den Elementen, die nur in der aktuellen Gruppe oder in der angegebenen Auflistung, aber nicht in beiden vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-429">A new set that contains the elements that are present only in the current set or in the specified collection, but not both.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-430">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-431">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-431">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-432">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-432">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-433">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-433">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableSet&lt;T&gt; IImmutableSet&lt;T&gt;.Union (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableSet`1&lt;!T&gt; System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.System#Collections#Immutable#IImmutableSet&lt;T&gt;#Union(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Union (other As IEnumerable(Of T)) As IImmutableSet(Of T) Implements IImmutableSet(Of T).Union" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableSet&lt;T&gt; ^ System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other) = System::Collections::Immutable::IImmutableSet&lt;T&gt;::Union;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;&#xA;override this.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union : seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableSet&lt;'T&gt;" Usage="immutableSortedSet.System.Collections.Immutable.IImmutableSet&lt;T&gt;.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.Union(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-434">Die Auflistung, aus der Elemente hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="44d52-434">The collection to add elements from.</span></span></param>
        <summary><span data-ttu-id="44d52-435">Erstellt eine unveränderliche Gruppe, die alle Elemente enthält, die entweder in der aktuellen Gruppe oder in der angegebenen Auflistung vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-435">Creates a new immutable set that contains all elements that are present in either the current set or in the specified collection.</span></span></summary>
        <returns><span data-ttu-id="44d52-436">Eine neue unveränderliche Gruppe mit den hinzugefügten Elementen; oder die ursprüngliche Gruppe, wenn alle Elemente bereits in der Gruppe enthalten waren.</span><span class="sxs-lookup"><span data-stu-id="44d52-436">A new immutable set with the items added; or the original set if all the items were already in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-437">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="44d52-437">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44d52-438">Er kann nur verwendet werden, wenn die <xref:System.Collections.Immutable.ImmutableSortedSet%601>-Instanz in eine <xref:System.Collections.Immutable.IImmutableSet%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="44d52-438">It can be used only when the <xref:System.Collections.Immutable.ImmutableSortedSet%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableSet%601> interface.</span></span>

[<span data-ttu-id="44d52-439">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-439">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-440">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-440">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBuilder">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;.Builder ToBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1/Builder&lt;!T&gt; ToBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.ToBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBuilder () As ImmutableSortedSet(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt;::Builder ^ ToBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToBuilder : unit -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;.Builder" Usage="immutableSortedSet.ToBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44d52-441">Erstellt eine Auflistung, die denselben Inhalt wie diese unveränderliche sortierte Gruppe aufweist und mithilfe änderbarer Standardschnittstellen effizient bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="44d52-441">Creates a collection that has the same contents as this immutable sorted set that can be efficiently manipulated by using standard mutable interfaces.</span></span></summary>
        <returns><span data-ttu-id="44d52-442">Der Generator für sortierte Gruppen.</span><span class="sxs-lookup"><span data-stu-id="44d52-442">The sorted set builder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-443">Wenn Sie mehrere Vorgänge für eine unveränderliche Auflistung ausführen müssen, können Sie die <xref:System.Collections.Immutable.ImmutableSortedSet%601> mithilfe der <xref:System.Collections.Immutable.ImmutableSortedSet%601.ToBuilder%2A>-Methode in eine <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder>kopieren, die Menge bearbeiten und Sie mithilfe der <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder.ToImmutable%2A>-Methode wieder unveränderlich machen.</span><span class="sxs-lookup"><span data-stu-id="44d52-443">If you need to perform multiple operations on an immutable collection, to increase efficiency you can copy the <xref:System.Collections.Immutable.ImmutableSortedSet%601> to a <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder>, using the <xref:System.Collections.Immutable.ImmutableSortedSet%601.ToBuilder%2A> method, manipulate the set and make it immutable again using the <xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder.ToImmutable%2A> method.</span></span> <span data-ttu-id="44d52-444">Dadurch wird die ursprüngliche unveränderliche sortierte Gruppe nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="44d52-444">This will not change the original immutable sorted set.</span></span>

 <span data-ttu-id="44d52-445">Dies ist ein O (1)-Vorgang, der nur eine einzelne (kleine) Speicher Belegung ergibt.</span><span class="sxs-lookup"><span data-stu-id="44d52-445">This is an O(1) operation and results in only a single (small) memory allocation.</span></span> <span data-ttu-id="44d52-446">Die zurückgegebene änderbare Auflistung ist nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="44d52-446">The mutable collection that is returned is not thread safe.</span></span>

[<span data-ttu-id="44d52-447">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-447">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-448">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-448">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (T equalValue, out T actualValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!T equalValue, [out] !T&amp; actualValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.TryGetValue(`0,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (equalValue As T, ByRef actualValue As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(T equalValue, [Runtime::InteropServices::Out] T % actualValue);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'T * 'T -&gt; bool&#xA;override this.TryGetValue : 'T * 'T -&gt; bool" Usage="immutableSortedSet.TryGetValue (equalValue, actualValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableSet`1.TryGetValue(`0,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="equalValue" Type="T" />
        <Parameter Name="actualValue" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="equalValue"><span data-ttu-id="44d52-449">Der zu suchende Wert.</span><span class="sxs-lookup"><span data-stu-id="44d52-449">The value to search for.</span></span></param>
        <param name="actualValue"><span data-ttu-id="44d52-450">Der bei der Suche in der Gruppe gefundene Wert, oder der ursprüngliche Wert, wenn die Suche keine Übereinstimmung ergeben hat.</span><span class="sxs-lookup"><span data-stu-id="44d52-450">The value from the set that the search found, or the original value if the search yielded no match.</span></span></param>
        <summary><span data-ttu-id="44d52-451">Durchsucht die Gruppe nach einem angegebenen Wert und gibt ggf. den identischen Wert zurück, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="44d52-451">Searches the set for a given value and returns the equal value it finds, if any.</span></span></summary>
        <returns><span data-ttu-id="44d52-452">Ein Wert, der angibt, ob die Suche erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="44d52-452">A value indicating whether the search was successful.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="44d52-453">Dies kann hilfreich sein, wenn Sie einen zuvor gespeicherten Verweis anstelle eines neu erstellten Verweises wieder verwenden möchten (sodass die Freigabe von verweisen weitergegeben werden kann) oder einen Wert suchen möchten, der über umfassendere Daten als den derzeit vorhandenen Wert verfügt, obwohl die Vergleichsfunktionen angeben, dass Sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="44d52-453">This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</span></span>

[<span data-ttu-id="44d52-454">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-454">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-455">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-455">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; Union (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; Union(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.Union(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IEnumerable(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ Union(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberSignature Language="F#" Value="member this.Union : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="44d52-456">Die hinzuzufügenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="44d52-456">The items to add.</span></span></param>
        <summary><span data-ttu-id="44d52-457">Fügt dieser unveränderlichen sortierten Gruppe eine bestimmte Gruppe von Elementen hinzu.</span><span class="sxs-lookup"><span data-stu-id="44d52-457">Adds a given set of items to this immutable sorted set.</span></span></summary>
        <returns><span data-ttu-id="44d52-458">Die neue Gruppe mit den hinzugefügten Elementen; oder die ursprüngliche Gruppe, wenn alle Elemente bereits in der Gruppe enthalten waren.</span><span class="sxs-lookup"><span data-stu-id="44d52-458">The new set with the items added; or the original set if all the items were already in the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-459">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-459">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-460">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-460">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableSortedSet&lt;T&gt; WithComparer (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableSortedSet`1&lt;!T&gt; WithComparer(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableSortedSet`1.WithComparer(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithComparer (comparer As IComparer(Of T)) As ImmutableSortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableSortedSet&lt;T&gt; ^ WithComparer(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.WithComparer : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableSortedSet&lt;'T&gt;" Usage="immutableSortedSet.WithComparer comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableSortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="44d52-461">Der zu suchende Vergleich.</span><span class="sxs-lookup"><span data-stu-id="44d52-461">The comparer to check for.</span></span></param>
        <summary><span data-ttu-id="44d52-462">Gibt die unveränderliche sortierte Gruppe mit dem angegebenen Schlüsselvergleich zurück.</span><span class="sxs-lookup"><span data-stu-id="44d52-462">Returns the immutable sorted set that has the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="44d52-463">Die unveränderliche sortierte Gruppe mit dem angegebenen Schlüsselvergleich.</span><span class="sxs-lookup"><span data-stu-id="44d52-463">The immutable sorted set that has the specified key comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[<span data-ttu-id="44d52-464">"System. Collections. immutable"-nuget-Paket</span><span class="sxs-lookup"><span data-stu-id="44d52-464">System.Collections.Immutable NuGet package</span></span>](https://www.nuget.org/packages/System.Collections.Immutable/)

[<span data-ttu-id="44d52-465">Informationen zu unveränderlichen Auflistungen und zur Installation</span><span class="sxs-lookup"><span data-stu-id="44d52-465">About immutable collections and how to install</span></span>](https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks)

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
