<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="730f9ed0654c094a796b377769a320a4ac18d5ab" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86738103" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
    <AssemblyVersion>1.2.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="401c4-101">Stellt Methoden zum Erstellen eines Arrays bereit, das unveränderlich ist. Dies bedeutet, dass es nach der Erstellung nicht mehr geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="401c4-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span></span>  
  
 <span data-ttu-id="401c4-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span><span class="sxs-lookup"><span data-stu-id="401c4-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="401c4-103">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="401c4-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;? array, T value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-104">Der Typ des im Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-104">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="401c4-105">Das sortierte Array, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-105">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="401c4-106">Das Objekt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-106">The object to search for.</span></span></param>
        <summary><span data-ttu-id="401c4-107">Durchsucht mithilfe des Standardvergleichs das sortierte unveränderliche Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="401c4-108">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="401c4-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="401c4-109"><paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="401c4-109"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;? array, T value, System.Collections.Generic.IComparer&lt;T&gt;? comparer);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-110">Der Typ des im Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-110">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="401c4-111">Das sortierte Array, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-111">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="401c4-112">Das Objekt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-112">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="401c4-113">Die Vergleichsimplementierung, die beim Vergleichen von Elementen verwendet werden soll, oder NULL, wenn der Standardvergleich verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="401c4-114">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="401c4-115">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="401c4-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="401c4-116"><paramref name="comparer" /> ist NULL, und <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="401c4-116"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;? array, int index, int length, T value);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-117">Der Typ des im Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-117">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="401c4-118">Das sortierte Array, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-118">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="401c4-119">Der Startindex des zu durchsuchenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="401c4-119">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-120">Die Länge des zu durchsuchenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="401c4-120">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="401c4-121">Das Objekt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-121">The object to search for.</span></span></param>
        <summary><span data-ttu-id="401c4-122">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="401c4-123">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="401c4-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="401c4-124"><paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="401c4-124"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="401c4-125"><paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="array" /> an.</span><span class="sxs-lookup"><span data-stu-id="401c4-125"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="401c4-126"><paramref name="index" /> ist kleiner als die untere <paramref name="array" />-Grenze.</span><span class="sxs-lookup"><span data-stu-id="401c4-126"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>
        
<span data-ttu-id="401c4-127">- oder -</span><span class="sxs-lookup"><span data-stu-id="401c4-127">-or-</span></span>

<span data-ttu-id="401c4-128"><paramref name="length" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="401c4-128"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;? array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt;? comparer);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-129">Der Typ des im Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-129">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="401c4-130">Das sortierte Array, das durchsucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-130">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="401c4-131">Der Startindex des zu durchsuchenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="401c4-131">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-132">Die Länge des zu durchsuchenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="401c4-132">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="401c4-133">Das Objekt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-133">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="401c4-134">Der Vergleich, der beim Vergleichen von Elementen auf Gleichheit verwendet werden soll, oder <see langword="null" />, wenn der Standardvergleich verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-134">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="401c4-135">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="401c4-135">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="401c4-136">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="401c4-136">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="401c4-137"><paramref name="comparer" /> ist NULL, und <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="401c4-137"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="401c4-138"><paramref name="index" /> und <paramref name="length" /> geben keinen gültigen Bereich im <paramref name="array" /> an.</span><span class="sxs-lookup"><span data-stu-id="401c4-138"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>
        
<span data-ttu-id="401c4-139">- oder -</span><span class="sxs-lookup"><span data-stu-id="401c4-139">-or-</span></span>

<span data-ttu-id="401c4-140"><paramref name="comparer" /> ist <see langword="null" /> und <paramref name="value" /> verfügt über einen Typ, der nicht mit den Elementen von <paramref name="array" /> kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-140"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="401c4-141"><paramref name="index" /> ist kleiner als die untere <paramref name="array" />-Grenze.</span><span class="sxs-lookup"><span data-stu-id="401c4-141"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>

<span data-ttu-id="401c4-142">- oder -</span><span class="sxs-lookup"><span data-stu-id="401c4-142">-or-</span></span>

<span data-ttu-id="401c4-143"><paramref name="length" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="401c4-143"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; ();" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-144">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-144">The type of elements stored in the array.</span></span></typeparam>
        <summary><span data-ttu-id="401c4-145">Erstellt ein leeres unveränderliches Array.</span><span class="sxs-lookup"><span data-stu-id="401c4-145">Creates an empty immutable array.</span></span></summary>
        <returns><span data-ttu-id="401c4-146">Ein leeres unveränderliches Array.</span><span class="sxs-lookup"><span data-stu-id="401c4-146">An empty immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (T item);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-147">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-147">The type of elements stored in the array.</span></span></typeparam>
        <param name="item"><span data-ttu-id="401c4-148">Das Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-148">The object to store in the array.</span></span></param>
        <summary><span data-ttu-id="401c4-149">Erstellt ein unveränderliches Array, das das angegebene Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-149">Creates an immutable array that contains the specified object.</span></span></summary>
        <returns><span data-ttu-id="401c4-150">Ein unveränderliches Array, das das angegebene Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-150">An immutable array that contains the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (params T[]? items);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-151">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-151">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-152">Das Array von Objekten, mit denen das Array aufgefüllt werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-152">The array of objects to populate the array with.</span></span></param>
        <summary><span data-ttu-id="401c4-153">Erstellt ein unveränderliches Array aus dem angegebenen Objektarray.</span><span class="sxs-lookup"><span data-stu-id="401c4-153">Creates an immutable array from the specified array of objects.</span></span></summary>
        <returns><span data-ttu-id="401c4-154">Ein unveränderliches Array, das das Array von Elementen enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-154">An immutable array that contains the array of items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (T item1, T item2);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-155">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-155">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="401c4-156">Das erste Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-156">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="401c4-157">Das zweite Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-157">The second object to store in the array.</span></span></param>
        <summary><span data-ttu-id="401c4-158">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-158">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="401c4-159">Ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-159">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt;? items, int start, int length);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-160">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-160">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-161">Das Quellarray von Objekten.</span><span class="sxs-lookup"><span data-stu-id="401c4-161">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="401c4-162">Der Index des ersten aus <paramref name="items" /> zu kopierenden Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-162">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-163">Die Anzahl der Elemente von <paramref name="items" />, die in dieses unveränderliche Array eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-163">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="401c4-164">Erstellt ein unveränderliches Array mit den angegebenen Objekten aus einem anderen unveränderlichen Array.</span><span class="sxs-lookup"><span data-stu-id="401c4-164">Creates an immutable array with the specified objects from another immutable array.</span></span></summary>
        <returns><span data-ttu-id="401c4-165">Ein unveränderliches Array, das die angegebenen Objekte aus dem Quellarray enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-165">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="401c4-166">Diese Überladung ermöglicht Hilfsmethoden oder benutzerdefinierten Builder-Klassen, eine redundante Steuer für das Kopieren eines Arrays effizient zu vermeiden, wenn das neue Array ein Segment eines vorhandenen Arrays ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-166">This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant tax for copying an array when the new array is a segment of an existing array.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (T item1, T item2, T item3);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-167">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-167">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="401c4-168">Das erste Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-168">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="401c4-169">Das zweite Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-169">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="401c4-170">Das dritte Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-170">The third object to store in the array.</span></span></param>
        <summary><span data-ttu-id="401c4-171">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-171">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="401c4-172">Ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-172">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (T[] items, int start, int length);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-173">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-173">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-174">Das Quellarray von Objekten.</span><span class="sxs-lookup"><span data-stu-id="401c4-174">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="401c4-175">Der Index des ersten aus <paramref name="items" /> zu kopierenden Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-175">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-176">Die Anzahl der Elemente von <paramref name="items" />, die in dieses unveränderliche Array eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-176">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="401c4-177">Erstellt ein unveränderliches Array mit den angegebenen Objekten aus einem anderen Array.</span><span class="sxs-lookup"><span data-stu-id="401c4-177">Creates an immutable array with specified objects from another array.</span></span></summary>
        <returns><span data-ttu-id="401c4-178">Ein unveränderliches Array, das die angegebenen Objekte aus dem Quellarray enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-178">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="401c4-179">Diese Überladung ermöglicht Hilfsmethoden oder benutzerdefinierten Builder-Klassen, eine redundante Steuer für das Kopieren eines Arrays effizient zu vermeiden, wenn das neue Array ein Segment eines vorhandenen Arrays ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-179">This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant tax for copying an array when the new array is a segment of an existing array.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? Create&lt;T&gt; (T item1, T item2, T item3, T item4);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-180">Der Typ der im Array gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-180">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="401c4-181">Das erste Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-181">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="401c4-182">Das zweite Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-182">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="401c4-183">Das dritte Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-183">The third object to store in the array.</span></span></param>
        <param name="item4"><span data-ttu-id="401c4-184">Das vierte Objekt, das im Array gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-184">The fourth object to store in the array.</span></span></param>
        <summary><span data-ttu-id="401c4-185">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-185">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="401c4-186">Ein unveränderliches Array, das die angegebenen Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-186">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-187">Der Typ der im Generator gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-187">The type of elements stored in the builder.</span></span></typeparam>
        <summary><span data-ttu-id="401c4-188">Erstellt ein änderbares Array, das in <see cref="T:System.Collections.Immutable.ImmutableArray" /> konvertiert werden kann, ohne neuen Arbeitsspeicher zu belegen.</span><span class="sxs-lookup"><span data-stu-id="401c4-188">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="401c4-189">Ein änderbares Array des angegebenen Typs, das effizient in ein unveränderliches Array konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="401c4-189">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-190">Der Typ der im Generator gespeicherten Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-190">The type of elements stored in the builder.</span></span></typeparam>
        <param name="initialCapacity"><span data-ttu-id="401c4-191">Die Anfangskapazität des Generators.</span><span class="sxs-lookup"><span data-stu-id="401c4-191">The initial capacity of the builder.</span></span></param>
        <summary><span data-ttu-id="401c4-192">Erstellt ein änderbares Array, das in <see cref="T:System.Collections.Immutable.ImmutableArray" /> konvertiert werden kann, ohne neuen Arbeitsspeicher zu belegen.</span><span class="sxs-lookup"><span data-stu-id="401c4-192">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="401c4-193">Ein änderbares Array des angegebenen Typs, das effizient in ein unveränderliches Array konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="401c4-193">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;? CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="401c4-194">Der Typ des im Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-194">The type of element stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-195">Die Elemente, die zum Array hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-195">The elements to add to the array.</span></span></param>
        <summary><span data-ttu-id="401c4-196">Erstellt ein neues <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, das mit den angegebenen Elementen aufgefüllt ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-196">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span></span></summary>
        <returns><span data-ttu-id="401c4-197">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-197">An immutable array that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt;? CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? items, Func&lt;TSource,TResult&gt;? selector);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-198">Der Typ des im Quell Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-198">The type of element stored in the source array.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="401c4-199">Der Typ des Elements, das im Zielarray gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-199">The type of element to store in the target array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-200">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-200">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="401c4-201">Die Funktion, die aus dem Quellarray auf jedes Element angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-201">The function to apply to each element from the source array.</span></span></param>
        <summary><span data-ttu-id="401c4-202">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="401c4-202">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns><span data-ttu-id="401c4-203">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-203">An immutable array that contains the specified items.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="401c4-204">Diese Überladung ermöglicht eine effiziente Erstellung eines auf der <xref:System.Collections.Immutable.ImmutableArray%601> Grundlage eines vorhandenen             <xref:System.Collections.Immutable.ImmutableArray%601> , bei dem eine Zuordnungs Funktion auf jedes Element aus dem Quell Array angewendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="401c4-204">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt;? CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? items, int start, int length, Func&lt;TSource,TResult&gt;? selector);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-205">Der Typ des im Quell Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-205">The type of element stored in the source array.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="401c4-206">Der Typ des Elements, das im Zielarray gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-206">The type of element to store in the target array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-207">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-207">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="401c4-208">Der Index des ersten Elements im Quellarray, das in das resultierende Array eingeschlossen werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-208">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-209">Die Anzahl von Elementen aus dem Quellarray, die in das sich ergebende Array eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-209">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="401c4-210">Die Funktion, die auf jedes Element vom Quellarray, das im resultierenden Array enthalten ist, angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-210">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <summary><span data-ttu-id="401c4-211">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="401c4-211">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns><span data-ttu-id="401c4-212">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-212">An immutable array that contains the specified items.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="401c4-213">Diese Überladung ermöglicht die effiziente Erstellung eines <xref:System.Collections.Immutable.ImmutableArray%601> auf der Grundlage eines Slice eines vorhandenen             <xref:System.Collections.Immutable.ImmutableArray%601> , wobei eine Zuordnungs Funktion auf jedes Element aus dem Quell Array angewendet werden muss, das im resultierenden Array enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-213">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt;? CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? items, Func&lt;TSource,TArg,TResult&gt;? selector, TArg? arg);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-214">Der Typ des im Quell Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-214">The type of element stored in the source array.</span></span></typeparam>
        <typeparam name="TArg"><span data-ttu-id="401c4-215">Der Argumenttyp, der an die Selector-Zuordnungs Funktion übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-215">The type of argument to pass to the selector mapping function.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="401c4-216">Der Typ des Elements, das im Zielarray gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-216">The type of element to store in the target array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-217">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-217">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="401c4-218">Die Funktion, die aus dem Quellarray auf jedes Element angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-218">The function to apply to each element from the source array.</span></span></param>
        <param name="arg"><span data-ttu-id="401c4-219">Ein Argument, das an die Zuordnungsfunktion des Selektors übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-219">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="401c4-220">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="401c4-220">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns><span data-ttu-id="401c4-221">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-221">An immutable array that contains the specified items.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="401c4-222">Diese Überladung ermöglicht eine effiziente Erstellung eines auf der <xref:System.Collections.Immutable.ImmutableArray%601> Grundlage eines vorhandenen             <xref:System.Collections.Immutable.ImmutableArray%601> , bei dem eine Zuordnungs Funktion auf jedes Element aus dem Quell Array angewendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="401c4-222">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt;? CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? items, int start, int length, Func&lt;TSource,TArg,TResult&gt;? selector, TArg? arg);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-223">Der Typ des im Quell Array gespeicherten Elements.</span><span class="sxs-lookup"><span data-stu-id="401c4-223">The type of element stored in the source array.</span></span></typeparam>
        <typeparam name="TArg"><span data-ttu-id="401c4-224">Der Argumenttyp, der an die Selector-Zuordnungs Funktion übermittelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-224">The type of argument to be passed to the selector mapping function.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="401c4-225">Der Typ des Elements, das im Zielarray gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-225">The type of element to be stored in the target array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-226">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="401c4-226">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="401c4-227">Der Index des ersten Elements im Quellarray, das in das resultierende Array eingeschlossen werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-227">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="401c4-228">Die Anzahl von Elementen aus dem Quellarray, die in das sich ergebende Array eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-228">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="401c4-229">Die Funktion, die auf jedes Element vom Quellarray, das im resultierenden Array enthalten ist, angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-229">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <param name="arg"><span data-ttu-id="401c4-230">Ein Argument, das an die Zuordnungsfunktion des Selektors übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-230">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="401c4-231">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="401c4-231">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns><span data-ttu-id="401c4-232">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-232">An immutable array that contains the specified items.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="401c4-233">Diese Überladung ermöglicht die effiziente Erstellung eines <xref:System.Collections.Immutable.ImmutableArray%601> auf der Grundlage eines Slice eines vorhandenen             <xref:System.Collections.Immutable.ImmutableArray%601> , wobei eine Zuordnungs Funktion auf jedes Element aus dem Quell Array angewendet werden muss, das im resultierenden Array enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="401c4-233">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-234">Der Typ der in <paramref name="items" /> enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="401c4-234">The type of elements contained in <paramref name="items" />.</span></span></typeparam>
        <param name="items"><span data-ttu-id="401c4-235">Die Auflistung von Objekten, die in das unveränderliche Array kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="401c4-235">The collection of objects to copy to the immutable array.</span></span></param>
        <summary><span data-ttu-id="401c4-236">Erstellt ein unveränderliches Array aus der angegebenen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="401c4-236">Creates an immutable array from the specified collection.</span></span></summary>
        <returns><span data-ttu-id="401c4-237">Ein unveränderliches Array, das die angegebene Auflistung von Objekten enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-237">An immutable array that contains the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt;? ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TSource&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (builder As ImmutableArray(Of TSource).Builder) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Immutable::ImmutableArray&lt;TSource&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : System.Collections.Immutable.ImmutableArray&lt;'Source&gt;.Builder -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray builder" />
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;+Builder" RefType="this" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="401c4-238">Der Typ der Elemente, die im unveränderlichen Array enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="401c4-238">The type of elements contained in the immutable array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="401c4-239">Der Generator, aus dem das unveränderliche Array erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="401c4-239">The builder to create the immutable array from.</span></span></param>
        <summary><span data-ttu-id="401c4-240">Erstellt ein unveränderliches Array aus dem aktuellen Inhalt des Arrays des Generators.</span><span class="sxs-lookup"><span data-stu-id="401c4-240">Creates an immutable array from the current contents of the builder's array.</span></span></summary>
        <returns><span data-ttu-id="401c4-241">Ein unveränderliches Array, das den aktuellen Inhalt des Arrays des Generators enthält.</span><span class="sxs-lookup"><span data-stu-id="401c4-241">An immutable array that contains the current contents of the builder's array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
