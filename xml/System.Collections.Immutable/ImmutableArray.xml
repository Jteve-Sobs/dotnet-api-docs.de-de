<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d49c6bdb483ea00a3cc5f142ce2c71b44e00ca4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="41d40-101">Stellt Methoden zum Erstellen eines Arrays bereit, das unveränderlich ist. Dies bedeutet, dass es nach der Erstellung nicht mehr geändert werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41d40-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span>
      </span>
      <span data-ttu-id="41d40-102">**NuGet-Paket**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">Grundlegendes zu unveränderlichen Sammlungen und deren Installation</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="41d40-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="41d40-103">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41d40-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-104">Der Typ des im Array gespeicherten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-104">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="41d40-105">Das sortierte Array, das durchsucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-105">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="41d40-106">Das Objekt, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-106">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-107">Durchsucht mithilfe des Standardvergleichs das sortierte unveränderliche Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-108">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41d40-109">
            <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-109">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-110">Der Typ des im Array gespeicherten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-110">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="41d40-111">Das sortierte Array, das durchsucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-111">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="41d40-112">Das Objekt, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-112">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41d40-113">Die Vergleichsimplementierung, die beim Vergleichen von Elementen verwendet werden soll, oder NULL, wenn der Standardvergleich verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-114">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-115">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41d40-116">
            <paramref name="comparer" /> ist NULL, und <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-116">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-117">Der Typ des im Array gespeicherten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-117">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="41d40-118">Das sortierte Array, das durchsucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-118">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="41d40-119">Der Startindex des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-119">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-120">Die Länge des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-120">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="41d40-121">Das Objekt, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-121">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-122">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück, wenn es gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-123">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41d40-124">
            <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-124">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-125">Der Typ des im Array gespeicherten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-125">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="41d40-126">Das sortierte Array, das durchsucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-126">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="41d40-127">Der Startindex des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-127">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-128">Die Länge des zu durchsuchenden Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-128">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="41d40-129">Das Objekt, nach dem gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-129">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41d40-130">Der Vergleich, der beim Vergleichen von Elementen auf Gleichheit verwendet werden soll, oder <see langword="null" />, wenn der Standardvergleich verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-130">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-131">Durchsucht ein sortiertes unveränderliches Array nach einem angegebenen Element und gibt den nullbasierten Index des Elements zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-131">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-132">Der nullbasierte Index des Elements im Array, sofern das Element gefunden wird, andernfalls eine negative Zahl, die das bitweise Komplement des Indexes des nächsten Elements darstellt, das größer als <paramref name="value" /> ist, oder, wenn kein größeres Element vorhanden ist, das bitweise Komplement von <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-132">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41d40-133">
            <paramref name="comparer" /> ist NULL, und <paramref name="value" /> implementiert <see cref="T:System.IComparable" /> nicht, oder bei der Suche wird ein Element gefunden, das <see cref="T:System.IComparable" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-133">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-134">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-134">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="41d40-135">Erstellt ein leeres unveränderliches Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-135">Creates an empty immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-136">Ein leeres unveränderliches Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-136">An empty immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-137">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-137">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="41d40-138">Das Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-138">The object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-139">Erstellt ein unveränderliches Array, das das angegebene Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-139">Creates an immutable array that contains the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-140">Gibt ein unveränderliches Array zurück, das das angegebene Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-140">Returns an immutable array that contains the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-141">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-141">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="41d40-142">Das Array von Objekten, mit denen das Array aufgefüllt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-142">The array of objects to populate the array with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-143">Erstellt ein unveränderliches Array aus dem angegebenen Objektarray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-143">Creates an immutable array from the specified array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-144">Ein unveränderliches Array, das das Array von Elementen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-144">An immutable array that contains the array of items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-145">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-145">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="41d40-146">Das erste Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-146">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="41d40-147">Das zweite Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-147">The second object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-148">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-148">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-149">Gibt ein unveränderliches Array zurück, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-149">Returns an immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-150">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-150">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="41d40-151">Das Quellarray von Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-151">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="41d40-152">Der Index des ersten aus <c>items</c> zu kopierenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-152">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-153">Die Anzahl der Elemente von <c>items</c>, die in dieses unveränderliche Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-153">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-154">Erstellt ein unveränderliches Array mit den angegebenen Objekten aus einem anderen unveränderlichen Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-154">Creates an immutable array with the specified objects from another immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-155">Ein unveränderliches Array, das die angegebenen Objekte aus dem Quellarray enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-155">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-156">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-156">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="41d40-157">Das erste Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-157">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="41d40-158">Das zweite Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-158">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="41d40-159">Das dritte Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-159">The third object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-160">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-160">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-161">Ein unveränderliches Array, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-161">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-162">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-162">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="41d40-163">Das Quellarray von Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-163">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="41d40-164">Der Index des ersten aus <c>items</c> zu kopierenden Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-164">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-165">Die Anzahl der Elemente von <c>items</c>, die in dieses unveränderliche Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-165">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-166">Erstellt ein unveränderliches Array mit den angegebenen Objekten aus einem anderen Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-166">Creates an immutable array with specified objects from another array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-167">Ein unveränderliches Array, das die angegebenen Objekte aus dem Quellarray enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-167">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-168">Der Typ der im Array gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-168">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="41d40-169">Das erste Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-169">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="41d40-170">Das zweite Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-170">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="41d40-171">Das dritte Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-171">The third object to store in the array.</span>
          </span>
        </param>
        <param name="item4">
          <span data-ttu-id="41d40-172">Das vierte Objekt, das im Array gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-172">The fourth object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-173">Erstellt ein unveränderliches Array, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-173">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-174">Ein unveränderliches Array, das die angegebenen Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-174">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-175">Der Typ der im Generator gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-175">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="41d40-176">Erstellt ein änderbares Array, das in <see cref="T:System.Collections.Immutable.ImmutableArray" /> konvertiert werden kann, ohne neuen Arbeitsspeicher zu belegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-176">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-177">Ein änderbares Array des angegebenen Typs, das effizient in ein unveränderliches Array konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-177">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-178">Der Typ der im Generator gespeicherten Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-178">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <param name="initialCapacity">
          <span data-ttu-id="41d40-179">Die Anfangskapazität des Generators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-179">The initial capacity of the builder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-180">Erstellt ein änderbares Array, das in <see cref="T:System.Collections.Immutable.ImmutableArray" /> konvertiert werden kann, ohne neuen Arbeitsspeicher zu belegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-180">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-181">Ein änderbares Array des angegebenen Typs, das effizient in ein unveränderliches Array konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-181">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="41d40-182">Der Typ des im Array gespeicherten Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-182">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="41d40-183">Die Elemente, die zum Array hinzugefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-183">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-184">Erstellt ein neues <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, das mit den angegebenen Elementen aufgefüllt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-184">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-185">Ein unveränderliches Array, das die angegebenen Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-185">An immutable array that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="41d40-186">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-186">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="41d40-187">Die Funktion, die aus dem Quellarray auf jedes Element angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-187">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-188">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-188">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d40-189">Diese Überladung ermöglicht das effiziente Erstellung einer <xref:System.Collections.Immutable.ImmutableArray%601> basierend auf einer vorhandenen <xref:System.Collections.Immutable.ImmutableArray%601>, in denen eine Zuordnungsfunktion auf jedes Element aus dem Quellarray angewendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="41d40-189">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="41d40-190">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-190">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="41d40-191">Der Index des ersten Elements im Quellarray, das in das resultierende Array eingeschlossen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-191">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-192">Die Anzahl von Elementen aus dem Quellarray, die in das sich ergebende Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-192">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="41d40-193">Die Funktion, die auf jedes Element vom Quellarray, das im resultierenden Array enthalten ist, angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-193">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-194">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-194">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d40-195">Diese Überladung ermöglicht das effiziente Erstellung einer <xref:System.Collections.Immutable.ImmutableArray%601> basierend auf ein Segment eines vorhandenen <xref:System.Collections.Immutable.ImmutableArray%601>, in denen eine Zuordnungsfunktion auf jedes Element angewendet werden, aus dem Quellarray, in dem sich ergebenden Array enthalten muss.</span><span class="sxs-lookup"><span data-stu-id="41d40-195">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="41d40-196">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-196">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="41d40-197">Die Funktion, die aus dem Quellarray auf jedes Element angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-197">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="41d40-198">Ein Argument, das an die Zuordnungsfunktion des Selektors übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-198">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-199">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-199">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d40-200">Diese Überladung ermöglicht das effiziente Erstellung einer <xref:System.Collections.Immutable.ImmutableArray%601> basierend auf einer vorhandenen <xref:System.Collections.Immutable.ImmutableArray%601>, in denen eine Zuordnungsfunktion auf jedes Element aus dem Quellarray angewendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="41d40-200">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="41d40-201">Das Quellarray, mit dem das resultierende Array initialisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-201">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="41d40-202">Der Index des ersten Elements im Quellarray, das in das resultierende Array eingeschlossen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-202">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41d40-203">Die Anzahl von Elementen aus dem Quellarray, die in das sich ergebende Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-203">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="41d40-204">Die Funktion, die auf jedes Element vom Quellarray, das im resultierenden Array enthalten ist, angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-204">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="41d40-205">Ein Argument, das an die Zuordnungsfunktion des Selektors übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-205">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-206">Initialisiert eine neue Instanz der <see cref="T:System.Collections.Immutable.ImmutableArray`1" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-206">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41d40-207">Diese Überladung ermöglicht das effiziente Erstellung einer <xref:System.Collections.Immutable.ImmutableArray%601> basierend auf ein Segment eines vorhandenen <xref:System.Collections.Immutable.ImmutableArray%601>, in denen eine Zuordnungsfunktion auf jedes Element angewendet werden, aus dem Quellarray, in dem sich ergebenden Array enthalten muss.</span><span class="sxs-lookup"><span data-stu-id="41d40-207">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="41d40-208">Der Typ der Elemente in <c>Elemente</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-208">The type of elements contained in <c>items</c>.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="41d40-209">Die Auflistung von Objekten, die in das unveränderliche Array kopiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-209">The collection of objects to copy to the immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41d40-210">Erstellt ein unveränderliches Array aus der angegebenen Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-210">Creates an immutable array from the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41d40-211">Ein unveränderliches Array, das die angegebene Auflistung von Objekten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41d40-211">An immutable array that contains the specified collection of objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>