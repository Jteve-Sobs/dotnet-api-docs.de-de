<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IImmutableList`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572b2fd1fceb7eff332be2255f1f5473e2c04a5ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72b2fd1fceb7eff332be2255f1f5473e2c04a5ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The type of elements in the list.</source>
          <target state="translated">Der Typ der Elemente in der Liste.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Represents a list of elements that cannot be modified.</source>
          <target state="translated">Stellt eine Liste von Elementen dar, die nicht geändert werden kann.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet-Paket<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>Grundlegendes zu unveränderlichen Sammlungen und deren Installation<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>When you add or remove items from an <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, a copy of the original list is created, with the changes applied..</source>
          <target state="translated">Wenn Sie hinzufügen oder Entfernen von Elementen aus einer <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, eine Kopie der ursprünglichen Liste erstellt, mit den Änderungen angewendet...</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Incremental changes to a list share as much memory as possible with earlier versions of a list and enable garbage collection to clean up any unique list data that is no longer being referenced.</source>
          <target state="translated">Inkrementelle Änderungen an einer Liste freigeben so viel Arbeitsspeicher wie möglich mit früheren Versionen von einer Liste, und aktivieren eine eindeutige Listendaten bereinigen, die nicht mehr verwiesen wird, wird die Garbagecollection.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>To create a new list, use the Create method.</source>
          <target state="translated">Um eine neue Liste erstellen zu können, verwenden Sie die Create-Methode.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> has no public constructor, as this would create an empty immutable list.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> keinen öffentlichen Konstruktor verfügt, da dies eine leere unveränderliche Liste erstellen würden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You should create a new list using the Create method.</source>
          <target state="translated">Erstellen Sie eine neue Liste mit der Create-Methode.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You can add new items to a copy of the original list using the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> methods.</source>
          <target state="translated">Sie können neue Elemente hinzufügen, um eine Kopie der ursprünglichen Liste mithilfe der <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, und <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>The object to add to the list.</source>
          <target state="translated">Das Objekt, das der Liste hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>Makes a copy of the list, and adds the specified object to the end of the  copied list.</source>
          <target state="translated">Erstellt eine Kopie der Liste und fügt das angegebene Objekt am Ende der kopierten Liste hinzu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>A new list with the object added, or this list if the object is already in the list.</source>
          <target state="translated">Eine neue Liste mit dem hinzugefügten Objekt oder diese Liste, wenn das Objekt bereits in der Liste enthalten ist.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The objects to add to the list.</source>
          <target state="translated">Die Objekte, die der Liste hinzugefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Makes a copy of the list and adds the specified objects to the end of the copied list.</source>
          <target state="translated">Erstellt eine Kopie der Liste und fügt die angegebenen Objekte am Ende der kopierten Liste hinzu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>A new list with the elements added, or this list if the elements already exist in the list.</source>
          <target state="translated">Eine neue Liste mit den hinzugefügten Elementen oder diese Liste, wenn die Elemente bereits in der Liste enthalten sind.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>Creates  a list with all the items removed, but with the same sorting and ordering semantics as this list.</source>
          <target state="translated">Erstellt eine Liste, aus der alle Elemente entfernt wurden, aber mit derselben Sortierungs- und Reihenfolgensemantik wie diese Liste.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>An empty list that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">Eine leere Liste, die dieselbe Sortierungs- und Reihenfolgensemantik wie diese Instanz besitzt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated">Das im <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> zu suchende Objekt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Dieser Wert kann für Verweistypen NULL sein.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting indes of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (null) ist in einer leeren Liste gültig.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Gleichheitsvergleich, der zum Suchen von <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> zurück, der am angegebenen Index beginnt und die angegebene Anzahl von Elementen enthält.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at <ph id="ph3">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph4">&lt;paramref name="count" /&gt;</ph> number of elements if found; otherwise -1.</source>
          <target state="translated">Der nullbasierte Index des ersten Vorkommens von <ph id="ph1">&lt;paramref name="item" /&gt;</ph> innerhalb des Bereichs von Elementen in <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>, der am <ph id="ph3">&lt;paramref name="index" /&gt;</ph> beginnt und eine Anzahl von Elementen (<ph id="ph4">&lt;paramref name="count" /&gt;</ph>) enthält, sofern gefunden, andernfalls –1.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which to insert the value.</source>
          <target state="translated">Der nullbasierte Index, an dem der Wert eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Das einzufügende Objekt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>Inserts the specified element at the specified index in the immutable list.</source>
          <target state="translated">Fügt das angegebene Element am angegebenen Index in die unveränderliche Liste ein.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>A new immutable list that includes the specified element.</source>
          <target state="translated">Eine neue unveränderliche Liste, die das angegebene Element enthält.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">Der nullbasierte Index, an dem neue Elemente eingefügt werden sollen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to insert.</source>
          <target state="translated">Die einzufügenden Elemente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the specified elements at the specified index in the immutable list.</source>
          <target state="translated">Fügt die angegebenen Elemente am angegebenen Index in die unveränderliche Liste ein.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable list that includes the specified elements.</source>
          <target state="translated">Eine neue unveränderliche Liste, die die angegebenen Elemente enthält.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the list.</source>
          <target state="translated">Das Objekt, das in der Liste gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Der Wert kann für Verweistypen <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">Der nullbasierte Startindex für die Suche.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (null) ist in einer leeren Liste gültig.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Die Anzahl der Elemente im zu durchsuchenden Abschnitt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to match <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Gleichheitsvergleich, der mit <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> abgeglichen werden soll.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des letzten Vorkommens innerhalb des Bereichs von Elementen in der <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> zurück, der die angegebene Anzahl von Elementen enthält und am angegebenen Index endet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to remove from the list.</source>
          <target state="translated">Das Objekt, das aus der Liste entfernt werden soll.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Gleichheitsvergleich, der zum Suchen von <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the first occurrence of a specified object from this immutable list.</source>
          <target state="translated">Entfernt das erste Vorkommen eines angegebenen Objekts aus dieser unveränderlichen Liste.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the specified object removed.</source>
          <target state="translated">Gibt eine neue Liste zurück, aus der das angegebene Objekt entfernt wurde.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Der Delegat, der die Bedingungen für die Elemente definiert, die entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Entfernt alle Elemente, die die vom angegebenen Prädikat definierten Bedingungen erfüllen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">Eine neue unveränderlichen Liste, aus der die Elemente entfernt wurden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>The index of the element to remove.</source>
          <target state="translated">Der Index des zu entfernenden Elements.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the immutable list.</source>
          <target state="translated">Entfernt das Element am angegebenen Index der unveränderlichen Liste.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>A new list with the element removed.</source>
          <target state="translated">Eine neue Liste, aus der das Element entfernt wurde.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The objects to remove from the list.</source>
          <target state="translated">Die Objekte, die aus der Liste entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to determine if <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept> match any objects in the list.</source>
          <target state="translated">Der Gleichheitsvergleich, mit dem bestimmt wird, ob <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept> mit Objekten in der Liste übereinstimmen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the specified object from the list.</source>
          <target state="translated">Entfernt das angegebene Objekt aus der Liste.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new immutable list with the specified objects removed, if <ph id="ph1">&lt;paramref name="items" /&gt;</ph> matched objects in the list.</source>
          <target state="translated">Eine neue unveränderliche Liste, aus der die angegebenen Objekte entfernt wurden, wenn <ph id="ph1">&lt;paramref name="items" /&gt;</ph> mit Objekten in der Liste übereingestimmt haben.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">Der nullbasierte Startindex des zu entfernenden Bereichs von Elementen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">Die Anzahl der zu entfernenden Elemente.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated">Entfernt einen Bereich von Elementen aus der <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">Eine neue unveränderlichen Liste, aus der die Elemente entfernt wurden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to be replaced.</source>
          <target state="translated">Das zu ersetzende Element.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to replace the  the first occurrence of <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> with</source>
          <target state="translated">Das Element, das das erste Vorkommen von <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> ersetzen soll.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use for matching <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Gleichheitsvergleich, der für den Abgleich mit <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the first matching element in the list replaced with the specified element.</source>
          <target state="translated">Gibt eine neue Liste zurück, wobei das erste übereinstimmende Element in der Liste durch das angegebene Element ersetzt wurde.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new list that contains <ph id="ph1">&lt;paramref name="newValue" /&gt;</ph>, even if <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph> is the same as <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated">Eine neue Liste, die selbst dann <ph id="ph1">&lt;paramref name="newValue" /&gt;</ph> enthält, wenn <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph> und <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph> gleich sind.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> does not exist in the list.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> ist nicht in der Liste vorhanden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The position in the list of the element to replace.</source>
          <target state="translated">Die Position des zu ersetzenden Elements in der Liste.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The element to replace the old element with.</source>
          <target state="translated">Das durch ein Element zu ersetzende alte Element.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>Replaces an element in the list at a given position with the specified element.</source>
          <target state="translated">Ersetzt ein Element an einer bestimmten Position in der Liste durch das angegebene Element.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>A new list that contains the new element, even if the element at the specified location is the same as the new element.</source>
          <target state="translated">Eine neue Liste, die das neue Element selbst dann enthält, wenn das Element an der angegebenen Position und das neue Element gleich sind.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>