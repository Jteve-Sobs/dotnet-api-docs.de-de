<Type Name="AsyncResult" FullName="System.Runtime.Remoting.Messaging.AsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="797f7f3b835907ffc9e924bad643fc38bf61c0a8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86758328" /></Metadata><TypeSignature Language="C#" Value="public class AsyncResult : IAsyncResult, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncResult&#xA;Implements IAsyncResult, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult : IAsyncResult, System::Runtime::Remoting::Messaging::IMessageSink" />
  <TypeSignature Language="F#" Value="type AsyncResult = class&#xA;    interface IAsyncResult&#xA;    interface IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e9430-101">Kapselt die Ergebnisse eines asynchronen Vorgangs für einen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="e9430-101">Encapsulates the results of an asynchronous operation on a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-102">Die- <xref:System.Runtime.Remoting.Messaging.AsyncResult> Klasse wird in Verbindung mit asynchronen Methoden aufrufen verwendet, die mithilfe von Delegaten erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="e9430-102">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is used in conjunction with asynchronous method calls made using delegates.</span></span> <span data-ttu-id="e9430-103">Der <xref:System.IAsyncResult> von der-Methode des Delegaten zurückgegebene `BeginInvoke` kann in einen umgewandelt werden <xref:System.Runtime.Remoting.Messaging.AsyncResult> .</span><span class="sxs-lookup"><span data-stu-id="e9430-103">The <xref:System.IAsyncResult> returned from the delegate's `BeginInvoke` method can be cast to an <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span></span> <span data-ttu-id="e9430-104"><xref:System.Runtime.Remoting.Messaging.AsyncResult>Verfügt über die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> Eigenschaft, die das Delegatobjekt enthält, für das der asynchrone Aufruf aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-104">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> has the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property that holds the delegate object on which the asynchronous call was invoked.</span></span>  
  
 <span data-ttu-id="e9430-105">Weitere Informationen zu `BeginInvoke` und asynchronen Aufrufen mithilfe von Delegaten finden Sie unter [asynchrone Programmierung mithilfe](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates)von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="e9430-105">For more information about `BeginInvoke` and asynchronous calls using delegates, see [Asynchronous Programming Using Delegates](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9430-106">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> -Eigenschaft zum <xref:System.Threading.WaitHandle> Abrufen eines-Objekts und zum warten auf einen asynchronen Aufruf eines Delegaten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-106">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e9430-107">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="e9430-107">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e9430-108">Das Beispiel besteht aus zwei Klassen, der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der-Klasse, die die Methode enthält, die `Main` den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="e9430-108">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e9430-109">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="e9430-109">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates"><span data-ttu-id="e9430-110">Asynchrone Programmierung mithilfe von Delegaten</span><span class="sxs-lookup"><span data-stu-id="e9430-110">Asynchronous Programming Using Delegates</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AsyncDelegate">
      <MemberSignature Language="C#" Value="public virtual object AsyncDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncDelegate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncDelegate { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncDelegate : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-111">Ruft das Delegatobjekt ab, für das der asynchrone Aufruf ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-111">Gets the delegate object on which the asynchronous call was invoked.</span></span></summary>
        <value><span data-ttu-id="e9430-112">Das Delegatobjekt, für das der asynchrone Aufruf ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-112">The delegate object on which the asynchronous call was invoked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-113">Die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> Eigenschaft kann in die tatsächliche Klasse des benutzerdefinierten Delegaten umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="e9430-113">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property can be cast to the actual class of the user-defined delegate.</span></span>  
  
 <span data-ttu-id="e9430-114">Wenn beispielsweise der Delegat, der zum Ausführen des asynchronen Aufrufes verwendet wurde, vom Typ ist `MyDelegate` , muss der Delegat, der von dieser Eigenschaft zurückgegeben wird, in umgewandelt werden `MyDelegate` .</span><span class="sxs-lookup"><span data-stu-id="e9430-114">For example, if the delegate that was used to make the asynchronous call is of type `MyDelegate`, the delegate that is returned by this property must be cast to `MyDelegate`.</span></span> <span data-ttu-id="e9430-115">Die Rückruf Methode kann dann die-Methode des Delegaten `EndInvoke` mit der korrekten Signatur abrufen, um die Ergebnisse des asynchronen Methoden Aufrufs abzurufen.</span><span class="sxs-lookup"><span data-stu-id="e9430-115">The callback method can then call the delegate's `EndInvoke` method with the correct signature, in order to obtain the results of the asynchronous method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9430-116">Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> Eigenschaft verwendet wird, um den Delegaten abzurufen, der zum Ausführen des asynchronen Aufrufes verwendet wurde, um aufgerufen werden zu können `EndInvoke` .</span><span class="sxs-lookup"><span data-stu-id="e9430-116">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property to get the delegate that was used to make the asynchronous call, in order to call `EndInvoke`.</span></span> <span data-ttu-id="e9430-117">Im Beispiel wird das- <xref:System.IAsyncResult> Objekt, das der einzige Parameter der Rückruf Methode ist, in ein- <xref:System.Runtime.Remoting.Messaging.AsyncResult> Objekt umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="e9430-117">The example casts the <xref:System.IAsyncResult>, which is the only parameter of the callback method, to an <xref:System.Runtime.Remoting.Messaging.AsyncResult> object.</span></span>  
  
 <span data-ttu-id="e9430-118">Das Beispiel besteht aus zwei Klassen, der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der-Klasse, die die Methode enthält, die `Main` den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="e9430-118">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e9430-119">Weitere Informationen zur Funktionsweise dieses Rückruf Beispiels sowie weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="e9430-119">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl&#xA;override this.AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="asyncResult.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="e9430-120">Die <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />-Schnittstelle der Anforderung.</span><span class="sxs-lookup"><span data-stu-id="e9430-120">The request <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <param name="replySink"><span data-ttu-id="e9430-121">Die <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />-Schnittstelle der Antwort.</span><span class="sxs-lookup"><span data-stu-id="e9430-121">The response <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></param>
        <summary><span data-ttu-id="e9430-122">Implementiert die <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e9430-122">Implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></summary>
        <returns><span data-ttu-id="e9430-123">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e9430-123">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-124">Die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> Methode der- <xref:System.Runtime.Remoting.Messaging.IMessageSink> Schnittstelle ist für die-Klasse nicht relevant <xref:System.Runtime.Remoting.Messaging.AsyncResult> .</span><span class="sxs-lookup"><span data-stu-id="e9430-124">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> method of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface is not relevant to the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span> <span data-ttu-id="e9430-125">Die Implementierung von löst <xref:System.Runtime.Remoting.Messaging.AsyncResult> eine aus <xref:System.NotSupportedException> .</span><span class="sxs-lookup"><span data-stu-id="e9430-125">Implementation by <xref:System.Runtime.Remoting.Messaging.AsyncResult> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e9430-126">Rufen Sie stattdessen eine <xref:System.Runtime.Remoting.Messaging.AsyncResult> durch Umwandeln der-Schnittstelle ab, die <xref:System.IAsyncResult> von einem asynchronen Aufruf mit einem-Delegaten zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-126">Instead, obtain an <xref:System.Runtime.Remoting.Messaging.AsyncResult> by casting the <xref:System.IAsyncResult> interface returned by an asynchronous call made using a delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public virtual object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-127">Ruft das Objekt ab, das als letzter Parameter eines <see langword="BeginInvoke" />-Methodenaufrufs angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="e9430-127">Gets the object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></summary>
        <value><span data-ttu-id="e9430-128">Das Objekt, das als letzter Parameter eines <see langword="BeginInvoke" />-Methodenaufrufs angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="e9430-128">The object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-129">Weitere Informationen zur- `BeginInvoke` Methode finden Sie unter [asynchrone Programmierung mithilfe](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates)von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="e9430-129">For more information about the `BeginInvoke` method, see [Asynchronous Programming Using Delegates](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9430-130">Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> Eigenschaft verwendet wird, um Informationen an eine Rückruf Methode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="e9430-130">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="e9430-131">Der letzte Parameter des `BeginInvoke` Methoden Aufrufs ist eine Format Zeichenfolge, die von der Rückruf Methode zum Formatieren einer Ausgabe Meldung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-131">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="e9430-132">Das Beispiel besteht aus zwei Klassen, der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der-Klasse, die die Methode enthält, die `Main` den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="e9430-132">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e9430-133">Weitere Informationen zur Funktionsweise dieses Rückruf Beispiels sowie weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="e9430-133">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-134">Ruft ein <see cref="T:System.Threading.WaitHandle" /> ab, das Win32-Synchronisierungshandles kapselt und die Implementierung verschiedener Synchronisierungsschemas ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="e9430-134">Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></summary>
        <value><span data-ttu-id="e9430-135">Ein <see cref="T:System.Threading.WaitHandle" />, das Win32-Synchronisierungshandles kapselt und die Implementierung verschiedener Synchronisierungsschemas ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="e9430-135">A <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-136">Der, der <xref:System.Threading.WaitHandle> von dieser Methode zurückgegeben wird, wird automatisch signalisiert, wenn der asynchrone Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-136">The <xref:System.Threading.WaitHandle> returned by this method is automatically signaled when the asynchronous operation has completed.</span></span>  
  
 <span data-ttu-id="e9430-137">Das Wait-Handle wird nicht automatisch geschlossen, wenn Sie für den Delegaten aufzurufen `EndInvoke` , der zum Ausführen des asynchronen Methoden Aufrufes verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-137">The wait handle is not closed automatically when you call `EndInvoke` on the delegate that was used to make the asynchronous method call.</span></span> <span data-ttu-id="e9430-138">Wenn Sie alle Verweise auf das Wait-Handle freigeben, werden Systemressourcen frei, sobald das Wait-Handle von der Garbage Collection zurückgefordert wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-138">If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</span></span> <span data-ttu-id="e9430-139">Um die Systemressourcen freizugeben, sobald die Verwendung des Wait-Handles abgeschlossen ist, müssen Sie die-Methode aufzurufen <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="e9430-139">To free the system resources as soon as you are finished using the wait handle, call the <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e9430-140">Die Garbage Collection funktioniert effizienter, wenn verwerfbare Objekte explizit geschlossen oder verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="e9430-140">Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e9430-141">Der <xref:System.Threading.WaitHandle> , der in der- <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> Eigenschaft enthalten ist, kann zum Blockieren des aktuellen Threads verwendet werden, bis der asynchrone-Befehl abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="e9430-141">The <xref:System.Threading.WaitHandle> contained in the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property can be used to block the current thread until the asynchronous call is complete.</span></span> <span data-ttu-id="e9430-142">Der <xref:System.Threading.WaitHandle> ignoriert jedoch das <xref:System.AsyncCallback> , wenn während des `BeginInvoke` Aufrufes angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-142">However the <xref:System.Threading.WaitHandle> will ignore the <xref:System.AsyncCallback>, if one was specified during the `BeginInvoke` call.</span></span> <span data-ttu-id="e9430-143">Daher kann es vorkommen, dass die Anwendung heruntergefahren wird, bevor die <xref:System.AsyncCallback> Ausführung von abgeschlossen ist. Dies gilt auch dann, wenn eine <xref:System.Threading.WaitHandle> zum Blockieren bis zum Abschluss des asynchronen Aufrufens verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-143">Therefore, a situation can occur where the application shuts down before the <xref:System.AsyncCallback> has finished executing, even if a <xref:System.Threading.WaitHandle> is used to block until the asynchronous call completion.</span></span> <span data-ttu-id="e9430-144">Ein Beispiel für eine solche Situation finden Sie im Beispiel für die <xref:System.Runtime.Remoting.Messaging.AsyncResult> -Klasse, und entfernen Sie die- <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Anweisung.</span><span class="sxs-lookup"><span data-stu-id="e9430-144">For an example of such a situation, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class, and remove the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9430-145">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> -Eigenschaft zum <xref:System.Threading.WaitHandle> Abrufen eines-Objekts und zum warten auf einen asynchronen Aufruf eines Delegaten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-145">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="e9430-146">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="e9430-146">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="e9430-147">Das Beispiel besteht aus zwei Klassen, der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der-Klasse, die die Methode enthält, die `Main` den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="e9430-147">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e9430-148">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="e9430-148">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.WaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-149">Ruft einen Wert ab, der angibt, ob der <see langword="BeginInvoke" />-Aufruf synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-149">Gets a value indicating whether the <see langword="BeginInvoke" /> call completed synchronously.</span></span></summary>
        <value><span data-ttu-id="e9430-150"><see langword="true" />, wenn der <see langword="BeginInvoke" />-Aufruf synchron abgeschlossen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9430-150"><see langword="true" /> if the <see langword="BeginInvoke" /> call completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-151">Wenn erkannt wird, dass der `BeginInvoke` Aufruf synchron im Delegaten abgeschlossen <xref:System.AsyncCallback> wurde, ist es wahrscheinlich, dass der Thread, der begincallaufgerufen hat, der aktuelle Thread ist.</span><span class="sxs-lookup"><span data-stu-id="e9430-151">If it is detected that the `BeginInvoke` call completed synchronously in the <xref:System.AsyncCallback> delegate, it is probable that the thread that called BeginInvoke is the current thread.</span></span> <span data-ttu-id="e9430-152">Die meisten Anbieter der <xref:System.IAsyncResult> -Schnittstelle verwenden die Funktion nicht und geben einen Standardwert zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="e9430-152">Most providers of the <xref:System.IAsyncResult> interface will not use the capability and will return a default `false`.</span></span>  
  
 <span data-ttu-id="e9430-153">Die aktuelle Implementierung von <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> gibt immer zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="e9430-153">Current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeCalled">
      <MemberSignature Language="C#" Value="public bool EndInvokeCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndInvokeCalled" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property EndInvokeCalled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndInvokeCalled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EndInvokeCalled : bool with get, set" Usage="System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-154">Ruft einen Wert ab, der angibt, ob <see langword="EndInvoke" /> für das aktuelle <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> aufgerufen wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="e9430-154">Gets or sets a value indicating whether <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span></span></summary>
        <value><span data-ttu-id="e9430-155"><see langword="true" />, wenn <see langword="EndInvoke" /> für das aktuelle <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> aufgerufen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9430-155"><see langword="true" /> if <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage GetReplyMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage GetReplyMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplyMessage () As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ GetReplyMessage();" />
      <MemberSignature Language="F#" Value="abstract member GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.GetReplyMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9430-156">Ruft die Antwortmeldung für den asynchronen Aufruf ab.</span><span class="sxs-lookup"><span data-stu-id="e9430-156">Gets the response message for the asynchronous call.</span></span></summary>
        <returns><span data-ttu-id="e9430-157">Eine Remotemeldung, die eine Antwort auf einen Methodenaufruf für ein Remoteobjekt darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="e9430-157">A remoting message that should represent a response to a method call on a remote object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-158">Die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> Methode kann ein-Objekt zurückgeben, nachdem die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="e9430-158">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method can return an object after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method is called.</span></span> <span data-ttu-id="e9430-159">Der <xref:System.Runtime.Remoting.Messaging.IMessage> Rückgabewert kann in einen umgewandelt werden <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> .</span><span class="sxs-lookup"><span data-stu-id="e9430-159">The <xref:System.Runtime.Remoting.Messaging.IMessage> return value can be cast to an <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span></span>  
  
 <span data-ttu-id="e9430-160">Es ist jedoch nicht erforderlich, eine dieser Methoden direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="e9430-160">However, you do not need to call either of these methods directly.</span></span> <span data-ttu-id="e9430-161">Sie sind für die Verwendung durch die Remoting-Infrastruktur der .NET Framework vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="e9430-161">They are intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-162">Ruft einen Wert ab, der angibt, ob der Server den Aufruf abgeschlossen hat.</span><span class="sxs-lookup"><span data-stu-id="e9430-162">Gets a value indicating whether the server has completed the call.</span></span></summary>
        <value><span data-ttu-id="e9430-163"><see langword="true" />, nachdem der Server den Aufruf abgeschlossen hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9430-163"><see langword="true" /> after the server has completed the call; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-164">Der Server darf keine vom Client bereitgestellten Ressourcen außerhalb der vereinbarten Freigabe Semantik verwenden, nachdem die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> Eigenschaft auf festgelegt wurde `true` .</span><span class="sxs-lookup"><span data-stu-id="e9430-164">The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property to `true`.</span></span> <span data-ttu-id="e9430-165">Daher ist es für den Client sicher, dass die Ressourcen nach der Rückgabe der-Eigenschaft zerstört werden <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> `true` .</span><span class="sxs-lookup"><span data-stu-id="e9430-165">Thus, it is safe for the client to destroy the resources after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9430-166">Im folgenden Beispiel wird gezeigt, wie die- <xref:System.IAsyncResult.IsCompleted%2A> Eigenschaft des <xref:System.Runtime.Remoting.Messaging.AsyncResult> von zurückgegebenen verwendet wird `BeginInvoke` , um zu ermitteln, wann ein asynchroner-Vorgang abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-166">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.Runtime.Remoting.Messaging.AsyncResult> returned by `BeginInvoke` to discover when an asynchronous call completes.</span></span> <span data-ttu-id="e9430-167">Dieses Verfahren ist empfehlenswert, wenn der asynchrone Aufruf aus einem Thread für die Benutzeroberfläche erfolgt.</span><span class="sxs-lookup"><span data-stu-id="e9430-167">You might do this when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="e9430-168">Durch das Abrufen der Beendigung kann die Verarbeitung vom aufrufenden Thread fortgesetzt werden, während der asynchrone Aufruf für einen <xref:System.Threading.ThreadPool> -Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e9430-168">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="e9430-169">Das Beispiel besteht aus zwei Klassen, der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der-Klasse, die die Methode enthält, die `Main` den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="e9430-169">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="e9430-170">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="e9430-170">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9430-171">Ruft die nächste Meldungssenke in der Senkenkette ab.</span><span class="sxs-lookup"><span data-stu-id="e9430-171">Gets the next message sink in the sink chain.</span></span></summary>
        <value><span data-ttu-id="e9430-172">Eine <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />-Schnittstelle, die die nächste Meldungssenke in der Senkenkette darstellt.</span><span class="sxs-lookup"><span data-stu-id="e9430-172">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface that represents the next message sink in the sink chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-173">Die aktuelle Implementierung von <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> gibt zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="e9430-173">The current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageCtrl">
      <MemberSignature Language="C#" Value="public virtual void SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessageCtrl(class System.Runtime.Remoting.Messaging.IMessageCtrl mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMessageCtrl (mc As IMessageCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl ^ mc);" />
      <MemberSignature Language="F#" Value="abstract member SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit&#xA;override this.SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit" Usage="asyncResult.SetMessageCtrl mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
      </Parameters>
      <Docs>
        <param name="mc"><span data-ttu-id="e9430-174">Das <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> für den aktuellen Remotemethodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="e9430-174">The <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call.</span></span></param>
        <summary><span data-ttu-id="e9430-175">Legt ein <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> für den aktuellen Remotemethodenaufruf fest, das das Steuern asynchroner Meldungen nach der Meldungsverteilung ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="e9430-175">Sets an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-176">Sie müssen die-Methode nicht aufzurufen <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> .</span><span class="sxs-lookup"><span data-stu-id="e9430-176">You do not need to call the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="e9430-177">Eine Antwortmeldung auf einen Methodenaufruf für ein Remoteobjekt.</span><span class="sxs-lookup"><span data-stu-id="e9430-177">A response message to a method call on a remote object.</span></span></param>
        <summary><span data-ttu-id="e9430-178">Verarbeitet eine von einem Methodenaufruf für ein Remoteobjekt zurückgegebene Antwortmeldung synchron.</span><span class="sxs-lookup"><span data-stu-id="e9430-178">Synchronously processes a response message returned by a method call on a remote object.</span></span></summary>
        <returns><span data-ttu-id="e9430-179">Gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="e9430-179">Returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9430-180">Die- <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Methode implementiert die- <xref:System.Runtime.Remoting.Messaging.IMessageSink> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="e9430-180">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method implements the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="e9430-181">Sie müssen diese Methode nicht direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="e9430-181">You do not need to call this method directly.</span></span> <span data-ttu-id="e9430-182">Es ist für die Verwendung durch die Remoting-Infrastruktur der .NET Framework vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="e9430-182">It is intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 <span data-ttu-id="e9430-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Ruft den Delegaten des Consumercodes auf <xref:System.AsyncCallback> .</span><span class="sxs-lookup"><span data-stu-id="e9430-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invokes the consumer code's <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="e9430-184">Außerdem <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> wird die von der-Methode zurückgegebene-Instanz festgelegt <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> .</span><span class="sxs-lookup"><span data-stu-id="e9430-184">It also sets the <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instance returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method.</span></span> <span data-ttu-id="e9430-185">Wenn der- `msg` Parameter vom Typ ist <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> , wird das gleiche-Objekt von zurückgegeben <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> .</span><span class="sxs-lookup"><span data-stu-id="e9430-185">If the `msg` parameter is of type <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, the same object is returned by <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span></span> <span data-ttu-id="e9430-186">Andernfalls wird eine Antwortnachricht zurückgegeben, die eine Remoting-Ausnahme enthält.</span><span class="sxs-lookup"><span data-stu-id="e9430-186">Otherwise, a reply message that contains a remoting exception is returned.</span></span>  
  
 <span data-ttu-id="e9430-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> ändert auch den Wert, der von der-Eigenschaft zurückgegeben wird <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> .</span><span class="sxs-lookup"><span data-stu-id="e9430-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> also modifies the value returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
