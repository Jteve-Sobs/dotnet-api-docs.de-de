<Type Name="IMessageSink" FullName="System.Runtime.Remoting.Messaging.IMessageSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29663cd22a4f21ad8b7d9633c3705d9adc0ca96e" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77221963" /></Metadata><TypeSignature Language="C#" Value="public interface IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageSink" />
  <TypeSignature Language="F#" Value="type IMessageSink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="002d4-101">Definiert die Schnittstelle für eine Meldungssenke.</span><span class="sxs-lookup"><span data-stu-id="002d4-101">Defines the interface for a message sink.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d4-102">Wenn ein Methodenaufruf auf dem Proxy erfolgt, bietet die Remoting-Infrastruktur die erforderliche Unterstützung für das übergeben der Argumente an das tatsächliche Objekt über die Remotinggrenzen hinweg, das Aufrufen der eigentlichen Objektmethode mit den Argumenten und das Zurückgeben der Ergebnisse an. der Client des Proxy Objekts.</span><span class="sxs-lookup"><span data-stu-id="002d4-102">When a method call is made on the proxy, the remoting infrastructure provides the necessary support for passing the arguments to the actual object across the remoting boundaries, calling the actual object method with the arguments, and returning the results back to the client of the proxy object.</span></span>  
  
 <span data-ttu-id="002d4-103">Ein Remote Methodenaufrufe ist eine Meldung, die vom Client Ende zum Server Ende und möglicherweise wieder zurückgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="002d4-103">A remote method call is a message that goes from the client end to the server end and possibly back again.</span></span> <span data-ttu-id="002d4-104">Da Sie Remote Grenzen überschreitet, übergibt der Remote Methodenaufrufe eine Kette von `IMessageSink` Objekten.</span><span class="sxs-lookup"><span data-stu-id="002d4-104">As it crosses remoting boundaries on the way, the remote method call passes through a chain of `IMessageSink` objects.</span></span> <span data-ttu-id="002d4-105">Jede Senke in der Kette empfängt das Nachrichten Objekt, führt einen bestimmten Vorgang aus und delegiert an die nächste Senke in der Kette.</span><span class="sxs-lookup"><span data-stu-id="002d4-105">Each sink in the chain receives the message object, performs a specific operation, and delegates to the next sink in the chain.</span></span> <span data-ttu-id="002d4-106">Das Proxy Objekt enthält einen Verweis auf den ersten `IMessageSink`, der zum Starten der Kette verwendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="002d4-106">The proxy object contains a reference to the first `IMessageSink` it needs to use to start off the chain.</span></span>  
  
 <span data-ttu-id="002d4-107">Bei asynchronen Aufrufen stellt jede Senke zum Zeitpunkt der Delegierung eine Antwort Senke (eine andere `IMessageSink`) bereit, die von der nächsten Senke aufgerufen wird, wenn die Antwort auf dem Weg zurückliegt.</span><span class="sxs-lookup"><span data-stu-id="002d4-107">For asynchronous calls, at the time of delegation, each sink provides a reply sink (another `IMessageSink`) that will be called by the next sink when the reply is on its way back.</span></span>  
  
 <span data-ttu-id="002d4-108">Verschiedene Typen von senken führen verschiedene Vorgänge aus, abhängig vom Typ des empfangenen Nachrichten Objekts.</span><span class="sxs-lookup"><span data-stu-id="002d4-108">Different types of sinks perform different operations, depending on the type of message object received.</span></span> <span data-ttu-id="002d4-109">Beispielsweise könnte eine Senke dazu führen, dass eine Sperre ausgeführt wird, eine andere eine aufrufssicherheit erzwingen kann, eine andere die Steuerungs-und Zuverlässigkeits Dienste <xref:System.AppDomain>des Fluss Aufrufes.</span><span class="sxs-lookup"><span data-stu-id="002d4-109">For example, one sink could cause a lock to be taken, another could enforce call security, another could perform flow call control and reliability services, and yet another could transport the call to a different <xref:System.AppDomain>, process, or computer.</span></span> <span data-ttu-id="002d4-110">Mindestens zwei Nachrichten senken in der Kette können im Hinblick auf jede bestimmte Aktion miteinander interagieren.</span><span class="sxs-lookup"><span data-stu-id="002d4-110">Two or more message sinks in the chain can interact with each other in regard to each specific action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="002d4-111">Im folgenden Codebeispiel wird die Implementierung der <xref:System.Runtime.Remoting.Messaging.IMessageSink>-Schnittstelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="002d4-111">The following code example shows the implementation of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="002d4-112">Beachten Sie, dass im Beispiel Typdefinitionen und Assemblyverweise angenommen werden, die für die Kompilierung des Beispiels bereitgestellt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="002d4-112">Note that the sample assumes type definitions and assembly references that must be provided for the sample to compile.</span></span>  
  
 [!code-cpp[IMessageSink_Client#3](~/samples/snippets/cpp/VS_Snippets_Remoting/IMessageSink_Client/CPP/imessagesink_client.cpp#3)]
 [!code-csharp[IMessageSink_Client#3](~/samples/snippets/csharp/VS_Snippets_Remoting/IMessageSink_Client/CS/imessagesink_client.cs#3)]
 [!code-vb[IMessageSink_Client#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMessageSink_Client/VB/imessagesink_client.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="002d4-113">Es ist wichtig zu beachten, dass der Code, der die aktuelle Schnittstelle implementiert, Implementierungen für <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> und <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />bereitstellen muss, da synchrone Aufrufe in asynchrone Aufrufe konvertiert werden können und umgekehrt.</span><span class="sxs-lookup"><span data-stu-id="002d4-113">It is important to note that code implementing the current interface must provide implementations for both <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> and <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />, since synchronous calls can be converted to asynchronous calls and vice versa.</span></span> <span data-ttu-id="002d4-114">Beide Methoden müssen implementiert werden, auch wenn die Senke keine asynchrone Verarbeitung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="002d4-114">Both methods must be implemented, even if the sink does not support asynchronous processing.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="iMessageSink.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="002d4-115">Die zu verarbeitende Meldung.</span><span class="sxs-lookup"><span data-stu-id="002d4-115">The message to process.</span></span></param>
        <param name="replySink"><span data-ttu-id="002d4-116">Die Antwortsenke für die Antwortmeldung.</span><span class="sxs-lookup"><span data-stu-id="002d4-116">The reply sink for the reply message.</span></span></param>
        <summary><span data-ttu-id="002d4-117">Verarbeitet die angegebene Meldung asynchron.</span><span class="sxs-lookup"><span data-stu-id="002d4-117">Asynchronously processes the given message.</span></span></summary>
        <returns><span data-ttu-id="002d4-118">Eine <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" />-Schnittstelle, die eine Möglichkeit bereitstellt, die asynchronen Meldungen nach der Meldungsverteilung zu steuern.</span><span class="sxs-lookup"><span data-stu-id="002d4-118">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> interface that provides a way to control asynchronous messages after they have been dispatched.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d4-119">Diese Methode wird in der Nachrichten Senke durch die Remoting-Infrastruktur oder durch eine vorherige Senke für asynchrone Nachrichten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="002d4-119">This method is invoked on the message sink by the remoting infrastructure or by a previous sink for asynchronous messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="002d4-120">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="002d4-120">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002d4-121">Ruft die nächste Meldungssenke in der Senkenkette ab.</span><span class="sxs-lookup"><span data-stu-id="002d4-121">Gets the next message sink in the sink chain.</span></span></summary>
        <value><span data-ttu-id="002d4-122">Die nächste Meldungssenke in der Senkenkette.</span><span class="sxs-lookup"><span data-stu-id="002d4-122">The next message sink in the sink chain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="002d4-123">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="002d4-123">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="iMessageSink.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="002d4-124">Die zu verarbeitende Meldung.</span><span class="sxs-lookup"><span data-stu-id="002d4-124">The message to process.</span></span></param>
        <summary><span data-ttu-id="002d4-125">Verarbeitet die angegebene Meldung synchron.</span><span class="sxs-lookup"><span data-stu-id="002d4-125">Synchronously processes the given message.</span></span></summary>
        <returns><span data-ttu-id="002d4-126">Eine Antwortmeldung als Reaktion auf die Anforderung.</span><span class="sxs-lookup"><span data-stu-id="002d4-126">A reply message in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="002d4-127">Die <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>-Methode wird für die Nachrichten Senke durch die Remoting-Infrastruktur oder durch eine vorherige Senke für synchrone Nachrichten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="002d4-127">The <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> method is invoked on the message sink by the remoting infrastructure or by a previous sink for synchronous messages.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="002d4-128">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="002d4-128">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
