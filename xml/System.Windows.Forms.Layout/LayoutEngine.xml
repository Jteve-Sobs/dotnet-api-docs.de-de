<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c1a9269c63d97fe284b0377818deaed5388f8a2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51871976" /></Metadata><TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Basisklasse für das Implementieren von Layout-Engines bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Layout.LayoutEngine> Klasse, wenn Sie benutzerdefinierte Layout-Verhalten zur Laufzeit erstellen möchten. Leiten Sie eine eigene Klasse von der <xref:System.Windows.Forms.Layout.LayoutEngine> Klasse, und überschreiben die <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> Methode, um ein benutzerdefiniertes Layoutverhalten zu definieren.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.Layout.LayoutEngine> Klasse das benutzerdefinierte Layout-Verhalten zu implementieren.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Layout-Verhalten sollte für jede Instanz der Layout-Engine zugeordnete Container-Klasse identisch sein. Aus diesem Grund sollten Sie Ihr Layout-Engine-Konstruktor deklarieren <see langword="protected" /> oder <see langword="private" />, und Implementieren der Layout-Engine als Singleton-Klasse.</para></block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">Der Container, für den die Layout-Engine ausgeführt wird.</param>
        <param name="specified">Die Grenzen, die die Größe und die Position des Containers definieren.</param>
        <summary>Initialisiert die Layout-Engine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie optional die Initialisierungslogik in die <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="child" /> ist kein Typ, für den <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> eine Layoutoperation ausführen kann.</exception>
        <block subset="none" type="overrides"><para>Überschreiben der <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> Methode, um die angepasste Initialisierung von Verhalten bereitzustellen.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, für den die Layout-Engine ausgeführt wird.</param>
        <param name="layoutEventArgs">Ein Ereignisargument von einem <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis.</param>
        <summary>Fordert an, dass die Layout-Engine eine Layoutoperation ausführt.</summary>
        <returns><see langword="true" />, wenn das Layout erneut vom übergeordneten Element von <paramref name="container" /> erstellt werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn werden, dass die Layout-Engine eine Layoutoperation ausführt, auf die `container` Parameter. Sehen Sie den Wert des der <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, und <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> Eigenschaften `layoutEventArgs` entscheiden, ob eine Layoutoperation erforderlich ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> Methode, um das benutzerdefinierte Layout-Verhalten zu implementieren. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Layout.LayoutEngine> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="container" /> ist kein Typ, für den <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> eine Layoutoperation ausführen kann.</exception>
        <block subset="none" type="overrides"><para>Überschreiben der <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> Methode, um ein benutzerdefiniertes Layoutverhalten bereitzustellen.  
  
Bei den Inhalt zur Festlegung der <paramref name="container" /> Parameter, sollten Sie unbedingt die <see cref="P:System.Windows.Forms.Control.Visible" /> Eigenschaft jedes untergeordnete Steuerelement.  
  
Zurückgeben <see langword="true" /> , wenn die Logik des Layoutmoduls bestimmt das Layout erneut vom übergeordneten Element des Containers ausgeführt werden soll. Dies kann beispielsweise auftreten, wenn die Layout-Engine die Größe von untergeordneten Steuerelemente und feststellt, dass der Container muss, Größe erhöht werden, um das neue Layout zu berücksichtigen.</para></block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
      </Docs>
    </Member>
  </Members>
</Type>