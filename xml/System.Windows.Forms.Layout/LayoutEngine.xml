<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f2e0cdf387a61ad54f556e6577a3843a1ca3cf5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78835213" /></Metadata><TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Basisklasse für das Implementieren von Layout-Engines bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Windows.Forms.Layout.LayoutEngine>-Klasse, wenn Sie ein benutzerdefiniertes Layoutverhalten zur Laufzeit erstellen möchten. Leiten Sie eine eigene Klasse von der <xref:System.Windows.Forms.Layout.LayoutEngine>-Klasse ab, und überschreiben Sie die <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>-Methode, um das benutzerdefinierte Layoutverhalten  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.Layout.LayoutEngine>-Klasse, um das benutzerdefinierte Layoutverhalten zu implementieren.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Layout.LayoutEngine" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Das Layoutverhalten sollte für jede Instanz der zugeordneten Container Klasse des Layoutmoduls identisch sein. Aus diesem Grund sollten Sie den Konstruktor Ihres Layoutmoduls deklarieren <see langword="protected" /> oder <see langword="private" />und die Layout-Engine als Singleton-Klasse implementieren.</para></block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">Der Container, für den die Layout-Engine ausgeführt wird.</param>
        <param name="specified">Die Grenzen, die die Größe und die Position des Containers definieren.</param>
        <summary>Initialisiert die Layout-Engine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Optional können Sie eine Initialisierungs Logik in der <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A>-Methode bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="child" /> ist kein Typ, für den <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> eine Layoutoperation ausführen kann.</exception>
        <block subset="none" type="overrides"><para>Überschreiben Sie die <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />-Methode, um das benutzerdefinierte Initialisierungs Verhalten bereitzustellen.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Layout (container As Object, layoutEventArgs As LayoutEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, für den die Layout-Engine ausgeführt wird.</param>
        <param name="layoutEventArgs">Ein Ereignisargument von einem <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis.</param>
        <summary>Fordert an, dass die Layout-Engine eine Layoutoperation ausführt.</summary>
        <returns><see langword="true" />, wenn das Layout erneut vom übergeordneten Element von <paramref name="container" /> erstellt werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn das Layoutmodul eine Layoutoperation für den `container`-Parameter durchführen soll. Sie können den Wert der Eigenschaften <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>und <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> auf `layoutEventArgs` überprüfen, um zu entscheiden, ob ein Layoutvorgang erforderlich ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>-Methode veranschaulicht, um das benutzerdefinierte Layoutverhalten zu implementieren. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.Layout.LayoutEngine>-Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="container" /> ist kein Typ, für den <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> eine Layoutoperation ausführen kann.</exception>
        <block subset="none" type="overrides"><para>Überschreiben Sie die <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> Methode, um das benutzerdefinierte Layoutverhalten bereitzustellen  
  
Wenn Sie den Inhalt des <paramref name="container" />-Parameters festlegen, stellen Sie sicher, dass Sie die <see cref="P:System.Windows.Forms.Control.Visible" />-Eigenschaft jedes untergeordneten Steuer Elements überprüfen.  
  
Gibt <see langword="true" /> zurück, wenn die Layout-Engine-Logik festlegt, dass das Layout erneut vom übergeordneten Element des Containers ausgeführt werden soll. Dies kann beispielsweise der Fall sein, wenn das Layoutmodul die Größe untergeordneter Steuerelemente ändert und feststellt, dass der Container um das neue Layout angepasst werden muss.</para></block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/f91aa91c-29f4-4089-95ca-5d48b774b00e">Gewusst wie: Implementieren einer benutzerdefinierten Layout-Engine</related>
      </Docs>
    </Member>
  </Members>
</Type>
