<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="374cf7c3c811e8bac08fa3685574c05dfbbc8753" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70402266" /></Metadata><TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrangedElementCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="51b82-101">Stellt eine Auflistung von Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="51b82-101">Represents a collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-102">Die <xref:System.Windows.Forms.Layout.ArrangedElementCollection> -Klasse stellt eine Auflistung von-Objekten dar, die auf einer Entwurfs Oberfläche <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>oder innerhalb eines übergeordneten Elements angeordnet sind</span><span class="sxs-lookup"><span data-stu-id="51b82-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="51b82-103">Es gibt keine öffentlich definierten Konstruktoren in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> , da Sie so konzipiert sind, dass Sie nur intern [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]in verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="51b82-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="51b82-104">Von <xref:System.Windows.Forms.Layout.ArrangedElementCollection>abgeleitete Klassen, <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>z. b., sind jedoch für den Entwickler verfügbar.</span><span class="sxs-lookup"><span data-stu-id="51b82-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="51b82-105">Öffentliche <see langword="static" />  ( <see langword="Shared" />  in Visual Basic) Member dieses Typs sind Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="51b82-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="51b82-106">Instanzmember sind nicht garantiert Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="51b82-106">Instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="51b82-107">Ein <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> kann mehrere Leser gleichzeitig unterstützen, solange die Auflistung nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="51b82-108">Die <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> -Methode gibt <see cref="T:System.Collections.IEnumerator" /> einen zurück, der für den Zugriff auf-Elemente verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="51b82-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span></span>  
  
<span data-ttu-id="51b82-109">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="51b82-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="51b82-110">Auch wenn eine Sammlung synchronisiert wird, können andere Threads die Auflistung weiterhin ändern, was bewirkt, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="51b82-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="51b82-111">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="51b82-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrangedElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="51b82-112">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der aktuellen Auflistung kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="51b82-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span></span> <span data-ttu-id="51b82-113">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="51b82-113">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="51b82-114">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="51b82-114">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="51b82-115">Kopiert den gesamten Inhalt dieser Auflistung in ein kompatibles eindimensionales <see cref="T:System.Array" />, wobei am angegebenen Index des Zielarrays begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-116">Der Typ des angegebenen Arrays muss mit der Quell Auflistung kompatibel sein.</span><span class="sxs-lookup"><span data-stu-id="51b82-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="51b82-117">Diese Methode verwendet die <xref:System.Array.Copy%2A?displayProperty=nameWithType> -Methode, um die Elemente zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="51b82-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b82-118"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-118"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51b82-119"><paramref name="index" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="51b82-119"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51b82-120"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="51b82-120"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="51b82-121">- oder -</span><span class="sxs-lookup"><span data-stu-id="51b82-121">-or-</span></span> 
<span data-ttu-id="51b82-122">Die Anzahl der Elemente, die aus der Quellauflistung kopiert werden sollen, ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-122">The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="51b82-123">Der Typ des Quellelements kann nicht automatisch in den Typ des <paramref name="array" /> umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="51b82-123">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b82-124">Ruft die Anzahl der Elemente in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="51b82-124">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="51b82-125">Die Anzahl der derzeit in der Auflistung enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="51b82-125">The number of elements currently contained in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-126">Wenn dies erforderlich ist, vergrößert sich die Kapazität der Sammlung dynamisch, um mehr Elemente zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="51b82-126">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="arrangedElementCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="51b82-127">Das <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />, das mit dem aktuellen <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-127">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></param>
        <summary><span data-ttu-id="51b82-128">Stellt fest, ob zwei <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />-Instanzen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="51b82-128">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="51b82-129"><see langword="true" />, wenn das angegebene <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> gleich der aktuellen <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-129"><see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrangedElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b82-130">Gibt einen Enumerator für die gesamte Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="51b82-130">Returns an enumerator for the entire collection.</span></span></summary>
        <returns><span data-ttu-id="51b82-131">Ein <see cref="T:System.Collections.IEnumerator" /> für die gesamte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="51b82-131">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-132">In der Regel hat der Enumerator keinen exklusiven Zugriff auf die Auflistung. Daher ist das Auflisten durch eine Auflistung intrinsisch keine Thread sichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="51b82-132">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="51b82-133">Auch wenn eine Sammlung synchronisiert wird, können andere Threads die Auflistung weiterhin ändern, was bewirkt, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="51b82-133">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="51b82-134">Um die Thread Sicherheit während der Enumeration zu gewährleisten, können Sie eine der folgenden Strategien befolgen:</span><span class="sxs-lookup"><span data-stu-id="51b82-134">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="51b82-135">Sperren Sie die Auflistung während der gesamten Enumeration mit <xref:System.Threading.Monitor>einem.</span><span class="sxs-lookup"><span data-stu-id="51b82-135">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="51b82-136">Erfassen und behandeln Sie die Ausnahmen, die sich aus Änderungen ergeben, die von anderen Threads vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="51b82-136">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="arrangedElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b82-137">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="51b82-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="51b82-138">Ein Hashcode für die aktuelle <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-138">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b82-139">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="51b82-139">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="51b82-140"><see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-140"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="51b82-141">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-141">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-142">Eine schreibgeschützte Auflistung lässt das Hinzufügen, entfernen oder Ändern von Elementen nach dem Erstellen der Auflistung nicht zu.</span><span class="sxs-lookup"><span data-stu-id="51b82-142">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="51b82-143">Eine schreibgeschützte Auflistung ist einfach eine Sammlung mit einem Wrapper, der das Ändern der Auflistung verhindert.</span><span class="sxs-lookup"><span data-stu-id="51b82-143">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="51b82-144">Wenn Änderungen an der zugrunde liegenden Auflistung vorgenommen werden, reflektiert die schreibgeschützte Auflistung diese Änderungen.</span><span class="sxs-lookup"><span data-stu-id="51b82-144">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b82-145">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.Collections.ICollection.IsSynchronized" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="51b82-145">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span></span></summary>
        <value><span data-ttu-id="51b82-146"><see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-146"><see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-147">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-147">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-148">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-148">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b82-149">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.Collections.ICollection.SyncRoot" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="51b82-149">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span></summary>
        <value><span data-ttu-id="51b82-150">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="51b82-150">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-151">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-151">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-152">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-152">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b82-153">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-153">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="51b82-154">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.Add(System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-154">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="51b82-155">Die Position, an der das neue Element eingefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="51b82-155">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-156">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-156">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-157">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-157">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51b82-158">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.Clear" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-158">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-159">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-159">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-160">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-160">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b82-161">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-161">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="51b82-162">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.Contains(System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-162">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="51b82-163"><see langword="true" />, wenn <see cref="T:System.Object" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-163"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-164">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-164">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-165">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-165">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b82-166">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-166">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="51b82-167">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.IndexOf(System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-167">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="51b82-168">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="51b82-168">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-169">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-169">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-170">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-170">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b82-171">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-171">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="51b82-172">Die <see cref="T:System.Object" />, die in die <see cref="T:System.Collections.IList" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-172">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="51b82-173">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-173">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-174">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-174">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-175">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-175">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51b82-176">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.Collections.IList.IsFixedSize" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="51b82-176">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span></span></summary>
        <value><span data-ttu-id="51b82-177"><see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51b82-177"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-178">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-178">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-179">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-179">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b82-180">Der nullbasierte Index des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="51b82-180">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="51b82-181">Eine Beschreibung dieses Members finden Sie unter der <see cref="P:System.Collections.IList.Item(System.Int32)" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="51b82-181">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span></span></summary>
        <value><span data-ttu-id="51b82-182">Das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="51b82-182">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-183">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-183">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-184">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-184">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="51b82-185">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.IList" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="51b82-185">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="51b82-186">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.Remove(System.Object)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-186">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-187">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-187">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-188">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-188">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="51b82-189">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="51b82-189">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="51b82-190">Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="51b82-190">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b82-191">Diese Methode ist eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="51b82-191">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="51b82-192">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Layout.ArrangedElementCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="51b82-192">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
