<Type Name="RibbonComboBox" FullName="System.Windows.Controls.Ribbon.RibbonComboBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c09239420d1e526519d4bff9d6825bcbb7217e4a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonComboBox : System.Windows.Controls.Ribbon.RibbonMenuButton" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonComboBox extends System.Windows.Controls.Ribbon.RibbonMenuButton" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonComboBox&#xA;Inherits RibbonMenuButton" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonComboBox : System::Windows::Controls::Ribbon::RibbonMenuButton" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonMenuButton</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7d144-101">Stellt ein Kombinationsfeld dar, das in einem <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />-Steuerelement verwendet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d144-101">Represents a combo box that is used in a <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-102">Die folgende Abbildung zeigt Beispiele für <xref:System.Windows.Controls.Ribbon.RibbonComboBox> Steuerelemente, Bilder und Bezeichnungen, deren nur Bilder und für die gerade Bezeichnungen.</span><span class="sxs-lookup"><span data-stu-id="7d144-102">The following illustration shows examples of <xref:System.Windows.Controls.Ribbon.RibbonComboBox> controls that have images and labels, that just have images, and that just have labels.</span></span>  
  
 <span data-ttu-id="7d144-103">![Kombinationsfeld-Steuerelemente des Menübands](~/add/media/wpfribbon-combobox.png "Menüband-Kombinationsfeld-Steuerelemente")</span><span class="sxs-lookup"><span data-stu-id="7d144-103">![Ribbon combo box controls](~/add/media/wpfribbon-combobox.png "Ribbon combo box controls")</span></span>  
<span data-ttu-id="7d144-104">Steuerelemente für Menüband-Kombinationsfelder</span><span class="sxs-lookup"><span data-stu-id="7d144-104">Ribbon combo box controls</span></span>  
  
 <span data-ttu-id="7d144-105">Die folgende Abbildung zeigt eine <xref:System.Windows.Controls.Ribbon.RibbonComboBox> Wenn das Dropdown-Menü geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="7d144-105">The following illustration shows a <xref:System.Windows.Controls.Ribbon.RibbonComboBox> when the drop-down is opened.</span></span>  
  
 <span data-ttu-id="7d144-106">![Menüband-Kombinationsfeld-Steuerelement mit Drop&#45;unten öffnen](~/add/media/wpfribbon-combobox-selection.png "Menüband-Kombinationsfeld-Steuerelement mit geöffneter Dropdownliste")</span><span class="sxs-lookup"><span data-stu-id="7d144-106">![Ribbon combo box control with drop&#45;down open](~/add/media/wpfribbon-combobox-selection.png "Ribbon combo box control with drop-down open")</span></span>  
<span data-ttu-id="7d144-107">Steuerelement für Menüband-Kombinationsfeld mit geöffneter Dropdownliste</span><span class="sxs-lookup"><span data-stu-id="7d144-107">Ribbon combo box control with drop-down open</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d144-108">Das folgende Beispiel zeigt das Markup zum Rendern ein Kombinationsfelds mit drei verfügbaren Elemente zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="7d144-108">The following example shows the markup to create a combo box with three available items.</span></span>  
  
 [!code-xaml[Ribbon_ControlsSample#RibbonComboBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_controlssample/cs/mainwindow.xaml#ribboncombobox)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d144-109">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Ribbon.RibbonComboBox" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-109">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonComboBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7d144-110">Das Element, das zum Anzeigen des Elements verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-110">The element that is used to display the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="7d144-111">Das Element, das aus der <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Auflistung angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-111">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-112">Entlädt den Container für das angegebene Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-112">Unloads the container for the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-113">Diese Methode macht die Auswirkungen der <xref:System.Windows.Controls.Ribbon.RibbonComboBox.PrepareContainerForItemOverride%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7d144-113">This method undoes the effects of the <xref:System.Windows.Controls.Ribbon.RibbonComboBox.PrepareContainerForItemOverride%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-114">Ruft einen Wert ab, der angibt, ob der Inhalt des Kombinationsfelds bearbeitet werden kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-114">Gets or sets a value that indicates whether the content of the combo box can be edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-115">
            <see langword="true" />, wenn der Inhalt des Kombinationsfelds bearbeitet werden kann. Andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-115">
              <see langword="true" /> if the content of the combo box can be edited; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7d144-116">Der registrierte Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-116">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7d144-117">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-117">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-118">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-118">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-119">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-119">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditableProperty>|  
|<span data-ttu-id="7d144-120">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-120">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-121">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-121">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7d144-122">Das folgende Beispiel zeigt das Markup zum Rendern ein Kombinationsfelds mit drei verfügbaren Elemente zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="7d144-122">The following example shows the markup to create a combo box with three available items.</span></span>  
  
 [!code-xaml[Ribbon_ControlsSample#RibbonComboBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_controlssample/cs/mainwindow.xaml#ribboncombobox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-123">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-123">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-124">Ruft einen Wert ab, der angibt, ob der Nur-Auswahl-Modus aktiviert ist, bei dem der Inhalt des Kombinationsfelds nur ausgewählt, aber nicht bearbeitet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-124">Gets or sets a value that indicates whether selection-only mode is enabled, in which the contents of the combo box are selectable but not editable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-125">
            <see langword="true" />, wenn der Inhalt des Kombinationsfelds nur ausgewählt, aber nicht bearbeitet werden kann, <see langword="false" />, wenn der Inhalt des Kombinationsfelds nicht ausgewählt und nicht bearbeitet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-125">
              <see langword="true" /> if the contents of the combo box are selectable but not editable; <see langword="false" /> if the contents of the combo box are not selectable and not editable.</span>
          </span>
          <span data-ttu-id="7d144-126">Der registrierte Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-126">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7d144-127">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-127">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-128">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-128">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-129">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-129">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsReadOnlyProperty>|  
|<span data-ttu-id="7d144-130">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-130">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-131">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-131">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-132">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsReadOnly" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-132">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-133">Enthält Daten zur Aktivierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-133">Contains data about the activation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-134">Wird aufgerufen, wenn der KeyTip oder die Tastenkombination gedrückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-134">Called when the KeyTip or accelerator key is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d144-135">Erstellt die visuelle Struktur für die <see cref="T:System.Windows.Controls.Ribbon.RibbonComboBox" />, wenn eine neue Vorlage angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-135">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonComboBox" /> when a new template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-136">Diese Methode wird immer dann aufgerufen, wenn Anwendungscode oder ein interner Prozess, z. B. eine Layout-Wiederaufbau-Übergabe, die <xref:System.Windows.FrameworkElement.ApplyTemplate%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="7d144-136">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d144-137">Erstellt ein neues <see cref="T:System.Windows.Automation.Peers.RibbonComboBoxAutomationPeer" />-Objekt für dieses Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-137">Creates a new <see cref="T:System.Windows.Automation.Peers.RibbonComboBoxAutomationPeer" /> object for this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d144-138">Ein neues Automatisierungspeerobjekt für dieses Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-138">A new automation peer object for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-139">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-139">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-140">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-140">Provides class handling for the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-141">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-141">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-142">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Ereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-142">Provides class handling for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-143">Diese Implementierung ändert nicht zum behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft) von der <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="7d144-143">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-144">Informationen zur Änderung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-144">Information about the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-145">Wird aufgerufen, wenn die <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Eigenschaft geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-145">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-146">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-146">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-147">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyDown" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-147">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyTipAccessed">
      <MemberSignature Language="C#" Value="protected override void OnKeyTipAccessed (System.Windows.Controls.KeyTipAccessedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyTipAccessed(class System.Windows.Controls.KeyTipAccessedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnKeyTipAccessed(System.Windows.Controls.KeyTipAccessedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyTipAccessed (e As KeyTipAccessedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyTipAccessed(System::Windows::Controls::KeyTipAccessedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.KeyTipAccessedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-148">Enthält Daten zur Aktivierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-148">Contains data about the activation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-149">Wird aufgerufen, wenn auf den KeyTip oder die Tastenkombination zugegriffen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-149">Called when the KeyTip or accelerator key is accessed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-150">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-150">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-151">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyUp" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-151">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-152">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-152">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-153">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-153">Provides class handling for the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-154">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-154">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-155">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewKeyDown" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-155">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-156">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-156">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-157">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.PreviewMouseDown" />-Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-157">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7d144-158">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-158">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-159">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-angefügte Routingereignis bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-159">Provides class handling for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> routed attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-160">Diese Implementierung kennzeichnet die <xref:System.Windows.Input.TextCompositionManager.TextInput> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true`.</span><span class="sxs-lookup"><span data-stu-id="7d144-160">This implementation marks the <xref:System.Windows.Input.TextCompositionManager.TextInput> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true`.</span></span> <span data-ttu-id="7d144-161">Diese Implementierung ist nicht die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="7d144-161">This implementation does not call the base implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7d144-162">Das Element, das zum Anzeigen des Elements verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-162">The element that is used to display the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="7d144-163">Das Element, das aus der <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Auflistung angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-163">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d144-164">Bereitet das angegebene Element auf die Anzeige des angegebenen Eintrags vor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-164">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-165">Ruft das Element ab, das im Auswahlfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-165">Gets the item that is displayed in the selection box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-166">Das Element, das im Auswahlfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-166">The item that is displayed in the selection box.</span>
          </span>
          <span data-ttu-id="7d144-167">Der registrierte Standardwert ist eine <see cref="F:System.String.Empty" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-167">The registered default is an <see cref="F:System.String.Empty" /> string.</span>
          </span>
          <span data-ttu-id="7d144-168">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-168">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-169">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-170">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-170">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemProperty>|  
|<span data-ttu-id="7d144-171">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-172">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-172">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-173">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-173">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-174">Ruft eine kombinierte Zeichenfolge ab, die angibt, wie das ausgewählte Element im Auswahlfeld formatiert wird, wenn es als Zeichenfolge angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-174">Gets a composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-175">Eine kombinierte Zeichenfolge, die angibt, wie das ausgewählte Element im Auswahlfeld formatiert wird, wenn es als Zeichenfolge angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-175">A composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span>
          </span>
          <span data-ttu-id="7d144-176">Der registrierte Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-176">The registered default is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7d144-177">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-177">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionBoxItemStringFormat"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-178">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-178">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-179">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-179">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemStringFormatProperty>|  
|<span data-ttu-id="7d144-180">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-180">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-181">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-181">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-182">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemStringFormat" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-182">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemStringFormat" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-183">Ruft die Elementvorlage für den Inhalt des Auswahlfelds ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-183">Gets the item template of the selection box content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-184">Die Elementvorlage für den Inhalt des Auswahlfelds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-184">The item template of the selection box content.</span>
          </span>
          <span data-ttu-id="7d144-185">Der registrierte Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-185">The registered default is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7d144-186">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-186">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-187">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-187">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-188">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-188">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateProperty>|  
|<span data-ttu-id="7d144-189">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-189">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-190">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-190">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-191">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplate" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-191">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector SelectionBoxItemTemplateSelector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector SelectionBoxItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ SelectionBoxItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-192">Ruft die benutzerdefinierte Logik für das Auswählen einer <see cref="T:System.Windows.DataTemplate" /> ab, mit der das <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem" /> angezeigt wird, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-192">Gets or sets the custom logic for selecting a <see cref="T:System.Windows.DataTemplate" /> that is used to display the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-193">Ein benutzerdefiniertes <see cref="T:System.Windows.Controls.DataTemplateSelector" />-Objekt, das Logik bereitstellt und ein <see cref="T:System.Windows.DataTemplate" /> zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-193">A custom <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that provides logic and returns a <see cref="T:System.Windows.DataTemplate" />.</span>
          </span>
          <span data-ttu-id="7d144-194">Der registrierte Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-194">The registered default is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7d144-195">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-195">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-196">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-196">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-197">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-197">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateSelectorProperty>|  
|<span data-ttu-id="7d144-198">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-198">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-199">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-199">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-200">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateSelector" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-200">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItemTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxWidth">
      <MemberSignature Language="C#" Value="public double SelectionBoxWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionBoxWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBoxWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionBoxWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-201">Ruft die Breite des Textfelds ab, das das ausgewählte Element im Kombinationsfeld anzeigt, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-201">Gets or sets the width of the text box that displays the selected item in the combo box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-202">Die Breite des Textfelds, das das ausgewählte Element im Kombinationsfeld anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-202">The width of the text box that displays the selected item in the combo box.</span>
          </span>
          <span data-ttu-id="7d144-203">Der registrierte Standardwert ist 0.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-203">The registered default is 0.0.</span>
          </span>
          <span data-ttu-id="7d144-204">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-204">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-205">Die <xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidth%2A> Eigenschaft umfasst nicht die Breite des Images, und Bezeichnung, die im Kombinationsfeld zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="7d144-205">The <xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidth%2A> property does not include the widths of the image and label that are associated with the combo box.</span></span>  
  
<a name="dependencyPropertyInfo_SelectionBoxWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-206">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-206">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-207">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-207">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidthProperty>|  
|<span data-ttu-id="7d144-208">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-208">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-209">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-209">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7d144-210">Das folgende Beispiel zeigt das Markup zum Rendern ein Kombinationsfelds mit drei verfügbaren Elemente zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="7d144-210">The following example shows the markup to create a combo box with three available items.</span></span>  
  
 [!code-xaml[Ribbon_ControlsSample#RibbonComboBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_controlssample/cs/mainwindow.xaml#ribboncombobox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxWidthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-211">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidth" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-211">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxWidth" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="public bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowKeyboardCues { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-212">Ruft einen Wert ab, der angibt, ob der visuelle Tastaturfokus für dieses Steuerelement anzeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-212">Gets a value that indicates whether to show the keyboard focus visual for this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-213">
            <see langword="true" />, wenn der visuelle Tastaturfokus angezeigt werden soll. Andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-213">
              <see langword="true" /> to show the keyboard focus visual; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ShowKeyboardCues"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-214">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-214">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-215">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-215">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.ShowKeyboardCuesProperty>|  
|<span data-ttu-id="7d144-216">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-216">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-217">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-217">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCuesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowKeyboardCuesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowKeyboardCuesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.ShowKeyboardCuesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowKeyboardCuesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowKeyboardCuesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-218">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.ShowKeyboardCues" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-218">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.ShowKeyboardCues" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-219">Ruft einen Wert ab, der angibt, ob ein Kombinationsfeld, das geöffnet ist und ein Dropdown-Steuerelement anzeigt, geöffnet bleiben, wenn ein Benutzer das Auswahlfeld aktiviert, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-219">Gets or sets a value that indicates whether a combo box that is open and displays a drop-down control will remain open when a user clicks the selection box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-220">
            <see langword="true" />, damit das Dropdown-Steuerelement geöffnet bleibt, wenn ein Benutzer in den Textbereich klickt, um die Bearbeitung zu starten, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-220">
              <see langword="true" /> to keep the drop-down control open when the user clicks the text area to start editing; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7d144-221">Der registrierte Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-221">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7d144-222">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-222">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-223">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-223">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-224">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-224">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.StaysOpenOnEditProperty>|  
|<span data-ttu-id="7d144-225">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-225">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-226">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-226">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-227">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.StaysOpenOnEdit" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-227">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.StaysOpenOnEdit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-228">Ruft den Text des derzeit ausgewählten Elements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-228">Gets or sets the text of the currently selected item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d144-229">Der Text des Elements, das im Auswahlfeld angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-229">The text of the item that is displayed in the selection box.</span>
          </span>
          <span data-ttu-id="7d144-230">Der registrierte Standardwert ist eine <see cref="F:System.String.Empty" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-230">The registered default is an <see cref="F:System.String.Empty" /> string.</span>
          </span>
          <span data-ttu-id="7d144-231">Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-231">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d144-232">Wenn es ist keine <xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem%2A> und <xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable%2A> ist `true`, diese Eigenschaft darstellt, den in das Textfeld eingegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="7d144-232">When there is no <xref:System.Windows.Controls.Ribbon.RibbonComboBox.SelectionBoxItem%2A> and <xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable%2A> is `true`, this property represents the text entered in the text box.</span></span> <span data-ttu-id="7d144-233">Wenn <xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable%2A> ist `false`, diese Eigenschaft stellt die Zeichenfolgenversion des ausgewählten Elements dar.</span><span class="sxs-lookup"><span data-stu-id="7d144-233">When <xref:System.Windows.Controls.Ribbon.RibbonComboBox.IsEditable%2A> is `false`, this property represents the string version of the selected item.</span></span>  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7d144-234">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="7d144-234">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7d144-235">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="7d144-235">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonComboBox.TextProperty>|  
|<span data-ttu-id="7d144-236">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="7d144-236">Metadata properties set to `true`</span></span>|<span data-ttu-id="7d144-237">Keiner</span><span class="sxs-lookup"><span data-stu-id="7d144-237">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d144-238">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.Text" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d144-238">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonComboBox.Text" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>