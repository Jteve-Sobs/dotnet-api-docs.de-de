<Type Name="RibbonApplicationMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b1a80c2b021f3f655b38c514ffbadc921ea93f6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86825247" /></Metadata><TypeSignature Language="C#" Value="public class RibbonApplicationMenuItem : System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RibbonApplicationMenuItem extends System.Windows.Controls.Ribbon.RibbonMenuItem" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationMenuItem&#xA;Inherits RibbonMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationMenuItem : System::Windows::Controls::Ribbon::RibbonMenuItem" />
  <TypeSignature Language="F#" Value="type RibbonApplicationMenuItem = class&#xA;    inherit RibbonMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationMenuItem extends System.Windows.Controls.Ribbon.RibbonMenuItem" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e752a-101">Stellt ein Menüelement innerhalb eines <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" />-Steuerelements dar.</span><span class="sxs-lookup"><span data-stu-id="e752a-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e752a-102">Normalerweise verwenden Sie einen <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> , um einen Befehl aufzurufen, wenn auf das Menü Element geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to invoke a command when the menu item is clicked.</span></span> <span data-ttu-id="e752a-103">Weitere Informationen zum Verwenden von Befehlen mit Menü Elementen finden Sie unter Gewusst [wie: Hinzufügen eines Befehls zu einem MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="e752a-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span></span>  
  
 <span data-ttu-id="e752a-104">Ein <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> kann über Untermenüs verfügen.</span><span class="sxs-lookup"><span data-stu-id="e752a-104">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> can have submenus.</span></span> <span data-ttu-id="e752a-105">Das Untermenü der <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> besteht aus den Objekten in der-Auflistung <xref:System.Windows.Controls.ItemsControl.Items%2A> einer <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> .</span><span class="sxs-lookup"><span data-stu-id="e752a-105">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>.</span></span> <span data-ttu-id="e752a-106">Es ist üblich, dass eine <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> andere <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> Objekte zum Erstellen von Untermenüs enthält.</span><span class="sxs-lookup"><span data-stu-id="e752a-106">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to contain other <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="e752a-107">Ein <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> kann nicht über Untermenüs verfügen und auch einen Befehl aufrufen.</span><span class="sxs-lookup"><span data-stu-id="e752a-107">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> cannot have submenus and also invoke a command.</span></span> <span data-ttu-id="e752a-108">Wenn das <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> über ein Untermenü verfügt, wird der Befehl, der dem zugeordnet <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> ist, nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e752a-108">If the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> has a submenu, the command associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is not invoked.</span></span> <span data-ttu-id="e752a-109">Wenn Sie ein Steuerelement benötigen, das als Menü Header fungiert und einen Befehl aufruft, verwenden Sie eine <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> .</span><span class="sxs-lookup"><span data-stu-id="e752a-109">When you need a control that acts as a menu header and invokes a command, use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 <span data-ttu-id="e752a-110">Die folgende Abbildung zeigt das Anwendungsmenü für ein Menüband-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e752a-110">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="e752a-111">Die Setup Elemente " **Öffnen**", " **Speichern**" und " **Seite** " sind Beispiele für das- <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e752a-111">The **Open**, **Save**, and **Page Setup** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> control.</span></span>  
  
 <span data-ttu-id="e752a-112">![Menü für Menübandanwendung](~/add/media/wpfribbon-appmenu.png "Menü für Menübandanwendung")</span><span class="sxs-lookup"><span data-stu-id="e752a-112">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e752a-113">Das folgende Beispiel zeigt die Menü Elemente des zuvor gezeigten Anwendungs Menüs.</span><span class="sxs-lookup"><span data-stu-id="e752a-113">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="e752a-114">Die <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> -Objekte werden direkt in <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> und in einem gehostet <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> .</span><span class="sxs-lookup"><span data-stu-id="e752a-114">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects are hosted directly in the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> and in a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e752a-115">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e752a-115">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbonApplicationMenuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e752a-116">Gibt ein neues <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="e752a-116">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span></span></summary>
        <returns><span data-ttu-id="e752a-117">Ein neues <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />-Containerobjekt, das zum Anzeigen eines Elements aus der <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Auflistung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-117">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbonApplicationMenuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="e752a-118">Das zu testende Element.</span><span class="sxs-lookup"><span data-stu-id="e752a-118">The item to test.</span></span></param>
        <summary><span data-ttu-id="e752a-119">Gibt einen Wert zurück, der angibt, ob das angegebene Element sein eigener Container ist (oder sein kann).</span><span class="sxs-lookup"><span data-stu-id="e752a-119">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span></span></summary>
        <returns><span data-ttu-id="e752a-120"><see langword="true" />, wenn das Element ein <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, ein <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, ein <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> oder ein <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e752a-120"><see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e752a-121">Ruft einen Wert ab, der angibt, auf welcher Ebene das Menüelement angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-121">Gets a value that indicates at what level the menu item is displayed.</span></span></summary>
        <value><span data-ttu-id="e752a-122">Einer der Enumerationswerte, der angibt, auf welcher Ebene das Menüelement angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-122">One the enumeration values that specifies at what level the menu item is displayed.</span></span> <span data-ttu-id="e752a-123">Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span><span class="sxs-lookup"><span data-stu-id="e752a-123">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span></span> <span data-ttu-id="e752a-124">Weitere Informationen dazu, was den Wert beeinflussen kann, finden Sie unter [Dependency Property Value Precedence](/dotnet/framework/wpf/advanced/dependency-property-value-precedence) (Vorrang von Abhängigkeitseigenschaftswerten).</span><span class="sxs-lookup"><span data-stu-id="e752a-124">For more information about what can influence the value, see [Dependency Property Value Precedence](/dotnet/framework/wpf/advanced/dependency-property-value-precedence).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e752a-125">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="e752a-125">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e752a-126">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="e752a-126">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty>|  
|<span data-ttu-id="e752a-127">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="e752a-127">Metadata properties set to `true`</span></span>|<span data-ttu-id="e752a-128">Keine</span><span class="sxs-lookup"><span data-stu-id="e752a-128">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LevelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e752a-129">Bezeichnet die <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e752a-129">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnActivatingKeyTip : System.Windows.Controls.ActivatingKeyTipEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnActivatingKeyTip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e752a-130">Enthält Daten zur Aktivierung.</span><span class="sxs-lookup"><span data-stu-id="e752a-130">Contains data about the activation.</span></span></param>
        <summary><span data-ttu-id="e752a-131">Wird aufgerufen, wenn der KeyTip oder die Tastenkombination gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-131">Called when the KeyTip or accelerator key is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbonApplicationMenuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e752a-132">Erstellt die visuelle Struktur für die <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, wenn eine neue Vorlage angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-132">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> when a new template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e752a-133">Diese Methode wird immer dann aufgerufen, wenn Anwendungscode oder ein interner Prozess, z. B. eine Layout-Wiederaufbau-Übergabe, die <xref:System.Windows.FrameworkElement.ApplyTemplate%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="e752a-133">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e752a-134">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="e752a-134">The event data.</span></span></param>
        <summary><span data-ttu-id="e752a-135">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyDown" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="e752a-135">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbonApplicationMenuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e752a-136">Das Element, das zum Anzeigen des Elements verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e752a-136">The element that is used to display the item.</span></span></param>
        <param name="item"><span data-ttu-id="e752a-137">Das Element, das aus der <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Auflistung angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e752a-137">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span></span></param>
        <summary><span data-ttu-id="e752a-138">Bereitet das angegebene Element auf die Anzeige des angegebenen Eintrags vor.</span><span class="sxs-lookup"><span data-stu-id="e752a-138">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="ribbonApplicationMenuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="e752a-139">Das Containerelement.</span><span class="sxs-lookup"><span data-stu-id="e752a-139">The container element.</span></span></param>
        <param name="item"><span data-ttu-id="e752a-140">Das Element, für das der Container vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="e752a-140">The item that the container is for.</span></span></param>
        <summary><span data-ttu-id="e752a-141">Gibt einen Wert zurück, der angibt, ob der Stil aus der <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />- oder <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />-Eigenschaft auf das Containerelement des angegebenen Elements angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e752a-141">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span></span></summary>
        <returns><span data-ttu-id="e752a-142"><see langword="false" />, wenn <paramref name="container" /><see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> oder <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /> ist; andernfalls wird der Wert von der Basisimplementierung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e752a-142"><see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
