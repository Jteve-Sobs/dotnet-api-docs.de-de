<Type Name="RibbonApplicationSplitMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13d67fb0c57c358bdda8df59493a6cf62ddaa0d3" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55328586" /></Metadata><TypeSignature Language="C#" Value="public class RibbonApplicationSplitMenuItem : System.Windows.Controls.Ribbon.RibbonSplitMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationSplitMenuItem extends System.Windows.Controls.Ribbon.RibbonSplitMenuItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationSplitMenuItem&#xA;Inherits RibbonSplitMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationSplitMenuItem : System::Windows::Controls::Ribbon::RibbonSplitMenuItem" />
  <TypeSignature Language="F#" Value="type RibbonApplicationSplitMenuItem = class&#xA;    inherit RibbonSplitMenuItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonSplitMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="448ce-101">Stellt ein Menüelement innerhalb eines <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" />-Steuerelements dar, das einen Befehl aufrufen und ein Untermenü anzeigen kann.</span><span class="sxs-lookup"><span data-stu-id="448ce-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control that can invoke a command and also display a submenu.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448ce-102">In der Regel eine <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> Wenn Sie einen Befehl aufrufen und ein Untermenü verwandter Befehle, die über ein einzelnes Menüelement anzeigen möchten.</span><span class="sxs-lookup"><span data-stu-id="448ce-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> when you want to invoke a command and also display a submenu of related commands using a single menu item.</span></span> <span data-ttu-id="448ce-103">Weitere Informationen zum Verwenden von Befehlen mit Menüelementen finden Sie unter [Vorgehensweise: Hinzufügen eines Befehls zu einem MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="448ce-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span></span>  
  
 <span data-ttu-id="448ce-104">Der Befehl, der zugeordnet ist die <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> wird aufgerufen, wenn das Menüelement geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-104">The command that is associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> is invoked when the menu item is clicked.</span></span> <span data-ttu-id="448ce-105">Wenn der Mauszeiger über das Menüelement bewegt wird, wird das Untermenü angezeigt.</span><span class="sxs-lookup"><span data-stu-id="448ce-105">The submenu is displayed when the mouse pointer is moved over the menu item.</span></span> <span data-ttu-id="448ce-106">Das Untermenü die <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> besteht aus den Objekten innerhalb der <xref:System.Windows.Controls.ItemsControl.Items%2A> Auflistung von einer <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span><span class="sxs-lookup"><span data-stu-id="448ce-106">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span> <span data-ttu-id="448ce-107">Es ist üblich, dass eine <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> Host <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> Objekte Untermenüs zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="448ce-107">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> to host <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create submenus.</span></span>  
  
 <span data-ttu-id="448ce-108">Die folgende Abbildung zeigt das Anwendungsmenü für ein Menübandsteuerelement.</span><span class="sxs-lookup"><span data-stu-id="448ce-108">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="448ce-109">Die **speichern** und **Drucken** Elemente sind Beispiele für die <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="448ce-109">The **Save As** and **Print** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> control.</span></span>  
  
 <span data-ttu-id="448ce-110">![Anwendungsmenü des Menübands](~/add/media/wpfribbon-appmenu.png "Anwendungsmenü des Menübands")</span><span class="sxs-lookup"><span data-stu-id="448ce-110">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="448ce-111">Das folgende Beispiel zeigt die Menüelemente der zuvor gezeigten Anwendungsmenü.</span><span class="sxs-lookup"><span data-stu-id="448ce-111">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="448ce-112">Die <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> Objekte hosten <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> Objekte.</span><span class="sxs-lookup"><span data-stu-id="448ce-112">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> objects are hosting <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationSplitMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationSplitMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448ce-113">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="448ce-113">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbonApplicationSplitMenuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448ce-114">Gibt ein neues <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="448ce-114">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span></span></summary>
        <returns><span data-ttu-id="448ce-115">Ein neues <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />-Containerobjekt, das zum Anzeigen eines Elements aus der <see cref="P:System.Windows.Controls.ItemsControl.Items" />-Auflistung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-115">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbonApplicationSplitMenuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="448ce-116">Das zu testende Element.</span><span class="sxs-lookup"><span data-stu-id="448ce-116">The item to test.</span></span></param>
        <summary><span data-ttu-id="448ce-117">Gibt einen Wert zurück, der angibt, ob das angegebene Element sein eigener Container ist (oder sein kann).</span><span class="sxs-lookup"><span data-stu-id="448ce-117">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span></span></summary>
        <returns><span data-ttu-id="448ce-118"><see langword="true" />, wenn das Element ein <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, ein <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, ein <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> oder ein <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="448ce-118"><see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel" Usage="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448ce-119">Ruft einen Wert ab, der angibt, auf welcher Ebene das Menüelement angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-119">Gets a value that indicates at what level the menu item is displayed.</span></span></summary>
        <value><span data-ttu-id="448ce-120">Einer der Enumerationswerte, der angibt, auf welcher Ebene das Menüelement angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-120">One the enumeration values that specifies at what level the menu item is displayed.</span></span> <span data-ttu-id="448ce-121">Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span><span class="sxs-lookup"><span data-stu-id="448ce-121">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span></span> <span data-ttu-id="448ce-122">Weitere Informationen zu auf diesen Wert Einflüssen finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="448ce-122">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="448ce-123">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="448ce-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="448ce-124">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="448ce-124">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty>|  
|<span data-ttu-id="448ce-125">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="448ce-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="448ce-126">None</span><span class="sxs-lookup"><span data-stu-id="448ce-126">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LevelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448ce-127">Identifiziert die <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="448ce-127">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnActivatingKeyTip : System.Windows.Controls.ActivatingKeyTipEventArgs -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnActivatingKeyTip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="448ce-128">Enthält Daten zur Aktivierung.</span><span class="sxs-lookup"><span data-stu-id="448ce-128">Contains data about the activation.</span></span></param>
        <summary><span data-ttu-id="448ce-129">Wird aufgerufen, wenn der KeyTip oder die Tastenkombination gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-129">Called when the KeyTip or accelerator key is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448ce-130">Erstellt die visuelle Struktur für die <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, wenn eine neue Vorlage angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-130">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /> when a new template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448ce-131">Diese Methode wird immer dann aufgerufen, wenn Anwendungscode oder ein interner Prozess, z. B. eine Layout-Wiederaufbau-Übergabe, die <xref:System.Windows.FrameworkElement.ApplyTemplate%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="448ce-131">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="448ce-132">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="448ce-132">The event data.</span></span></param>
        <summary><span data-ttu-id="448ce-133">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyDown" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="448ce-133">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbonApplicationSplitMenuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="448ce-134">Das Element, das zum Anzeigen des Elements verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="448ce-134">The element that is used to display the item.</span></span></param>
        <param name="item"><span data-ttu-id="448ce-135">Das anzuzeigende Element.</span><span class="sxs-lookup"><span data-stu-id="448ce-135">The item to display.</span></span></param>
        <summary><span data-ttu-id="448ce-136">Bereitet das angegebene Element auf die Anzeige des angegebenen Eintrags vor.</span><span class="sxs-lookup"><span data-stu-id="448ce-136">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="ribbonApplicationSplitMenuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="448ce-137">Das Containerelement.</span><span class="sxs-lookup"><span data-stu-id="448ce-137">The container element.</span></span></param>
        <param name="item"><span data-ttu-id="448ce-138">Das Element, für das der Container vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="448ce-138">The item that the container is for.</span></span></param>
        <summary><span data-ttu-id="448ce-139">Gibt einen Wert zurück, der angibt, ob der Stil aus der <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />- oder <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />-Eigenschaft auf das Containerelement des angegebenen Elements angewendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="448ce-139">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span></span></summary>
        <returns><span data-ttu-id="448ce-140"><see langword="false" />, wenn <paramref name="container" /><see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> oder <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /> ist; andernfalls wird der Wert von der Basisimplementierung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="448ce-140"><see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>