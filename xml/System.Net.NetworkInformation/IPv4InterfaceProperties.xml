<Type Name="IPv4InterfaceProperties" FullName="System.Net.NetworkInformation.IPv4InterfaceProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="878c8d7b5b78fa9c3d78e0ae167ec10dc4029e9a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37645355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IPv4InterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPv4InterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPv4InterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPv4InterfaceProperties abstract" />
  <TypeSignature Language="F#" Value="type IPv4InterfaceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über Netzwerkschnittstellen bereit, die Internetprotokoll, Version 4 (IPv4), unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt den Zugriff auf Konfigurations- und Adressinformationen für Netzwerkschnittstellen, IPv4 unterstützen. Erstellen Sie Instanzen dieser Klasse nicht. Diese zurückgegeben werden, indem die <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> Methode.  
  
 IPv6-Eigenschaften finden Sie unter <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPv4InterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPv4InterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor kann nur durch abgeleitete Klassen aufgerufen werden <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public abstract int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der der IPv4 (Internet Protocol, Version 4)-Adresse zugeordneten Netzwerkschnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Int32" />, das den Index der IPv4-Schnittstelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert dieser Eigenschaft auf 0 (null) ist, wird IPv4 nicht von dieser Schnittstelle unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingActive">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingActive : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob diese Schnittstelle über eine APIPA (Automatic Private IP Addressing)-Adresse verfügt.</summary>
        <value>
          <see langword="true" />, wenn die Schnittstelle eine APIPA-Adresse verwendet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 APIPA ermöglicht, auf denen kein Zugriff auf einen Server Dynamic Host Configuration Protocol (DHCP), um automatisch eine IP-Adresse, die keinen Konflikt mit öffentlichen Adressen zugewiesen sind. Diese Adressen sind in dem Bereich 169.254.0.0 bis 169.254.255.255.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutomaticPrivateAddressingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob für diese Schnittstelle APIPA (Automatic Private IP Addressing) aktiviert ist.</summary>
        <value>
          <see langword="true" />, wenn die Schnittstelle APIPA verwendet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 APIPA ermöglicht, auf denen kein Zugriff auf einen Server Dynamic Host Configuration Protocol (DHCP), um automatisch eine IP-Adresse, die keinen Konflikt mit öffentlichen Adressen zugewiesen sind. Diese Adressen sind in dem Bereich 169.254.0.0 bis 169.254.255.255.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDhcpEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDhcpEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDhcpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDhcpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDhcpEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDhcpEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Schnittstelle für die Verwendung eines DHCP (Dynamic Host Configuration Protocol)-Servers zum Abrufen einer IP-Adresse konfiguriert ist.</summary>
        <value>
          <see langword="true" />, wenn die Schnittstelle zum Abrufen einer IP-Adresse von einem DHCP-Server konfiguriert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft ist `true`, ein DHCP-Server weist die IP-Adresse der Schnittstelle, wenn der Computer seine Verbindungen herstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForwardingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsForwardingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsForwardingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForwardingEnabled : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob diese Schnittstelle Pakete weiterleiten kann.</summary>
        <value>
          <see langword="true" />, wenn die Schnittstelle Pakete weiterleitet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn routing deaktiviert ist, werden Pakete, die von der Schnittstelle mit einer Zieladresse empfangen werden, die von der Schnittstelle nicht aufrechterhalten wird verworfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mtu">
      <MemberSignature Language="C#" Value="public abstract int Mtu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Mtu" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Mtu As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Mtu { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Mtu : int" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Übertragungseinheit für diese Netzwerkschnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Int64" />-Wert, der die maximale Übertragungseinheit angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Übertragungseinheit der Netzwerkschnittstelle ist das größte Paket, das übertragen werden kann. Es wird in Oktetten (Bytes 8-Bit) gemessen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWins">
      <MemberSignature Language="C#" Value="public abstract bool UsesWins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWins" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UsesWins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool UsesWins { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesWins : bool" Usage="System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob eine Schnittstelle WINS (Windows Internet Name Service) verwendet.</summary>
        <value>
          <see langword="true" />, wenn die Schnittstelle WINS verwendet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS bietet eine verteilte Datenbank für das Registrieren und Abfragen von dynamischen NetBIOS-Namen zu IPv4-Adresszuordnungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> -Objekts und zeigt die Daten.  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>