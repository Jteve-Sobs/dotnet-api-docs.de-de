<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b970054b88f8ee75465a4c740f34ed3c8a858ce" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56065252" /></Metadata><TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <TypeSignature Language="F#" Value="type NetworkInterface = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Konfigurations- und Statistikinformationen für eine Netzwerkschnittstelle bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse kapselt Daten für die Netzwerkschnittstellen, auch bekannt als Adapter aus, auf dem lokalen Computer. Erstellen Sie Instanzen dieser Klasse nicht. die <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> Methode gibt ein Array, das eine Instanz dieser Klasse für jede Netzwerkschnittstelle auf dem lokalen Computer enthält.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Informationen zu den Schnittstellen.  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwalteten Codes. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor kann nur durch abgeleitete Klassen aufgerufen werden die <xref:System.Net.NetworkInformation.NetworkInterface> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung der Schnittstelle ab.</summary>
        <value>Ein <see cref="T:System.String" />, der diese Schnittstelle beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Beschreibung ist Benutzer lesbarer Text, der die Netzwerkschnittstelle beschreibt. Informationen, die in der Beschreibung enthalten, hängt von den Funktionen des Betriebssystems ab.  Auf Windows beschreibt es in der Regel die Schnittstelle Hersteller, Typ (z. B. Ethernet), Marke und Modell. Auf anderen Plattformen möglicherweise so kurz wie den Namen der Schnittstelle, wie z. B. `eth0`.
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zusammenfassung für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberSignature Language="F#" Value="static member GetAllNetworkInterfaces : unit -&gt; System.Net.NetworkInformation.NetworkInterface[]" Usage="System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt Objekte zurück, die die Netzwerkschnittstellen auf dem lokalen Computer beschreiben.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Array mit Objekten, die die verfügbaren Netzwerkschnittstellen beschreiben, oder ein leeres Array, wenn keine Schnittstellen erkannt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Netzwerkschnittstellen auf einem Computer bereitzustellen Netzwerkkonnektivität. Netzwerkschnittstellen werden auch bekannt als Netzwerkadapter.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Domain Name Service (DNS)-Konfigurationsinformationen für den Netzwerkadapter des lokalen Computers.  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Der Aufruf einer Windows-Systemfunktion ist fehlgeschlagen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberSignature Language="F#" Value="abstract member GetIPProperties : unit -&gt; System.Net.NetworkInformation.IPInterfaceProperties&#xA;override this.GetIPProperties : unit -&gt; System.Net.NetworkInformation.IPInterfaceProperties" Usage="networkInterface.GetIPProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Objekt zurück, das die Konfiguration dieser Netzwerkschnittstelle beschreibt.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" />-Objekt, das diese Netzwerkschnittstelle beschreibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass die Informationen in das von dieser Methode zurückgegebene Objekt über die Schnittstellen zum Zeitpunkt der Erstellung angezeigt, wenn das Array erstellt wird. Diese Informationen werden nicht dynamisch aktualisiert werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Informationen für den lokalen Computer Netzwerkadapter, die IPv4 unterstützen.  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPStatistics : unit -&gt; System.Net.NetworkInformation.IPInterfaceStatistics&#xA;override this.GetIPStatistics : unit -&gt; System.Net.NetworkInformation.IPInterfaceStatistics" Usage="networkInterface.GetIPStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die IP-Statistik für diese <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Instanz ab.</summary>
        <returns>Die IP-Statistik</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4Statistics : unit -&gt; System.Net.NetworkInformation.IPv4InterfaceStatistics&#xA;override this.GetIPv4Statistics : unit -&gt; System.Net.NetworkInformation.IPv4InterfaceStatistics" Usage="networkInterface.GetIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die IPv4-Statistik für diese <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Instanz ab.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberSignature Language="F#" Value="static member GetIsNetworkAvailable : unit -&gt; bool" Usage="System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob eine Netzwerkverbindung verfügbar ist.</summary>
        <returns><see langword="true" />, wenn eine Netzwerkverbindung verfügbar ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Netzwerkverbindung verfügbar sein, wenn eine beliebige Netzwerkschnittstelle "up" gekennzeichnet und keine Schnittstelle Loopback- oder Tunnelschnittstelle ist gilt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberSignature Language="F#" Value="abstract member GetPhysicalAddress : unit -&gt; System.Net.NetworkInformation.PhysicalAddress&#xA;override this.GetPhysicalAddress : unit -&gt; System.Net.NetworkInformation.PhysicalAddress" Usage="networkInterface.GetPhysicalAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die MAC (Media Access Control)-Adresse oder physische Adresse für diesen Adapter zurück.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />-Objekt, das die physische Adresse enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das von dieser Methode zurückgegebene Objekt enthält eine Adresse, die auf die Medien verwendet, um die Daten auf der Sicherungsschicht transport geeignet ist. In einem Ethernetnetzwerk gibt diese Methode beispielsweise die Hardwareadresse Ethernet.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die physischen Adressen aller Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner der Netzwerkkarte ab.</summary>
        <value>Ein <see cref="T:System.String" />, der den Bezeichner enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.IPv6LoopbackInterfaceIndex : int" Usage="System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der IPv6-Loopbackschnittstelle ab.</summary>
        <value>Der Index für die IPv6-Loopbackschnittstelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Netzwerkschnittstelle möglicherweise andere Schnittstellenindizes für die IPv4- und IPv6-Loopbackschnittstelle. Die P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex-Eigenschaft gibt nur die IPv6-Loopback-Schnittstelle zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReceiveOnly : bool" Usage="System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Netzwerkschnittstelle zum Empfangen von Datenpaketen festgelegt ist.</summary>
        <value><see langword="true" />, wenn die Schnittstelle nur Netzwerkverkehr empfängt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zusammenfassung für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Diese Eigenschaft ist auf Computern mit einem älteren Betriebssystem als Windows XP nicht gültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LoopbackInterfaceIndex : int" Usage="System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der IPv4-Loopbackschnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Int32" />, der den Index für die IPv4-Loopbackschnittstelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Index der Loopback-Schnittstelle ist in der Regel 1, aber Sie können nicht auf dieser basieren. Verwenden der <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> Eigenschaft, um den richtigen Wert abzurufen.  
  
 Eine Netzwerkschnittstelle möglicherweise andere Schnittstellenindizes für die IPv4- und IPv6-Loopbackschnittstelle. Die <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> -Eigenschaft gibt nur die IPv4-Loopbackschnittstelle zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Diese Eigenschaft ist auf Computern, auf denen nur Ipv6 ausgeführt wird, nicht gültig.</exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Netzwerkkarte ab.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen der Netzwerkkarte enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zusammenfassung für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberSignature Language="F#" Value="member this.NetworkInterfaceType : System.Net.NetworkInformation.NetworkInterfaceType" Usage="System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schnittstellentyp ab.</summary>
        <value>Ein <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" />-Wert, der den Typ der Netzwerkschnittstelle angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schnittstellentypen werden ausführlich beschrieben die <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> Dokumentation-Enumeration.  

 Im Prinzip kann diese Eigenschaft zurückgeben, jedes Mitglied der <xref:System.Net.NetworkInformation.NetworkInterfaceType> Enumeration. Der spezifische Wert ein, dem ihn zurückgibt ist abhängig von der Common Language Runtime-Bedingungen mit der zugrunde liegenden Netzwerktopologie. Dies bedeutet Folgendes:
 
 - Es ist nicht möglich, um zu bestimmen, im voraus die Wert die Eigenschaft für ein bestimmtes Netzwerk zurückgibt.
 
 - Es ist möglich, dass in der Praxis in einem bestimmten Netzwerk, das gesamte Spektrum Enumerationswerte nicht verfügbar ist. Z. B. auf einem Gigabit-Ethernet-Netzwerk, es ist möglich, dass die Eigenschaft zurückgibt <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> statt <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.

## Examples  
 Das folgende Beispiel zeigt die Typinformationen für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.OperationalStatus : System.Net.NetworkInformation.OperationalStatus" Usage="System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Betriebszustand der Netzwerkverbindung ab.</summary>
        <value>Einer der <see cref="T:System.Net.NetworkInformation.OperationalStatus" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Werte des Betriebsstatus ausführlich beschrieben werden die <xref:System.Net.NetworkInformation.OperationalStatus> Dokumentation-Enumeration.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zusammenfassung für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Speed : int64" Usage="System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Geschwindigkeit der Netzwerkschnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Int64" />-Wert, der die Geschwindigkeit in Bit pro Sekunde angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von dieser Eigenschaft zurückgegebene Wert wird von der Netzwerkschnittstelle gemeldet. Es wird nicht dynamisch berechnet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Geschwindigkeit der Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.Net.NetworkInformation.NetworkInterfaceComponent -&gt; bool&#xA;override this.Supports : System.Net.NetworkInformation.NetworkInterfaceComponent -&gt; bool" Usage="networkInterface.Supports networkInterfaceComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent">Ein <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" />-Wert.</param>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Schnittstelle das angegebene Protokoll unterstützt.</summary>
        <returns><see langword="true" />, wenn das angegebene Protokoll unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt die Statistiken für IPv4-Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsMulticast : bool" Usage="System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Netzwerkschnittstelle für den Empfang von Multicastpaketen aktiviert ist.</summary>
        <value><see langword="true" />, wenn die Schnittstelle Multicastpakete empfängt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Multicasting ist ein Datenpaket gleichzeitig an mehrere Ziele gesendet.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zusammenfassung für alle Schnittstellen auf dem lokalen Computer.  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Diese Eigenschaft ist auf Computern mit einem älteren Betriebssystem als Windows XP nicht gültig.</exception>
      </Docs>
    </Member>
  </Members>
</Type>