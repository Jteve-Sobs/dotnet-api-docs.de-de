<Type Name="IPInterfaceProperties" FullName="System.Net.NetworkInformation.IPInterfaceProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7bee9a6841e87d3d9a283b66eca1b0c859d668f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70547651" /></Metadata><TypeSignature Language="C#" Value="public abstract class IPInterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPInterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPInterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPInterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPInterfaceProperties abstract" />
  <TypeSignature Language="F#" Value="type IPInterfaceProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über Netzwerkschnittstellen bereit, die Internetprotokoll, Version 4 (IPv4), oder Internetprotokoll, Version 6 (IPv6), unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse bietet Zugriff auf Konfigurations-und Adressinformationen für Netzwerkschnittstellen, die IPv4 oder IPv6 unterstützen. Sie erstellen keine Instanzen dieser Klasse. Sie werden von der <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> -Methode zurückgegeben.  
  
 Verwenden Sie das von der <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> -Methode zurückgegebene-Objekt, um auf IPv4-spezifische Eigenschaften zuzugreifen. Um auf IPv6-spezifische Eigenschaften zuzugreifen, verwenden Sie das von der <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> -Methode zurückgegebene-Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Adressinformationen angezeigt.  
  
 [!code-cpp[NclNetInfoReport#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#8)]
 [!code-csharp[NclNetInfoReport#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPInterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPInterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor kann nur von Klassen aufgerufen werden, die von <xref:System.Net.NetworkInformation.IPInterfaceProperties>abgeleitet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnycastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AnycastAddresses As IPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressInformationCollection ^ AnycastAddresses { System::Net::NetworkInformation::IPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnycastAddresses : System.Net.NetworkInformation.IPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dieser Schnittstelle zugewiesenen IP-Anycastadressen ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.IPAddressInformationCollection" /> mit den Anycastadressen für diese Schnittstelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anycast-Adresse identifiziert mehrere Computer. An eine Anycast-Adresse gesendete Pakete werden an einen Computer gesendet, der durch die Adresse identifiziert wird. Anycast Adressierung ist ein IPv6-Feature, das zum Aktualisieren von Routertabellen für eine Gruppe von Hosts verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Anycast Adressen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#43](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#43)]
 [!code-csharp[NclNetInfo2#43](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#43)]
 [!code-vb[NclNetInfo2#43](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DhcpServerAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DhcpServerAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ DhcpServerAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DhcpServerAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressen der DHCP (Dynamic Host Configuration Protocol)-Server für diese Schnittstelle ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> mit den Adressinformationen für DHCP-Server, oder ein leeres Array, wenn keine Server gefunden werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dem Dynamic Host Configuration-Protokoll (DHCP) kann ein Computer eine Netzwerkadresse von einem DHCP-Server abrufen, anstatt eine statische (fixierte) Netzwerkadresse zu verwenden. Ein DHCP-Server weist keine Adressen dauerhaft zu. Stattdessen verwendet Sie vorübergehend eine von mehreren verfügbaren Adressen für den Computer.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die DHCP-Adressinformationen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#46](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#46)]
 [!code-csharp[NclNetInfo2#46](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#46)]
 [!code-vb[NclNetInfo2#46](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection DnsAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection DnsAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DnsAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ DnsAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressen der DNS (Domain Name System)-Server für diese Schnittstelle ab.</summary>
        <value>Ein <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />, das die DNS-Serveradressen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DNS ist ein hierarchisches Benennungs System, das zum Zuordnen von Hostnamen zu IP-Adressen verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die DNS-Adressen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#42)]
 [!code-csharp[NclNetInfo2#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#42)]
 [!code-vb[NclNetInfo2#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsSuffix">
      <MemberSignature Language="C#" Value="public abstract string DnsSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DnsSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DnsSuffix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsSuffix : string" Usage="System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das DNS (Domain Name System)-Suffix ab, das dieser Schnittstelle zugeordnet ist.</summary>
        <value>Ein <see cref="T:System.String" />, der das DNS-Suffix für diese Schnittstelle enthält, oder <see cref="F:System.String.Empty" />, wenn kein DNS-Suffix für die Schnittstelle vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das DNS-Suffix identifiziert den Domänen Namen (z. b. "contoso.com"), der an einen nicht qualifizierten Hostnamen angehängt wird, um einen vollständig qualifizierten Domänen Namen (FQDN) für eine DNS-Namensabfrage zu erhalten. Wenn z. b. auf dem lokalen Computer "contoso.com" als <xref:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix%2A>vorhanden ist und der nicht qualifizierte Hostname "www" aufgelöst werden muss, lautet der FQDN, der abgefragt werden soll, "www.contoso.com".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das DNS-Suffix angezeigt.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Diese Eigenschaft ist auf Computern mit einem älteren Betriebssystem als Windows 2000 nicht gültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property GatewayAddresses As GatewayIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::GatewayIPAddressInformationCollection ^ GatewayAddresses { System::Net::NetworkInformation::GatewayIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayAddresses : System.Net.NetworkInformation.GatewayIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.GatewayIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die IPv4-Netzwerkgatewayadressen für diese Schnittstelle ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection" /> mit den Adressinformationen für Netzwerkgateways, oder ein leeres Array, wenn keine Gateways gefunden werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gateways, die die Internet Protokoll Version 4 (IPv4) zum Weiterleiten von Paketen zwischen Netzwerken implementieren, werden von dieser Eigenschaft zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Gatewayadressen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#47](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#47)]
 [!code-csharp[NclNetInfo2#47](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#47)]
 [!code-vb[NclNetInfo2#47](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Properties">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv4Properties () As IPv4InterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPv4InterfaceProperties ^ GetIPv4Properties();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4Properties : unit -&gt; System.Net.NetworkInformation.IPv4InterfaceProperties" Usage="iPInterfaceProperties.GetIPv4Properties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt IPv4 (Internetprotokoll, Version 4)-Konfigurationsdaten für diese Netzwerkschnittstelle bereit.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />-Objekt, das IPv4-Konfigurationsdaten enthält, oder <see langword="null" />, wenn keine Daten für die Schnittstelle verfügbar sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt `null` für <xref:System.Net.NetworkInformation.NetworkInterfaceType.Loopback> Schnittstellen zurück.  
  
 Eine ausführliche Beschreibung der Informationen, die für eine Schnittstelle verfügbar sind, die IPv4 unter <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> stützt, finden Sie in der Dokumentation zur-Klasse. Beachten Sie, dass das von der <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> -Methode zurückgegebene-Objekt die Konfiguration zum Zeitpunkt der Erstellung des-Objekts widerspiegelt. Diese Informationen werden nicht dynamisch aktualisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Die Schnittstelle unterstützt IPv4 nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6Properties">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv6Properties () As IPv6InterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPv6InterfaceProperties ^ GetIPv6Properties();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6Properties : unit -&gt; System.Net.NetworkInformation.IPv6InterfaceProperties" Usage="iPInterfaceProperties.GetIPv6Properties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv6InterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt IPv6 (Internetprotokoll, Version 6)-Konfigurationsdaten für diese Netzwerkschnittstelle bereit.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkInformation.IPv6InterfaceProperties" />-Objekt, das IPv6-Konfigurationsdaten enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine ausführliche Beschreibung der Informationen, die für eine Schnittstelle verfügbar sind, die IPv6 unter <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> stützt, finden Sie in der Dokumentation. Beachten Sie, dass das von der <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> -Methode zurückgegebene-Objekt die Konfiguration zum Zeitpunkt der Erstellung des-Objekts widerspiegelt. Diese Informationen werden nicht dynamisch aktualisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Die Schnittstelle unterstützt IPv6 nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDnsEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDnsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDnsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDnsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDnsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDnsEnabled : bool" Usage="System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob NetBt für diese Schnittstelle für die DNS-Namensauflösung konfiguriert ist.</summary>
        <value><see langword="true" />, wenn NetBt für diese Schnittstelle für die DNS-Namensauflösung konfiguriert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DNS ist ein hierarchisches Benennungs System, das zum Zuordnen von Hostnamen zu IP-Adressen verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Wert dieser Eigenschaft angezeigt.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamicDnsEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDynamicDnsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamicDnsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDynamicDnsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDynamicDnsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamicDnsEnabled : bool" Usage="System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob diese Schnittstelle zum automatischen Registrieren ihrer IP-Adressinformationen beim DNS (Domain Name System) konfiguriert ist.</summary>
        <value><see langword="true" />, wenn diese Schnittstelle für die automatische Registrierung einer Zuordnung ihrer dynamischen IP-Adresse zu statischen Domänennamen konfiguriert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dynamischem DNS kann ein Client die DNS-Server darüber informieren, dass die dynamische IP-Adresse dem statischen Hostnamen zugeordnet ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Wert dieser Eigenschaft angezeigt.  
  
 [!code-cpp[NclNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NclNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NclNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MulticastAddresses As MulticastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::MulticastIPAddressInformationCollection ^ MulticastAddresses { System::Net::NetworkInformation::MulticastIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddresses : System.Net.NetworkInformation.MulticastIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.MulticastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dieser Schnittstelle zugewiesenen Multicastadressen ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.MulticastIPAddressInformationCollection" /> mit den Multicastadressen für diese Schnittstelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Multicast Adresse identifiziert mehrere Computer. An eine Multicast Adresse gesendete Pakete werden an alle Computer gesendet, die durch die Adresse identifiziert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Multicast Adressen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#44](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#44)]
 [!code-csharp[NclNetInfo2#44](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#44)]
 [!code-vb[NclNetInfo2#44](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicastAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UnicastAddresses As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ UnicastAddresses { System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnicastAddresses : System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dieser Schnittstelle zugewiesenen Unicastadressen ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> mit den Unicastadressen für diese Schnittstelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Unicastadresse identifiziert einen einzelnen Computer. An eine Unicastadresse gesendete Pakete werden an den Computer gesendet, der durch die Adresse identifiziert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Unicastadressen für die Netzwerkschnittstellen auf dem lokalen Computer angezeigt.  
  
 [!code-cpp[NclNetInfo2#45](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#45)]
 [!code-csharp[NclNetInfo2#45](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#45)]
 [!code-vb[NclNetInfo2#45](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WinsServersAddresses">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WinsServersAddresses As IPAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::IPAddressCollection ^ WinsServersAddresses { System::Net::NetworkInformation::IPAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WinsServersAddresses : System.Net.NetworkInformation.IPAddressCollection" Usage="System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressen von WINS (Windows Internet Name Service)-Servern ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> mit den Adressinformationen für WINS-Server, oder ein leeres Array, wenn keine Server gefunden werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS bietet eine verteilte Datenbank für das registrieren und Abfragen dynamischer NetBIOS-Namen zu IP-Adress Zuordnungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
