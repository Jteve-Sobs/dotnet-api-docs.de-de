<Type Name="ControlDesigner" FullName="System.Windows.Forms.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec6406a586000bb4770aaf6db9002d2ead07777c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37576748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits ComponentDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::ComponentModel::Design::ComponentDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9e369-101">Erweitert das Entwurfsmodusverhalten eines <see cref="T:System.Windows.Forms.Control" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e369-101">Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-102"><xref:System.Windows.Forms.Design.ControlDesigner> Stellt eine Basisklasse für Designer, Komponenten, die abgeleitet <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="9e369-102"><xref:System.Windows.Forms.Design.ControlDesigner> provides a base class for designers of components that derive from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="9e369-103">Zusätzlich zu den Methoden und Funktionen, geerbt von der <xref:System.ComponentModel.Design.ComponentDesigner> -Klasse, <xref:System.Windows.Forms.Design.ControlDesigner> stellt zusätzliche Methoden zur Unterstützung von erweitern und ändern das Verhalten einer zugeordneten <xref:System.Windows.Forms.Control> zur Entwurfszeit.</span><span class="sxs-lookup"><span data-stu-id="9e369-103">In addition to the methods and functionality inherited from the <xref:System.ComponentModel.Design.ComponentDesigner> class, <xref:System.Windows.Forms.Design.ControlDesigner> provides additional methods to support extending and altering the behavior of an associated <xref:System.Windows.Forms.Control> at design time.</span></span>  
  
 <span data-ttu-id="9e369-104">Sie können einen Typ mit einen Designer Zuordnen einer <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="9e369-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="9e369-105">Einen Überblick über das Anpassen des Entwurfszeitverhaltens finden Sie unter [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="9e369-105">For an overview of customizing design time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e369-106">Im folgenden Beispiel <xref:System.Windows.Forms.Design.ControlDesigner> Implementierung veranschaulicht die Behandlung `MouseEnter` und `MouseLeave` Ereignisse, zeichnen in einem Steuerelement vom Designer-Code, und verwenden Teil der <xref:System.ComponentModel.Design.IDesignerFilter> Schnittstelle eine Eigenschaft für das Steuerelement zur Entwurfszeit hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="9e369-106">The following example <xref:System.Windows.Forms.Design.ControlDesigner> implementation demonstrates handling `MouseEnter` and `MouseLeave` events, drawing on a control from designer code, and using part of the <xref:System.ComponentModel.Design.IDesignerFilter> interface to add a property for the control at design time.</span></span> <span data-ttu-id="9e369-107">Der folgende Code enthält einen Designer als auch ein Benutzer-Beispielsteuerelement, die dem Designer zugeordnete.</span><span class="sxs-lookup"><span data-stu-id="9e369-107">The following sample code contains a designer and a sample user control associated with the designer.</span></span> <span data-ttu-id="9e369-108">Um dieses Beispiel zu erstellen, kompilieren Sie das Beispiel in eine Klassenbibliothek, ein Windows Forms-Projekt einen Verweis auf die Bibliothek hinzugefügt, fügen Sie das Steuerelement zur Toolbox und fügen Sie eine Instanz des Steuerelements zu Ihrem Formular.</span><span class="sxs-lookup"><span data-stu-id="9e369-108">To build this sample, compile the sample into a class library, add a reference to the library to a Windows Forms project, add the control to the Toolbox, and add an instance of the control to your form.</span></span> <span data-ttu-id="9e369-109">Wenn zeigen Sie auf das Steuerelement, der innere Umriss des Umfangs des Steuerelements wird hervorgehoben, und die Farbe für Kontur zeichnen für die `OutlineColor` -Eigenschaft, die der Designer, auf die Eigenschaften hinzugefügt hat aufgeführt, für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="9e369-109">When you point to the control, the inner outline of the perimeter of the control is highlighted, and the color used to draw the outline corresponds to the `OutlineColor` property that the designer has added to the properties listed for the control.</span></span>  
  
 <span data-ttu-id="9e369-110">Fügen Sie einen Verweis auf die Assembly "System.Design", um das Codebeispiel zu kompilieren.</span><span class="sxs-lookup"><span data-stu-id="9e369-110">Add a reference to the System.Design assembly to compile the code example.</span></span>  
  
 [!code-cpp[ControlDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#1)]
 [!code-csharp[ControlDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#1)]
 [!code-vb[ControlDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.ControlDesigner" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accessibilityObj">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AccessibleObject accessibilityObj;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Windows.Forms.AccessibleObject accessibilityObj" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberSignature Language="VB.NET" Value="Protected accessibilityObj As AccessibleObject " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Windows::Forms::AccessibleObject ^ accessibilityObj;" />
      <MemberSignature Language="F#" Value="val mutable accessibilityObj : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-112">Gibt das Objekt für die Barrierefreiheit für den Designer an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-112">Specifies the accessibility object for the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-113">Der Standardwert ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9e369-113">The default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-114">Ruft das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-114">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-115">Das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-115">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-116">Weitere Informationen zu Barrierefreiheitsobjekten finden Sie in der MSDN Library im Abschnitt Active Accessibility.</span><span class="sxs-lookup"><span data-stu-id="9e369-116">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-117">Ruft die Auflistung der Komponenten ab, die der durch den Designer verwalteten Komponente zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-117">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-118">Die Komponenten, die der durch den Designer verwalteten Komponente zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-118">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-119">Diese Eigenschaft gibt an, alle Komponenten kopieren oder Verschieben zusammen mit der während eines Kopiervorgangs, durch den Designer verwalteten Komponente ziehen oder verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="9e369-119">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="9e369-120">Wenn diese Auflistung Verweise auf andere Komponenten in das aktuelle Dokument im Entwurfsmodus enthält, werden diese Komponenten zusammen mit der während eines Kopiervorgangs vom Designer verwalteten Komponente kopiert.</span><span class="sxs-lookup"><span data-stu-id="9e369-120">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="9e369-121">Wenn die vom Designer verwaltete Komponente ausgewählt ist, wird dieser Auflistung mit allen geschachtelten Steuerelementen gefüllt.</span><span class="sxs-lookup"><span data-stu-id="9e369-121">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="9e369-122">Diese Auflistung kann auch andere Komponenten, wie z. B. die Schaltflächen einer Symbolleiste enthalten.</span><span class="sxs-lookup"><span data-stu-id="9e369-122">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeHandles">
      <MemberSignature Language="C#" Value="public bool AutoResizeHandles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoResizeHandles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoResizeHandles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoResizeHandles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoResizeHandles : bool with get, set" Usage="System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-123">Ruft einen Wert ab oder oder legt einen Wert fest, der angibt, ob die Vergrößerungspunktreservierung vom Wert der <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft abhängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-123">Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-124">
            <see langword="true" />, wenn die Vergrößerungspunktreservierung vom Wert der <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft und der <see langword="AutoSizeMode" />-Eigenschaft abhängt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-124">
              <see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9e369-125">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWndProc">
      <MemberSignature Language="C#" Value="protected void BaseWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.BaseWndProc :  -&gt; unit" Usage="controlDesigner.BaseWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="9e369-126">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-126">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-127">Verarbeitet Windows-Meldungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-127">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-128">Diese Methode wird die Nachricht von Windows, verarbeitet werden, wird übersprungen, das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="9e369-128">This method causes the message to be processed by Windows, skipping the control.</span></span> <span data-ttu-id="9e369-129">Dies ist nützlich, wenn Sie die Nachricht aus zum Steuerelement blockieren möchten, aber Sie möchten nicht verhindern, dass diese Einführung in Windows selbst, da dies andere Meldungen zu generierenden führen kann.</span><span class="sxs-lookup"><span data-stu-id="9e369-129">This is useful if you want to block the message from getting to the control, but you do not want to block it from getting to Windows itself because it can cause other messages to be generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BehaviorService : System.Windows.Forms.Design.Behavior.BehaviorService" Usage="System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-130">Ruft den <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> von der Entwurfsumgebung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-130">Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-131">Der <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> oder <see langword="null" />, wenn der Dienst nicht verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-131">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.ComponentModel.Design.IDesigner parentDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.ComponentModel.Design.IDesigner parentDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentDesigner As IDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::ComponentModel::Design::IDesigner ^ parentDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool&#xA;override this.CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool" Usage="controlDesigner.CanBeParentedTo parentDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentDesigner" Type="System.ComponentModel.Design.IDesigner" />
      </Parameters>
      <Docs>
        <param name="parentDesigner">
          <span data-ttu-id="9e369-132">Der <see cref="T:System.ComponentModel.Design.IDesigner" />, der das zu überprüfende Steuerelement verwaltet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-132">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-133">Gibt an, ob das Steuerelement dieses Designers dem Steuerelement des angegebenen Designers untergeordnet sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-133">Indicates if this designer's control can be parented by the control of the specified designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-134">
            <see langword="true" /> wenn das vom angegebenen Designer verwaltete Steuerelement dem von diesem Designer verwalteten Steuerelement übergeordnet sein kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-134">
              <see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-135">Diese Methode ist hilfreich beim Testen, ob ein Steuerelement von einem bestimmten Typ des übergeordneten Elements untergeordnet sein kann.</span><span class="sxs-lookup"><span data-stu-id="9e369-135">This method is useful for testing whether a control can be parented by a particular type of parent.</span></span> <span data-ttu-id="9e369-136">Z. B. <xref:System.Windows.Forms.TabPage> können Steuerelemente nur untergeordnet sein <xref:System.Windows.Forms.TabControl> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="9e369-136">For example, <xref:System.Windows.Forms.TabPage> controls can only be parented by <xref:System.Windows.Forms.TabControl> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e369-137">Diese Methode nicht aufgerufen, wenn ein Element gezogen wird, aus der **Toolbox** auf die Entwurfsoberfläche.</span><span class="sxs-lookup"><span data-stu-id="9e369-137">This method is not called when an item is dragged from the **Toolbox** onto the design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-138">Ruft das Steuerelement ab, das vom Designer entworfen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-138">Gets the control that the designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-139">Das Steuerelement, das vom Designer entworfen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-139">The control that the designer is designing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc :  -&gt; unit" Usage="controlDesigner.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="9e369-140">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-140">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-141">Stellt Standardverarbeitung für Windows-Meldungen bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-141">Provides default processing for Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-142">Diese Methode bewirkt, dass die Meldung vom Steuerelement und nicht vom Designer verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="9e369-142">This method causes the message to be processed by the control, rather than by the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisplayError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisplayError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.DisplayError : Exception -&gt; unit" Usage="controlDesigner.DisplayError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9e369-143">Das anzuzeigende <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-143">The <see cref="T:System.Exception" /> to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-144">Zeigt dem Benutzer Informationen über die angegebene Ausnahme an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-144">Displays information about the specified exception to the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="controlDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9e369-145">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-145">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-146">Gibt die von <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-146">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-147">Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9e369-147">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9e369-148">`Dispose()` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`.</span><span class="sxs-lookup"><span data-stu-id="9e369-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9e369-149"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="9e369-149"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9e369-150">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Windows.Forms.Design.ControlDesigner> verweist.</span><span class="sxs-lookup"><span data-stu-id="9e369-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Design.ControlDesigner> references.</span></span> <span data-ttu-id="9e369-151">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="9e369-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e369-152">
            <para>
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" />, werden Sie darauf achten, nicht auf Objekte verweisen, die zuvor in einen früheren Aufruf von freigegeben wurden <see langword="Dispose" />. Weitere Informationen zur Implementierung <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Method](~/docs/standard/garbage-collection/implementing-dispose.md).  Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Resources](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode.] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-152">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="EnableDesignMode">
      <MemberSignature Language="C#" Value="protected bool EnableDesignMode (System.Windows.Forms.Control child, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool EnableDesignMode(class System.Windows.Forms.Control child, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EnableDesignMode (child As Control, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool EnableDesignMode(System::Windows::Forms::Control ^ child, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.EnableDesignMode : System.Windows.Forms.Control * string -&gt; bool" Usage="controlDesigner.EnableDesignMode (child, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="9e369-153">Das untergeordnete Steuerelement, für das der Entwurfsmodus aktiviert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-153">The child control for which design mode will be enabled.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="9e369-154">Der Name von <c>child</c>, der dem Benutzer verfügbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-154">The name of <c>child</c> as exposed to the end user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-155">Aktiviert die Entwurfszeitfunktionen für ein untergeordnetes Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-155">Enables design time functionality for a child control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-156">
            <see langword="true" />, wenn das untergeordnete Steuerelement für die Entwurfszeit aktiviert werden konnte, <see langword="false" />, wenn die als Host fungierende Infrastruktur es nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-156">
              <see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-157">Durch angegebene untergeordnete Steuerelement `child` Steuerelement dem Steuerelement dieses Designers untergeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9e369-157">The child control specified by `child` is a child of this control designer's control.</span></span> <span data-ttu-id="9e369-158">Das untergeordnete Element nicht direkt an der Persistenz teilzunehmen, aber es tritt ein, wenn es als Eigenschaft des eigentlichen Steuerelements verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="9e369-158">The child does not directly participate in persistence, but it will if it is exposed as a property of the main control.</span></span> <span data-ttu-id="9e369-159">Betrachten Sie ein Steuerelement wie die <xref:System.Windows.Forms.SplitContainer>: Es weist zwei Bereiche `Panel1` und `Panel2`.</span><span class="sxs-lookup"><span data-stu-id="9e369-159">Consider a control like the <xref:System.Windows.Forms.SplitContainer>: it has two panels, `Panel1` and `Panel2`.</span></span> <span data-ttu-id="9e369-160">Diese Bereiche werden verfügbar gemacht, über schreibgeschützt <xref:System.Windows.Forms.SplitContainer.Panel1%2A> und <xref:System.Windows.Forms.SplitContainer.Panel2%2A> Eigenschaften für die <xref:System.Windows.Forms.SplitContainer> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="9e369-160">These panels are exposed through read only <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> properties on the <xref:System.Windows.Forms.SplitContainer> control.</span></span> <span data-ttu-id="9e369-161">Die <xref:System.Windows.Forms.SplitContainer> des Steuerelement-Designer ruft <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> für jeden Bereich, wodurch andere Komponenten, die auf diesen gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="9e369-161">The <xref:System.Windows.Forms.SplitContainer> control's designer calls <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> for each panel, which allows other components to be dropped on them.</span></span> <span data-ttu-id="9e369-162">Aber, in der Reihenfolge für den Inhalt des <xref:System.Windows.Forms.SplitContainer.Panel1%2A> und <xref:System.Windows.Forms.SplitContainer.Panel2%2A> gespeichert werden, die <xref:System.Windows.Forms.SplitContainer> -Steuerelement selbst muss die Bereiche als öffentliche Eigenschaften verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="9e369-162">But, in order for the contents of <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> to be saved, the <xref:System.Windows.Forms.SplitContainer> control itself must expose the panels as public properties.</span></span>  
  
 <span data-ttu-id="9e369-163">Steuerelementnamen müssen innerhalb eines Steuerelement-Designers eindeutig sein, aber sie sind nicht erforderlich, um in Bezug auf die untergeordneten Elemente von anderen Steuerelement-Designern eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="9e369-163">Control names must be unique within a control designer, but they are not required to be unique with respect to the children of other control designers.</span></span>  
  
 <span data-ttu-id="9e369-164">Um dieses Feature zu unterstützen, muss die hosting-Infrastruktur verfügbar machen die <xref:System.ComponentModel.INestedContainer> Klasse als Dienst über die Website.</span><span class="sxs-lookup"><span data-stu-id="9e369-164">To support this feature, the hosting infrastructure must expose the <xref:System.ComponentModel.INestedContainer> class as a service through the site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9e369-165">
            <paramref name="child" /> oder <paramref name="name" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-165">
              <paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableDragDrop">
      <MemberSignature Language="C#" Value="protected void EnableDragDrop (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnableDragDrop(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnableDragDrop (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnableDragDrop(bool value);" />
      <MemberSignature Language="F#" Value="member this.EnableDragDrop : bool -&gt; unit" Usage="controlDesigner.EnableDragDrop value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9e369-166">
            <see langword="true" />, um die Drag &amp; Drop-Unterstützung für das Steuerelement zu aktivieren; <see langword="false" />, wenn das Steuerelement nicht über Drag &amp; Drop-Unterstützung verfügen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-166">
              <see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support.</span>
          </span>
          <span data-ttu-id="9e369-167">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-167">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-168">Aktiviert oder deaktiviert die Drag &amp; Drop-Unterstützung für das Steuerelement, das entworfen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-168">Enables or disables drag-and-drop support for the control being designed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-169">Der Standardwert von `false` gibt an, dass ein Steuerelement die untergeordneten Elemente, die zur Entwurfszeit gezogen aufweisen kann.</span><span class="sxs-lookup"><span data-stu-id="9e369-169">The default value of `false` specifies that a control cannot have children dragged onto it at design time.</span></span> <span data-ttu-id="9e369-170">Um ein Steuerelement in anderen Steuerelementen zur Entwurfszeit übergeordnetes Element zu ermöglichen, es einem Designer zugeordnet, die von abgeleitet <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span><span class="sxs-lookup"><span data-stu-id="9e369-170">To allow a control to parent other controls at design time, associate it with a designer that derives from <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected virtual bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableDragRect : bool" Usage="System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-171">Ruft einen Wert ab, der angibt, ob in dieser Designerkomponente Ziehrechtecke gezeichnet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-171">Gets a value indicating whether drag rectangles can be drawn on this designer component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-172">
            <see langword="true" />, wenn Ziehrechtecke gezeichnet werden können, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-172">
              <see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph&#xA;override this.GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph" Usage="controlDesigner.GetControlGlyph selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="9e369-173">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-173">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-174">Gibt ein <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> zurück, das die Begrenzungen dieses Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-174">Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-175">Ein <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />, das die Begrenzungen dieses Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-175">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection&#xA;override this.GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection" Usage="controlDesigner.GetGlyphs selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="9e369-176">Ein <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />-Wert, der den Auswahlzustand angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-176">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-177">Ruft eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekt ab, die die Markierungsrahmen und Ziehpunkte für ein Standardsteuerelement darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-177">Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-178">Eine Auflistung von <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-178">A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-179">Beachten Sie auf der Grundlage `selectionType`, <xref:System.Windows.Forms.Design.Behavior.Glyph> zurückgegebenen Objekte einen dieser Zustände Auswahl darstellen:</span><span class="sxs-lookup"><span data-stu-id="9e369-179">Note that based on `selectionType`, the <xref:System.Windows.Forms.Design.Behavior.Glyph> objects returned will represent one of these selection states:</span></span>  
  
-   <span data-ttu-id="9e369-180">Ein vollständig mit veränderbarer Größe Auswahlrahmen mit Ziehpunkten;</span><span class="sxs-lookup"><span data-stu-id="9e369-180">A fully resizable selection border with grab handles;</span></span>  
  
-   <span data-ttu-id="9e369-181">Einen gesperrten Auswahlrahmen;</span><span class="sxs-lookup"><span data-stu-id="9e369-181">A locked selection border;</span></span>  
  
-   <span data-ttu-id="9e369-182">Eine einzelne 'hidden' Auswahl <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span><span class="sxs-lookup"><span data-stu-id="9e369-182">A single 'hidden' selection <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="protected virtual bool GetHitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetHitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetHitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="abstract member GetHitTest : System.Drawing.Point -&gt; bool&#xA;override this.GetHitTest : System.Drawing.Point -&gt; bool" Usage="controlDesigner.GetHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="9e369-183">Ein <see cref="T:System.Drawing.Point" />, der die Position, an der der Mausklick stattfand, in Bildschirmkoordinaten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-183">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-184">Gibt an, ob ein Mausklick auf den angegebenen Punkt von dem Steuerelement behandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-184">Indicates whether a mouse click at the specified point should be handled by the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-185">
            <see langword="true" />, wenn ein Klick auf den angegebenen Punkt vom Steuerelement behandelt werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-185">
              <see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-186">Die <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> Methode bestimmt, ob ein Klick auf den angegebenen Punkt auf das Steuerelement übergeben werden soll, während das Steuerelement im Entwurfsmodus befindet.</span><span class="sxs-lookup"><span data-stu-id="9e369-186">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method determines whether a click at the specified point should be passed to the control, while the control is in design mode.</span></span> <span data-ttu-id="9e369-187">Sie können überschreiben und implementieren diese Methode, um ein Steuerelement klickt in der entwurfszeitumgebung empfangen kann.</span><span class="sxs-lookup"><span data-stu-id="9e369-187">You can override and implement this method to enable your control to receive clicks in the design-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e369-188">Sie können einen Punkt in Bildschirmkoordinaten, übergeben die <xref:System.Windows.Forms.Control.PointToClient%2A> -Methode der der <xref:System.Windows.Forms.Control> Klasse, um die Koordinaten des Punkts relativ zur oberen linken Ecke des Steuerelements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-188">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 <span data-ttu-id="9e369-189">Die <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> Methode wird als Reaktion auf die eine WM_NCHITTEST-Meldung aufgerufen, damit sie für jede beim Verschieben der Maus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="9e369-189">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method is called in response to the WM_NCHITTEST message, so it is called on each mouse move.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookChildControls">
      <MemberSignature Language="C#" Value="protected void HookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.HookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.HookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="9e369-190">Das erste zu verarbeitende untergeordnete <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-190">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="9e369-191">Für untergeordnete Elemente des Steuerelements ruft sich diese Methode möglicherweise rekursiv selbst auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-191">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-192">Leitet Meldungen von den untergeordneten Steuerelementen des angegebenen Steuerelements an den Designer weiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-192">Routes messages from the child controls of the specified control to the designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-193">Ruft das <see cref="T:System.ComponentModel.InheritanceAttribute" /> für den Designer ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-193">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-194">
            <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />, wenn der Designer ein Stamm-Designer ist, andernfalls der Wert der <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />-Eigenschaft des übergeordneten Designers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-194">
              <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="9e369-195">Die dem Designer zuzuordnende <see cref="T:System.ComponentModel.IComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-195">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with.</span>
          </span>
          <span data-ttu-id="9e369-196">Diese Komponente muss immer eine Instanz von <see cref="T:System.Windows.Forms.Control" /> oder von diesem abgeleitet sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-196">This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-197">Initialisiert den Designer mit der angegebenen Komponente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-197">Initializes the designer with the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-198">Diese Methode wird vom Designerhost zum Initialisieren des Designers aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-198">This method is called by the designer host to initialize the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public override void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="9e369-199">Ein Name/Wert-Wörterbuch mit Standardwerten, die auf Eigenschaften angewendet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-199">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="9e369-200">Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-200">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-201">Initialisiert eine vorhandene Komponente erneut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-201">Re-initializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-202">Die <xref:System.Windows.Forms.Design.ControlDesigner> Klasse überschreibt diese Methode zum Behandeln von Vorgängen nach dem Drop.</span><span class="sxs-lookup"><span data-stu-id="9e369-202">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method to handle after-drop cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="9e369-203">Ein Name/Wert-Wörterbuch mit Standardwerten, die auf Eigenschaften angewendet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-203">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="9e369-204">Kann <see langword="null" /> sein, wenn keine Standardwerte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-204">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-205">Initialisiert eine neu erstellte Komponente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-205">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-206">Die <xref:System.Windows.Forms.Design.ControlDesigner> Klasse überschreibt diese Methode.</span><span class="sxs-lookup"><span data-stu-id="9e369-206">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method.</span></span> <span data-ttu-id="9e369-207">Dabei wird die Standardeigenschaft für das Steuerelement betrachtet und, wenn es vom Typ `string`, wird der Wert dieser Eigenschaft auf den Namen der Komponente festgelegt.</span><span class="sxs-lookup"><span data-stu-id="9e369-207">It will look at the default property for the control and, if it is of type `string`, it will set this property's value to the name of the component.</span></span> <span data-ttu-id="9e369-208">Dies geschieht nur, wenn der Designer mit dieser Option im Optionen-Dienst konfiguriert wurde.</span><span class="sxs-lookup"><span data-stu-id="9e369-208">It only does this if the designer has been configured with this option in the options service.</span></span> <span data-ttu-id="9e369-209">Diese Methode auch verbindet das Steuerelement an sein übergeordnetes Element und positioniert es.</span><span class="sxs-lookup"><span data-stu-id="9e369-209">This method also connects the control to its parent and positions it.</span></span> <span data-ttu-id="9e369-210">Wenn Sie diese Methode überschreiben, sollten Sie immer Basisklasse aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-210">If you override this method, you should always call base.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public override void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNonDefault();" />
      <MemberSignature Language="F#" Value="override this.InitializeNonDefault : unit -&gt; unit" Usage="controlDesigner.InitializeNonDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalControlDesigner">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner (int internalControlIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int32 internalControlIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InternalControlDesigner (internalControlIndex As Integer) As ControlDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::ControlDesigner ^ InternalControlDesigner(int internalControlIndex);" />
      <MemberSignature Language="F#" Value="abstract member InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner&#xA;override this.InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner" Usage="controlDesigner.InternalControlDesigner internalControlIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.ControlDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalControlIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="internalControlIndex">
          <span data-ttu-id="9e369-211">Ein angegebener Index zum Auswählen des internen Steuerelement-Designers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-211">A specified index to select the internal control designer.</span>
          </span>
          <span data-ttu-id="9e369-212">Der Index ist nullbasiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-212">This index is zero-based.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-213">Gibt den internen Steuerelement-Designer mit dem angegebenen Index im <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-213">Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-214">Ein <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-214">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-215">Ein internes Steuerelement ist ein Steuerelement, das nicht der <xref:System.ComponentModel.IContainer.Components%2A> Auflistung von der <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e369-215">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="9e369-216"><xref:System.Windows.Forms.SplitterPanel> ist ein Beispiel für ein solches Steuerelement an.</span><span class="sxs-lookup"><span data-stu-id="9e369-216"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoint">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Point InvalidPoint;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Point InvalidPoint" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidPoint As Point " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Point InvalidPoint;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPoint : System.Drawing.Point" Usage="System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-217">Definiert einen lokalen <see cref="T:System.Drawing.Point" />, der die Werte eines ungültigen <see cref="T:System.Drawing.Point" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-217">Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-218"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> verfügt über eine <xref:System.Drawing.Point.X%2A> und <xref:System.Drawing.Point.Y%2A> -Eigenschaft auf den Mindestwert für den Integer-Datentyp festgelegt.</span><span class="sxs-lookup"><span data-stu-id="9e369-218"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> has an <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> property set to the minimum value for the integer data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInternalControlDesigners">
      <MemberSignature Language="C#" Value="public virtual int NumberOfInternalControlDesigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfInternalControlDesigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NumberOfInternalControlDesigners () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int NumberOfInternalControlDesigners();" />
      <MemberSignature Language="F#" Value="abstract member NumberOfInternalControlDesigners : unit -&gt; int&#xA;override this.NumberOfInternalControlDesigners : unit -&gt; int" Usage="controlDesigner.NumberOfInternalControlDesigners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-219">Gibt die Anzahl von internen Steuerelement-Designern im <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-219">Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e369-220">Die Anzahl von internen Steuerelement-Designern im <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-220">The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-221">Ein internes Steuerelement ist ein Steuerelement, das nicht der <xref:System.ComponentModel.IContainer.Components%2A> Auflistung von der <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e369-221">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="9e369-222"><xref:System.Windows.Forms.SplitterPanel> ist ein Beispiel für ein solches Steuerelement an.</span><span class="sxs-lookup"><span data-stu-id="9e369-222"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenu (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenu(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenu (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenu(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenu : int * int -&gt; unit&#xA;override this.OnContextMenu : int * int -&gt; unit" Usage="controlDesigner.OnContextMenu (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="9e369-223">Die X-Koordinate, an der das Kontextmenü angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-223">The x coordinate at which to display the context menu.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="9e369-224">Die Y-Koordinate, an der das Kontextmenü angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-224">The y coordinate at which to display the context menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-225">Zeigt das Kontextmenü an und ermöglicht das Ausführen weiterer Verarbeitungsschritte, während das Kontextmenü gerade angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-225">Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateHandle : unit -&gt; unit&#xA;override this.OnCreateHandle : unit -&gt; unit" Usage="controlDesigner.OnCreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-226">Ermöglicht das Ausführen weiterer Schritte direkt nach dem Erstellen des Steuerelementhandles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-226">Provides an opportunity to perform additional processing immediately after the control handle has been created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragComplete de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="9e369-227">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-227">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-228">Empfängt einen Aufruf, um einen Drag &amp; Drop-Vorgang zu bereinigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-228">Receives a call to clean up a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragDrop de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="9e369-229">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-229">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-230">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Objekt auf der Ansicht des Steuerelement-Designers abgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-230">Receives a call when a drag-and-drop object is dropped onto the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragEnter de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="9e369-231">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-231">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-232">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang in der Ansicht des Steuerelement-Designers eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-232">Receives a call when a drag-and-drop operation enters the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="controlDesigner.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9e369-233">Ein <see cref="T:System.EventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-233">An <see cref="T:System.EventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-234">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang die Ansicht des Steuerelement-Designers verlässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-234">Receives a call when a drag-and-drop operation leaves the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragOver de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="9e369-235">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-235">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-236">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Objekt über die Ansicht des Steuerelement-Designers gezogen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-236">Receives a call when a drag-and-drop object is dragged over the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="controlDesigner.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9e369-237">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das Daten für das Ereignis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-237">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-238">Empfängt einen Aufruf, wenn ein Drag &amp; Drop-Vorgang ausgeführt wird, um visuelle Hinweise bereitzustellen, die auf der Position des Mauszeigers basieren, während ein Ziehvorgang ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-238">Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-239">Der Designerhost ruft diese Methode auf, wenn ein OLE-Drag-Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="9e369-239">The designer host calls this method when an OLE drag event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragBegin : int * int -&gt; unit&#xA;override this.OnMouseDragBegin : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragBegin (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="9e369-240">Die x-Position der Maus in Bildschirmkoordinaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-240">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="9e369-241">Die y-Position der Maus in Bildschirmkoordinaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-241">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-242">Empfängt als Reaktion auf das Drücken und Halten der linken Maustaste einen Aufruf, während sich der Mauszeiger über der Komponente befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-242">Receives a call in response to the left mouse button being pressed and held while over the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-243">Diese Methode wird zu Beginn eines Drag & Drop-Vorgangs aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-243">This method is called at the start of a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e369-244">Sie können einen Punkt in Bildschirmkoordinaten, übergeben die <xref:System.Windows.Forms.Control.PointToClient%2A> -Methode der der <xref:System.Windows.Forms.Control> Klasse, um die Koordinaten des Punkts relativ zur oberen linken Ecke des Steuerelements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-244">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragEnd : bool -&gt; unit&#xA;override this.OnMouseDragEnd : bool -&gt; unit" Usage="controlDesigner.OnMouseDragEnd cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="9e369-245">
            <see langword="true" />, um den Ziehvorgang abzubrechen, <see langword="false" />, um einen Commit für den Vorgang auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-245">
              <see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-246">Empfängt einen Aufruf am Ende eines Drag &amp; Drop-Vorgangs, um diesen abzuschließen oder abzubrechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-246">Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragMove : int * int -&gt; unit&#xA;override this.OnMouseDragMove : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragMove (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="9e369-247">Die x-Position der Maus in Bildschirmkoordinaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-247">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="9e369-248">Die y-Position der Maus in Bildschirmkoordinaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-248">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-249">Empfängt einen Aufruf für jede Bewegung der Maus während eines Drag &amp; Drop-Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-249">Receives a call for each movement of the mouse during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9e369-250">Sie können einen Punkt in Bildschirmkoordinaten, übergeben die <xref:System.Windows.Forms.Control.PointToClient%2A> -Methode der der <xref:System.Windows.Forms.Control> Klasse, um die Koordinaten des Punkts relativ zur oberen linken Ecke des Steuerelements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9e369-250">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : unit -&gt; unit&#xA;override this.OnMouseEnter : unit -&gt; unit" Usage="controlDesigner.OnMouseEnter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-251">Empfängt einen Aufruf, wenn der Mauszeiger zum ersten Mal in den Bereich des Steuerelements eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-251">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : unit -&gt; unit&#xA;override this.OnMouseHover : unit -&gt; unit" Usage="controlDesigner.OnMouseHover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-252">Empfängt einen Aufruf, nachdem mit dem Mauszeiger auf das Steuerelement gezeigt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-252">Receives a call after the mouse hovers over the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : unit -&gt; unit&#xA;override this.OnMouseLeave : unit -&gt; unit" Usage="controlDesigner.OnMouseLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-253">Empfängt einen Aufruf, wenn der Mauszeiger zum ersten Mal in den Bereich des Steuerelements eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-253">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaintAdornments pe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">
          <span data-ttu-id="9e369-254">Eine Instanz von <see cref="T:System.Windows.Forms.PaintEventArgs" />, die der Designer zum Zeichnen auf dem Steuerelement verwenden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-254">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-255">Empfängt einen Aufruf, wenn die Oberfläche des vom Designer verwalteten Steuerelements gezeichnet ist, sodass der Designer die Darstellung des Steuerelements bearbeiten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-255">Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public override void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="override this.OnSetComponentDefaults : unit -&gt; unit" Usage="controlDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-256">Wird beim Initialisieren des Designers aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-256">Called when the designer is intialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetCursor();" />
      <MemberSignature Language="F#" Value="abstract member OnSetCursor : unit -&gt; unit&#xA;override this.OnSetCursor : unit -&gt; unit" Usage="controlDesigner.OnSetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e369-257">Empfängt jedes Mal einen Aufruf, wenn der Cursor festgelegt werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-257">Receives a call each time the cursor needs to be set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-258">Diese Methode behandelt, Umleitung und die Behandlung des Ereignisses Set Cursor.</span><span class="sxs-lookup"><span data-stu-id="9e369-258">This method handles redirection and handling of the set cursor event.</span></span> <span data-ttu-id="9e369-259">Wenn der Toolboxdienst ein Tool ausgewählt ist, können diese Methode der Toolboxdienst zum Festlegen des Cursors.</span><span class="sxs-lookup"><span data-stu-id="9e369-259">If the toolbox service has a tool selected, this method will allow the toolbox service to set the cursor.</span></span> <span data-ttu-id="9e369-260">Wenn die Auswahl-UI-Dienst gesperrt wurde, oder ist keine Positionseigenschaft des Steuerelements, wird der Standardpfeilcursor festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="9e369-260">If the selection UI service has a locked selection, or if there is no location property on the control, the default arrow cursor will be set.</span></span> <span data-ttu-id="9e369-261">Wenn ein Benutzer eine Komponente zieht, wird der Fadenkreuzcursor festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="9e369-261">If a user is dragging a component, the crosshair cursor will be set.</span></span> <span data-ttu-id="9e369-262">Andernfalls wird ein Pfeil mit vier Spitzen Cursor festgelegt werden, um anzugeben, dass die Komponente geklickt und verschoben werden kann.</span><span class="sxs-lookup"><span data-stu-id="9e369-262">Otherwise, a four headed arrow cursor will be set to indicate that the component can be clicked and moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-263">Ruft die übergeordnete Komponente für den <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-263">Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-264">Die übergeordnete Komponente für den <see cref="T:System.Windows.Forms.Design.ControlDesigner" />, andernfalls <see langword="null" />, wenn keine übergeordnete Komponente vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-264">The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-265">Die Standardimplementierung wird einfach geprüft, um zu ermitteln, ob die entworfenen Komponente ein Steuerelement ist, und wenn es sich handelt, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> gibt zurück, die das übergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="9e369-265">The default implementation simply checks to see if the component being designed is a control and if it is, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> returns its parent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipatesWithSnapLines">
      <MemberSignature Language="C#" Value="public virtual bool ParticipatesWithSnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParticipatesWithSnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParticipatesWithSnapLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ParticipatesWithSnapLines { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipatesWithSnapLines : bool" Usage="System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-266">Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> während eines Ziehvorgangs die Ausrichtung von Ausrichtungslinien ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-266">Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-267">
            <see langword="true" />, wenn <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> während eines Ziehvorgangs die Ausrichtung von Ausrichtungslinien ermöglicht, wenn sich das primäre Ziehsteuerelement auf diesem Designer befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-267">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9e369-268">
            <para>Die standardmäßige Implementierung gibt immer <see langword="true" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-268">
              <para>The default implementation always returns <see langword="true" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="9e369-269">Ein <see cref="T:System.Collections.IDictionary" />, das die Eigenschaften für die Komponentenklasse enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-269">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-270">Passt die Gruppe von Eigenschaften an, die die Komponente mithilfe eines <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-270">Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-271">Dies <xref:System.ComponentModel.Design.IDesignerFilter> -Schnittstellenmethode fügt einen Satz von Eigenschaften auf dieser Designerkomponente zur Entwurfszeit.</span><span class="sxs-lookup"><span data-stu-id="9e369-271">This <xref:System.ComponentModel.Design.IDesignerFilter> interface method override adds a set of properties to this designer's component at design time.</span></span> <span data-ttu-id="9e369-272">Diese Methode fügt die folgenden Eigenschaften für die durchsucht werden kann: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, und `Locked`.</span><span class="sxs-lookup"><span data-stu-id="9e369-272">This method adds the following browsable properties: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, and `Locked`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRules">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.SelectionRules SelectionRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectionRules As SelectionRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Design::SelectionRules SelectionRules { System::Windows::Forms::Design::SelectionRules get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRules : System.Windows.Forms.Design.SelectionRules" Usage="System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.SelectionRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-273">Ruft die Auswahlregeln ab, die die Bewegungsfunktionen einer Komponente angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-273">Gets the selection rules that indicate the movement capabilities of a component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-274">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.Design.SelectionRules" />-Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-274">A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-275">Wenn kein Designer Regeln für eine Komponente bereitstellt, wird die Komponente keine UI-Dienste erhalten.</span><span class="sxs-lookup"><span data-stu-id="9e369-275">If no designer provides rules for a component, the component will not get any UI services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.SelectionRules" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SnapLines : System.Collections.IList" Usage="System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e369-276">Ruft eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten ab, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-276">Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e369-277">Eine Liste mit <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />-Objekten, die signifikante Ausrichtungspunkte für dieses Steuerelement darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-277">A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-278">Sie können die angebotenen <xref:System.Windows.Forms.Design.Behavior.SnapLine> Objekte zur Unterstützung beim Positionieren des Steuerelements auf einer Entwurfsoberfläche.</span><span class="sxs-lookup"><span data-stu-id="9e369-278">You can use the offered <xref:System.Windows.Forms.Design.Behavior.SnapLine> objects to assist in positioning the control on a design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookChildControls">
      <MemberSignature Language="C#" Value="protected void UnhookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnhookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnhookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UnhookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.UnhookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.UnhookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="9e369-279">Das erste zu verarbeitende untergeordnete <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-279">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="9e369-280">Für untergeordnete Elemente des Steuerelements ruft sich diese Methode möglicherweise rekursiv selbst auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-280">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-281">Leitet Meldungen für die untergeordneten Elemente des angegebenen Steuerelements an jedes Steuerelement und nicht an einen übergeordneten Designer weiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-281">Routes messages for the children of the specified control to each control rather than to a parent designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="controlDesigner.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="9e369-282">Der zu verarbeitende <see cref="T:System.Windows.Forms.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-282">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e369-283">Verarbeitet Windows-Meldungen und leitet diese optional an das Steuerelement weiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e369-283">Processes Windows messages and optionally routes them to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e369-284">Diese Methode wird für jede Nachricht aufgerufen, die das Steuerelement in der Regel erhalten würde.</span><span class="sxs-lookup"><span data-stu-id="9e369-284">This method is called for each message the control would usually receive.</span></span> <span data-ttu-id="9e369-285">Dies ermöglicht dem Designer Nachrichten vorverarbeitung vor der Weiterleitung sie optional auf das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="9e369-285">This allows the designer to preprocess messages before optionally routing them to the control.</span></span>  
  
 <span data-ttu-id="9e369-286">Zum Senden der Nachricht an des Steuerelements des <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> -Methode, rufen <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> für den Steuerelement Designer.</span><span class="sxs-lookup"><span data-stu-id="9e369-286">To send the message to the control’s <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> method, call <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> on the control's designer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e369-287">Der Designer filtert Nachrichten an, damit einige Nachrichten nicht an das Steuerelement gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="9e369-287">The designer filters messages, so some messages will not be sent to the control.</span></span> <span data-ttu-id="9e369-288">Beispielsweise werden mausmeldungen vom Designer abgefangen.</span><span class="sxs-lookup"><span data-stu-id="9e369-288">For example, mouse messages are intercepted by the designer.</span></span> <span data-ttu-id="9e369-289">Wenn dies nicht das Verhalten werden sollen ist, rufen Sie <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="9e369-289">If this is not the behavior you want, call <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> instead.</span></span>  
  
 <span data-ttu-id="9e369-290">Übergeben Sie `m` als Parameter.</span><span class="sxs-lookup"><span data-stu-id="9e369-290">Pass `m` as a parameter.</span></span> <span data-ttu-id="9e369-291">Optional können Sie ändern oder erstellen Sie ein neues <xref:System.Windows.Forms.Message?displayProperty=nameWithType> an der Methode des Steuerelements übergeben.</span><span class="sxs-lookup"><span data-stu-id="9e369-291">Optionally, you can alter or create a new <xref:System.Windows.Forms.Message?displayProperty=nameWithType> to pass to the control's method.</span></span>  
  
 <span data-ttu-id="9e369-292">Die folgende Tabelle zeigt den Fluss der Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="9e369-292">The following table shows the flow of messages.</span></span>  
  
|<span data-ttu-id="9e369-293">Ohne einen designer</span><span class="sxs-lookup"><span data-stu-id="9e369-293">Without a designer</span></span>|<span data-ttu-id="9e369-294">Mit einem designer</span><span class="sxs-lookup"><span data-stu-id="9e369-294">With a designer</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="9e369-295">USER32</span><span class="sxs-lookup"><span data-stu-id="9e369-295">USER32</span></span><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="9e369-296">USER32</span><span class="sxs-lookup"><span data-stu-id="9e369-296">USER32</span></span>|<span data-ttu-id="9e369-297">USER32</span><span class="sxs-lookup"><span data-stu-id="9e369-297">USER32</span></span><br /><br /> <span data-ttu-id="9e369-298">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span><span class="sxs-lookup"><span data-stu-id="9e369-298">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span></span><br /><br /> <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="9e369-299">USER32</span><span class="sxs-lookup"><span data-stu-id="9e369-299">USER32</span></span>|  
  
 <span data-ttu-id="9e369-300">Der Designer fängt Nachrichten ab, indem Sie ersetzen die <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> Eigenschaft des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="9e369-300">The designer intercepts messages by replacing the <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> property on the control.</span></span> <span data-ttu-id="9e369-301">In der Regel <xref:System.Windows.Forms.Control.WindowTarget%2A> verweist auf die <xref:System.Windows.Forms.NativeWindow> im Steuerelement enthaltene.</span><span class="sxs-lookup"><span data-stu-id="9e369-301">Usually, <xref:System.Windows.Forms.Control.WindowTarget%2A> points to the <xref:System.Windows.Forms.NativeWindow> contained within the control.</span></span> <span data-ttu-id="9e369-302">Während der Entwurfszeit die Designer ersetzt diesen mit seinem eigenen und speichert den ursprünglichen Wert.</span><span class="sxs-lookup"><span data-stu-id="9e369-302">During design time, the designer replaces this with its own window target, and caches the original value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>