<Type Name="MaskDescriptor" FullName="System.Windows.Forms.Design.MaskDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9ee4180e451d7da90e700be84ac4a98dd122e9f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37576527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MaskDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MaskDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.MaskDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MaskDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskDescriptor abstract" />
  <TypeSignature Language="F#" Value="type MaskDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Gruppe von Membern für abgeleitete Klassen, um Optionen für den UI-Typ-Editor für maskierte Textfelder bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor> abstrakte Klasse definiert den allgemeinen Satz von Eigenschaften, die alle Maskendeskriptoren implementieren müssen. Sie können Maskendeskriptoren vordefinierte Maske von Optionen für die Verwendung in der Benutzeroberfläche für Typ-Editor erstellen die <xref:System.Windows.Forms.MaskedTextBox>. Beispielsweise stellt Visual Studio vordefinierte Masken für Daten, z. B. die Postleitzahl, Zeit, verschiedene Datumsformate und Telefonnummer. Alle vordefinierte Masken zugeordnet werden die <xref:System.ComponentModel.MaskedTextProvider> Analyse-Engine.  
  
 Sie können ermitteln, <xref:System.Windows.Forms.Design.MaskDescriptor> Typen zur Entwurfszeit durch Abfragen der <xref:System.ComponentModel.Design.ITypeDiscoveryService> Dienstanbieter.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="T:System.ComponentModel.Design.ITypeDiscoveryService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MaskDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MaskDescriptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.MaskDescriptor.%23ctor%2A> ist ein vom Compiler bereitgestellte Standardkonstruktor. Ein Standardkonstruktor ist erforderlich, durch die <xref:System.ComponentModel.Design.ITypeDiscoveryService> Dienstanbieter.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeDiscoveryService" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.MaskDescriptor.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.Design.MaskDescriptor.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Globalization.CultureInfo" /> ab, die das Gebietsschema darstellt, für das die Maske erstellt wurde.</summary>
        <value>Eine <see cref="T:System.Globalization.CultureInfo" />, die das Gebietsschema darstellt, für das die Maske erstellt wurde.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object maskDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object maskDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (maskDescriptor As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ maskDescriptor);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="maskDescriptor.Equals maskDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">Das <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />, das mit dem aktuellen <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> und das aktuelle <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> gleich sind.</summary>
        <returns>
          <see langword="true" />, wenn das angegebene <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> gleich der aktuellen <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.Equals%2A> Methode bestimmt, ob `maskDescriptor` und der aktuelle Maskendeskriptor beschreiben, die dieselbe Zugriffsmaske.  
  
 Diese Methode gibt `true` Wenn in beiden Maskendeskriptoren die folgenden Bedingungen erfüllt sind.  
  
 1. Die <xref:System.Windows.Forms.Design.MaskDescriptor.Mask%2A> Eigenschaft ist für beide Maskendeskriptoren.  
  
 2. Der Validierungstyp ist für beide Maskendeskriptoren identisch.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Design.MaskDescriptor.Name%2A> Eigenschaft wird nicht berücksichtigt, da die <xref:System.ComponentModel.MaskedTextProvider> und <xref:System.Windows.Forms.MaskedTextBox> Klassen nicht verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="maskDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als Hashfunktion für einen besonderen Typ.</summary>
        <returns>Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValidMaskDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Maskendeskriptor gültig ist und der Maskenliste hinzugefügt werden kann.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValidMaskDescriptor">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskDescriptor (System.Windows.Forms.Design.MaskDescriptor maskDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskDescriptor(class System.Windows.Forms.Design.MaskDescriptor maskDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskDescriptor(System::Windows::Forms::Design::MaskDescriptor ^ maskDescriptor);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskDescriptor : System.Windows.Forms.Design.MaskDescriptor -&gt; bool" Usage="System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor maskDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Windows.Forms.Design.MaskDescriptor" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">Der Maskendeskriptor, der auf Gültigkeit getestet wird.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Maskendeskriptor gültig ist und der Maskenliste hinzugefügt werden kann.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="maskDescriptor" /> gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor%2A> Methode bestimmt, ob `maskDescriptor` gültig ist und der Maskenliste hinzugefügt werden können.  
  
 Ein gültiger <xref:System.Windows.Forms.Design.MaskDescriptor> müssen die folgenden Bedingungen erfüllen.  
  
-   Nicht `null`.  
  
-   Nicht `null` oder eine leere Maske.  
  
-   Nicht `null` oder einen leeren Namen.  
  
-   Nicht `null` oder ein leeres Beispiel.  
  
-   Das Beispiel richtig basierend auf der Maske und alle erforderlichen bearbeiten Zeichen angegeben wurden. Dies bedeutet, dass die Maske abgeschlossen, aber nicht notwendigerweise voll ist.  
  
-   Das Beispiel gilt auf der Grundlage der <xref:System.Windows.Forms.Design.MaskDescriptor.ValidatingType%2A> Objekt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskDescriptor">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskDescriptor (System.Windows.Forms.Design.MaskDescriptor maskDescriptor, out string validationErrorDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskDescriptor(class System.Windows.Forms.Design.MaskDescriptor maskDescriptor, [out] string&amp; validationErrorDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskDescriptor(System::Windows::Forms::Design::MaskDescriptor ^ maskDescriptor, [Runtime::InteropServices::Out] System::String ^ % validationErrorDescription);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskDescriptor : System.Windows.Forms.Design.MaskDescriptor *  -&gt; bool" Usage="System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor (maskDescriptor, validationErrorDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskDescriptor" Type="System.Windows.Forms.Design.MaskDescriptor" />
        <Parameter Name="validationErrorDescription" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="maskDescriptor">Der Maskendeskriptor, der auf Gültigkeit getestet wird.</param>
        <param name="validationErrorDescription">Eine Zeichenfolge, die einen Validierungsfehler darstellt. Wenn kein Validierungsfehler aufgetreten ist, ist <c>validationErrorDescription</c> gleich <see cref="F:System.String.Empty" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Maskendeskriptor gültig ist. Bei einem ungültigen Deskriptor wird eine Fehlerbeschreibung bereitgestellt.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="maskDescriptor" /> gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor%2A> Methode bestimmt, ob `maskDescriptor` gültig ist und der Maskenliste hinzugefügt werden können.  
  
 Ein gültiger <xref:System.Windows.Forms.Design.MaskDescriptor> müssen die folgenden Bedingungen erfüllen.  
  
-   Nicht `null`.  
  
-   Nicht `null` oder eine leere Maske.  
  
-   Nicht `null` oder einen leeren Namen.  
  
-   Nicht `null` oder ein leeres Beispiel.  
  
-   Das Beispiel richtig basierend auf der Maske und alle erforderlichen bearbeiten Zeichen angegeben wurden. Dies bedeutet, dass die Maske abgeschlossen, aber nicht notwendigerweise voll ist.  
  
-   Das Beispiel gilt auf der Grundlage der <xref:System.Windows.Forms.Design.MaskDescriptor.ValidatingType%2A> Objekt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public abstract string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.Windows.Forms.Design.MaskDescriptor.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zu definierende Maske ab.</summary>
        <value>Ein <see cref="T:System.String" />, der die zu definierende Maske enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Maske darf nur gültige Zeichen enthalten, gemäß der <xref:System.ComponentModel.MaskedTextProvider.IsValidMaskChar%2A> Methode der <xref:System.ComponentModel.MaskedTextProvider> Klasse. Wenn eine vordefinierte Maske, in Visual Studio ausgewählt ist die <xref:System.Windows.Forms.Design.MaskDescriptor.Mask%2A> Eigenschaft wird angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.Name" />
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.Sample" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.MaskDescriptor.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Forms.Design.MaskDescriptor.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerfreundlichen Namen der Maske ab.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen oder eine kurze Beschreibung der <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.Name%2A> Eigenschaft wird angezeigt, der **popis Masky** -Spalte in der visuellen Editor für den <xref:System.Windows.Forms.MaskedTextBox> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="public abstract string Sample { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sample" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.MaskDescriptor.Sample" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sample As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Sample { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sample : string" Usage="System.Windows.Forms.Design.MaskDescriptor.Sample" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Beispiel für eine formatierte Zeichenfolge für die Maske ab.</summary>
        <value>Ein <see cref="T:System.String" />, der Text enthält, der mit der der <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />-Eigenschaft formatiert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.Sample%2A> Eigenschaft wird angezeigt, der **Datenformat** -Spalte in der visuellen Editor für den <xref:System.Windows.Forms.MaskedTextBox> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.MaskDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskDescriptor.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public abstract Type ValidatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValidatingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatingType : Type" Usage="System.Windows.Forms.Design.MaskDescriptor.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ ab, der die der Maske zugeordnete Validierung bereitstellt.</summary>
        <value>Der <see cref="T:System.Type" />, für den die formatierte Zeichenfolge überprüft wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.MaskDescriptor.ValidatingType%2A> Eigenschaft wird verwendet, um die Eingabezeichenfolge validiert wird, nachdem die Maske darauf angewendet wurde. Dies entspricht direkt der <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> Eigenschaft der <xref:System.Windows.Forms.MaskedTextBox> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      </Docs>
    </Member>
  </Members>
</Type>