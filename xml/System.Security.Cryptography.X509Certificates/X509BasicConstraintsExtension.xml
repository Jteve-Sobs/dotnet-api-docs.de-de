<Type Name="X509BasicConstraintsExtension" FullName="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e5d98bbb7393356be1784530269c1588037428e9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70698062" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509BasicConstraintsExtension : System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509BasicConstraintsExtension extends System.Security.Cryptography.X509Certificates.X509Extension" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509BasicConstraintsExtension&#xA;Inherits X509Extension" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509BasicConstraintsExtension sealed : System::Security::Cryptography::X509Certificates::X509Extension" />
  <TypeSignature Language="F#" Value="type X509BasicConstraintsExtension = class&#xA;    inherit X509Extension" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Extension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="baf50-101">Definiert die für ein Zertifikat festgelegten Einschränkungen.</span><span class="sxs-lookup"><span data-stu-id="baf50-101">Defines the constraints set on a certificate.</span></span> <span data-ttu-id="baf50-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-103">Diese Klasse stellt Eigenschaften bereit, die die für ein Zertifikat festgelegten grundlegenden Einschränkungen definieren.</span><span class="sxs-lookup"><span data-stu-id="baf50-103">This class provides properties that define the basic constraints set on a certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="baf50-104">Im folgenden Codebeispiel wird veranschaulicht, wie der persönliche Zertifikat Speicher eines Benutzers geöffnet und Informationen zu den einzelnen Zertifikaten im Speicher angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-104">The following code example demonstrates how to open a user's personal certificate store and display information about each certificate in the store.</span></span>  <span data-ttu-id="baf50-105">In diesem Beispiel wird <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> die-Klasse verwendet, um die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="baf50-105">This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.</span></span>  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="baf50-106">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="baf50-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="baf50-107">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="baf50-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="baf50-108">Im folgenden Codebeispiel wird veranschaulicht, wie der persönliche Zertifikat Speicher eines Benutzers geöffnet und Informationen zu den einzelnen Zertifikaten im Speicher angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-108">The following code example demonstrates how to open a user's personal certificate store and display information about each certificate in the store.</span></span>  <span data-ttu-id="baf50-109">In diesem Beispiel wird <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> die-Klasse verwendet, um die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="baf50-109">This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.</span></span>  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension (System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsnEncodedData encodedBasicConstraints, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encodedBasicConstraints As AsnEncodedData, critical As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension(System::Security::Cryptography::AsnEncodedData ^ encodedBasicConstraints, bool critical);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension : System.Security.Cryptography.AsnEncodedData * bool -&gt; System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" Usage="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension (encodedBasicConstraints, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encodedBasicConstraints" Type="System.Security.Cryptography.AsnEncodedData" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedBasicConstraints"><span data-ttu-id="baf50-110">Die codierten Daten, aus denen die Erweiterung erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="baf50-110">The encoded data to use to create the extension.</span></span></param>
        <param name="critical"><span data-ttu-id="baf50-111"><see langword="true" />, wenn die Erweiterung wichtig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-111"><see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="baf50-112">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />-Klasse mithilfe eines <see cref="T:System.Security.Cryptography.AsnEncodedData" />-Objekts und eines Werts, der angibt, ob die Erweiterung wichtig ist.</span><span class="sxs-lookup"><span data-stu-id="baf50-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-113">Verwenden Sie diesen Konstruktor, wenn sich die Informationen zum Erstellen einer Erweiterung bereits <xref:System.Security.Cryptography.AsnEncodedData> in einem Objekt befinden.</span><span class="sxs-lookup"><span data-stu-id="baf50-113">Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509BasicConstraintsExtension (bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool certificateAuthority, bool hasPathLengthConstraint, int32 pathLengthConstraint, bool critical) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateAuthority As Boolean, hasPathLengthConstraint As Boolean, pathLengthConstraint As Integer, critical As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509BasicConstraintsExtension(bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension : bool * bool * int * bool -&gt; System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" Usage="new System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension (certificateAuthority, hasPathLengthConstraint, pathLengthConstraint, critical)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateAuthority" Type="System.Boolean" />
        <Parameter Name="hasPathLengthConstraint" Type="System.Boolean" />
        <Parameter Name="pathLengthConstraint" Type="System.Int32" />
        <Parameter Name="critical" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificateAuthority"><span data-ttu-id="baf50-114"><see langword="true" />, wenn es sich bei dem Zertifikat um ein Zertifikat einer Zertifizierungsstelle handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-114"><see langword="true" /> if the certificate is a certificate authority (CA) certificate; otherwise, <see langword="false" />.</span></span></param>
        <param name="hasPathLengthConstraint"><span data-ttu-id="baf50-115"><see langword="true" />, wenn für das Zertifikat eine Beschränkung der Anzahl der zulässigen Pfadebenen besteht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-115"><see langword="true" /> if the certificate has a restriction on the number of path levels it allows; otherwise, <see langword="false" />.</span></span></param>
        <param name="pathLengthConstraint"><span data-ttu-id="baf50-116">Ruft die Anzahl der in einem Zertifikatspfad zulässigen Ebenen ab.</span><span class="sxs-lookup"><span data-stu-id="baf50-116">The number of levels allowed in a certificate's path.</span></span></param>
        <param name="critical"><span data-ttu-id="baf50-117"><see langword="true" />, wenn die Erweiterung wichtig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-117"><see langword="true" /> if the extension is critical; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="baf50-118">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="baf50-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class.</span></span> <span data-ttu-id="baf50-119">Parameter geben einen Wert an, der anzeigt, ob es sich bei einem Zertifikat um ein Zertifikat einer Zertifizierungsstelle handelt. Sie geben außerdem einen Wert an, der anzeigt, ob für ein Zertifikat eine Beschränkung der Anzahl zulässiger Pfadebenen besteht, sowie die Anzahl der in einem Zertifizierungspfad zulässigen Ebenen und einen Wert, der angibt, ob die Erweiterung wichtig ist.</span><span class="sxs-lookup"><span data-stu-id="baf50-119">Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateAuthority">
      <MemberSignature Language="C#" Value="public bool CertificateAuthority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CertificateAuthority" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CertificateAuthority As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CertificateAuthority { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CertificateAuthority : bool" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="baf50-120">Ruft einen Wert ab, der angibt, ob es sich bei einem Zertifikat um ein Zertifikat einer Zertifizierungsstelle handelt.</span><span class="sxs-lookup"><span data-stu-id="baf50-120">Gets a value indicating whether a certificate is a certificate authority (CA) certificate.</span></span></summary>
        <value><span data-ttu-id="baf50-121"><see langword="true" />, wenn es sich bei dem Zertifikat um ein Zertifikat einer Zertifizierungsstelle handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-121"><see langword="true" /> if the certificate is a certificate authority (CA) certificate, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-122">Verwenden Sie diese Eigenschaft, um zu bestimmen, ob es sich bei dem Zertifikat um ein Zertifizierungsstellen Zertifikat handelt.</span><span class="sxs-lookup"><span data-stu-id="baf50-122">Use this property to determine if the certificate is a certificate authority (CA) certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="baf50-123">Im folgenden Codebeispiel wird veranschaulicht, wie der persönliche Zertifikat Speicher eines Benutzers geöffnet und Informationen zu den einzelnen Zertifikaten im Speicher angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-123">The following code example demonstrates how to open a user's personal certificate store and display information about each certificate in the store.</span></span>  <span data-ttu-id="baf50-124">In diesem Beispiel wird <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> die-Klasse verwendet, um die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="baf50-124">This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.</span></span>  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.Security.Cryptography.AsnEncodedData asnEncodedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::Security::Cryptography::AsnEncodedData ^ asnEncodedData);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.Security.Cryptography.AsnEncodedData -&gt; unit" Usage="x509BasicConstraintsExtension.CopyFrom asnEncodedData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asnEncodedData" Type="System.Security.Cryptography.AsnEncodedData" />
      </Parameters>
      <Docs>
        <param name="asnEncodedData"><span data-ttu-id="baf50-125">Die codierten Daten, aus denen die Erweiterung erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="baf50-125">The encoded data to use to create the extension.</span></span></param>
        <summary><span data-ttu-id="baf50-126">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" />-Klasse mit einem <see cref="T:System.Security.Cryptography.AsnEncodedData" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="baf50-126">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-127">Verwenden Sie diesen Konstruktor, wenn sich die Informationen zum Erstellen einer Erweiterung bereits <xref:System.Security.Cryptography.AsnEncodedData> in einem Objekt befinden.</span><span class="sxs-lookup"><span data-stu-id="baf50-127">Use this constructor if the information to create an extension is already in an <xref:System.Security.Cryptography.AsnEncodedData> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPathLengthConstraint">
      <MemberSignature Language="C#" Value="public bool HasPathLengthConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPathLengthConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPathLengthConstraint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPathLengthConstraint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPathLengthConstraint : bool" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="baf50-128">Ruft einen Wert ab, der angibt, ob für ein Zertifikat eine Beschränkung der Anzahl zulässiger Pfadebenen vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="baf50-128">Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.</span></span></summary>
        <value><span data-ttu-id="baf50-129"><see langword="true" />, wenn für das Zertifikat eine Beschränkung der Anzahl zulässiger Pfadebenen vorhanden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="baf50-129"><see langword="true" /> if the certificate has a restriction on the number of path levels it allows, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-130">Ein Zertifikat Aussteller kann die Anzahl der Ebenen in einem Zertifikat Pfad einschränken.</span><span class="sxs-lookup"><span data-stu-id="baf50-130">A certificate issuer can restrict the number of levels in a certificate path.</span></span> <span data-ttu-id="baf50-131">Diese Eigenschaft gibt an, ob das Zertifikat diese Einschränkung aufweist.</span><span class="sxs-lookup"><span data-stu-id="baf50-131">This property indicates whether the certificate has this restriction.</span></span> <span data-ttu-id="baf50-132">Wenn dieser Wert ist `true`, können Sie die <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> -Eigenschaft verwenden, um die zulässige Anzahl von Ebenen zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="baf50-132">If this value is `true`, you can use the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint%2A> property to determine the number of levels allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="baf50-133">Im folgenden Codebeispiel wird veranschaulicht, wie der persönliche Zertifikat Speicher eines Benutzers geöffnet und Informationen zu den einzelnen Zertifikaten im Speicher angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-133">The following code example demonstrates how to open a user's personal certificate store and display information about each certificate in the store.</span></span>  <span data-ttu-id="baf50-134">In diesem Beispiel wird <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> die-Klasse verwendet, um die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="baf50-134">This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.</span></span>  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="baf50-135">Die Erweiterung kann nicht decodiert werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-135">The extension cannot be decoded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathLengthConstraint">
      <MemberSignature Language="C#" Value="public int PathLengthConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PathLengthConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathLengthConstraint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PathLengthConstraint { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PathLengthConstraint : int" Usage="System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="baf50-136">Ruft die Anzahl der in einem Zertifikatspfad zulässigen Ebenen ab.</span><span class="sxs-lookup"><span data-stu-id="baf50-136">Gets the number of levels allowed in a certificate's path.</span></span></summary>
        <value><span data-ttu-id="baf50-137">Eine ganze Zahl, die die Anzahl der in einem Zertifikatspfad zulässigen Ebenen angibt.</span><span class="sxs-lookup"><span data-stu-id="baf50-137">An integer indicating the number of levels allowed in a certificate's path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="baf50-138">Wenn ein Zertifikat eine Einschränkung für die Anzahl der zulässigen Pfad Ebenen aufweist, gibt diese Eigenschaft an, wie viele Ebenen zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="baf50-138">If a certificate has a constraint on the number of path levels it allows, this property indicates how many levels are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="baf50-139">Im folgenden Codebeispiel wird veranschaulicht, wie der persönliche Zertifikat Speicher eines Benutzers geöffnet und Informationen zu den einzelnen Zertifikaten im Speicher angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-139">The following code example demonstrates how to open a user's personal certificate store and display information about each certificate in the store.</span></span>  <span data-ttu-id="baf50-140">In diesem Beispiel wird <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> die-Klasse verwendet, um die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="baf50-140">This example uses the <xref:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension> class to display the information.</span></span>  
  
 [!code-cpp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/CS/sample.cs#1)]
 [!code-vb[Cryptography.X509Certificates.X509Extensions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Extensions/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="baf50-141">Die Erweiterung kann nicht decodiert werden.</span><span class="sxs-lookup"><span data-stu-id="baf50-141">The extension cannot be decoded.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
