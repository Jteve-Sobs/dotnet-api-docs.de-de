<Type Name="HMACSHA384" FullName="System.Security.Cryptography.HMACSHA384">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95774be99a2bc91e6ab520c421de580645b78404" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497794" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HMACSHA384 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACSHA384 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACSHA384" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACSHA384&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACSHA384 : System::Security::Cryptography::HMAC" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d956e-101">Berechnet unter Verwendung der <see cref="T:System.Security.Cryptography.SHA384" />-Hashfunktion einen Hash-Nachrichtenauthentifizierungscode (HMAC, Hash-based Message Authentication Code).</span>
      <span class="sxs-lookup">
        <span data-stu-id="d956e-101">Computes a Hash-based Message Authentication Code (HMAC) using the <see cref="T:System.Security.Cryptography.SHA384" /> hash function.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d956e-102"><xref:System.Security.Cryptography.HMACSHA384> ist ein Typ schlüsselgebundenen Hashalgorithmus, der den SHA-384-Hashfunktion ist und als einen hashbasierten Message Authentication Code (HMAC) verwendet.</span><span class="sxs-lookup"><span data-stu-id="d956e-102"><xref:System.Security.Cryptography.HMACSHA384> is a type of keyed hash algorithm that is constructed from the SHA-384 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="d956e-103">Der HMAC-Prozess kombiniert einen geheimen Schlüssel mit den Nachrichtendaten und erstellt einen Hashwert für das Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="d956e-103">The HMAC process mixes a secret key with the message data and hashes the result.</span></span> <span data-ttu-id="d956e-104">Der Hashwert ist gemischt mit dem geheimen Schlüssel erneut und klicken Sie dann ein zweites Mal hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="d956e-104">The hash value is mixed with the secret key again, and then hashed a second time.</span></span> <span data-ttu-id="d956e-105">Die Ausgabehash ist 384 Bits lang sein.</span><span class="sxs-lookup"><span data-stu-id="d956e-105">The output hash is 384 bits long.</span></span>  
  
 <span data-ttu-id="d956e-106">Ein HMAC kann verwendet werden, um zu bestimmen, ob eine Nachricht über einen unsicheren Kanal gesendet, manipuliert wurde, vorausgesetzt, dass Sender und Empfänger einen gemeinsamen geheimen Schlüssel besitzen.</span><span class="sxs-lookup"><span data-stu-id="d956e-106">An HMAC can be used to determine whether a message sent over a nonsecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="d956e-107">Der Absender berechnet den Hashwert für die ursprünglichen Daten und sendet die ursprünglichen Daten und den Hashwert als eine einzelne Nachricht.</span><span class="sxs-lookup"><span data-stu-id="d956e-107">The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</span></span> <span data-ttu-id="d956e-108">Der Empfänger berechnet den Hashwert für die empfangene Nachricht und überprüft, ob der berechnete HMAC den übertragenen HMAC übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="d956e-108">The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</span></span>  
  
 <span data-ttu-id="d956e-109">Wenn der ursprüngliche und der berechnete Hashwerte übereinstimmen, wird die Nachricht authentifiziert.</span><span class="sxs-lookup"><span data-stu-id="d956e-109">If the original and computed hash values match, the message is authenticated.</span></span> <span data-ttu-id="d956e-110">Wenn sie nicht übereinstimmen, wurde die Daten oder der Hashwert geändert.</span><span class="sxs-lookup"><span data-stu-id="d956e-110">If they do not match, either the data or the hash value has been changed.</span></span> <span data-ttu-id="d956e-111">HMACs bieten Schutz vor Manipulation, da Wissen des geheimen Schlüssels erforderlich ist, ändern Sie die Nachricht, und reproduzieren den richtigen Hashwert.</span><span class="sxs-lookup"><span data-stu-id="d956e-111">HMACs provide security against tampering because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span>  
  
 <span data-ttu-id="d956e-112"><xref:System.Security.Cryptography.HMACSHA384> akzeptiert alle Schlüsselgrößen und erzeugt eine Hashsequenz, die von 384 Bits lang ist.</span><span class="sxs-lookup"><span data-stu-id="d956e-112"><xref:System.Security.Cryptography.HMACSHA384> accepts all key sizes and produces a hash sequence that is 384 bits long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d956e-113">Im folgende Beispiel wird gezeigt, wie zum Signieren einer Datei mithilfe der <xref:System.Security.Cryptography.HMACSHA384> Objekt, und klicken Sie dann überprüfen, ob die Datei.</span><span class="sxs-lookup"><span data-stu-id="d956e-113">The following example shows how to sign a file by using the <xref:System.Security.Cryptography.HMACSHA384> object, and then how to verify the file.</span></span>  
  
 [!code-cpp[HMACSHA384#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACSHA384/CPP/hmacsha384.cpp#1)]
 [!code-csharp[HMACSHA384#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACSHA384/CS/hmacsha384.cs#1)]
 [!code-vb[HMACSHA384#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACSHA384/vb/hmacsha384.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d956e-114">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.HMACSHA384" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACSHA384 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACSHA384();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d956e-115">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.HMACSHA384" />-Klasse mit einem zufällig erzeugten Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class by using a randomly generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d956e-116">Dieser Konstruktor verwendet einen zufällig generierten Schlüssel 64 Byte.</span><span class="sxs-lookup"><span data-stu-id="d956e-116">This constructor uses a 64-byte, randomly generated key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACSHA384 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACSHA384(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d956e-117">Der geheime Schlüssel für die <see cref="T:System.Security.Cryptography.HMACSHA384" />-Verschlüsselung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-117">The secret key for <see cref="T:System.Security.Cryptography.HMACSHA384" /> encryption.</span>
          </span>
          <span data-ttu-id="d956e-118">Der Schlüssel kann eine beliebige Länge aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-118">The key can be any length.</span>
          </span>
          <span data-ttu-id="d956e-119">Allerdings ist die empfohlene Größe 128 Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-119">However, the recommended size is 128 bytes.</span>
          </span>
          <span data-ttu-id="d956e-120">Wenn der Schlüssel eine Länge von mehr als 128 Byte aufweist, wird aus ihm jedoch unter Verwendung des SHA-384-Hashalgorithmus ein 128-Byte-Schlüssel abgeleitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-120">If the key is more than 128 bytes long, it is hashed (using SHA-384) to derive a 128-byte key.</span>
          </span>
          <span data-ttu-id="d956e-121">Wenn kürzer als 128 Byte, wird sie auf 128 Byte aufgefüllt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-121">If it is less than 128 bytes long, it is padded to 128 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d956e-122">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.HMACSHA384" />-Klasse unter Verwendung der angegebenen Schlüsseldaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> class by using the specified key data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d956e-123">Ein Beispiel dafür, wie dieser Konstruktor verwendet, finden Sie die <xref:System.Security.Cryptography.HMACSHA384> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d956e-123">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA384> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d956e-124">Der <paramref name="key" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-124">The <paramref name="key" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">To be added.</param>
        <param name="ib">To be added.</param>
        <param name="cb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSize">
      <MemberSignature Language="C#" Value="public override int HashSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.HashSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HashSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProduceLegacyHmacValues">
      <MemberSignature Language="C#" Value="public bool ProduceLegacyHmacValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProduceLegacyHmacValues" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ProduceLegacyHmacValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProduceLegacyHmacValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d956e-125">Stellt eine Methode zur Umgehung des Problems mit der [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]-Implementierung des <see cref="T:System.Security.Cryptography.HMACSHA384" />-Algorithmus bereit, die mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]-Implementierung des Algorithmus nicht übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-125">Provides a workaround for the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] implementation of the <see cref="T:System.Security.Cryptography.HMACSHA384" /> algorithm, which is inconsistent with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] implementation of the algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d956e-126">
            <see langword="true" />, um [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]-Anwendungen für die Interaktion mit [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]-Anwendungen zu aktivieren; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d956e-126">
              <see langword="true" /> to enable [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] applications to interact with [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] applications; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d956e-127">Der Zweck der <xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A> boolesche Eigenschaft ist die Aktivierung [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Anwendungen für die Interaktion mit [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="d956e-127">The purpose of the <xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A> Boolean property is to enable [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] applications to interact with [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] applications.</span></span> <span data-ttu-id="d956e-128">Bei Festlegung dieser Eigenschaft auf `true`, <xref:System.Security.Cryptography.HMACSHA384> Objekt erzeugt, die Werte, die von produzierten Werte entsprechen, den [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d956e-128">When you set this property to `true`, the <xref:System.Security.Cryptography.HMACSHA384> object produces values that match the values produced by the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span> <span data-ttu-id="d956e-129">Diese Eigenschaft sollte nur einmal festgelegt werden, nach der Erstellung des HMAC-Objekts.</span><span class="sxs-lookup"><span data-stu-id="d956e-129">You should set this property only once after you create your HMAC object.</span></span> <span data-ttu-id="d956e-130">Sie müssen Ihren Schlüssel danach zurücksetzen wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="d956e-130">You will need to reset your key afterwards, as shown in the following example.</span></span>  
  
```  
public static void Test()  
    {  
    HMACSHA384 hmac = new HMACSHA384();  
    hmac.ProduceLegacyHmacValues = true;  
    hmac.Key = // ...Get the HMAC key.  
    // ...  
    // Use the HMAC algorithm.  
    // ...  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACSHA384.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>