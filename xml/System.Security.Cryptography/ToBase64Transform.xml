<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToBase64Transform.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b09c2eccabf095e70980b37d9972ff4e92319ced.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09c2eccabf095e70980b37d9972ff4e92319ced</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> to base 64.</source>
          <target state="translated">Konvertiert einen <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> in Base-64.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</source>
          <target state="translated">Base 64 Content-Transfer-Encoding stellt beliebige Bit Sequenzen in einer Form, die nicht interaktive Workflowdienste ist lesbar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>The following code example demonstrates how to use members of the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Sie Mitglieder der der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Immer <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A&gt;</ph> property to determine if the current transform can be reused.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Transformation wiederverwendet werden kann.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>Gets a value that indicates whether multiple blocks can be transformed.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob mehrere Blöcke transformiert werden können.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Immer <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>In the current implementation, only one block can be transformed at a time, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">In der aktuellen Implementierung kann nur ein Block zu einem Zeitpunkt transformiert werden, daher ist diese Eigenschaft stets <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A&gt;</ph> method to verify that multiple blocks can be transformed.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A&gt;</ph> Methode, um sicherzustellen, dass mehrere Blöcke transformiert werden können.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Gibt alle vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>This method is a simple call to <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode ist ein einfacher Aufruf <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Aufrufen von <ph id="ph1">`Dispose`</ph> können Ressourcen von der <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> neu für andere Zwecke reserviert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`Dispose`</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.Clear%2A&gt;</ph> method to free up unused resources by the current transform.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.Clear%2A&gt;</ph> Methode durch die aktuelle Transformation nicht verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Clear">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ToBase64Transform">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Gibt alle von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Gibt alle von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">`Dispose`</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">`Dispose`</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">`Dispose`</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">`Dispose`</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">`Dispose()`</ph> Methode und die <ph id="ph2">`Finalize`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit der disposing-Parameter auf festgelegt <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> Ruft <ph id="ph2">`Dispose`</ph> mit disposing auf <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.Finalize">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> verwendeten, nicht verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">Ruft die Größe des Eingabeblocks ab.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">Die Größe des Eingabedatenblocks in Bytes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The input block size for this transformation is 3 bytes.</source>
          <target state="translated">Für diese Transformation die Größe des Eingabeblocks beträgt 3 Bytes.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A&gt;</ph> property to retrieve the input block size of the current transform.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A&gt;</ph> Eigenschaft, um die Eingabeblockgröße der aktuellen Transformation abzurufen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">Ruft die Größe des Ausgabeblocks ab.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">Die Größe des Ausgabedatenblocks in Bytes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The output block size for this transformation is 4 bytes.</source>
          <target state="translated">Die Größe des Ausgabeblocks für diese Transformation ist 4 Bytes.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A&gt;</ph> property to create a new byte array with the size of the output block size.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A&gt;</ph> Eigenschaft, um ein neues Bytearray mit der Größe der die Größe des Ausgabeblocks zu erstellen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to compute to base 64.</source>
          <target state="translated">Die in Base-64 zu konvertierende Eingabe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">Der Offset im Eingabebytearray, ab dem Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to which to write the result.</source>
          <target state="translated">Die Ausgabe, in die das Ergebnis geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</source>
          <target state="translated">Wandelt den angegebenen Bereich des Eingabebytearrays in Base-64 um und kopiert das Ergebnis in den angegebenen Bereich des Ausgabebytearrays.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">Die Anzahl der geschriebenen Bytes.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse ist ein Blockalgorithmus, der Eingabe-Blöcke von 3 Bytes verarbeitet und Ausgabeblöcke von 4 Bytes erstellt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> method transforms an input block of 24 bits into 32 bits of character data.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> -Methode wandelt einen Eingabeblock mit 24 Bits in 32 Bits der Zeichendaten.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</source>
          <target state="translated">Sie müssen Eingabe-3 Byte-Grenzen an 4-Byte-Ausgabe Begrenzungen verwalten, um die Transformation Block übereinstimmen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> method to iterate through <ph id="ph2">`inputBytes`</ph> transforming by <ph id="ph3">`blockSize`</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A&gt;</ph> Methode zum iterieren durch <ph id="ph2">`inputBytes`</ph> Transformieren von <ph id="ph3">`blockSize`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">Das aktuelle <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>-Objekt wurde bereits freigegeben.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The data size is not valid.</source>
          <target state="translated">Die Datengröße ist ungültig.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter contains an invalid offset length.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter enthält eine ungültige Offsetlänge.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter contains an invalid value.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph>-Parameter hat einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter requires a non-negative number.</source>
          <target state="translated">Für den <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist eine nicht negative Zahl erforderlich.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to convert to base 64.</source>
          <target state="translated">Die in Base-64 zu konvertierende Eingabe.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Converts the specified region of the specified byte array to base 64.</source>
          <target state="translated">Wandelt den angegebenen Bereich des angegebenen Bytearrays in Base-64 um.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed base 64 conversion.</source>
          <target state="translated">Die berechnete Base-64-Konvertierung.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A&gt;</ph> method to transform the final block of data.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A&gt;</ph> Methode, um den letzten Block von Daten zu transformieren.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">Das aktuelle <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ToBase64Transform" /&gt;</ph>-Objekt wurde bereits freigegeben.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter contains an invalid offset length.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter enthält eine ungültige Offsetlänge.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter contains an invalid value.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph>-Parameter hat einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter requires a non-negative number.</source>
          <target state="translated">Für den <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist eine nicht negative Zahl erforderlich.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>