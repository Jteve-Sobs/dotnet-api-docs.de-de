<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae618a1eace51e683257a063d51d77e47ce1fec9" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82329060" /></Metadata><TypeSignature Language="C#" Value="public class ToBase64Transform : IDisposable, System.Security.Cryptography.ICryptoTransform" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform, IDisposable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : IDisposable, System::Security::Cryptography::ICryptoTransform" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type ToBase64Transform = class&#xA;    interface IDisposable&#xA;    interface ICryptoTransform" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ToBase64Transform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1f3f4-101">Konvertiert einen <see cref="T:System.Security.Cryptography.CryptoStream" /> in Base-64.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-102">Base 64 Content-Transfer-Encoding stellt beliebige Bitsequenzen in einem Formular dar, das nicht f√ºr Menschen lesbar ist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-103">Im folgenden Codebeispiel wird veranschaulicht, wie Member der <xref:System.Security.Cryptography.ToBase64Transform>-Klasse verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-104">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-104">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f3f4-105">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-106">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-106">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f3f4-107">Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-107">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="1f3f4-108">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-108">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f3f4-109">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A>-Eigenschaft aufgerufen wird, um zu bestimmen, ob die aktuelle Transformation wieder verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-109">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="1f3f4-110">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-110">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-111">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-111">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f3f4-112">Ruft einen Wert ab, der angibt, ob mehrere Bl√∂cke transformiert werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-112">Gets a value that indicates whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="1f3f4-113">Immer <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-113">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-114">In der aktuellen Implementierung kann jeweils nur ein Block transformiert werden, sodass diese Eigenschaft immer `false`wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-114">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-115">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A>-Methode aufgerufen wird, um zu √ºberpr√ºfen, ob mehrere Bl√∂cke transformiert werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-115">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="1f3f4-116">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-116">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-117">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-117">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="toBase64Transform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f3f4-118">Gibt alle von <see cref="T:System.Security.Cryptography.ToBase64Transform" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-118">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-119">Bei dieser Methode handelt es sich um einen einfachen Aufruf<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-119">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1f3f4-120">Durch Aufrufen von `Dispose` k√∂nnen die Ressourcen, die vom <xref:System.Security.Cryptography.ToBase64Transform> verwendet werden, f√ºr andere Zwecke neu zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-120">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="1f3f4-121">Weitere Informationen zu `Dispose`finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1f3f4-121">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-122">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A>-Methode aufgerufen wird, um nicht verwendete Ressourcen von der aktuellen Transformation freizugeben.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-122">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="1f3f4-123">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-123">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-124">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-124">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f3f4-125">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.ToBase64Transform" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-125">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="toBase64Transform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f3f4-126">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.ToBase64Transform" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-126">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-127">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.ToBase64Transform> nicht mehr ben√∂tigen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-127">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="1f3f4-128">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.ToBase64Transform> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-128">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="1f3f4-129">Nachdem Sie `Dispose`aufgerufen haben, m√ºssen Sie alle Verweise auf die <xref:System.Security.Cryptography.ToBase64Transform> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Security.Cryptography.ToBase64Transform> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-129">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="1f3f4-130">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f3f4-131">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.ToBase64Transform> freigeben.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-131">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="1f3f4-132">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.ToBase64Transform>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toBase64Transform.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1f3f4-133"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, um ausschlie√ülich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1f3f4-134">Gibt die von <see cref="T:System.Security.Cryptography.ToBase64Transform" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-134">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-135">Diese Methode wird von der √∂ffentlichen `Dispose()`-Methode und der `Finalize`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-135">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="1f3f4-136">`Dispose()` Ruft die gesch√ºtzte `Dispose(Boolean)` Methode auf, wobei der disposing-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-136">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="1f3f4-137">`Finalize` ruft `Dispose` auf, bei dem disposing auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-137">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="1f3f4-138">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode s√§mtliche Ressourcen frei, die f√ºr verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.ToBase64Transform> verweist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="1f3f4-139">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-139">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1f3f4-140">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-140">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1f3f4-141">Wenn Sie <see langword="Dispose(Boolean)" />√ºberschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem fr√ºheren <see langword="Dispose" />aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-141">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1f3f4-142">Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-142">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="1f3f4-143">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1f3f4-143">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-144">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-144">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="toBase64Transform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f3f4-145">Gibt die nicht verwalteten Ressourcen frei, die von <see cref="T:System.Security.Cryptography.ToBase64Transform" /> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-145">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-146">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f3f4-147">Ruft die Gr√∂√üe des Eingabeblocks ab.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-147">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="1f3f4-148">Die Gr√∂√üe des Eingabedatenblocks in Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-148">The size of the input data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-149">Die Eingabe Blockgr√∂√üe f√ºr diese Transformation betr√§gt 3 Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-149">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-150">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A>-Eigenschaft zum Abrufen der Eingabe Blockgr√∂√üe der aktuellen Transformation aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-150">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="1f3f4-151">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-151">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-152">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-152">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f3f4-153">Ruft die Gr√∂√üe des Ausgabeblocks ab.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-153">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="1f3f4-154">Die Gr√∂√üe des Ausgabedatenblocks in Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-154">The size of the output data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-155">Die Ausgabe Blockgr√∂√üe f√ºr diese Transformation betr√§gt 4 Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-155">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-156">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A>-Eigenschaft aufgerufen wird, um ein neues Bytearray mit der Gr√∂√üe der Ausgabe Blockgr√∂√üe zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-156">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="1f3f4-157">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-157">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-158">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="toBase64Transform.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f3f4-159">Gibt die nicht verwalteten Ressourcen frei, die von <see cref="T:System.Security.Cryptography.ToBase64Transform" /> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-159">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="1f3f4-160">Diese Methode wird von der √∂ffentlichen `Dispose()`-Methode und der `Finalize`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-160">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="1f3f4-161">`Dispose()` Ruft die gesch√ºtzte `Dispose(Boolean)` Methode auf, wobei der disposing-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-161">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="1f3f4-162">`Finalize` ruft `Dispose` auf, bei dem disposing auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-162">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>

<span data-ttu-id="1f3f4-163">Wenn der disposing-Parameter auf `true` gesetzt ist, gibt diese Methode alle f√ºr verwaltete Objekte reservierte Ressourcen frei, auf die diese <xref:System.Security.Cryptography.ToBase64Transform> verweist.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-163">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="1f3f4-164">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-164">This method invokes the `Dispose()` method of each referenced object.</span></span>

<span data-ttu-id="1f3f4-165">**Hinweise f√ºr Vererber:**</span><span class="sxs-lookup"><span data-stu-id="1f3f4-165">**Notes to Inheritors:**</span></span>

<span data-ttu-id="1f3f4-166">`Dispose` kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-166">`Dispose` can be called multiple times by other objects.</span></span> <span data-ttu-id="1f3f4-167">Wenn Sie `Dispose(Boolean)`√ºberschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem fr√ºheren `Dispose`aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-167">When overriding `Dispose(Boolean)`, be careful not to reference objects that have been previously disposed in an earlier call to `Dispose`.</span></span> <span data-ttu-id="1f3f4-168">Weitere Informationen zum Implementieren von `Dispose(Boolean)`finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-168">For more information about how to implement `Dispose(Boolean)`, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

<span data-ttu-id="1f3f4-169">Weitere Informationen zu `Dispose` und `Finalize`finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und √ºberschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100)).</span><span class="sxs-lookup"><span data-stu-id="1f3f4-169">For more information about `Dispose` and `Finalize`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100)).</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-170">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-170">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="toBase64Transform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="1f3f4-171">Die in Base-64 zu konvertierende Eingabe.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-171">The input to compute to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="1f3f4-172">Der Offset im Eingabebytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-172">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="1f3f4-173">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-173">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="1f3f4-174">Die Ausgabe, in die das Ergebnis geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-174">The output to which to write the result.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="1f3f4-175">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-175">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="1f3f4-176">Wandelt den angegebenen Bereich des Eingabebytearrays in Base-64 um und kopiert das Ergebnis in den angegebenen Bereich des Ausgabebytearrays.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-176">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="1f3f4-177">Die Anzahl der geschriebenen Byte</span><span class="sxs-lookup"><span data-stu-id="1f3f4-177">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f3f4-178">Bei der <xref:System.Security.Cryptography.ToBase64Transform>-Klasse handelt es sich um einen Block Algorithmus, der Eingabe Bl√∂cke von 3 Bytes verarbeitet und Ausgabe Bl√∂cke mit 4 Bytes erstellt.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-178">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="1f3f4-179">Die <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>-Methode transformiert einen Eingabe Block von 24 Bits in 32 Bits von Zeichendaten.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-179">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="1f3f4-180">Sie m√ºssen 3 Byte-Eingabe Begrenzungen bis zu 4 Byte Ausgabe Grenzen verwalten, um die Block Transformation abzugleichen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-180">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f3f4-181">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>-Methode aufgerufen wird, um `inputBytes` Transformation durch `blockSize`zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-181">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="1f3f4-182">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-182">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f3f4-183">Das aktuelle <see cref="T:System.Security.Cryptography.ToBase64Transform" />-Objekt wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-183">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f3f4-184">Die Datengr√∂√üe ist ung√ºltig.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-184">The data size is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f3f4-185">Der <paramref name="inputBuffer" />-Parameter enth√§lt eine ung√ºltige Offsetl√§nge.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-185">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
<span data-ttu-id="1f3f4-186">Oder</span><span class="sxs-lookup"><span data-stu-id="1f3f4-186">-or-</span></span> 
<span data-ttu-id="1f3f4-187">Der <paramref name="inputCount" />-Parameter enth√§lt einen ung√ºltigen Wert.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-187">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f3f4-188">Der Parameter <paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-188">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f3f4-189">F√ºr den <paramref name="inputBuffer" />-Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-189">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-190">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-190">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="toBase64Transform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="1f3f4-191">Die in Base-64 zu konvertierende Eingabe.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-191">The input to convert to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="1f3f4-192">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-192">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="1f3f4-193">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-193">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="1f3f4-194">Wandelt den angegebenen Bereich des angegebenen Bytearrays in Base-64 um.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-194">Converts the specified region of the specified byte array to base 64.</span></span></summary>
        <returns><span data-ttu-id="1f3f4-195">Die berechnete Base-64-Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-195">The computed base 64 conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f3f4-196">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A>-Methode aufgerufen wird, um den letzten Datenblock zu transformieren.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-196">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="1f3f4-197">Dieses Codebeispiel ist Teil eines gr√∂√üeren Beispiels, das f√ºr die <xref:System.Security.Cryptography.ToBase64Transform>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-197">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f3f4-198">Das aktuelle <see cref="T:System.Security.Cryptography.ToBase64Transform" />-Objekt wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-198">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f3f4-199">Der <paramref name="inputBuffer" />-Parameter enth√§lt eine ung√ºltige Offsetl√§nge.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-199">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
<span data-ttu-id="1f3f4-200">Oder</span><span class="sxs-lookup"><span data-stu-id="1f3f4-200">-or-</span></span> 
<span data-ttu-id="1f3f4-201">Der <paramref name="inputCount" />-Parameter enth√§lt einen ung√ºltigen Wert.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-201">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f3f4-202">Der Parameter <paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-202">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f3f4-203">F√ºr den <paramref name="inputBuffer" />-Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1f3f4-203">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="1f3f4-204">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="1f3f4-204">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
