<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e285ca1271a28895045fb33d43ebf5e6709370cf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d0a8b-101">Implementiert mithilfe eines auf <see cref="T:System.Security.Cryptography.HMACSHA1" /> basierenden Generators für Pseudozufallszahlen die kennwortbasierte Schlüsselableitungsfunktion PBKDF2.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0a8b-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> akzeptiert ein Kennwort, eine Salt und eine Anzahl von Iterationen und generiert dann Schlüsseln durch Aufrufe der <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="d0a8b-103">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-104">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-105">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-106">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-107">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-108">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-109">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-110">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-111">Im folgenden Codebeispiel wird mit der <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Tasten für die Klasse, um zwei identische erstellen die <xref:System.Security.Cryptography.TripleDES> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="d0a8b-112">Klicken Sie dann verschlüsselt, und einige Daten mit dem Schlüssel entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0a8b-113">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="d0a8b-114">Das zum Ableiten des Schlüssels verwendete Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-114">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="d0a8b-115">Die zum Ableiten des Schlüssels verwendete Schlüsselsalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-115">The key salt used to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-116">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse mithilfe des Kennworts und des Salts zum Ableiten des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-117">Die Saltgröße muss 8 Bytes groß.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-117">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="d0a8b-118">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-118">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-119">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-119">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-120">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-120">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-121">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-121">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-122">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-122">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-123">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-123">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-124">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-124">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-125">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-125">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-126">Im folgenden Codebeispiel wird mit der <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Tasten für die Klasse, um zwei identische erstellen die <xref:System.Security.Cryptography.TripleDES> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-126">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="d0a8b-127">Klicken Sie dann verschlüsselt, und einige Daten mit dem Schlüssel entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-127">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-128">Die angegebene Saltgröße ist kleiner als 8 Bytes, oder die Iterationsanzahl ist kleiner als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-128">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-129">Das Kennwort oder die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-129">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="d0a8b-130">Das zum Ableiten des Schlüssels verwendete Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-130">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="d0a8b-131">Die Größe der Zufallssalt, die von der Klasse generiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-131">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-132">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse mithilfe des Kennworts und der Saltgröße zum Ableiten des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-133">Die Saltgröße muss 8 Bytes groß.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-133">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="d0a8b-134">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-134">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-135">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-135">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-136">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-136">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-137">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-137">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-138">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-138">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-139">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-139">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-140">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-140">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-141">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-141">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-142">Die angegebene Saltgröße ist kleiner als 8 Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-142">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-143">Das Kennwort oder die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-143">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="d0a8b-144">Das zum Ableiten des Schlüssels verwendete Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-144">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="d0a8b-145">Die zum Ableiten des Schlüssels verwendete Schlüsselsalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-145">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="d0a8b-146">Die Anzahl der Iterationen für die Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-146">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-147">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse mithilfe des Kennworts, der Salt und der Anzahl an Iterationen zum Ableiten des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-148">Die Saltgröße muss 8 Bytes Groß und die Anzahl der Iterationen muss größer als 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-148">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="d0a8b-149">Die empfohlene Mindestanzahl von Iterationen ist 1000.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-149">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="d0a8b-150">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-150">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-151">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-151">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-152">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-152">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-153">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-153">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-154">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-154">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-155">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-155">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-156">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-156">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-157">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-157">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-158">Die angegebene Saltgröße ist kleiner als 8 Bytes, oder die Iterationsanzahl ist kleiner als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-158">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-159">Das Kennwort oder die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-159">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="d0a8b-160">Das zum Ableiten des Schlüssels verwendete Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-160">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="d0a8b-161">Die zum Ableiten des Schlüssels verwendete Schlüsselsalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-161">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="d0a8b-162">Die Anzahl der Iterationen für die Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-162">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-163">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse mithilfe des Kennworts, der Salt und der Anzahl an Iterationen zum Ableiten des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-163">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-164">Die Saltgröße muss 8 Bytes Groß und die Anzahl der Iterationen muss größer als 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-164">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="d0a8b-165">Die empfohlene Mindestanzahl von Iterationen ist 1000.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-165">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="d0a8b-166">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-166">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-167">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-167">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-168">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-168">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-169">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-169">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-170">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-170">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-171">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-171">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-172">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-172">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-173">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-173">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-174">Im folgenden Codebeispiel wird mit der <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Tasten für die Klasse, um zwei identische erstellen die <xref:System.Security.Cryptography.TripleDES> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-174">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="d0a8b-175">Klicken Sie dann verschlüsselt, und einige Daten mit dem Schlüssel entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-175">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-176">Die angegebene Saltgröße ist kleiner als 8 Bytes, oder die Iterationsanzahl ist kleiner als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-176">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-177">Das Kennwort oder die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-177">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="d0a8b-178">Das zum Ableiten des Schlüssels verwendete Kennwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-178">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="d0a8b-179">Die Größe der Zufallssalt, die von der Klasse generiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-179">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="d0a8b-180">Die Anzahl der Iterationen für die Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-180">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-181">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse mithilfe des Kennworts, einer Saltgröße und der Anzahl an Iterationen zum Ableiten des Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-181">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-182">Die Saltgröße muss 8 Bytes Groß und die Anzahl der Iterationen muss größer als 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-182">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="d0a8b-183">Die empfohlene Mindestanzahl von Iterationen ist 1000.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-183">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="d0a8b-184">RFC 2898 enthält Methoden zum Erstellen von Schlüssel und Initialisierungsvektor (IV) aus einem Kennwort und den Salt-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-184">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="d0a8b-185">Sie können eine kennwortbasierte Schlüsselableitungsfunktion PBKDF2 zum Ableiten von Schlüsseln mit pseudozufälligen Schlüsselbytes-Funktion, die Schlüssel des zu generierenden praktisch unbegrenzte Länge ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-185">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="d0a8b-186">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse kann verwendet werden, um einen abgeleiteten Schlüssel aus einem base-Schlüssel und andere Parameter zu generieren.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-186">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="d0a8b-187">In einer Funktion kennwortbasierte schlüsselableitung der base-Schlüssel ist ein Kennwort und die anderen Parameter sind salt-Wert und eine Anzahl von Iterationen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-187">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="d0a8b-188">Weitere Informationen zu PBKDF2 finden Sie unter RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," verfügbar, auf die [Request for Comments-Website](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="d0a8b-188">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="d0a8b-189">Vollständige Informationen finden Sie in Abschnitt 5.2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="d0a8b-189">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0a8b-190">Nie hartcodieren ein Kennwort im Quellcode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-190">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="d0a8b-191">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden, mithilfe der [Ildasm.exe (IL-Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), mit einem Hexadezimal-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-191">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-192">Die angegebene Saltgröße ist kleiner als 8 Bytes, oder die Iterationsanzahl ist kleiner als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-192">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-193">Das Kennwort oder die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-193">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0a8b-194">
            <paramref name="iterations" /> liegt außerhalb des Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-194">
              <paramref name="iterations" /> is out of range.</span>
          </span>
          <span data-ttu-id="d0a8b-195">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-195">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="saltSize">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="d0a8b-196">Der Name des Algorithmus, für den der Schlüssel abgeleitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-196">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="d0a8b-197">Der Name des Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-197">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="d0a8b-198">Die Größe des abzuleitenden Schlüssels in Bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-198">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="d0a8b-199">Der zum Ableiten des Schlüssels zu verwendende Initialisierungsvektor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-199">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-200">Leitet einen kryptografischen Schlüssel vom <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-200">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0a8b-201">Der abgeleitete Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-201">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-202">Diese Funktion ist ein Wrapper für die CryptoAPI-Funktion CryptDeriveKey() und dient der Interoperabilität mit Anwendungen, die mithilfe der Crypto-API zu bieten.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-202">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="d0a8b-203">Wenn die `keySize` Parameter auf 0 Bit festgelegt ist, wird die Standard-Schlüsselgröße für den angegebenen Algorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-203">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d0a8b-204">Der <paramref name="keySize" />-Parameter ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-204">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="d0a8b-205">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-205">-or-</span>
          </span>
          <span data-ttu-id="d0a8b-206">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-206">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="d0a8b-207">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-207">-or-</span>
          </span>
          <span data-ttu-id="d0a8b-208">Der <paramref name="algname" />-Parameter ist kein gültiger Algorithmusname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-208">The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="d0a8b-209">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-209">-or-</span>
          </span>
          <span data-ttu-id="d0a8b-210">Der <paramref name="alghashname" />-Parameter ist kein gültiger Name eines Hashalgorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-210">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d0a8b-211">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-211">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-212">Gibt die von der <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-212">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-213">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die `Finalize` Methode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-213">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="d0a8b-214">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-214">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d0a8b-215">`Finalize` Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-215">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d0a8b-216">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.Rfc2898DeriveBytes> verweist.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-216">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="d0a8b-217">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-217">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d0a8b-218">
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0a8b-218">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="d0a8b-219">Zum Überschreiben <see langword="Dispose(Boolean)" />müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0a8b-219">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="d0a8b-220">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0a8b-220">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="d0a8b-221">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="d0a8b-221">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="d0a8b-222">Die Anzahl der zu generierenden pseudozufälligen Schlüsselbytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-222">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0a8b-223">Gibt den pseudozufälligen Schlüssel für dieses Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-223">Returns the pseudo-random key for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0a8b-224">Ein mit pseudozufälligen Schlüsselbytes gefülltes Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-224">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-225">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse implementiert die PBKDF2-Funktion mit einem basierenden Generators für Pseudozufallszahlen auf <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-225">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="d0a8b-226">Die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse akzeptiert ein Kennwort, eine Salt und eine Anzahl von Iterationen und generiert dann Schlüsseln durch Aufrufe der <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-226">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="d0a8b-227">Wiederholte Aufrufe dieser Methode werden nicht den gleichen Schlüssel generiert. Anhängen stattdessen zwei Aufrufe der der <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> Methode mit einer `cb` -Parameterwert `20` ist das Äquivalent eines Aufrufs der <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> Methode einmal mit einer `cb` -Parameterwert `40`.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-227">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-228">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> den Schlüssel für eine Instanz der abzurufenden Methode <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-228">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="d0a8b-229">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-229">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0a8b-230">
            <paramref name="cb" /> liegt außerhalb des Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-230">
              <paramref name="cb" /> is out of range.</span>
          </span>
          <span data-ttu-id="d0a8b-231">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-231">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0a8b-232">Ruft die Anzahl der Iterationen für die Operation ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-232">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0a8b-233">Die Anzahl der Iterationen für die Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-233">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-234">Anzahl der Szenarioiterationen ist die Anzahl der Häufigkeit, mit die ein Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-234">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="d0a8b-235">Für diese Methode sollte die Anzahl größer als 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-235">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="d0a8b-236">Die empfohlene Mindestanzahl von Iterationen ist 1000.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-236">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-237">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> Eigenschaft, um die Anzahl von Iterationen festlegt, die in die Generierung des Schlüssels angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-237">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="d0a8b-238">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-238">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0a8b-239">Die Iterationsanzahl ist kleiner als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-239">The number of iterations is less than 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0a8b-240">Setzt den Zustand der Operation zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-240">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-241">Diese Methode wird automatisch aufgerufen, wenn die Anzahl der Salt-Wert oder eine Iteration geändert wird.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-241">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0a8b-242">Im folgenden Beispiel wird die Verwendung der <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-242">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="d0a8b-243">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-243">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0a8b-244">Ruft den Salt-Wert des Schlüssels für die Operation ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-244">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0a8b-245">Der Wert der Schlüsselsalt für die Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-245">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0a8b-246">Salt-Wert, eine zufällige Gruppe von Bytes wird verwendet, um nicht autorisierte Entschlüsseln einer Nachricht, die schwieriger zu machen.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-246">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="d0a8b-247">Ein Wörterbuchangriff ist ein Angriff, in dem der Angreifer versucht, eine verschlüsselte Nachricht durch Vergleichen des verschlüsselten Werts mit der zuvor berechnete verschlüsselte Werte für den wahrscheinlichsten Schlüssel entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-247">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="d0a8b-248">Dieser Angriff erfolgt durch die Einführung von salt oder zufällige Bytes, die am Ende des Kennworts vor dem schlüsselableitung viel schwieriger.</span><span class="sxs-lookup"><span data-stu-id="d0a8b-248">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0a8b-249">Die angegebene Saltgröße ist kleiner als 8 Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-249">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0a8b-250">Die Salt ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0a8b-250">The salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>