<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PasswordDeriveBytes.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5114473ac3aded1fedb136d53f48725f47b5ea62e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114473ac3aded1fedb136d53f48725f47b5ea62e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>Derives a key from a password using an extension of the PBKDF1 algorithm.</source>
          <target state="translated">Leitet mithilfe einer Erweiterung des PBKDF1-Algorithmus einen Schlüssel von einem Kennwort ab.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>This class uses an extension of the PBKDF1 algorithm defined in the PKCS#5 v2.0 standard to derive bytes suitable for use as key material from a password.</source>
          <target state="translated">Diese Klasse verwendet eine Erweiterung des PBKDF1-Algorithmus in die PKCS #5 2.0-standard definierten geeignet für die Verwendung als Schlüsselmaterial Bytes aus einem Kennwort abgeleitet werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>The standard is documented in IETF RRC 2898.</source>
          <target state="translated">Der Standard ist in der IETF RRC 2898 dokumentiert.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Nie hartcodieren ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>Hard coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter abgerufen werden können, aus einer Assembly der <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> Tools, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie notepad.exe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>The following code example creates a key from a password using the <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> class.</source>
          <target state="translated">Das folgende Codebeispiel erstellt einen Schlüssel aus einem Kennwort mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.PasswordDeriveBytes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>The password to derive the key for.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class specifying the password and key salt to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse und gibt das Kennwort und den Salt-Wert des Schlüssels an, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>Never hard code a password within your source code.</source>
          <target state="translated">Nie Hartcodieren Sie ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>Hard-coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden die <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
          <source>The following code example creates a key from a password using the <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> class.</source>
          <target state="translated">Das folgende Codebeispiel erstellt einen Schlüssel aus einem Kennwort mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The password for which to derive the key.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class with the password and key salt to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse mit dem Kennwort und dem Salt-Wert, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Nie hartcodieren ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Hard coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter abgerufen werden können, aus einer Assembly der <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> Tools, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie notepad.exe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The password to derive the key for.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The cryptographic service provider (CSP) parameters for the operation.</source>
          <target state="translated">Die CSP-Parameter für den Vorgang.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class specifying the password, key salt, and cryptographic service provider (CSP) to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels und den CSP (Cryptographic Service Provider) an, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Never hard code a password within your source code.</source>
          <target state="translated">Nie Hartcodieren Sie ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Hard-coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> l, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden die <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> l, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The following code example creates a key from a password using the <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> class.</source>
          <target state="translated">Das folgende Codebeispiel erstellt einen Schlüssel aus einem Kennwort mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The password for which to derive the key.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>The CSP parameters for the operation.</source>
          <target state="translated">Die CSP-Parameter für die Operation.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class with the password, key salt, and cryptographic service provider (CSP) parameters to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels und den CSP-Parametern (Cryptographic Service Provider), die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Nie hartcodieren ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
          <source>Hard coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter abgerufen werden können, aus einer Assembly der <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> Tools, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie notepad.exe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>The password to derive the key for.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>The hash algorithm to use to derive the key.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>The iteration count to use to derive the key.</source>
          <target state="translated">Die Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class specifying the password, key salt, hash name, and iterations to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels, den Hashnamen und die Anzahl der Iterationen an, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>Never hard code a password within your source code.</source>
          <target state="translated">Nie Hartcodieren Sie ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden die <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
          <source>For a list of hash algorithm names, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> class.</source>
          <target state="translated">Eine Liste von Hash-Algorithmus verwendet werden soll, finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>The password for which to derive the key.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>The name of the hash algorithm for the operation.</source>
          <target state="translated">Der Name des Hashalgorithmus für die Operation.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Die Anzahl der Iterationen für die Operation.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class with the password, key salt, hash name, and number of iterations to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels, dem Hashnamen und der Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Nie hartcodieren ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>Hard coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter abgerufen werden können, aus einer Assembly der <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> Tools, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie notepad.exe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
          <source>For a list of hash algorithm names, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> class.</source>
          <target state="translated">Eine Liste von Hash-Algorithmus verwendet werden soll, finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The password to derive the key for.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The hash algorithm to use to derive the key.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The iteration count to use to derive the key.</source>
          <target state="translated">Die Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The cryptographic service provider (CSP) parameters for the operation.</source>
          <target state="translated">Die CSP-Parameter für den Vorgang.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class specifying the password, key salt, hash name, iterations, and cryptographic service provider (CSP) to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels, den Hashnamen, die Iterationen und die CSP-Parameter an, die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Never hard code a password within your source code.</source>
          <target state="translated">Nie Hartcodieren Sie ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Hard-coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter können aus einer Assembly abgerufen werden die <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie Notepad.exe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>For a list of hash algorithm names, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> class.</source>
          <target state="translated">Eine Liste von Hash-Algorithmus verwendet werden soll, finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The password for which to derive the key.</source>
          <target state="translated">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The name of the hash algorithm for the operation.</source>
          <target state="translated">Der Name des Hashalgorithmus für die Operation.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Die Anzahl der Iterationen für die Operation.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The CSP parameters for the operation.</source>
          <target state="translated">Die CSP-Parameter für die Operation.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class with the password, key salt, hash name, number of iterations, and cryptographic service provider (CSP) parameters to use to derive the key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels, dem Hashnamen, der Anzahl der Iterationen und den CSP-Parametern (Cryptographic Service Provider), die zum Ableiten des Schlüssels verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">Nie hartcodieren ein Kennwort im Quellcode.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Hard coded passwords can be retrieved from an assembly using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</source>
          <target state="translated">Hartcodierte Kennwörter abgerufen werden können, aus einer Assembly der <bpt id="p1">[</bpt>Ildasm.exe (IL-Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept> Tools, einem hex-Editor oder durch das Öffnen der Assembly in einem Text-Editor wie notepad.exe.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
          <source>For a list of hash algorithm names, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> class.</source>
          <target state="translated">Eine Liste von Hash-Algorithmus verwendet werden soll, finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The algorithm name for which to derive the key.</source>
          <target state="translated">Der Name des Algorithmus, für den der Schlüssel abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The hash algorithm name to use to derive the key.</source>
          <target state="translated">Der Name des Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The size of the key, in bits, to derive.</source>
          <target state="translated">Die Größe des abzuleitenden Schlüssels in Bits.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The initialization vector (IV) to use to derive the key.</source>
          <target state="translated">Der zum Ableiten des Schlüssels zu verwendende Initialisierungsvektor.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>Derives a cryptographic key from the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> object.</source>
          <target state="translated">Leitet einen kryptografischen Schlüssel vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The derived key.</source>
          <target state="translated">Der abgeleitete Schlüssel.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</source>
          <target state="translated">Diese Funktion ist ein Wrapper für die CryptoAPI-Funktion CryptDeriveKey() und dient der Interoperabilität mit Anwendungen, die mithilfe der Crypto-API zu bieten.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>If the <ph id="ph1">`keySize`</ph> parameter is set to 0 bits, the default key size for the specified algorithm is used.</source>
          <target state="translated">Wenn die <ph id="ph1">`keySize`</ph> Parameter auf 0 Bit festgelegt ist, wird die Standard-Schlüsselgröße für den angegebenen Algorithmus verwendet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> parameter is incorrect.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph>-Parameter ist ungültig.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="algname" /&gt;</ph> parameter is not a valid algorithm name.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="algname" /&gt;</ph>-Parameter ist kein gültiger Algorithmusname.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph> parameter is not a valid hash algorithm name.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph>-Parameter ist kein gültiger Name eines Hashalgorithmus.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /&gt;</ph>-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">`Dispose()`</ph> Methode und die <ph id="ph2">`Finalize`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> Ruft <ph id="ph2">`Dispose`</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.Security.Cryptography.PasswordDeriveBytes&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
          <source>The number of pseudo-random key bytes to generate.</source>
          <target state="translated">Die Anzahl der zu generierenden pseudozufälligen Schlüsselbytes.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
          <source>Returns pseudo-random key bytes.</source>
          <target state="translated">Gibt pseudozufällige Schlüsselbytes zurück.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
          <source>A byte array filled with pseudo-random key bytes.</source>
          <target state="translated">Ein mit pseudozufälligen Schlüsselbytes gefülltes Bytearray.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
          <source>This method can create any number of pseudo-random bytes.</source>
          <target state="translated">Diese Methode kann eine beliebige Anzahl von Bytes pseudozufälligen Schlüsselbytes erstellen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
          <source>However, the strength of the byte sequence is limited by the number of bytes in the hash output.</source>
          <target state="translated">Allerdings ist die Stärke der Bytesequenz durch die Anzahl der Bytes in der Hashausgabe beschränkt.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
          <source>Gets or sets the name of the hash algorithm for the operation.</source>
          <target state="translated">Ruft den Namen des Hashalgorithmus für die Operation ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
          <source>The name of the hash algorithm for the operation.</source>
          <target state="translated">Der Name des Hashalgorithmus für die Operation.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
          <source>The name of the hash value is fixed and an attempt is made to change this value.</source>
          <target state="translated">Der Name des Hashwerts ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
          <source>Gets or sets the number of iterations for the operation.</source>
          <target state="translated">Ruft die Anzahl der Iterationen für die Operation ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
          <source>The number of iterations for the operation.</source>
          <target state="translated">Die Anzahl der Iterationen für die Operation.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
          <source>The number of iterations is fixed and an attempt is made to change this value.</source>
          <target state="translated">Die Anzahl der Iterationen ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
          <source>The property cannot be set because its value is out of range.</source>
          <target state="translated">Die Eigenschaft kann nicht festgelegt werden, da ihr Wert außerhalb des gültigen Bereichs liegt.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
          <source>This property requires a non-negative number.</source>
          <target state="translated">Für diese Eigenschaft ist eine nicht negative Zahl erforderlich.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.PasswordDeriveBytes.Reset">
          <source>Resets the state of the operation.</source>
          <target state="translated">Setzt den Zustand der Operation zurück.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>Gets or sets the key salt value for the operation.</source>
          <target state="translated">Ruft den Salt-Wert des Schlüssels für die Operation ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>The key salt value for the operation.</source>
          <target state="translated">Der Wert der Schlüsselsalt für die Operation.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</source>
          <target state="translated">Ein Wörterbuchangriff ist ein Angriff, in dem der Angreifer versucht, eine verschlüsselte Nachricht durch Vergleichen des verschlüsselten Werts mit der zuvor berechnete verschlüsselte Werte für den wahrscheinlichsten Schlüssel entschlüsselt.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>This attack is made much more difficult by the introduction of random bytes at the end of the password before the key derivation.</source>
          <target state="translated">Dieser Angriff erfolgt durch die Einführung von zufälligen Bytes am Ende des Kennworts vor dem schlüsselableitung viel schwieriger.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>These random bytes are known as salt.</source>
          <target state="translated">Diese zufälligen Bytes werden als Salt bezeichnet.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
          <source>The key salt value is fixed and an attempt is made to change this value.</source>
          <target state="translated">Der Salt-Wert des Schlüssels ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>