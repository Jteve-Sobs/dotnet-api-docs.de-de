<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e7a2bebc8e374af7b89b4dde96eb372be1813ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37630635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" />
  <TypeSignature Language="F#" Value="type ProtectedMemory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides methods for protecting and unprotecting memory. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse ermöglicht den Zugriff auf die Data Protection API (DPAPI) in Windows XP und höher verfügbar. Dies ist ein Dienst, der vom Betriebssystem bereitgestellt wird, und erfordert keine zusätzliche Bibliotheken. Es bietet eine Verschlüsselung für vertrauliche Daten im Arbeitsspeicher.  
  
 Die Klasse besteht aus zwei Wrapper für die nicht verwaltete DPAPI, <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> und <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>. Diese beiden Methoden können zum Verschlüsseln und Entschlüsseln von Daten im Arbeitsspeicher verwendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie den Schutz von Daten verwenden.  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Protect (userData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">The byte array containing data in memory to protect. The array must be a multiple of 16 bytes.</param>
        <param name="scope">One of the enumeration values that specifies the scope of memory protection.</param>
        <summary>Protects the specified data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, um Daten im Arbeitsspeicher zu schützen. Beachten Sie, dass die Methode sich nicht auf eine Kopie der Daten macht, aber das Bytearray direktes verschlüsselt. Die `userData` Parameter 16 Byte Länge oder ein Vielfaches von 16 Bytes sein.  
  
 Unterstützung für diese Methode ist in Windows XP und höher verfügbar.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, Schutz von Daten verwenden.  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="userData" /> must be 16 bytes in length or in multiples of 16 bytes.</exception>
        <exception cref="T:System.NotSupportedException">The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Unprotect (encryptedData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">The byte array in memory to unencrypt.</param>
        <param name="scope">One of the enumeration values that specifies the scope of memory protection.</param>
        <summary>Unprotects data in memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, zum Entschlüsseln von Daten im Arbeitsspeicher, die verschlüsselt wurde mithilfe der <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> Methode.  
  
 Unterstützung für diese Methode ist in Windows XP und höher verfügbar.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie den Schutz von Daten verwenden.  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="encryptedData" /> is empty.  -or-  This call was not implemented.  -or-  NTSTATUS contains an error.</exception>
      </Docs>
    </Member>
  </Members>
</Type>