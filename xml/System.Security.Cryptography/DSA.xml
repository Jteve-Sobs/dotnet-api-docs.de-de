<Type Name="DSA" FullName="System.Security.Cryptography.DSA">
  <TypeSignature Language="C#" Value="public abstract class DSA : System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DSA extends System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSA" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DSA&#xA;Inherits AsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSA abstract : System::Security::Cryptography::AsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a6d73-101">Stellt die abstrakte Basisklasse dar, von der alle Implementierungen des digitalen Signaturalgorithmus (<see cref="T:System.Security.Cryptography.DSA" />) erben müssen.</span><span class="sxs-lookup"><span data-stu-id="a6d73-101">Represents the abstract base class from which all implementations of the Digital Signature Algorithm (<see cref="T:System.Security.Cryptography.DSA" />) must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6d73-102">Sie können die <xref:System.Security.Cryptography.DSA> Klasse und abgeleitete Klassen zum Erstellen digitaler Signaturen, mit deren Hilfe die Integrität Ihrer Daten zu schützen.</span><span class="sxs-lookup"><span data-stu-id="a6d73-102">You can use the <xref:System.Security.Cryptography.DSA> class and derived classes to create digital signatures that help protect the integrity of your data.</span></span>  <span data-ttu-id="a6d73-103">Die <xref:System.Security.Cryptography.DSACryptoServiceProvider> stellt eine Implementierung dieser Klasse bereit.</span><span class="sxs-lookup"><span data-stu-id="a6d73-103">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> provides an implementation of this class.</span></span>  
  
 <span data-ttu-id="a6d73-104">Um ein System öffentlichem Schlüssel zum digitalen Signieren eine Nachricht zu verwenden, wendet der Absender zunächst eine Hashfunktion auf die Nachricht an einen Nachrichtenhash zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a6d73-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="a6d73-105">Der Absender verschlüsselt klicken Sie dann den Message Digest mit dem privaten Schlüssel des Absenders, zum Erstellen des Absenders persönliche Signatur.</span><span class="sxs-lookup"><span data-stu-id="a6d73-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="a6d73-106">Nach dem Empfang der Nachricht und der Signatur wird der Empfänger entschlüsselt die Signatur mit der öffentlichen Schlüssel des Absenders, Message Digest wiederherzustellen und die Nachricht mithilfe des gleichen Hashalgorithmus, den der Absender verwendet.</span><span class="sxs-lookup"><span data-stu-id="a6d73-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="a6d73-107">Wenn der Message-Digest, dass der Empfänger genau Übereinstimmungen berechnet Message Digest vom Absender empfangen wurde, kann der Empfänger davon ausgehen, dass die Nachricht bei der Übertragung nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="a6d73-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="a6d73-108">Beachten Sie, dass eine Signatur von jedem überprüft werden kann, da der öffentliche Schlüssel des Absenders allgemein bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="a6d73-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
 <span data-ttu-id="a6d73-109">Neuere asymmetrische Algorithmen sind verfügbar.</span><span class="sxs-lookup"><span data-stu-id="a6d73-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="a6d73-110">Erwägen Sie die <xref:System.Security.Cryptography.RSA> -Klasse, die <xref:System.Security.Cryptography.ECDsa> -Klasse, oder die <xref:System.Security.Cryptography.ECDiffieHellman> -Klasse statt der <xref:System.Security.Cryptography.DSA> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a6d73-110">Consider using the <xref:System.Security.Cryptography.RSA> class, the <xref:System.Security.Cryptography.ECDsa> class, or the <xref:System.Security.Cryptography.ECDiffieHellman> class instead of the <xref:System.Security.Cryptography.DSA> class.</span></span> <span data-ttu-id="a6d73-111">Verwendung <xref:System.Security.Cryptography.DSA> nur für Kompatibilität mit älteren Anwendungen und Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-111">Use <xref:System.Security.Cryptography.DSA> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="a6d73-112">Dieser Algorithmus unterstützt Schlüssellängen von 512, 1024 Bits in Schritten von 64 Bits.</span><span class="sxs-lookup"><span data-stu-id="a6d73-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DSA ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DSA();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6d73-113">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DSA" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a6d73-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSA" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6d73-114">Erstellt ein Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-114">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6d73-115">Erstellt das Standardkryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-115">Creates the default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="a6d73-116">Ein Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-116">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (int keySizeInBits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(int32 keySizeInBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (keySizeInBits As Integer) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(int keySizeInBits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="a6d73-117">Die Schlüsselgröße in Bits.</span><span class="sxs-lookup"><span data-stu-id="a6d73-117">The key size, in bits.</span></span></param>
        <summary><span data-ttu-id="a6d73-118">Erstellt einen neuen kurzlebigen DSA-Schlüssel mit der angegebenen Schlüsselgröße.</span><span class="sxs-lookup"><span data-stu-id="a6d73-118">Creates a new ephemeral DSA key with the specified key size.</span></span></summary>
        <returns><span data-ttu-id="a6d73-119">Ein neuer kurzlebiger DSA-Schlüssel mit der angegebenen Schlüsselgröße.</span><span class="sxs-lookup"><span data-stu-id="a6d73-119">A new ephemeral DSA key with the specified key size.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a6d73-120"><paramref name="keySizeInBits" /> unterscheidet sich von <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-120"><paramref name="keySizeInBits" /> is different than <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parameters As DSAParameters) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a6d73-121">Die Parameter für den <see cref="T:System.Security.Cryptography.DSA" />-Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-121">The parameters for the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span></span></param>
        <summary><span data-ttu-id="a6d73-122">Erstellt einen neuen kurzlebigen DSA-Schlüssel mit den angegebenen DSA-Schlüsselparametern.</span><span class="sxs-lookup"><span data-stu-id="a6d73-122">Creates a new ephemeral DSA key with the specified DSA key parameters.</span></span></summary>
        <returns><span data-ttu-id="a6d73-123">Ein neuer kurzlebiger DSA-Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="a6d73-123">A new ephemeral DSA key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="a6d73-124">Der Name der spezifischen Implementierung von <see cref="T:System.Security.Cryptography.DSA" />, die verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DSA" /> to use.</span></span></param>
        <summary><span data-ttu-id="a6d73-125">Erstellt das angegebene Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-125">Creates the specified cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="a6d73-126">Ein Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-126">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6d73-127">Für <xref:System.Security.Cryptography.DSA>, verwenden Sie den Namen System.Security.Cryptography.DSA.</span><span class="sxs-lookup"><span data-stu-id="a6d73-127">For <xref:System.Security.Cryptography.DSA>, use the name System.Security.Cryptography.DSA.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public abstract byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="a6d73-128">Die zu signierenden Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-128">The data to be signed.</span></span></param>
        <summary><span data-ttu-id="a6d73-129">Erstellt beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-129">When overridden in a derived class, creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="a6d73-130">Die digitale Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-130">The digital signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="a6d73-131"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-131"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6d73-132">Exportiert beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-132">When overridden in a derived class, exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <returns><span data-ttu-id="a6d73-133">Die Parameter für <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-133">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="a6d73-134">Die XML-Zeichenfolge zur Wiederherstellung des <see cref="T:System.Security.Cryptography.DSA" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="a6d73-134">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></param>
        <summary><span data-ttu-id="a6d73-135">Stellt ein <see cref="T:System.Security.Cryptography.DSA" />-Objekt aus einer XML-Zeichenfolge wieder her.</span><span class="sxs-lookup"><span data-stu-id="a6d73-135">Reconstructs a <see cref="T:System.Security.Cryptography.DSA" /> object from an XML string.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6d73-136">Der <paramref name="xmlString" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-136">The <paramref name="xmlString" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a6d73-137">Das Format des <paramref name="xmlString" />-Parameters ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6d73-137">The format of the <paramref name="xmlString" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HashData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6d73-138">Berechnet den Hashwert von Binärdaten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-138">Computes the hash value of binary data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-139">Der binäre Datenstrom, für den der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-139">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-140">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-140">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="a6d73-141">Berechnet, falls in einer abgeleiteten Klasse überschrieben, den Hashwert eines angegebenen Binärdatenstroms mithilfe eines angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-141">When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="a6d73-142">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="a6d73-142">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a6d73-143">Eine abgeleitete Klasse muss diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="a6d73-143">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-144">Die Daten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-144">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="a6d73-145">Der Index des ersten Bytes in <c>data</c>, für das der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-145">The index of the first byte in <c>data</c> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="a6d73-146">Die Anzahl der Bytes, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-146">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-147">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-147">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="a6d73-148">Berechnet, falls in einer abgeleiteten Klasse überschrieben, den Hashwert eines angegebenen Teils eines Bytearrays mithilfe eines angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-148">When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="a6d73-149">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="a6d73-149">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a6d73-150">Eine abgeleitete Klasse muss diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="a6d73-150">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public abstract void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a6d73-151">Die Parameter für <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-151">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></param>
        <summary><span data-ttu-id="a6d73-152">Importiert beim Überschreiben in einer abgeleiteten Klasse die angegebenen <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-152">When overridden in a derived class, imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6d73-153">Berechnet den Hashwert der angegebenen Daten und signiert ihn.</span><span class="sxs-lookup"><span data-stu-id="a6d73-153">Computes the hash value of the specified data and signs it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-154">Die Eingabedaten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-154">The input data for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-155">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-155">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a6d73-156">Berechnet den Hashwert des angegebenen Bytearrays mithilfe des angegebenen Hashalgorithmus und signiert den resultierenden Hashwert.</span><span class="sxs-lookup"><span data-stu-id="a6d73-156">Computes the hash value of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a6d73-157">Die DSA-Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-157">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-158"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-158"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-159"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-159"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-160">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-160">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-161">Der Eingabedatenstrom, für den der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-161">The input stream for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-162">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-162">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a6d73-163">Berechnet den Hashwert des angegebenen Datenstroms mithilfe des angegebenen Hashalgorithmus und signiert den resultierenden Hashwert.</span><span class="sxs-lookup"><span data-stu-id="a6d73-163">Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a6d73-164">Die DSA-Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-164">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-165"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-165"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-166"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-166"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-167">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-167">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-168">Die Eingabedaten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-168">The input data for which to compute the hash.</span></span></param>
        <param name="offset"><span data-ttu-id="a6d73-169">Der Offset im Array, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a6d73-169">The offset into the array at which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="a6d73-170">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a6d73-170">The number of bytes in the array to use as data.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-171">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="a6d73-171">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a6d73-172">Berechnet den Hashwert eines Teils des angegebenen Bytearrays mithilfe des angegebenen Hashalgorithmus und signiert den sich ergebenden Hashwert.</span><span class="sxs-lookup"><span data-stu-id="a6d73-172">Computes the hash value of a portion of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a6d73-173">Die DSA-Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-173">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-174"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-174"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-175"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-175"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-176">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-176">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6d73-177"><paramref name="offset" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="a6d73-177"><paramref name="offset" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a6d73-178">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-178">-or-</span></span>  
  
 <span data-ttu-id="a6d73-179"><paramref name="count" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="a6d73-179"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a6d73-180">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-180">-or-</span></span>  
  
 <span data-ttu-id="a6d73-181"><paramref name="offset" /> + <paramref name="count" /> – 1 resultiert in einem Index, der größer als die Obergrenze von <paramref name="data" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6d73-181"><paramref name="offset" /> + <paramref name="count" /> – 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="a6d73-182"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-182"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6d73-183">Erstellt eine XML-Zeichenfolgendarstellung des aktuellen <see cref="T:System.Security.Cryptography.DSA" />-Objekts und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="a6d73-183">Creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></summary>
        <returns><span data-ttu-id="a6d73-184">Eine XML-Zeichenfolgencodierung des aktuellen <see cref="T:System.Security.Cryptography.DSA" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="a6d73-184">An XML string encoding of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateSignature">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateSignature (ReadOnlySpan&lt;byte&gt; hash, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateSignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryCreateSignature(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateSignature (hash As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateSignature(ReadOnlySpan&lt;System::Byte&gt; hash, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySignData">
      <MemberSignature Language="C#" Value="public virtual bool TrySignData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrySignData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TrySignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TrySignData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TrySignData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6d73-185">Überprüft, ob eine digitale Signatur gültig ist.</span><span class="sxs-lookup"><span data-stu-id="a6d73-185">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-186">Die signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-186">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="a6d73-187">Die zu überprüfenden Signaturdaten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-187">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-188">Der Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-188">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="a6d73-189">Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert der angegebenen Daten unter Verwendung des angegebenen Hashalgorithmus und durch Vergleichen mit der angegebenen Signatur berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-189">Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns>
          <span data-ttu-id="a6d73-190"><see langword="true" />, wenn die digitale Signatur gültig ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-190"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-191"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-191"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6d73-192">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-192">-or-</span></span>  
  
 <span data-ttu-id="a6d73-193"><paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-193"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-194"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-194"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-195">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-195">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Stream, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-196">Die signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-196">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="a6d73-197">Die zu überprüfenden Signaturdaten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-197">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-198">Der Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-198">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="a6d73-199">Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert des angegebenen Datenstroms unter Verwendung des angegebenen Hashalgorithmus und durch Vergleichen mit der angegebenen Signatur berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-199">Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns>
          <span data-ttu-id="a6d73-200"><see langword="true" />, wenn die digitale Signatur gültig ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-200"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-201"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-201"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6d73-202">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-202">-or-</span></span>  
  
 <span data-ttu-id="a6d73-203"><paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-203"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-204"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-204"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-205">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-205">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (ReadOnlySpan&lt;byte&gt; data, ReadOnlySpan&lt;byte&gt; signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(ReadOnlySpan&lt;System::Byte&gt; data, ReadOnlySpan&lt;System::Byte&gt; signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="signature">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a6d73-206">Die signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-206">The signed data.</span></span></param>
        <param name="offset"><span data-ttu-id="a6d73-207">Der Startindex, an dem der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-207">The starting index at which to compute the hash.</span></span></param>
        <param name="count"><span data-ttu-id="a6d73-208">Die Anzahl der Bytes, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6d73-208">The number of bytes to hash.</span></span></param>
        <param name="signature"><span data-ttu-id="a6d73-209">Die zu überprüfenden Signaturdaten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-209">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a6d73-210">Der Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-210">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="a6d73-211">Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert der Daten in einem Teil eines Bytearrays unter Verwendung des angegebenen Hashalgorithmus und durch Vergleichen mit der angegebenen Signatur berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="a6d73-211">Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns>
          <span data-ttu-id="a6d73-212"><see langword="true" />, wenn die digitale Signatur gültig ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-212"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6d73-213"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-213"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a6d73-214">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-214">-or-</span></span>  
  
 <span data-ttu-id="a6d73-215"><paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-215"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6d73-216"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="a6d73-216"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="a6d73-217">ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-217">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6d73-218"><paramref name="offset" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="a6d73-218"><paramref name="offset" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a6d73-219">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-219">-or-</span></span>  
  
 <span data-ttu-id="a6d73-220"><paramref name="count" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="a6d73-220"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a6d73-221">- oder - </span><span class="sxs-lookup"><span data-stu-id="a6d73-221">-or-</span></span>  
  
 <span data-ttu-id="a6d73-222"><paramref name="offset" /> + <paramref name="count" /> – 1 resultiert in einem Index, der größer als die Obergrenze von <paramref name="data" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a6d73-222"><paramref name="offset" /> + <paramref name="count" /> – 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="a6d73-223">Dre Hash der mit <c>rgbSignature</c> signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-223">The hash of the data signed with <c>rgbSignature</c>.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="a6d73-224">Die für <c>rgbData</c> zu überprüfende Signatur.</span><span class="sxs-lookup"><span data-stu-id="a6d73-224">The signature to be verified for <c>rgbData</c>.</span></span></param>
        <summary><span data-ttu-id="a6d73-225">Überprüft beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="a6d73-225">When overridden in a derived class, verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="a6d73-226"><see langword="true" />, wenn <paramref name="rgbSignature" /> der mit dem angegebenen Hashalgorithmus und Schlüssel für <paramref name="rgbHash" /> berechneten Signatur entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6d73-226"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (ReadOnlySpan&lt;byte&gt; hash, ReadOnlySpan&lt;byte&gt; signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(ReadOnlySpan&lt;System::Byte&gt; hash, ReadOnlySpan&lt;System::Byte&gt; signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>