<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9416c5fefd31b893c22dbbb43f9fbe055c4b3c1e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352449" /></Metadata><TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type MACTripleDES = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Berechnet einen MAC (Message Authentication Code) unter Verwendung von <see cref="T:System.Security.Cryptography.TripleDES" /> für den <see cref="T:System.Security.Cryptography.CryptoStream" /> der Eingabedaten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Mac kann verwendet werden, um zu bestimmen, ob eine Nachricht, die über einen unsicheren Kanal gesendet wurde, manipuliert wurde, vorausgesetzt, dass der Absender und der Empfänger einen geheimen Schlüssel gemeinsam nutzen. Der Absender berechnet den Mac für die ursprünglichen Daten und sendet beide als einzelne Nachricht. Der Empfänger berechnet den Mac auf der empfangenen Nachricht neu und überprüft, ob der berechnete Mac mit dem übertragenen Mac übereinstimmt.  
  
 Jede Änderung an den Daten oder dem Mac führt zu einem Konflikt, da das Wissen des geheimen Schlüssels erforderlich ist, um die Nachricht zu ändern und den richtigen Mac zu reproduzieren. Wenn die Codes Stimmen, wird die Nachricht Daher authentifiziert.  
  
 <xref:System.Security.Cryptography.MACTripleDES>verwendet einen Schlüssel mit einer Länge von 16 oder 24 Bytes und erzeugt eine Hash Sequenz mit einer Länge von 8 Bytes.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Mac für eine Datei mit `input.txt`dem Namen erstellt, die sich im Ordner befindet, der die ausführbare Beispieldatei enthält. Der Mac und der ursprüngliche Text werden in eine Datei mit dem `encrypted.hsh` Namen im selben Ordner geschrieben. Die signierte Datei wird dann gelesen, und der Mac wird für den Textteil der Datei und im Vergleich mit dem Mac, der im Text enthalten ist, berechnet.  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor verwendet die Standard Implementierung von <xref:System.Security.Cryptography.TripleDES>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES rgbKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">Der geheime Schlüssel für die <see cref="T:System.Security.Cryptography.MACTripleDES" />-Verschlüsselung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse mit den angegebenen Schlüsseldaten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor verwendet die Standard Implementierung von <xref:System.Security.Cryptography.TripleDES>. Der `rgbKey` -Parameter muss 16 oder 24 Byte lang sein.  
  
   
  
## Examples  
 Ein Beispiel für die Verwendung dieses Konstruktors finden Sie unter der <xref:System.Security.Cryptography.MACTripleDES> -Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbKey" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : string * byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES (strTripleDES, rgbKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES">Der Name der zu verwendenden <see cref="T:System.Security.Cryptography.TripleDES" />-Implementierung.</param>
        <param name="rgbKey">Der geheime Schlüssel für die <see cref="T:System.Security.Cryptography.MACTripleDES" />-Verschlüsselung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse mit den angegebenen Schlüsseldaten und unter Verwendung der angegebenen Implementierung von <see cref="T:System.Security.Cryptography.TripleDES" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `strTripleDES` -Parameter ist der Anzeige Name <xref:System.Security.Cryptography.TripleDES> des Implementierungs Typs. Die Standard Implementierung ist System. Security. Cryptography. TripleDES.  
  
 Der `rgbKey` -Parameter muss 16 oder 24 Byte lang sein.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbKey" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">Der <paramref name="strTripleDES" />-Parameter ist kein gültiger Name einer <see cref="T:System.Security.Cryptography.TripleDES" />-Implementierung.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="mACTripleDES.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, wenn die Methode von einer <see cref="M:System.IDisposable.Dispose" />-Implementierung aufgerufen wird, andernfalls <see langword="false" />.</param>
        <summary>Gibt die von der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Instanz verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der öffentlichen `Dispose()` -Methode und der `Finalize` -Methode aufgerufen. `Dispose()`Ruft die geschützte `Dispose(Boolean)` -Methode auf, wobei der disposing `true`-Parameter auf festgelegt ist. `Finalize`Ruft `Dispose` auf, wobei disposing `false`auf festgelegt ist.  
  
 Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.MACTripleDES> verweist. Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Achten Sie beim Überschreiben darauf <see langword="Dispose" /> ,nichtaufObjektezuverweisen,diezuvorineinemfrüheren-Aufrufpunktfreigegebenwurden.<see langword="Dispose(Boolean)" /> Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />von finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
Weitere Informationen zu und <see langword="Dispose" /> <see langword="Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MACTripleDES ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="mACTripleDES.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die von <see cref="T:System.Security.Cryptography.MACTripleDES" /> verwendeten, nicht verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="mACTripleDES.HashCore (rgbData, ibStart, cbSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData">Die Eingabedaten.</param>
        <param name="ibStart">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</param>
        <param name="cbSize">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</param>
        <summary>Leitet die in das Objekt geschriebenen Daten in das <see cref="T:System.Security.Cryptography.TripleDES" />-Verschlüsselungsobjekt zum Berechnen des MAC (Message Authentication Code) weiter.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="mACTripleDES.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den errechneten MAC (Message Authentication Code) zurück, nachdem alle Daten in das Objekt geschrieben wurden.</summary>
        <returns>Der errechnete MAC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diesen Wert erst lesen, nachdem alle Daten geschrieben wurden, und Sie können später keine weiteren Daten schreiben. Erstellen Sie eine neue Instanz <xref:System.Security.Cryptography.MACTripleDES> von für jedes separate Daten Segment, um den Mac für diese Daten zu berechnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="mACTripleDES.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz von <see cref="T:System.Security.Cryptography.MACTripleDES" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft den Parameter losen Konstruktor für die-Klasse auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im Hashalgorithmus verwendeten Füllzeichenmodus ab oder legt diesen fest.</summary>
        <value>Der im Hashalgorithmus verwendete Füllzeichenmodus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die meisten nur-Text-Nachrichten bestehen nicht aus einer Anzahl von Bytes, die Blöcke vollständig ausfüllen. Häufig sind nicht genügend Bytes vorhanden, um den letzten Block auszufüllen. In diesem Fall wird dem Text eine Auffüll Zeichenfolge hinzugefügt. Wenn die Blocklänge beispielsweise 64 Bits beträgt und der letzte Block nur 40 Bits enthält, werden 24 Bits von Auffüll Zeichen hinzugefügt. Eine <xref:System.Security.Cryptography.PaddingMode> Beschreibung bestimmter Modi finden Sie unter.  
  
 Der Zugriff auf dieses Feld erfolgt <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> über die-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Eigenschaft kann nicht festgelegt werden, da der Füllzeichenmodus ungültig ist.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
  </Members>
</Type>
