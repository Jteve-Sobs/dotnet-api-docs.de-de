<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31a12-101">Berechnet einen MAC (Message Authentication Code) unter Verwendung von <see cref="T:System.Security.Cryptography.TripleDES" /> für den <see cref="T:System.Security.Cryptography.CryptoStream" /> der Eingabedaten.</span><span class="sxs-lookup"><span data-stu-id="31a12-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-102">Ein MAC kann verwendet werden, um zu bestimmen, ob eine über einen unsicheren Kanal gesendete Nachricht manipuliert wurde, vorausgesetzt, dass Sender und Empfänger einen gemeinsamen geheimen Schlüssel besitzen.</span><span class="sxs-lookup"><span data-stu-id="31a12-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="31a12-103">Der Absender der MAC für die ursprünglichen Daten berechnet und als eine einzelne Nachricht sendet.</span><span class="sxs-lookup"><span data-stu-id="31a12-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="31a12-104">Der Empfänger den MAC für die empfangene Nachricht neuberechnungen und überprüft, ob die berechnete MAC übertragenen Mac übereinstimmt</span><span class="sxs-lookup"><span data-stu-id="31a12-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="31a12-105">Die Daten oder die MAC-Ergebnisse zu einer Diskrepanz ändern, da Wissen des geheimen Schlüssels erforderlich ist, ändern Sie die Nachricht, und reproduzieren das richtige Mac</span><span class="sxs-lookup"><span data-stu-id="31a12-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="31a12-106">Aus diesem Grund wird die Codes übereinstimmen, die Nachricht authentifiziert.</span><span class="sxs-lookup"><span data-stu-id="31a12-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="31a12-107"><xref:System.Security.Cryptography.MACTripleDES> verwendet einen Schlüssel, der 16 oder 24 Byte lang ist, und erzeugt eine Hashsequenz, die 8 Bytes lang ist.</span><span class="sxs-lookup"><span data-stu-id="31a12-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31a12-108">Das folgende Beispiel erstellt einen MAC für eine Datei namens `input.txt`, befindet sich im Ordner "", die im Beispiel ausführbare enthält.</span><span class="sxs-lookup"><span data-stu-id="31a12-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="31a12-109">Der MAC und den ursprünglichen Text werden geschrieben, in eine Datei mit dem Namen `encrypted.hsh` im selben Ordner.</span><span class="sxs-lookup"><span data-stu-id="31a12-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="31a12-110">Die signierte Datei dann gelesen wird und der MAC für den Textteil der Datei berechnet und im Vergleich zu den MAC, der mit dem Text enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="31a12-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31a12-111">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="31a12-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31a12-112">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="31a12-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-113">Dieser Konstruktor verwendet die standardmäßige Implementierung des <xref:System.Security.Cryptography.TripleDES>.</span><span class="sxs-lookup"><span data-stu-id="31a12-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="31a12-114">Der geheime Schlüssel für die <see cref="T:System.Security.Cryptography.MACTripleDES" />-Verschlüsselung.</span><span class="sxs-lookup"><span data-stu-id="31a12-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="31a12-115">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse mit den angegebenen Schlüsseldaten.</span><span class="sxs-lookup"><span data-stu-id="31a12-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-116">Dieser Konstruktor verwendet die standardmäßige Implementierung des <xref:System.Security.Cryptography.TripleDES>.</span><span class="sxs-lookup"><span data-stu-id="31a12-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="31a12-117">Die `rgbKey` -Parameter muss 16 oder 24 Byte lang sein.</span><span class="sxs-lookup"><span data-stu-id="31a12-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31a12-118">Ein Beispiel dafür, wie dieser Konstruktor verwendet, finden Sie die <xref:System.Security.Cryptography.MACTripleDES> Klasse.</span><span class="sxs-lookup"><span data-stu-id="31a12-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31a12-119">Der <paramref name="rgbKey" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES"><span data-ttu-id="31a12-120">Der Name der zu verwendenden <see cref="T:System.Security.Cryptography.TripleDES" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="31a12-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span></span></param>
        <param name="rgbKey"><span data-ttu-id="31a12-121">Der geheime Schlüssel für die <see cref="T:System.Security.Cryptography.MACTripleDES" />-Verschlüsselung.</span><span class="sxs-lookup"><span data-stu-id="31a12-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="31a12-122">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Klasse mit den angegebenen Schlüsseldaten und unter Verwendung der angegebenen Implementierung von <see cref="T:System.Security.Cryptography.TripleDES" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-123">Die `strTripleDES` Parameter ist der Anzeigename, der die <xref:System.Security.Cryptography.TripleDES> Implementierungstyp.</span><span class="sxs-lookup"><span data-stu-id="31a12-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="31a12-124">Die Standardimplementierung gibt System.Security.Cryptography.TripleDES.</span><span class="sxs-lookup"><span data-stu-id="31a12-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="31a12-125">Die `rgbKey` -Parameter muss 16 oder 24 Byte lang sein.</span><span class="sxs-lookup"><span data-stu-id="31a12-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31a12-126">Der <paramref name="rgbKey" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="31a12-127">Der <paramref name="strTripleDES" />-Parameter ist kein gültiger Name einer <see cref="T:System.Security.Cryptography.TripleDES" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="31a12-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="31a12-128"><see langword="true" />, wenn die Methode von einer <see cref="M:System.IDisposable.Dispose" />-Implementierung aufgerufen wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-128"><see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31a12-129">Gibt die von der <see cref="T:System.Security.Cryptography.MACTripleDES" />-Instanz verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="31a12-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-130">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die `Finalize` Methode.</span><span class="sxs-lookup"><span data-stu-id="31a12-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="31a12-131">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit der disposing-Parameter auf festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="31a12-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="31a12-132">`Finalize` Ruft `Dispose` mit disposing auf `false`.</span><span class="sxs-lookup"><span data-stu-id="31a12-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="31a12-133">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.MACTripleDES> verweist.</span><span class="sxs-lookup"><span data-stu-id="31a12-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="31a12-134">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="31a12-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="31a12-135"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="31a12-135"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="31a12-136">Zum Überschreiben <see langword="Dispose(Boolean)" />müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="31a12-137">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="31a12-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="31a12-138">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="31a12-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="31a12-139">Die Eingabedaten.</span><span class="sxs-lookup"><span data-stu-id="31a12-139">The input data.</span></span></param>
        <param name="ibStart"><span data-ttu-id="31a12-140">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="31a12-140">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="31a12-141">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="31a12-141">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="31a12-142">Leitet die in das Objekt geschriebenen Daten in das <see cref="T:System.Security.Cryptography.TripleDES" />-Verschlüsselungsobjekt zum Berechnen des MAC (Message Authentication Code) weiter.</span><span class="sxs-lookup"><span data-stu-id="31a12-142">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31a12-143">Gibt den errechneten MAC (Message Authentication Code) zurück, nachdem alle Daten in das Objekt geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="31a12-143">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span></span></summary>
        <returns><span data-ttu-id="31a12-144">Der errechnete MAC.</span><span class="sxs-lookup"><span data-stu-id="31a12-144">The computed MAC.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-145">Sie können diesen Wert nur, nachdem alle Daten geschrieben werden soll, und Sie können nicht mehr Daten anschließend schreiben lesen.</span><span class="sxs-lookup"><span data-stu-id="31a12-145">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="31a12-146">Erstellen Sie eine neue Instanz der <xref:System.Security.Cryptography.MACTripleDES> für jede separate Segment von Daten auf den MAC für diese Daten zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="31a12-146">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31a12-147">Initialisiert eine Instanz von <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span><span class="sxs-lookup"><span data-stu-id="31a12-147">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-148">Diese Methode ruft den Standardkonstruktor für die Klasse.</span><span class="sxs-lookup"><span data-stu-id="31a12-148">This method calls the default constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31a12-149">Ruft den im Hashalgorithmus verwendeten Füllzeichenmodus ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="31a12-149">Gets or sets the padding mode used in the hashing algorithm.</span></span></summary>
        <value><span data-ttu-id="31a12-150">Der im Hashalgorithmus verwendete Füllzeichenmodus.</span><span class="sxs-lookup"><span data-stu-id="31a12-150">The padding mode used in the hashing algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a12-151">Die meisten nur-Text-Nachrichten keine Anzahl von Bytes bestehen, die Blöcke vollständig ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="31a12-151">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="31a12-152">Häufig sind nicht ausreichende Anzahl von Bytes zum Ausfüllen des letzten Blocks.</span><span class="sxs-lookup"><span data-stu-id="31a12-152">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="31a12-153">In diesem Fall wird der Text eine Auffüllung Zeichenfolge hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="31a12-153">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="31a12-154">Wenn die Blocklänge 64 Bits beträgt und der letzte Block nur 40 Bits enthält, werden z. B. 24 Bits der Auffüllung hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="31a12-154">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="31a12-155">Finden Sie unter <xref:System.Security.Cryptography.PaddingMode> eine Beschreibung der einzelnen Modi.</span><span class="sxs-lookup"><span data-stu-id="31a12-155">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="31a12-156">Dieses Feld erfolgt über die <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="31a12-156">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="31a12-157">Die Eigenschaft kann nicht festgelegt werden, da der Füllzeichenmodus ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="31a12-157">The property cannot be set because the padding mode is invalid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>