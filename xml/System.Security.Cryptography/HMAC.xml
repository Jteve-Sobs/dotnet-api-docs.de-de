<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dcaeccb126149a7423d5aeb1509a5eae36d4c61" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964005" /></Metadata><TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3dcb6-101">Stellt die abstrakte Klasse dar, von der alle Implementierungen von Hash-Nachrichtenauthentifizierungscodes (HMAC, Hash-based Message Authentication Code) abgeleitet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-102">Ein Hash basiertes Nachrichtenauthentifizierungscode (HMAC) kann verwendet werden, um zu bestimmen, ob eine Nachricht, die über einen unsicheren Kanal gesendet wurde, manipuliert wurde, vorausgesetzt, dass der Absender und der Empfänger einen geheimen Schlüssel gemeinsam nutzen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="3dcb6-103">Der Absender berechnet den Hashwert für die ursprünglichen Daten und sendet die ursprünglichen Daten und den HMAC als einzelne Nachricht.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="3dcb6-104">Der Empfänger berechnet den Hashwert für die empfangene Nachricht neu und überprüft, ob der berechnete Hashwert mit dem übertragenen Hashwert übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="3dcb6-105">HMAC kann mit einer beliebigen iterativen kryptografischen Hash Funktion wie MD5 oder SHA-1 in Kombination mit einem geheimen Schlüssel gemeinsam verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="3dcb6-106">Die kryptografische Stärke von HMAC hängt von den Eigenschaften der zugrunde liegenden Hash Funktion ab.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
   
 <span data-ttu-id="3dcb6-107">Jede Änderung an den Daten oder dem Hashwert führt zu einem Konflikt, da das Wissen des geheimen Schlüssels erforderlich ist, um die Nachricht zu ändern und den korrekten Hashwert zu reproduzieren.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="3dcb6-108">Wenn der ursprüngliche und der berechnete Hashwert entsprechen, wird die Nachricht Daher authentifiziert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="3dcb6-109">Aufgrund von Konnektivitätsproblemen mit MD5 und SHA-1 empfiehlt Microsoft ein Sicherheitsmodell, das auf SHA-256 oder höher basiert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-109">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="3dcb6-110">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="3dcb6-110">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dcb6-111">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.HMAC" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dcb6-112">Ruft die für den Hashwert verwendete Blockgröße ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-112">Gets or sets the block size to use in the hash value.</span></span></summary>
        <value><span data-ttu-id="3dcb6-113">Die Blockgröße, die für den Hashwert verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-113">The block size to use in the hash value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-114">Ein Hash basiertes Nachrichtenauthentifizierungscode (HMAC) verwendet eine Hash Funktion, bei der Daten durch Iteration einer grundlegenden Komprimierungs Funktion für Datenblöcke durchlaufen werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-114">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="3dcb6-115"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> ist die Bytegröße eines solchen Blocks.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-115"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="3dcb6-116">Der Wert ist 64 Bytes.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-116">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dcb6-117">Erstellt eine Instanz einer Implementierung eines Hash-Nachrichtenauthentifizierungscodes (<see cref="T:System.Security.Cryptography.HMAC" />).</span><span class="sxs-lookup"><span data-stu-id="3dcb6-117">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dcb6-118">Erstellt eine Instanz der Standardimplementierung eines Hash-Nachrichtenauthentifizierungscodes (HMAC, Hash-based Message Authentication Code).</span><span class="sxs-lookup"><span data-stu-id="3dcb6-118">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="3dcb6-119">Eine neue SHA-1-Instanz, sofern die Standardeinstellungen mit dem [&lt;cryptoClass&gt;-Element](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element) geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-119">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-120">Diese Überladung verwendet standardmäßig die SHA-1-Implementierung von HMAC.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-120">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="3dcb6-121">Wenn Sie eine andere Implementierung angeben möchten, verwenden Sie die <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> Überladung, mit der Sie stattdessen einen Algorithmusnamen angeben können.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-121">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  

 <span data-ttu-id="3dcb6-122">Aufgrund von Konnektivitätsproblemen mit SHA-1 empfiehlt Microsoft ein Sicherheitsmodell, das auf SHA-256 oder höher basiert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-122">Due to collision problems with SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithmName"><span data-ttu-id="3dcb6-123">Die zu verwendende HMAC-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-123">The HMAC implementation to use.</span></span> <span data-ttu-id="3dcb6-124">Die folgende Tabelle zeigt die gültigen Werte für den <paramref name="algorithmName" />-Parameter sowie die Algorithmen, denen sie zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-124">The following table shows the valid values for the <paramref name="algorithmName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="3dcb6-125">Parameterwert</span><span class="sxs-lookup"><span data-stu-id="3dcb6-125">Parameter value</span></span> 
 </term><description> <span data-ttu-id="3dcb6-126">Implementiert</span><span class="sxs-lookup"><span data-stu-id="3dcb6-126">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="3dcb6-127">System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="3dcb6-127">System.Security.Cryptography.HMAC</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="3dcb6-128">System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="3dcb6-128">System.Security.Cryptography.KeyedHashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="3dcb6-129">HMACMD5</span><span class="sxs-lookup"><span data-stu-id="3dcb6-129">HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="3dcb6-130">System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="3dcb6-130">System.Security.Cryptography.HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="3dcb6-131">HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="3dcb6-131">HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="3dcb6-132">System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="3dcb6-132">System.Security.Cryptography.HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="3dcb6-133">HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="3dcb6-133">HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="3dcb6-134">System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="3dcb6-134">System.Security.Cryptography.HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="3dcb6-135">HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="3dcb6-135">HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="3dcb6-136">System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="3dcb6-136">System.Security.Cryptography.HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="3dcb6-137">HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="3dcb6-137">HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="3dcb6-138">System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="3dcb6-138">System.Security.Cryptography.HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="3dcb6-139">HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="3dcb6-139">HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="3dcb6-140">System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="3dcb6-140">System.Security.Cryptography.HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="3dcb6-141">MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="3dcb6-141">MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> <span data-ttu-id="3dcb6-142">System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="3dcb6-142">System.Security.Cryptography.MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="3dcb6-143">Erstellt eine Instanz der angegebenen Implementierung eines Hash-Nachrichtenauthentifizierungscodes (HMAC, Hash-based Message Authentication Code).</span><span class="sxs-lookup"><span data-stu-id="3dcb6-143">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="3dcb6-144">Eine neue Instanz der angegebenen HMAC-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-144">A new instance of the specified HMAC implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-145">HMAC unterstützt eine Reihe von Hash Algorithmen, einschließlich MD5, SHA-1, SHA-256 und RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-145">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="3dcb6-146">Die vollständige Liste finden Sie unter Unterstützte Werte für den `algorithmName`-Parameter.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-146">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  

 <span data-ttu-id="3dcb6-147">Aufgrund von Konnektivitätsproblemen mit MD5 und SHA-1 empfiehlt Microsoft ein Sicherheitsmodell, das auf SHA-256 oder höher basiert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-147">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3dcb6-148"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-148"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3dcb6-149">Gibt die von der <see cref="T:System.Security.Cryptography.HMAC" />-Klasse verwendeten nicht verwalteten Ressourcen frei, wenn eine Schlüsseländerung zulässig ist, und gibt optional auch die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-149">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-150">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der `Finalize`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-150">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="3dcb6-151">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-151">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3dcb6-152">`Finalize` ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-152">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3dcb6-153">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.HMAC> verweist.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="3dcb6-154">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-154">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3dcb6-155">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-155">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="3dcb6-156">Wenn Sie <see langword="Dispose(Boolean)" />überschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren <see langword="Dispose" />aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-156">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="3dcb6-157">Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-157">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="3dcb6-158">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged).</span><span class="sxs-lookup"><span data-stu-id="3dcb6-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="3dcb6-159">Die Eingabe, für die der HMAC-Code berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-159">The input to compute the HMAC code for.</span></span></param>
        <summary><span data-ttu-id="3dcb6-160">Leitet in das Objekt geschriebene Daten in den HMAC-Algorithmus für die Berechnung vom HMAC weiter.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-160">Routes data written to the object into the HMAC algorithm for computing the HMAC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="3dcb6-161">Die Standard Implementierung dieser Methode löst eine <xref:System.PlatformNotSupportedException> aus, da keine verwaltete Implementierung von HMAC vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-161">The default implementation of this method throws a <xref:System.PlatformNotSupportedException> because there is no managed implementation of HMAC.</span></span>

<span data-ttu-id="3dcb6-162">Abgeleitete Typen müssen diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-162">Derived types must override this method.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3dcb6-163">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-163">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="3dcb6-164">Die Eingabedaten.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-164">The input data.</span></span></param>
        <param name="ib"><span data-ttu-id="3dcb6-165">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-165">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="3dcb6-166">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-166">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="3dcb6-167">Leitet beim Überschreiben in einer abgeleiteten Klasse die in das Objekt geschriebenen Daten zum Berechnen des HMAC-Werts an den HMAC-Algorithmus weiter.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-167">When overridden in a derived class, routes data written to the object into the HMAC algorithm for computing the HMAC value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-168">Diese Methode wird nicht von Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-168">This method is not called by application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="3dcb6-169">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="3dcb6-169">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dcb6-170">Schließt beim Überschreiben in einer abgeleiteten Klasse die HMAC-Berechnung ab, nachdem die letzten Daten vom Algorithmus verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-170">When overridden in a derived class, finalizes the HMAC computation after the last data is processed by the algorithm.</span></span></summary>
        <returns><span data-ttu-id="3dcb6-171">Der berechnete HMAC-Wert in einem Bytearray.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-171">The computed HMAC value in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-172">Diese Methode wird nicht von Anwendungscode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-172">This method is not called by application code.</span></span> <span data-ttu-id="3dcb6-173">Diese Methode schließt eine beliebige partielle Berechnung ab und gibt den korrekten Hashwert des Datenstroms zurück.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-173">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="3dcb6-174">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="3dcb6-174">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dcb6-175">Ruft den Namen des für die Hashoperation verwendeten Hashalgorithmus ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-175">Gets or sets the name of the hash algorithm to use for hashing.</span></span></summary>
        <value><span data-ttu-id="3dcb6-176">Der Name des Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-176">The name of the hash algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3dcb6-177">Der aktuelle Hashalgorithmus kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-177">The current hash algorithm cannot be changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dcb6-178">Initialisiert eine Instanz der Standardimplementierung des <see cref="T:System.Security.Cryptography.HMAC" />.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-178">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-179">Ein Hash basiertes Nachrichtenauthentifizierungscode (HMAC) kann verwendet werden, um zu bestimmen, ob eine Nachricht, die über einen unsicheren Kanal gesendet wurde, manipuliert wurde, vorausgesetzt, dass der Absender und der Empfänger einen geheimen Schlüssel gemeinsam nutzen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-179">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="3dcb6-180">Der Absender berechnet den Hashwert für die ursprünglichen Daten und sendet die ursprünglichen Daten und den HMAC als einzelne Nachricht.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-180">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="3dcb6-181">Der Empfänger berechnet den Hashwert für die empfangene Nachricht neu und überprüft, ob der berechnete Hashwert mit dem übertragenen Hashwert übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-181">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="3dcb6-182">HMAC kann mit einer beliebigen iterativen kryptografischen Hash Funktion wie MD5 oder SHA-1 in Kombination mit einem geheimen Schlüssel gemeinsam verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-182">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="3dcb6-183">Die kryptografische Stärke von HMAC hängt von den Eigenschaften der zugrunde liegenden Hash Funktion ab.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-183">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="3dcb6-184">Jede Änderung an den Daten oder dem Hashwert führt zu einer nicht Übereinstimmung, da das Wissen des geheimen Schlüssels erforderlich ist, um die Nachricht zu ändern und den korrekten Hashwert zu reproduzieren.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-184">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="3dcb6-185">Wenn der ursprüngliche und der berechnete Hashwert entsprechen, wird die Nachricht Daher authentifiziert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-185">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="3dcb6-186">Aufgrund von Konnektivitätsproblemen mit MD5 und SHA-1 empfiehlt Microsoft ein Sicherheitsmodell, das auf SHA-256 oder höher basiert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-186">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dcb6-187">Ruft den Schlüssel für die HMAC-Berechnung ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-187">Gets or sets the key to use in the HMAC calculation.</span></span></summary>
        <value><span data-ttu-id="3dcb6-188">Der Schlüssel, der bei der HMAC-Berechnung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-188">The key to use in the HMAC calculation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dcb6-189">Diese Eigenschaft ist der Schlüssel für den Schlüssel gebundenen Hash Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-189">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="3dcb6-190">Ein Hash basiertes Nachrichtenauthentifizierungscode (HMAC) kann verwendet werden, um zu bestimmen, ob eine Nachricht, die über einen unsicheren Kanal gesendet wurde, manipuliert wurde, vorausgesetzt, dass der Absender und der Empfänger einen geheimen Schlüssel gemeinsam nutzen.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-190">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="3dcb6-191">Der Absender berechnet den Hashwert für die ursprünglichen Daten und sendet die ursprünglichen Daten und den HMAC als einzelne Nachricht.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-191">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="3dcb6-192">Der Empfänger berechnet den Hashwert für die empfangene Nachricht neu und überprüft, ob der berechnete Hashwert mit dem übertragenen Hashwert übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-192">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="3dcb6-193">HMAC kann mit einer beliebigen iterativen kryptografischen Hash Funktion wie MD5 oder SHA-1 in Kombination mit einem geheimen Schlüssel gemeinsam verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-193">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="3dcb6-194">Die kryptografische Stärke von HMAC hängt von den Eigenschaften der zugrunde liegenden Hash Funktion ab.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-194">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="3dcb6-195">Jede Änderung an den Daten oder dem Hashwert führt zu einem Konflikt, da das Wissen des geheimen Schlüssels erforderlich ist, um die Nachricht zu ändern und den korrekten Hashwert zu reproduzieren.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-195">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="3dcb6-196">Wenn der ursprüngliche und der berechnete Hashwert entsprechen, wird die Nachricht Daher authentifiziert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-196">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="3dcb6-197">Aufgrund von Konnektivitätsproblemen mit MD5 und SHA-1 empfiehlt Microsoft ein Sicherheitsmodell, das auf SHA-256 oder höher basiert.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-197">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3dcb6-198">Es wird versucht, die <see cref="P:System.Security.Cryptography.HMAC.Key" />-Eigenschaft nach Beginn der Hashoperation zu ändern.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-198">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="3dcb6-199">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="3dcb6-199">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; * int -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="3dcb6-200">Der Puffer, der den HMAC-Wert empfangen soll.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-200">The buffer to receive the HMAC value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="3dcb6-201">Nach Ausführung dieser Methode die Gesamtzahl der in <paramref name="destination" /> geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-201">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="3dcb6-202">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-202">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="3dcb6-203">Versucht, die HMAC-Berechnung abzuschließen, nachdem die letzten Daten vom HMAC-Algorithmus verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-203">Attempts to finalize the HMAC computation after the last data is processed by the HMAC algorithm.</span></span></summary>
        <returns><span data-ttu-id="3dcb6-204"><see langword="true" />, wenn <paramref name="destination" /> zum Empfangen des HMAC-Werts lang genug ist. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-204"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the HMAC value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="3dcb6-205">Die Standard Implementierung dieser Methode löst eine <xref:System.PlatformNotSupportedException> aus, da keine verwaltete Implementierung von HMAC vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-205">The default implementation of this method throws a <xref:System.PlatformNotSupportedException> because there is no managed implementation of HMAC.</span></span>

<span data-ttu-id="3dcb6-206">Abgeleitete Typen müssen diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-206">Derived types must override this method.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3dcb6-207">Die Methode wird nicht im abgeleiteten Typ überschrieben.</span><span class="sxs-lookup"><span data-stu-id="3dcb6-207">The method is not overriden in the derived type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
