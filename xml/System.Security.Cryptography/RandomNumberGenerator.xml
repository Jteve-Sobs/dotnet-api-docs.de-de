<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RandomNumberGenerator.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cad21ebba9ee4bb77582b33df171fb1b5987a421b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad21ebba9ee4bb77582b33df171fb1b5987a421b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>Represents the abstract class from which all implementations of cryptographic random number generators derive.</source>
          <target state="translated">Stellt die abstrakte Klasse dar, von der alle Implementierungen von Zufallszahlen-Generatoren für die Kryptographie abgeleitet werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>Cryptographic random number generators create cryptographically strong random values.</source>
          <target state="translated">Kryptografische Zufallszahlen-Generatoren erstellen kryptographisch starke, zufällige Werten.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>To create a random number generator, call the <ph id="ph1">@System.Security.Cryptography.RandomNumberGenerator.Create</ph> method.</source>
          <target state="translated">Rufen Sie zum Erstellen eines Zufallszahlen-Generators die <ph id="ph1">@System.Security.Cryptography.RandomNumberGenerator.Create</ph> Methode.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>This is prefered over calling the constructor of the derived class <ph id="ph1">@System.Security.Cryptography.RNGCryptoServiceProvider</ph>, which is not available on all platforms.</source>
          <target state="translated">Dies ist die bevorzugte über den Aufruf des Konstruktors der abgeleiteten Klasse <ph id="ph1">@System.Security.Cryptography.RNGCryptoServiceProvider</ph>, die nicht auf allen Plattformen verfügbar ist.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.#ctor">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">Eine Instanz einer abstrakten Klasse kann nicht erstellt werden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.#ctor">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.#ctor">
          <source>For an implementation of a cryptographic random number generator, use the derived class <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>.</source>
          <target state="translated">Verwenden Sie eine Implementierung eines kryptografischen Zufallszahlen-Generators, die abgeleitete Klasse <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>Creates an instance of an implementation of a cryptographic random number generator.</source>
          <target state="translated">Erstellt eine Instanz für eine Implementierung eines Kryptografie-Zufallszahlen-Generators.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Create">
          <source>Creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</source>
          <target state="translated">Erstellt eine Instanz der Standardimplementierung eines Kryptographie-Zufallszahlen-Generators, der zum Generieren von Zufallsdaten verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Create">
          <source>A new instance of a cryptographic random number generator.</source>
          <target state="translated">Eine neue Instanz eines Kryptografie-Zufallszahlen-Generators.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)">
          <source>The name of the random number generator implementation to use.</source>
          <target state="translated">Der Name der zu verwendenden Implementierung des Zufallszahlen-Generators.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)">
          <source>Creates an instance of the specified implementation of a cryptographic random number generator.</source>
          <target state="translated">Erstellt eine Instanz der angegebenen Implementierung eines Kryptografie-Zufallszahlen-Generators.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)">
          <source>A new instance of a cryptographic random number generator.</source>
          <target state="translated">Eine neue Instanz eines Kryptografie-Zufallszahlen-Generators.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>When overridden in a derived class, releases the unmanaged resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph> class.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse die nicht verwalteten Ressourcen frei, die von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph>-Klasse verwendet werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>When overridden in a derived class, releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph> class.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse alle Ressourcen frei, die von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph>-Klasse verwendet werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">`Dispose`</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">`Dispose`</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">`Dispose`</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">`Dispose`</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>When overridden in a derived class, releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt beim Überschreiben in einer abgeleiteten Klasse die von <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RandomNumberGenerator" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">`Dispose()`</ph> Methode und die <ph id="ph2">`Finalize`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> Ruft <ph id="ph2">`Dispose`</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`true`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:System.Security.Cryptography.RandomNumberGenerator&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RandomNumberGenerator">
          <source>Fills an array of bytes with a cryptographically strong random sequence of values.</source>
          <target state="translated">Füllt ein Bytearray mit einer kryptografisch starken, zufälligen Folge von Werten aus.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])">
          <source>The array to fill with cryptographically strong random bytes.</source>
          <target state="translated">Das mit kryptographisch starken, zufälligen Bytes auszufüllende Array.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])">
          <source>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</source>
          <target state="translated">Füllt beim Überschreiben in einer abgeleiteten Klasse ein Bytearray mit einer kryptographisch starken Zufallsfolge von Werten.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])">
          <source>The length of the byte array determines how many random bytes are produced.</source>
          <target state="translated">Die Länge des Bytearrays bestimmt, wie viele zufällige Bytes erzeugt werden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])">
          <source>The following example creates a random sequence 100 bytes long and stores it in <ph id="ph1">`random`</ph>.</source>
          <target state="translated">Im folgende Beispiel wird eine zufällige Sequenz 100 Bytes erstellt und speichert ihn in <ph id="ph1">`random`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The array to fill with cryptographically strong random bytes.</source>
          <target state="translated">Das mit kryptographisch starken, zufälligen Bytes auszufüllende Array.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the array to start the fill operation.</source>
          <target state="translated">Der Index des Arrays, an dem der Füllvorgang beginnen soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to fill.</source>
          <target state="translated">Die Anzahl der zu füllenden Bytes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source>Fills the specified byte array with a cryptographically strong random sequence of values.</source>
          <target state="translated">Füllt das angegebene Bytearray mit einer kryptografisch starken Folge zufälliger Werte aus.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0 (null)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> exceeds the length of <ph id="ph3">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> überschreitet den Wert von <ph id="ph3">&lt;paramref name="data" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])">
          <source>The array to fill with cryptographically strong random nonzero bytes.</source>
          <target state="translated">Das mit kryptographisch starken, zufälligen Bytes ungleich 0 auszufüllende Array.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])">
          <source>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</source>
          <target state="translated">Füllt beim Überschreiben in einer abgeleiteten Klasse ein Bytearray mit einer kryptographisch starken Zufallsfolge von Werten, die ungleich 0 sind.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])">
          <source>The length of the byte array determines how many random bytes are produced.</source>
          <target state="translated">Die Länge des Bytearrays bestimmt, wie viele zufällige Bytes erzeugt werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])">
          <source>The following example creates a random sequence of 100 nonzero bytes and stores it in <ph id="ph1">`random`</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt eine zufällige Sequenz von 100 ungleich null Byte und speichert ihn in <ph id="ph1">`random`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>