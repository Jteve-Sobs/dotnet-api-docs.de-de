<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f45280306c2d0f79650fca2b1363d295bf19f39e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36529283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden zum Verschlüsseln und Entschlüsseln von Daten bereit. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse bietet Zugriff auf die Data Protection API (DPAPI) unter Microsoft Windows 2000 und höheren Betriebssystemen zur Verfügung. Dies ist ein Dienst, der wird vom Betriebssystem bereitgestellt und erfordert keine zusätzliche Bibliotheken. Dieses bietet Schutz, die mit den Benutzer oder Computer-Anmeldeinformationen zu verschlüsseln oder Entschlüsseln von Daten.  
  
 Die Klasse besteht aus zwei Wrappern für die nicht verwaltete DPAPI <xref:System.Security.Cryptography.ProtectedData.Protect%2A> und <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Diese beiden Methoden können zum Verschlüsseln und Entschlüsseln von Daten, z. B. Kennwörter, Schlüssel und Verbindungszeichenfolgen verwendet werden.  
  
 Wenn Sie diese Methode während des Identitätswechsels verwenden, wird möglicherweise folgende Fehlermeldung: "Schlüssel ist nicht gültig für die Verwendung im angegebenen Status." Dies tritt auf, da die DPAPI Schlüsseldaten in Benutzerprofilen gespeichert werden. Wenn das Profil nicht geladen wird, wird nicht DPAPI die Entschlüsselung ausführen kann. Um diesen Fehler zu vermeiden, laden Sie das Profil des Benutzers, die Sie vor dem Aufrufen einer dieser Methoden annehmen möchten. Identitätswechsel mit DPAPI kann entstehen erhebliche Komplikation und erfordert eine sorgfältige Entwurfsoptionen.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie Schutz von Daten verwendet wird.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Ein Bytearray, das die zu verschlüsselnden Daten enthält.</param>
        <param name="optionalEntropy">Ein optionales zusätzliches Bytearray, das verwendet wurde, um die Komplexität der Verschlüsselung zu vergrößern, oder <see langword="null" /> für keine zusätzliche Komplexität.</param>
        <param name="scope">Einer der Enumerationswerte, der den Bereich der Verschlüsselung angibt.</param>
        <summary>Verschlüsselt die Daten in einem angegebenen Bytearray und gibt ein Bytearray zurück, das die verschlüsselten Daten enthält.</summary>
        <returns>Ein Bytearray, das die verschlüsselten Daten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann zum Verschlüsseln von Daten wie Kennwörter, Schlüssel und Verbindungszeichenfolgen verwendet werden. Die `optionalEntropy` Parameter können Sie zum Hinzufügen von Daten, um die Komplexität der Verschlüsselung zu erhöhen, geben `null` für keine zusätzliche Komplexität. Wenn angegeben, diese Informationen muss eingesetzt werden beim Entschlüsseln der Daten mithilfe der <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> Methode.  
  
> [!NOTE]
>  Wenn Sie diese Methode während des Identitätswechsels verwenden, wird möglicherweise folgende Fehlermeldung: "Schlüssel ist nicht gültig für die Verwendung im angegebenen Status." Um diesen Fehler zu vermeiden, laden Sie das Profil des Benutzers, die Sie vor dem Aufrufen der Methode annehmen möchten.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie Schutz von Daten verwendet wird.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="userData" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Verschlüsselung ist fehlgeschlagen.</exception>
        <exception cref="T:System.NotSupportedException">Dieses Methode wird vom Betriebssystem nicht unterstützt.</exception>
        <exception cref="T:System.OutOfMemoryException">Es steht nicht genügend Arbeitsspeicher zum Verschlüsseln der Daten zur Verfügung.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">mit dem zugeordneten <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> Flag für die Berechtigung, um Daten zu schützen.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Ein Bytearray, das Daten enthält, die mit der <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />-Methode verschlüsselt wurden.</param>
        <param name="optionalEntropy">Ein optionales zusätzliches Bytearray, das verwendet wurde, um die Daten zu verschlüsseln, oder <see langword="null" />, wenn das zusätzliche Bytearray nicht verwendet wurde.</param>
        <param name="scope">Einer der Enumerationswerte, der den Bereich des Datenschutzes angibt, der verwendet wurde, um die Daten zu verschlüsseln.</param>
        <summary>Entschlüsselt die Daten in einem angegebenen Bytearray und gibt ein Bytearray zurück, das die entschlüsselten Daten enthält.</summary>
        <returns>Ein Bytearray, das die entschlüsselten Daten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, Daten, die mit verschlüsselt wurde, den Schutz der <xref:System.Security.Cryptography.ProtectedData.Protect%2A> Methode. Wenn die `optionalEntropy` Parameter beim Verschlüsseln verwendet wurde, muss angegeben werden, um die Daten zu entschlüsseln.  
  
> [!NOTE]
>  Wenn Sie diese Methode während des Identitätswechsels verwenden, wird möglicherweise folgende Fehlermeldung: "Schlüssel ist nicht gültig für die Verwendung im angegebenen Status." Um diesen Fehler zu vermeiden, laden Sie das Profil des Benutzers, die Sie vor dem Aufrufen der Methode annehmen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Schutz von Daten verwenden.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="encryptedData" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Entschlüsselung ist fehlgeschlagen.</exception>
        <exception cref="T:System.NotSupportedException">Dieses Methode wird vom Betriebssystem nicht unterstützt.</exception>
        <exception cref="T:System.OutOfMemoryException">Nicht genügend Arbeitsspeicher.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">mit dem zugeordneten <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> Flag für die Berechtigung zum Aufheben des Schutzes von Daten.</permission>
      </Docs>
    </Member>
  </Members>
</Type>