<Type Name="ECDsaOpenSsl" FullName="System.Security.Cryptography.ECDsaOpenSsl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03f5a7d6803303dc64d6877dcbc7c5aae8bd0fdc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82392864" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDsaOpenSsl : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaOpenSsl extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaOpenSsl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaOpenSsl&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaOpenSsl sealed : System::Security::Cryptography::ECDsa" />
  <TypeSignature Language="F#" Value="type ECDsaOpenSsl = class&#xA;    inherit ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Implementierung des von OpenSSL unterstützten ECDSA (Elliptic Curve Digital Signature Algorithm) bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Diese Klasse sollte nur direkt verwendet werden, wenn Sie Platt Form Interop mit der OpenSSL-Systembibliothek durchgeführt werden.
Wenn eine plattformübergreifende Interoperabilität nicht erforderlich ist, sollten Sie die <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> Factorymethoden anstelle einer bestimmten abgeleiteten Implementierung verwenden.
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.
Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize>-Eigenschaft auf 521 fest, und wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Zielkurve zu identifizieren.
Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.
 
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : int -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize">Die Größe des Schlüssels. Gültige Schlüsselgrößen sind 256, 384 und 521 Bits.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse mit einer angegebenen Zielschlüsselgröße.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.
Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize>-Eigenschaft auf den angegebenen Wert fest. Wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Ziel Kurve zu identifizieren.
Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.
 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die <paramref name="keySize" /> gibt eine ungültige Länge an.</exception>
        <altmember cref="Overload:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : nativeint -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Der OpenSSL-Wert <c>EC_KEY*</c>, der als Schlüssel verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse aus einem vorhandenen OpenSSL-Schlüssel, der als <c>EC_KEY*</c> dargestellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> OpenSSL unterstützt, dass mehrere Bibliotheksversionen innerhalb desselben Prozesses geladen werden.
> Vergewissern Sie sich vor dem Aufrufen dieses Konstruktors, dass der Zeiger Wert von der gleichen OpenSSL-Version stammt, die von dieser Klasse verwendet wird. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="handle" /> ist <see cref="F:System.IntPtr.Zero" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="handle" /> ist für <c>EC_KEY *</c> nicht gültig.</exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">Die Kurve, die für das Generieren eines kurzlebigen Paars aus privatem und öffentlichem Schlüssel verwendet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse und generiert einen neuen Schlüssel für die angegebene Kurve.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="curve" /> führt keine Validierung durch.</exception>
        <altmember cref="M:System.Security.Cryptography.ECCurve.Validate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.SafeEvpPKeyHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkeyHandle As SafeEvpPKeyHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::SafeEvpPKeyHandle ^ pkeyHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.SafeEvpPKeyHandle -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl pkeyHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkeyHandle" Type="System.Security.Cryptography.SafeEvpPKeyHandle" />
      </Parameters>
      <Docs>
        <param name="pkeyHandle">Der OpenSSL-<c>EVP_PKEY*</c>-Wert, der als Schlüssel verwendet werden soll und als <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> dargestellt wird</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse aus einem vorhandenen OpenSSL-Schlüssel, der als <c>EVP_PKEY*</c> dargestellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> OpenSSL unterstützt, dass mehrere Bibliotheksversionen innerhalb desselben Prozesses geladen werden.
> Vergewissern Sie sich vor dem Aufrufen dieses Konstruktors, dass der Zeiger Wert von der gleichen OpenSSL-Version stammt, die von dieser Klasse verwendet wird.
> Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pkeyHandle" /> stellt ein ungültiges Handle dar.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="pkeyHandle" /> ist <see langword="null" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pkeyHandle" /> stellt keinen Schlüssel für eine elliptische Kurve (EC) dar.</exception>
        <seealso cref="P:System.Security.Cryptography.SafeEvpPKeyValue.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDsaOpenSsl.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die Ressourcen frei, die von der aktuellen Instanz der Klasse <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> verwendet werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.DuplicateKeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateKeyHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateKeyHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateKeyHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="eCDsaOpenSsl.DuplicateKeyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />-Darstellung des kryptografischen Schlüssels ab.</summary>
        <returns>Eine <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />-Darstellung des kryptografischen Werts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
Jeder Aufrufe dieser Methode erzeugt ein neues <xref:System.Security.Cryptography.SafeEvpPKeyHandle>-Objekt mit seiner eigenen Lebensdauer.
Die von dieser Methode zurückgegebenen Objekte können auch dann sicher verwendet werden, wenn diese <xref:System.Security.Cryptography.ECDsaOpenSsl> Instanz verworfen wurde.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Exportiert die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt (Elliptic Curve Cryptography) verwendet werden, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt.</summary>
        <returns>Die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt verwendet werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Fehler beim Abrufen der Kurvenwerte.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Exportiert den Schlüssel, der vom ECC-Objekt (Elliptic Curve Cryptography) verwendet wird, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt. Wenn der Schlüssel als benannte Kurve erstellt wurde, enthält das Feld <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> benannte Kurvenparameter, andernfalls enthält sie explizite Parameter.</summary>
        <returns>Die Schlüssel- und die benannten Kurvenparameter, die vom ECC-Objekt verwendet werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Fehler beim Abrufen der Kurvenwerte.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDsaOpenSsl.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">Die Kurve zum Generieren des Schlüssels.</param>
        <summary>Generiert ein neues kurzlebiges Paar aus privatem und öffentlichem Schlüssel für die angegebene Kurve und ersetzt den aktuellen Schlüssel.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">Der binäre Datenstrom, für den der Hashwert berechnet werden soll.</param>
        <param name="hashAlgorithm">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</param>
        <summary>Berechnet den Hashwert des angegebenen Binärdatenstroms mithilfe des angegebenen Hashalgorithmus.</summary>
        <returns>Die Daten, für die der Hashwert berechnet wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">Die Daten, für die der Hashwert berechnet werden soll.</param>
        <param name="offset">Der Index des ersten Bytes in <paramref name="data" />, für das der Hashwert berechnet werden soll.</param>
        <param name="count">Die Anzahl der Bytes, für die der Hashwert berechnet werden soll.</param>
        <param name="hashAlgorithm">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</param>
        <summary>Berechnet den Hashwert des angegebenen Teils eines Bytearrays mithilfe des angegebenen Hashalgorithmus.</summary>
        <returns>Die Daten, für die der Hashwert berechnet wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDsaOpenSsl.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">Die Kurvenparameter.</param>
        <summary>Ersetzt den aktuellen Schlüssel für diese Instanz unter Verwendung der angegebenen Schlüsselparameter durch einen anderen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `parameters` nur <xref:System.Security.Cryptography.ECParameters.Q>enthält, wird nur ein öffentlicher Schlüssel importiert. Wenn `parameters` auch <xref:System.Security.Cryptography.ECParameters.D>enthält, wird ein vollständiges Schlüsselpaar importiert. Das <xref:System.Security.Cryptography.ECParameters.Curve> Feld gibt den Typ der zu importierenden Kurve an.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="parameters" /> enthält keine gültigen Werte.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits ab oder legt diese fest.</summary>
        <value>Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Das Festlegen dieser Eigenschaft auf den aktuellen Wert hat keinen sichtbaren Effekt.
Wenn diese Eigenschaft auf einen neuen zulässigen Wert festgelegt wird, wird der aktuelle Schlüssel verworfen, aber die Erstellung eines neuen Schlüssels wird so lange festgelegt, bis eine solche benötigt wird

Da mit Schlüsselgrößen elliptische Kurven nicht eindeutig identifiziert werden, wird die Verwendung des Eigenschaften Setter nicht empfohlen. Um einen neuen Schlüssel für eine bestimmte Kurve zu generieren, verwenden Sie die <xref:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey%2A>-Methode.

]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="value" /> wird von <see cref="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" /> nicht zugelassen.</exception>
        <altmember cref="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vom Setter der <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />-Eigenschaft unterstützten Schlüsselgrößen in Bits ab.</summary>
        <value>Ein Array, das die vom <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> Eigenschaften Setter unterstützten Schlüsselgrößen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

In der Kryptografie für elliptische Kurven (ECC) ist die Schlüsselgröße nicht die einzige Eingabe in den Schlüssel Generierungsprozess, sondern wird von den Kurven Parametern für eine bestimmte elliptische Kurve abgeleitet.
Diese Eigenschaft meldet nur drei zulässige Schlüsselgrößen: 256, 384 und 521 Bits.
Wenn die Schlüsselgröße allein als Grundlage für die Schlüsselgenerierung verwendet wird, werden die unterstützten Größen den benannten Kurven secp256r1 (Alias p-256), secp384r1 (auch NIST p-384) und secp521r1 (auch NIST p-521) zugeordnet.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] -&gt; byte[]" Usage="eCDsaOpenSsl.SignHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">Der Hashwert der signierten Daten.</param>
        <summary>Generiert eine digitale Signatur für den angegebenen Hashwert.</summary>
        <returns>Eine digitale Signatur für den angegebenen Hashwert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="hash" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] -&gt; bool" Usage="eCDsaOpenSsl.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">Der Hashwert der zu überprüfenden Daten.</param>
        <param name="signature">Die digitale Signatur der Daten, die mit dem Hashwert überprüft werden sollen.</param>
        <summary>Überprüft, ob eine digitale Signatur für den aktuellen Schlüssel und den bereitgestellten Datenhash geeignet ist.</summary>
        <returns><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hash" /> oder <paramref name="signature" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
