<Type Name="ECDsaOpenSsl" FullName="System.Security.Cryptography.ECDsaOpenSsl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="009a2540b288b6ce49b71008a6e0ddb590331d4b" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75029731" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDsaOpenSsl : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaOpenSsl extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaOpenSsl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaOpenSsl&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaOpenSsl sealed : System::Security::Cryptography::ECDsa" />
  <TypeSignature Language="F#" Value="type ECDsaOpenSsl = class&#xA;    inherit ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3e475-101">Stellt eine Implementierung des von OpenSSL unterstützten ECDSA (Elliptic Curve Digital Signature Algorithm) bereit.</span><span class="sxs-lookup"><span data-stu-id="3e475-101">Provides an implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) backed by OpenSSL.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="3e475-102">Diese Klasse sollte nur direkt verwendet werden, wenn Sie Platt Form Interop mit der OpenSSL-Systembibliothek durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="3e475-102">This class should only be used directly when doing platform interop with the system OpenSSL library.</span></span>
<span data-ttu-id="3e475-103">Wenn eine plattformübergreifende Interoperabilität nicht erforderlich ist, sollten Sie die <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> Factorymethoden anstelle einer bestimmten abgeleiteten Implementierung verwenden.</span><span class="sxs-lookup"><span data-stu-id="3e475-103">When platform interop is not needed, you should use the <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> factory methods instead of a specific derived implementation.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e475-104">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3e475-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3e475-105">Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="3e475-105">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="3e475-106">Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize>-Eigenschaft auf 521 fest, und wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Zielkurve zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="3e475-106">This constructor sets the <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> property to 521 and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="3e475-107">Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="3e475-107">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
 
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : int -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="3e475-108">Die Größe des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="3e475-108">The size of the key.</span></span> <span data-ttu-id="3e475-109">Gültige Schlüsselgrößen sind 256, 384 und 521 Bits.</span><span class="sxs-lookup"><span data-stu-id="3e475-109">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="3e475-110">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse mit einer angegebenen Zielschlüsselgröße.</span><span class="sxs-lookup"><span data-stu-id="3e475-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class with a specified target key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3e475-111">Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="3e475-111">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="3e475-112">Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize>-Eigenschaft auf den angegebenen Wert fest. Wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Ziel Kurve zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="3e475-112">This constructor sets the <xref:System.Security.Cryptography.ECDsaOpenSsl.KeySize> property to the provided value and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="3e475-113">Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="3e475-113">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-114">Die <paramref name="keySize" /> gibt eine ungültige Länge an.</span><span class="sxs-lookup"><span data-stu-id="3e475-114"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : nativeint -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="3e475-115">Der OpenSSL-Wert <c>EC_KEY\*</c>, der als Schlüssel verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-115">The OpenSSL <c>EC_KEY\*</c> value to use as the key.</span></span></param>
        <summary><span data-ttu-id="3e475-116">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse aus einem vorhandenen OpenSSL-Schlüssel, der als <c>EC_KEY\*</c> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="3e475-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class from an existing OpenSSL key represented as an <c>EC_KEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="3e475-117">OpenSSL unterstützt, dass mehrere Bibliotheksversionen innerhalb desselben Prozesses geladen werden.</span><span class="sxs-lookup"><span data-stu-id="3e475-117">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="3e475-118">Vergewissern Sie sich vor dem Aufrufen dieses Konstruktors, dass der Zeiger Wert von der gleichen OpenSSL-Version stammt, die von dieser Klasse verwendet wird. Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="3e475-118">Before calling this constructor verify your pointer value came from the same version of OpenSSL that this class uses, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion> for more information.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e475-119"><paramref name="handle" /> ist <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-119"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-120"><paramref name="handle" /> ist für <c>EC_KEY \*</c> nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="3e475-120"><paramref name="handle" /> is not a valid <c>EC_KEY\*</c>.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="3e475-121">Die Kurve, die für das Generieren eines kurzlebigen Paars aus privatem und öffentlichem Schlüssel verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3e475-121">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="3e475-122">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse und generiert einen neuen Schlüssel für die angegebene Kurve.</span><span class="sxs-lookup"><span data-stu-id="3e475-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class and generates a new key on the specified curve.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-123"><paramref name="curve" /> führt keine Validierung durch.</span><span class="sxs-lookup"><span data-stu-id="3e475-123"><paramref name="curve" /> does not validate.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECCurve.Validate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaOpenSsl (System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.#ctor(System.Security.Cryptography.SafeEvpPKeyHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkeyHandle As SafeEvpPKeyHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaOpenSsl(System::Security::Cryptography::SafeEvpPKeyHandle ^ pkeyHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaOpenSsl : System.Security.Cryptography.SafeEvpPKeyHandle -&gt; System.Security.Cryptography.ECDsaOpenSsl" Usage="new System.Security.Cryptography.ECDsaOpenSsl pkeyHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkeyHandle" Type="System.Security.Cryptography.SafeEvpPKeyHandle" />
      </Parameters>
      <Docs>
        <param name="pkeyHandle"><span data-ttu-id="3e475-124">Der OpenSSL-Wert <c>EVP_PKEY\*</c>, der als Schlüssel verwendet werden soll und als <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> dargestellt wird</span><span class="sxs-lookup"><span data-stu-id="3e475-124">The OpenSSL <c>EVP_PKEY\*</c> value to use as the key, represented as a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span></span></param>
        <summary><span data-ttu-id="3e475-125">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse aus einem vorhandenen OpenSSL-Schlüssel, der als <c>EVP_PKEY\*</c> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="3e475-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class from an existing OpenSSL key represented as an <c>EVP_PKEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="3e475-126">OpenSSL unterstützt, dass mehrere Bibliotheksversionen innerhalb desselben Prozesses geladen werden.</span><span class="sxs-lookup"><span data-stu-id="3e475-126">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="3e475-127">Vergewissern Sie sich vor dem Aufrufen dieses Konstruktors, dass der Zeiger Wert von der gleichen OpenSSL-Version stammt, die von dieser Klasse verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3e475-127">Before calling this constructor, verify your pointer value came from the same version of OpenSSL that this class uses.</span></span>
> <span data-ttu-id="3e475-128">Weitere Informationen finden Sie unter <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span><span class="sxs-lookup"><span data-stu-id="3e475-128">For more information, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e475-129"><paramref name="pkeyHandle" /> stellt ein ungültiges Handle dar.</span><span class="sxs-lookup"><span data-stu-id="3e475-129"><paramref name="pkeyHandle" /> represents an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e475-130"><paramref name="pkeyHandle" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-130"><paramref name="pkeyHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-131"><paramref name="pkeyHandle" /> stellt keinen Schlüssel für eine elliptische Kurve (EC) dar.</span><span class="sxs-lookup"><span data-stu-id="3e475-131"><paramref name="pkeyHandle" /> does not represent a elliptic curve (EC) key.</span></span></exception>
        <seealso cref="P:System.Security.Cryptography.SafeEvpPKeyValue.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDsaOpenSsl.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3e475-132"><see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="3e475-132"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3e475-133">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="3e475-133">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDsaOpenSsl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.DuplicateKeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateKeyHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateKeyHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateKeyHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="eCDsaOpenSsl.DuplicateKeyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e475-134">Ruft eine <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />-Darstellung des kryptografischen Schlüssels ab.</span><span class="sxs-lookup"><span data-stu-id="3e475-134">Gets a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="3e475-135">Eine <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />-Darstellung des kryptografischen Werts.</span><span class="sxs-lookup"><span data-stu-id="3e475-135">A <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
<span data-ttu-id="3e475-136">Jeder Aufrufe dieser Methode erzeugt ein neues <xref:System.Security.Cryptography.SafeEvpPKeyHandle>-Objekt mit seiner eigenen Lebensdauer.</span><span class="sxs-lookup"><span data-stu-id="3e475-136">Each call to this method produces a new <xref:System.Security.Cryptography.SafeEvpPKeyHandle> object with its own lifetime.</span></span>
<span data-ttu-id="3e475-137">Die von dieser Methode zurückgegebenen Objekte können auch dann sicher verwendet werden, wenn diese <xref:System.Security.Cryptography.ECDsaOpenSsl> Instanz verworfen wurde.</span><span class="sxs-lookup"><span data-stu-id="3e475-137">The objects returned by this method can safely be used even after this <xref:System.Security.Cryptography.ECDsaOpenSsl> instance has been disposed.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="3e475-138"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-138"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3e475-139">Exportiert die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt (Elliptic Curve Cryptography) verwendet werden, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="3e475-139">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="3e475-140">Die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3e475-140">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-141">Fehler beim Abrufen der Kurvenwerte.</span><span class="sxs-lookup"><span data-stu-id="3e475-141">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaOpenSsl.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="3e475-142"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-142"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3e475-143">Exportiert den Schlüssel, der vom ECC-Objekt (Elliptic Curve Cryptography) verwendet wird, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="3e475-143">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="3e475-144">Wenn der Schlüssel als benannte Kurve erstellt wurde, enthält das Feld <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> benannte Kurvenparameter, andernfalls enthält sie explizite Parameter.</span><span class="sxs-lookup"><span data-stu-id="3e475-144">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="3e475-145">Die Schlüssel- und die benannten Kurvenparameter, die vom ECC-Objekt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3e475-145">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-146">Fehler beim Abrufen der Kurvenwerte.</span><span class="sxs-lookup"><span data-stu-id="3e475-146">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDsaOpenSsl.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="3e475-147">Die Kurve zum Generieren des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="3e475-147">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="3e475-148">Generiert ein neues kurzlebiges Paar aus privatem und öffentlichem Schlüssel für die angegebene Kurve und ersetzt den aktuellen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="3e475-148">Generates a new ephemeral public/private key pair for the specified curve, replacing the current key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="3e475-149">Der binäre Datenstrom, für den der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-149">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="3e475-150">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-150">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="3e475-151">Berechnet den Hashwert des angegebenen Binärdatenstroms mithilfe des angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="3e475-151">Computes the hash value of the specified binary stream by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="3e475-152">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="3e475-152">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaOpenSsl.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="3e475-153">Die Daten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-153">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="3e475-154">Der Index des ersten Bytes in <paramref name="data" />, für das der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-154">The index of the first byte in <paramref name="data" /> to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="3e475-155">Die Anzahl der Bytes, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-155">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="3e475-156">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3e475-156">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="3e475-157">Berechnet den Hashwert des angegebenen Teils eines Bytearrays mithilfe des angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="3e475-157">Computes the hash value of the specified portion of a byte array by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="3e475-158">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="3e475-158">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDsaOpenSsl.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="3e475-159">Die Kurvenparameter.</span><span class="sxs-lookup"><span data-stu-id="3e475-159">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="3e475-160">Ersetzt den aktuellen Schlüssel für diese Instanz unter Verwendung der angegebenen Schlüsselparameter durch einen anderen.</span><span class="sxs-lookup"><span data-stu-id="3e475-160">Replaces the current key for this instance with one using the specified key parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e475-161">Wenn `parameters` nur <xref:System.Security.Cryptography.ECParameters.Q>enthält, wird nur ein öffentlicher Schlüssel importiert.</span><span class="sxs-lookup"><span data-stu-id="3e475-161">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="3e475-162">Wenn `parameters` auch <xref:System.Security.Cryptography.ECParameters.D>enthält, wird ein vollständiges Schlüsselpaar importiert.</span><span class="sxs-lookup"><span data-stu-id="3e475-162">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="3e475-163">Das <xref:System.Security.Cryptography.ECParameters.Curve> Feld gibt den Typ der zu importierenden Kurve an.</span><span class="sxs-lookup"><span data-stu-id="3e475-163">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-164"><paramref name="parameters" /> enthält keine gültigen Werte.</span><span class="sxs-lookup"><span data-stu-id="3e475-164"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDsaOpenSsl.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e475-165">Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="3e475-165">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="3e475-166">Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits.</span><span class="sxs-lookup"><span data-stu-id="3e475-166">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3e475-167">Das Festlegen dieser Eigenschaft auf den aktuellen Wert hat keinen sichtbaren Effekt.</span><span class="sxs-lookup"><span data-stu-id="3e475-167">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="3e475-168">Wenn diese Eigenschaft auf einen neuen zulässigen Wert festgelegt wird, wird der aktuelle Schlüssel verworfen, aber die Erstellung eines neuen Schlüssels wird so lange festgelegt, bis eine solche benötigt wird</span><span class="sxs-lookup"><span data-stu-id="3e475-168">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

<span data-ttu-id="3e475-169">Da mit Schlüsselgrößen elliptische Kurven nicht eindeutig identifiziert werden, wird die Verwendung des Eigenschaften Setter nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="3e475-169">Because key sizes do not uniquely identify elliptic curves, the use of the property setter is discouraged.</span></span> <span data-ttu-id="3e475-170">Um einen neuen Schlüssel für eine bestimmte Kurve zu generieren, verwenden Sie die <xref:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="3e475-170">To generate a new key on a specific curve, use the <xref:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey%2A> method.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="3e475-171"><paramref name="value" /> wird von <see cref="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" /> nicht zugelassen.</span><span class="sxs-lookup"><span data-stu-id="3e475-171"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDsaOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDsaOpenSsl.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e475-172">Ruft die vom Setter der <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />-Eigenschaft unterstützten Schlüsselgrößen in Bits ab.</span><span class="sxs-lookup"><span data-stu-id="3e475-172">Gets the key sizes, in bits, that are supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></summary>
        <value><span data-ttu-id="3e475-173">Ein Array, das die vom <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> Eigenschaften Setter unterstützten Schlüsselgrößen enthält.</span><span class="sxs-lookup"><span data-stu-id="3e475-173">An array that contains the key sizes supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="3e475-174">In der Kryptografie für elliptische Kurven (ECC) ist die Schlüsselgröße nicht die einzige Eingabe in den Schlüssel Generierungsprozess, sondern wird von den Kurven Parametern für eine bestimmte elliptische Kurve abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="3e475-174">In Elliptic Curve Cryptography (ECC) the key size is not the only input into the key generation process, it is derived from the curve parameters for a specific elliptic curve.</span></span>
<span data-ttu-id="3e475-175">Diese Eigenschaft meldet nur drei zulässige Schlüsselgrößen: 256, 384 und 521 Bits.</span><span class="sxs-lookup"><span data-stu-id="3e475-175">This property reports only three legal key sizes: 256, 384, and 521 bits.</span></span>
<span data-ttu-id="3e475-176">Wenn die Schlüsselgröße allein als Grundlage für die Schlüsselgenerierung verwendet wird, werden die unterstützten Größen den benannten Kurven secp256r1 (Alias p-256), secp384r1 (auch NIST p-384) und secp521r1 (auch NIST p-521) zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="3e475-176">When the key size is used alone as a basis for key generation, the supported sizes map to the named curves secp256r1 (aka NIST P-256), secp384r1 (aka NIST P-384), and secp521r1 (aka NIST P-521).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] -&gt; byte[]" Usage="eCDsaOpenSsl.SignHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="3e475-177">Der Hashwert der signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="3e475-177">The hash value of the data that is being signed.</span></span></param>
        <summary><span data-ttu-id="3e475-178">Generiert eine digitale Signatur für den angegebenen Hashwert.</span><span class="sxs-lookup"><span data-stu-id="3e475-178">Generates a digital signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="3e475-179">Eine digitale Signatur für den angegebenen Hashwert.</span><span class="sxs-lookup"><span data-stu-id="3e475-179">A digital signature for the specified hash value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e475-180">Der <paramref name="hash" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-180">The <paramref name="hash" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaOpenSsl.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] -&gt; bool" Usage="eCDsaOpenSsl.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="3e475-181">Der Hashwert der zu überprüfenden Daten.</span><span class="sxs-lookup"><span data-stu-id="3e475-181">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="3e475-182">Die digitale Signatur der Daten, die mit dem Hashwert überprüft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3e475-182">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="3e475-183">Überprüft, ob eine digitale Signatur für den aktuellen Schlüssel und den bereitgestellten Datenhash geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="3e475-183">Verifies that a digital signature is appropriate for the current key and provided data hash.</span></span></summary>
        <returns><span data-ttu-id="3e475-184"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-184"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e475-185"><paramref name="hash" /> oder <paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e475-185"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
