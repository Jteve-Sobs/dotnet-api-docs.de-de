<Type Name="HashAlgorithm" FullName="System.Security.Cryptography.HashAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HashAlgorithm extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HashAlgorithm&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class HashAlgorithm abstract : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="85121-101">Stellt die Basisklasse dar, von der alle Implementierungen kryptografischer Hashalgorithmen abgeleitet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="85121-101">Represents the base class from which all implementations of cryptographic hash algorithms must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-102">Hashfunktionen sind grundlegende moderner Kryptografie.</span><span class="sxs-lookup"><span data-stu-id="85121-102">Hash functions are fundamental to modern cryptography.</span></span> <span data-ttu-id="85121-103">Diese Funktionen ordnen binäre Zeichenfolgen beliebiger Länge kleinen binären Zeichenfolgen mit fester Länge, die als Hashwerte bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="85121-103">These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</span></span> <span data-ttu-id="85121-104">Eine kryptografischen Hashfunktion hat die Eigenschaft, dass es rechnerisch unmöglich, zwei verschiedene Eingabewerte, die denselben Hashwert gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="85121-104">A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</span></span> <span data-ttu-id="85121-105">Hashfunktionen werden häufig mit digitalen Signaturen und Datenintegrität verwendet.</span><span class="sxs-lookup"><span data-stu-id="85121-105">Hash functions are commonly used with digital signatures and for data integrity.</span></span>  
  
 <span data-ttu-id="85121-106">Der Hashwert dient als eindeutiger Wert mit fester Größe, die eine große Datenmenge darstellt.</span><span class="sxs-lookup"><span data-stu-id="85121-106">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="85121-107">Hashes von zwei Sätzen von Daten übereinstimmen, wenn auch die entsprechenden Daten übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="85121-107">Hashes of two sets of data should match if the corresponding data also matches.</span></span> <span data-ttu-id="85121-108">Kleine Änderungen an den Daten führen in umfangreichen unvorhersehbare Änderungen im HashSet.</span><span class="sxs-lookup"><span data-stu-id="85121-108">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85121-109">Im folgenden Codebeispiel Beispiel berechnet den <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> Hash für ein Array.</span><span class="sxs-lookup"><span data-stu-id="85121-109">The following code example computes the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> hash for an array.</span></span> <span data-ttu-id="85121-110">In diesem Beispiel wird davon ausgegangen, dass es ein vordefiniertes Bytearray ist `dataArray[]`.</span><span class="sxs-lookup"><span data-stu-id="85121-110">This example assumes that there is a predefined byte array `dataArray[]`.</span></span> <span data-ttu-id="85121-111"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> ist eine abgeleitete Klasse von <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="85121-111"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is a derived class of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  
  
 [!code-cpp[Classic HashAlgorithm Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HashAlgorithm Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CS/source.cs#1)]
 [!code-vb[Classic HashAlgorithm Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="85121-112">Beim Erben von der <see cref="T:System.Security.Cryptography.HashAlgorithm" /> -Klasse, müssen Sie die folgenden Member überschreiben: <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span><span class="sxs-lookup"><span data-stu-id="85121-112">When you inherit from the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class, you must override the following members:  <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HashAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-113">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="85121-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-114">Eine Instanz einer abstrakten Klasse kann nicht erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="85121-114">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="85121-115">Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="85121-115">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-116">Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="85121-116">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="85121-117">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="85121-117">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public virtual bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-118">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob mehrere Blöcke transformiert werden können.</span><span class="sxs-lookup"><span data-stu-id="85121-118">When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value>
          <span data-ttu-id="85121-119"><see langword="true" />, wenn mehrere Blöcke transformiert werden können, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="85121-119"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-120">Gibt alle von der <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="85121-120">Releases all resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-121">Diese Methode ist ein einfacher Aufruf der <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="85121-121">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="85121-122">Aufrufen von `Dispose` können Ressourcen von der <xref:System.Security.Cryptography.HashAlgorithm> Klasse für andere Zwecke neu reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="85121-122">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.HashAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="85121-123">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="85121-123">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85121-124">Berechnet den Hashwert für die Eingabedaten.</span><span class="sxs-lookup"><span data-stu-id="85121-124">Computes the hash value for the input data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="85121-125">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-125">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="85121-126">Berechnet den Hashwert für das angegebene Bytearray.</span><span class="sxs-lookup"><span data-stu-id="85121-126">Computes the hash value for the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="85121-127">Der berechnete Hashcode.</span><span class="sxs-lookup"><span data-stu-id="85121-127">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85121-128">Das folgende Beispiel berechnet den <xref:System.Security.Cryptography.MD5> Hashwert einer Zeichenfolge und gibt den Hash als 32-Zeichen, hexadezimal-formatierte Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="85121-128">The following example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.</span></span>  <span data-ttu-id="85121-129">Die Hashzeichenfolge, die durch dieses Codebeispiel erstellt, ist jede MD5-Hash-Funktion (auf einer beliebigen Plattform), die von einer 32-Zeichen, Hexadezimalformat Hashzeichenfolge erstellt kompatibel.</span><span class="sxs-lookup"><span data-stu-id="85121-129">The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</span></span>  
  
 [!code-csharp[Security.Cryptography.MD5#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.MD5/cs/example.cs#1)]
 [!code-vb[Security.Cryptography.MD5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.MD5/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85121-130"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="85121-130"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-131">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-131">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="85121-132">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-132">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="85121-133">Berechnet den Hashwert für das angegebene <see cref="T:System.IO.Stream" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="85121-133">Computes the hash value for the specified <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="85121-134">Der berechnete Hashcode.</span><span class="sxs-lookup"><span data-stu-id="85121-134">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85121-135">Das folgende Beispiel berechnet den <xref:System.Security.Cryptography.RIPEMD160> Hash für alle Dateien in einem Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="85121-135">The following example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-136">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-136">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="85121-137">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-137">The input to compute the hash code for.</span></span></param>
        <param name="offset"><span data-ttu-id="85121-138">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-138">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="85121-139">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-139">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="85121-140">Berechnet den Hashwert für den angegebenen Bereich des angegebenen Bytearrays.</span><span class="sxs-lookup"><span data-stu-id="85121-140">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="85121-141">Der berechnete Hashcode.</span><span class="sxs-lookup"><span data-stu-id="85121-141">The computed hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85121-142"><paramref name="count" /> ist ein ungültiger Wert.</span><span class="sxs-lookup"><span data-stu-id="85121-142"><paramref name="count" /> is an invalid value.</span></span>  
  
 <span data-ttu-id="85121-143">- oder - </span><span class="sxs-lookup"><span data-stu-id="85121-143">-or-</span></span>  
  
 <span data-ttu-id="85121-144">Die <paramref name="buffer" />-Länge ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="85121-144"><paramref name="buffer" /> length is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85121-145"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="85121-145"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85121-146"><paramref name="offset" /> liegt außerhalb des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="85121-146"><paramref name="offset" /> is out of range.</span></span> <span data-ttu-id="85121-147">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="85121-147">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-148">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-148">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85121-149">Erstellt eine Instanz der Implementierung eines Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="85121-149">Creates an instance of an implementation of a hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-150">Erstellt eine Instanz der Standardimplementierung eines Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="85121-150">Creates an instance of the default implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="85121-151">Eine neue <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />-Instanz, sofern die Standardeinstellungen nicht geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="85121-151">A new <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> instance, unless the default settings have been changed using the .</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-152">Diese Überladung verwendet standardmäßig die <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> Implementierung eines Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="85121-152">By default, this overload uses the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> implementation of a hash algorithm.</span></span> <span data-ttu-id="85121-153">Wenn Sie eine andere Implementierung angeben möchten, verwenden Sie die <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> überladen, sodass Sie stattdessen einen Algorithmusnamen angeben können.</span><span class="sxs-lookup"><span data-stu-id="85121-153">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span> <span data-ttu-id="85121-154">Das Konfigurationssystem Kryptografie definiert die standardmäßige Implementierung des <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="85121-154">The cryptography configuration system defines the default implementation of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create (string hashName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create(string hashName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (hashName As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create(System::String ^ hashName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hashName"><span data-ttu-id="85121-155">Die zu verwendende Implementierung des Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="85121-155">The hash algorithm implementation to use.</span></span> <span data-ttu-id="85121-156">Die folgende Tabelle zeigt die gültigen Werte für den <c>hashName</c>-Parameter sowie die Algorithmen, denen sie zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="85121-156">The following table shows the valid values for the <c>hashName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="85121-157"><list type="table"><listheader><term>-Parameterwert</span><span class="sxs-lookup"><span data-stu-id="85121-157"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="85121-158"></term><description> implementiert</span><span class="sxs-lookup"><span data-stu-id="85121-158"></term><description> Implements</span></span>  
  
 <span data-ttu-id="85121-159"></description></listheader><item><term> SHA</span><span class="sxs-lookup"><span data-stu-id="85121-159"></description></listheader><item><term> SHA</span></span>  
  
 <span data-ttu-id="85121-160"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> SHA1</span><span class="sxs-lookup"><span data-stu-id="85121-160"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> SHA1</span></span>  
  
 <span data-ttu-id="85121-161"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.SHA1</span><span class="sxs-lookup"><span data-stu-id="85121-161"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.SHA1</span></span>  
  
 <span data-ttu-id="85121-162"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.HashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="85121-162"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.HashAlgorithm</span></span>  
  
 <span data-ttu-id="85121-163"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> MD5</span><span class="sxs-lookup"><span data-stu-id="85121-163"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> MD5</span></span>  
  
 <span data-ttu-id="85121-164"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.MD5</span><span class="sxs-lookup"><span data-stu-id="85121-164"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.MD5</span></span>  
  
 <span data-ttu-id="85121-165"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> SHA256</span><span class="sxs-lookup"><span data-stu-id="85121-165"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> SHA256</span></span>  
  
 <span data-ttu-id="85121-166"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA-256</span><span class="sxs-lookup"><span data-stu-id="85121-166"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA-256</span></span>  
  
 <span data-ttu-id="85121-167"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> System.Security.Cryptography.SHA256</span><span class="sxs-lookup"><span data-stu-id="85121-167"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> System.Security.Cryptography.SHA256</span></span>  
  
 <span data-ttu-id="85121-168"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA384</span><span class="sxs-lookup"><span data-stu-id="85121-168"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA384</span></span>  
  
 <span data-ttu-id="85121-169"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA-384</span><span class="sxs-lookup"><span data-stu-id="85121-169"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA-384</span></span>  
  
 <span data-ttu-id="85121-170"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> System.Security.Cryptography.SHA384</span><span class="sxs-lookup"><span data-stu-id="85121-170"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> System.Security.Cryptography.SHA384</span></span>  
  
 <span data-ttu-id="85121-171"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA512</span><span class="sxs-lookup"><span data-stu-id="85121-171"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA512</span></span>  
  
 <span data-ttu-id="85121-172"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> SHA-512</span><span class="sxs-lookup"><span data-stu-id="85121-172"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> SHA-512</span></span>  
  
 <span data-ttu-id="85121-173"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> System.Security.Cryptography.SHA512</span><span class="sxs-lookup"><span data-stu-id="85121-173"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> System.Security.Cryptography.SHA512</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item></list></param>
        <summary><span data-ttu-id="85121-174">Erstellt eine Instanz der angegebenen Implementierung eines Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="85121-174">Creates an instance of the specified implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="85121-175">Eine neue Instanz des angegebenen Hashalgorithmus oder <see langword="null" />, wenn <paramref name="hashName" /> kein gültiger Hashalgorithmus ist.</span><span class="sxs-lookup"><span data-stu-id="85121-175">A new instance of the specified hash algorithm, or <see langword="null" /> if <paramref name="hashName" /> is not a valid hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85121-176">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="85121-176">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-177">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="85121-177">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-178">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.HashAlgorithm> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="85121-178">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="85121-179">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.HashAlgorithm> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="85121-179">The `Dispose` method leaves the <xref:System.Security.Cryptography.HashAlgorithm> in an unusable state.</span></span> <span data-ttu-id="85121-180">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.Cryptography.HashAlgorithm> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.Cryptography.HashAlgorithm> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="85121-180">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.HashAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.HashAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="85121-181">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="85121-181">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85121-182">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.HashAlgorithm> freigeben.</span><span class="sxs-lookup"><span data-stu-id="85121-182">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="85121-183">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.HashAlgorithm>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="85121-183">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.HashAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="85121-184"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="85121-184"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="85121-185">Gibt die von <see cref="T:System.Security.Cryptography.HashAlgorithm" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="85121-185">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-186">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die `Finalize` Methode.</span><span class="sxs-lookup"><span data-stu-id="85121-186">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="85121-187">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="85121-187">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="85121-188">`Finalize` Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="85121-188">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="85121-189">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.HashAlgorithm> verweist.</span><span class="sxs-lookup"><span data-stu-id="85121-189">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HashAlgorithm> references.</span></span> <span data-ttu-id="85121-190">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="85121-190">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="85121-191"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="85121-191"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="85121-192">Zum Überschreiben <see langword="Dispose(Boolean)" />müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="85121-192">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="85121-193">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="85121-193">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="85121-194">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="85121-194">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public virtual byte[] Hash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Hash" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.Hash" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Hash As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Hash { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-195">Ruft den Wert des berechneten Hashcodes ab.</span><span class="sxs-lookup"><span data-stu-id="85121-195">Gets the value of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="85121-196">Der aktuelle Wert des berechneten Hashcodes.</span><span class="sxs-lookup"><span data-stu-id="85121-196">The current value of the computed hash code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-197">Die <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> Eigenschaft ist ein Bytearray; das <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> Eigenschaft ist ein Wert, der Bits darstellen.</span><span class="sxs-lookup"><span data-stu-id="85121-197">The <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property is a byte array; the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property is a value that represent bits.</span></span> <span data-ttu-id="85121-198">Aus diesem Grund die Anzahl der Elemente im <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> ist ein Achtel die Größe der <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="85121-198">Therefore, the number of elements in <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> is one-eighth the size of <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="85121-199"><see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="85121-199"><see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-200">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-200">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected virtual void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected abstract void HashCore (byte[] array, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(unsigned int8[] array, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HashCore (array As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HashCore(cli::array &lt;System::Byte&gt; ^ array, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="85121-201">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-201">The input to compute the hash code for.</span></span></param>
        <param name="ibStart"><span data-ttu-id="85121-202">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-202">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="85121-203">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-203">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="85121-204">Leitet beim Überschreiben in einer abgeleiteten Klasse die in das Objekt geschriebenen Daten zum Errechnen des Hashs an den Hashalgorithmus weiter.</span><span class="sxs-lookup"><span data-stu-id="85121-204">When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-205">Diese Methode wird vom Anwendungscode nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="85121-205">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="85121-206">Diese abstrakte Methode führt die Berechnung des Hashs.</span><span class="sxs-lookup"><span data-stu-id="85121-206">This abstract method performs the hash computation.</span></span> <span data-ttu-id="85121-207">Bei jedem Schreibvorgang für das Kryptografiestreamobjekt übergibt die Daten über diese Methode.</span><span class="sxs-lookup"><span data-stu-id="85121-207">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="85121-208">Für jeden Block von Daten aktualisiert diese Methode den Zustand des Hashobjekts so ein richtige Hashwert am Ende des Datenstroms zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="85121-208">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected abstract byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-209">Schließt beim Überschreiben in einer abgeleiteten Klasse die Berechnung des Hashs ab, nachdem die letzten Daten vom Kryptografiestreamobjekt verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="85121-209">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="85121-210">Der berechnete Hashcode.</span><span class="sxs-lookup"><span data-stu-id="85121-210">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-211">Diese Methode schließt alle partiellen Berechnung ab und gibt den richtigen Hashwert für den Datenstrom zurück.</span><span class="sxs-lookup"><span data-stu-id="85121-211">This method finalizes any partial computation and returns the correct hash value for the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSize">
      <MemberSignature Language="C#" Value="public virtual int HashSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-212">Ruft die Größe des berechneten Hashcodes in Bits ab.</span><span class="sxs-lookup"><span data-stu-id="85121-212">Gets the size, in bits, of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="85121-213">Die Größe des berechneten Hashcodes in Bits.</span><span class="sxs-lookup"><span data-stu-id="85121-213">The size, in bits, of the computed hash code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSizeValue">
      <MemberSignature Language="C#" Value="protected int HashSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 HashSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected HashSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int HashSizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-214">Stellt die Größe des berechneten Hashcodes in Bits dar.</span><span class="sxs-lookup"><span data-stu-id="85121-214">Represents the size, in bits, of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-215">Der Hashalgorithmus gibt die Größe des Hashcodes.</span><span class="sxs-lookup"><span data-stu-id="85121-215">The hash algorithm specifies the size of the hash code.</span></span> <span data-ttu-id="85121-216">Beispielsweise <xref:System.Security.Cryptography.SHA1> eine Hashgröße von 160 Bits verwendet.</span><span class="sxs-lookup"><span data-stu-id="85121-216">For example, <xref:System.Security.Cryptography.SHA1> uses a hash size of 160 bits.</span></span>  
  
 <span data-ttu-id="85121-217">Dieses Feld erfolgt über die <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="85121-217">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashValue">
      <MemberSignature Language="C#" Value="protected internal byte[] HashValue;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly unsigned int8[] HashValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend HashValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::Byte&gt; ^ HashValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-218">Stellt den Wert des errechneten Hashcodes dar.</span><span class="sxs-lookup"><span data-stu-id="85121-218">Represents the value of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-219">Dieses Feld erfolgt über die <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="85121-219">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85121-220">Initialisiert eine Implementierung der <see cref="T:System.Security.Cryptography.HashAlgorithm" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="85121-220">Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-221">Ruft beim Überschreiben in einer abgeleiteten Klasse die Eingabeblockgröße ab.</span><span class="sxs-lookup"><span data-stu-id="85121-221">When overridden in a derived class, gets the input block size.</span></span></summary>
        <value><span data-ttu-id="85121-222">Die Eingabeblockgröße.</span><span class="sxs-lookup"><span data-stu-id="85121-222">The input block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-223">Außer außer Kraft gesetzt wird, gibt diese Eigenschaft den Wert 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="85121-223">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-224">Ruft beim Überschreiben in einer abgeleiteten Klasse die Ausgabeblockgröße ab.</span><span class="sxs-lookup"><span data-stu-id="85121-224">When overridden in a derived class, gets the output block size.</span></span></summary>
        <value><span data-ttu-id="85121-225">Die Ausgabeblockgröße.</span><span class="sxs-lookup"><span data-stu-id="85121-225">The output block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-226">Außer außer Kraft gesetzt wird, gibt diese Eigenschaft den Wert 1 zurück.</span><span class="sxs-lookup"><span data-stu-id="85121-226">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected int State;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 State" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.State" />
      <MemberSignature Language="VB.NET" Value="Protected State As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int State;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85121-227">Stellt den Zustand der Hashberechnung dar.</span><span class="sxs-lookup"><span data-stu-id="85121-227">Represents the state of the hash computation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-228">Dieses Feld wird verwendet, um zu verhindern, dass Benutzer den Schlüssel eines schlüsselgebundenen Hashalgorithmus während eines Hash-Vorgangs ändern.</span><span class="sxs-lookup"><span data-stu-id="85121-228">This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</span></span> <span data-ttu-id="85121-229">Wenn eine schlüsseländerung legitim ist, ist der Wert dieses Felds 0 (null), vor und nach einem Hash Vorgang.</span><span class="sxs-lookup"><span data-stu-id="85121-229">When a key change is legitimate, the value of this field is zero both before and after a hash operation.</span></span> <span data-ttu-id="85121-230">Wenn eine schlüsseländerung nicht legitim ist, ist der Wert dieses Felds ungleich NULL.</span><span class="sxs-lookup"><span data-stu-id="85121-230">When a key change is not legitimate, the value of this field is nonzero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="85121-231">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-231">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="85121-232">Der Offset im Eingabebytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-232">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="85121-233">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-233">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="85121-234">Eine Kopie des Teils des Eingabearrays, mit dessen Hilfe der Hashcode berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="85121-234">A copy of the part of the input array used to compute the hash code.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="85121-235">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-235">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="85121-236">Berechnet den Hashwert für den angegebenen Bereich des Eingabebytearrays und kopiert den angegebenen Bereich des Eingabebytearrays in den angegebenen Bereich des Ausgabebytearrays.</span><span class="sxs-lookup"><span data-stu-id="85121-236">Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="85121-237">Die Anzahl der geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="85121-237">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-238">Rufen Sie die <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> Methode vor dem Aufruf der <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="85121-238">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method before calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method.</span></span> <span data-ttu-id="85121-239">Sie müssen beide Methoden aufrufen, bevor Sie den letzten Hashwert abrufen.</span><span class="sxs-lookup"><span data-stu-id="85121-239">You must call both methods before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="85121-240">Zum Abrufen der letzten Hashwert nach dem Aufruf der <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> -Methode erhalten Sie das Bytearray, das als Bestandteil der <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="85121-240">To retrieve the final hash value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained within the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 <span data-ttu-id="85121-241">Aufrufen der <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> Methode mit unterschiedliche Eingabe- und Ausgabearrays führt zu einer <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="85121-241">Calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method with different input and output arrays results in an <xref:System.IO.IOException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85121-242">Im folgenden Codebeispiel Beispiele verwenden die <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> Methode mit der <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> Methode, um eine Zeichenfolge zu hashen.</span><span class="sxs-lookup"><span data-stu-id="85121-242">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85121-243"><paramref name="inputCount" /> verwendet einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="85121-243"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
 <span data-ttu-id="85121-244">- oder - </span><span class="sxs-lookup"><span data-stu-id="85121-244">-or-</span></span>  
  
 <span data-ttu-id="85121-245"><paramref name="inputBuffer" /> besitzt eine ungültige Länge.</span><span class="sxs-lookup"><span data-stu-id="85121-245"><paramref name="inputBuffer" /> has an invalid length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85121-246"><paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="85121-246"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85121-247"><paramref name="inputOffset" /> liegt außerhalb des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="85121-247"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="85121-248">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="85121-248">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-249">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-249">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="85121-250">Die Eingabe, für die der Hashcode berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="85121-250">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="85121-251">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-251">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="85121-252">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="85121-252">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="85121-253">Berechnet den Hashwert für den angegebenen Bereich des angegebenen Bytearrays.</span><span class="sxs-lookup"><span data-stu-id="85121-253">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="85121-254">Ein Array, das eine Kopie des Teils der Eingabe ist, für die die Hashoperation ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="85121-254">An array that is a copy of the part of the input that is hashed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85121-255">Rufen Sie die <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> Methode nach dem Aufruf der <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> Methode, aber bevor Sie den letzten Hashwert abrufen.</span><span class="sxs-lookup"><span data-stu-id="85121-255">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method but before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="85121-256">Beachten Sie, dass der Rückgabewert dieser Methode nicht der Hashwert, sondern nur eine Kopie des Teils der Eingabedaten ein Hashwert erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="85121-256">Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</span></span>  <span data-ttu-id="85121-257">Zum Abrufen des letzten Hashwert nach dem Aufruf der <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> -Methode, Get-Byte-Array enthalten, in sind der <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="85121-257">To retrieve the final hashed value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained in the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85121-258">Im folgenden Codebeispiel Beispiele verwenden die <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> Methode mit der <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> Methode, um eine Zeichenfolge zu hashen.</span><span class="sxs-lookup"><span data-stu-id="85121-258">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="85121-259"><paramref name="inputCount" /> verwendet einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="85121-259"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
 <span data-ttu-id="85121-260">- oder - </span><span class="sxs-lookup"><span data-stu-id="85121-260">-or-</span></span>  
  
 <span data-ttu-id="85121-261"><paramref name="inputBuffer" /> besitzt eine ungültige Offsetlänge.</span><span class="sxs-lookup"><span data-stu-id="85121-261"><paramref name="inputBuffer" /> has an invalid offset length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85121-262"><paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="85121-262"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="85121-263"><paramref name="inputOffset" /> liegt außerhalb des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="85121-263"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="85121-264">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="85121-264">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85121-265">Das Objekt wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="85121-265">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryComputeHash">
      <MemberSignature Language="C#" Value="public bool TryComputeHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryComputeHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryComputeHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryComputeHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryComputeHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>