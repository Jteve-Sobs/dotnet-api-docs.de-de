<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDsaCng.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59146c1f35bf2f9d913e01e050bac7d26770cc7f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9146c1f35bf2f9d913e01e050bac7d26770cc7f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</source>
          <target state="translated">Stellt eine CNG (Cryptography Next Generation)-Implementierung des ECDSA-Algorithmus (Elliptic Curve Digital Signature Algorithm) bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>This class derives from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> abstract base class.</source>
          <target state="translated">Diese Klasse leitet sich von der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> abstrakte Basisklasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> class to sign a message and how to use the signature to verify that the message has not been altered.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> Klasse zum Signieren einer Nachricht und wie Sie die Signatur zu verwenden, um sicherzustellen, dass die Nachricht nicht geändert wurde.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph>-Klasse mit einem zufällig generierten Schlüsselpaar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>The random key pair has a public key length of 521 bits.</source>
          <target state="translated">Die zufällige Schlüsselpaar hat eine Länge des öffentliche Schlüssels von 521 Bits.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">Die Größe des Schlüssels.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">Gültige Schlüsselgrößen sind 256, 384 und 521 Bits.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph>-Klasse mit einem zufällig erzeugten Schlüsselpaar mit der angegebenen Schlüsselgröße.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">Das zufälligen Schlüsselpaar wird die Länge des öffentliche Schlüssels von definiert haben die <ph id="ph1">`keySize`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated">Die <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> gibt eine ungültige Länge an.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">Der Schlüssel, der als Eingabe für kryptografische Vorgänge verwendet wird, die vom aktuellen Objekt durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph>-Klasse unter Verwendung des angegebenen <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> gibt keine ECDSA (Elliptic Curve Digital Signature Algorithm)-Gruppe an.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">Die Kurve, die für das Generieren des Paars aus privatem und öffentlichem Schlüssel verwendet wird.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph>-Klasse, deren Paar aus öffentlichem und privatem Schlüssel über die angegebene Kurve generiert wird.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> Überprüfen müssen (d. h. es muss zurückgegeben werden <ph id="ph2">`true`</ph>) bei der Übergabe an die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode muss eine benannte oder explizite Prime.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">Exportiert die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt (Elliptic Curve Cryptography) verwendet werden, in ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the ECC object.</source>
          <target state="translated">Die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt verwendet werden.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">Fehler beim Abrufen der Kurvenwerte.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">Der explizite Export wird von dieser Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">Windows 10 oder höher ist erforderlich.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">Exportiert den Schlüssel, der vom ECC-Objekt (Elliptic Curve Cryptography) verwendet wird, in ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> field contains named curve parameters; otherwise, it contains explicit parameters.</source>
          <target state="translated">Wenn der Schlüssel als benannte Kurve erstellt wurde, enthält das Feld <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> benannte Kurvenparameter, andernfalls enthält sie explizite Parameter.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the ECC object.</source>
          <target state="translated">Die Schlüssel- und die benannten Kurvenparameter, die vom ECC-Objekt verwendet werden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">Fehler beim Abrufen der Kurvenwerte.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">Diese Methode ist nicht implementiert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">Verwenden Sie einen XML-Schlüssel zu deserialisieren, der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> stattdessen überladen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">Diese Methode wurde für diese Instanz nicht überschrieben.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Das einzige aktuell akzeptierte Format ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge mit dem angegebenen Format.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> gibt ein ungültiges Format an.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Der einzige akzeptierte Wert ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve to use to generate the key.</source>
          <target state="translated">Die Kurve zum Generieren des Schlüssels.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a key to use for the ECDsaCng algorithm.</source>
          <target state="translated">Generiert einen Schlüssel, der für den ECDsaCng-Algorithmus verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when signing and verifying data.</source>
          <target state="translated">Ruft den Hashalgorithmus ab, der zum Signieren und Überprüfen von Daten verwendet wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">Ein Objekt, das den Hashalgorithmus angibt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft akzeptiert die folgenden Algorithmen: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">Andere benutzerdefinierte Hashalgorithmen können auch verwendet werden.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">Standardmäßig wird der Algorithmus <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property is not used if you are signing or verifying data that is already hashed.</source>
          <target state="translated">Diese Eigenschaft wird nicht verwendet werden, wenn Sie signieren oder Überprüfen von Daten, die bereits einen Hashwert darstellt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Wert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve parameters.</source>
          <target state="translated">Die Kurvenparameter.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Replaces the existing key that the current instance is working with by creating a new <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> for the parameters structure.</source>
          <target state="translated">Ersetzt den vorhandenen Schlüssel, mit dem die aktuelle Instanz arbeitet, indem ein neuer <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> für die Struktur "parameters" erstellt wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>, only a public key is imported.</source>
          <target state="translated">Wenn <ph id="ph1">`parameters`</ph> enthält nur <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>, nur ein öffentlicher Schlüssel importiert wird.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, a full key pair is imported.</source>
          <target state="translated">Wenn <ph id="ph1">`parameters`</ph> enthält auch <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, ein vollständiges Schlüsselpaar wird importiert.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> field specifies the type of the curve to import.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> Feld gibt den Typ der Kurve zu importieren.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not contain valid values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> enthält keine gültigen Werte.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> verweist auf eine Kurve, die nicht importiert werden kann.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> verweist auf eine Kurve, die von dieser Plattform nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>Gets or sets the key to use when signing and verifying data.</source>
          <target state="translated">Ruft den Schlüssel ab oder legt diesen fest, der zum Signieren und Überprüfen von Daten verwendet wird.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>An object that specifies the key.</source>
          <target state="translated">Ein Objekt, das den Schlüssel angibt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Generates a signature.</source>
          <target state="translated">Generiert eine Signatur.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The message data to be signed.</source>
          <target state="translated">Die zu signierenden Nachrichtendaten.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Generates a signature for the specified data.</source>
          <target state="translated">Generiert eine Signatur für die angegebenen Daten.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>A digital signature for the specified data.</source>
          <target state="translated">Eine digitale Signatur für die angegebenen Daten.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">Diese Methode generiert eine Signatur für die angegebenen Daten durch hashing der Eingabedaten unter Verwendung der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> -Eigenschaft, und klicken Sie dann das Ergebnis signiert.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> Flag ist erforderlich, wenn der Schlüssel für die Cryptography Next Generation (CNG) durch nicht zufällig generiert wird die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">für die Berechtigung zum Signieren von Daten.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The data stream to be signed.</source>
          <target state="translated">Der zu signierende Datenstream.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Generates a signature for the specified data stream, reading to the end of the stream.</source>
          <target state="translated">Generiert eine Signatur für den angegebenen Datenstream und liest bis zum Ende des Streams.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>A digital signature for the specified data stream.</source>
          <target state="translated">Eine digitale Signatur für den angegebenen Datenstream.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>This method generates a signature for the specified data stream by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">Diese Methode generiert eine Signatur für den angegebenen Datenstrom durch hashing der Eingabedaten unter Verwendung der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> -Eigenschaft, und klicken Sie dann das Ergebnis signiert.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> Flag ist erforderlich, wenn der Schlüssel für die Cryptography Next Generation (CNG) durch nicht zufällig generiert wird die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>for permission to sign data.</source>
          <target state="translated">für die Berechtigung zum Signieren von Daten.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The message data to be signed.</source>
          <target state="translated">Die zu signierenden Nachrichtendaten.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The location in the string at which to start signing.</source>
          <target state="translated">Die Position in der Zeichenfolge, ab der mit der Signatur begonnen wird.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the string, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">Die Anzahl der zu signierenden Zeichen in der Zeichenfolge, beginnend bei <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Generates a digital signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">Generiert eine digitale Signatur für alle Daten bis zur angegebenen Länge, beginnend beim angegebenen Offset.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>A digital signature for the specified length of data.</source>
          <target state="translated">Eine digitale Signatur für die angegebene Datenmenge.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result</source>
          <target state="translated">Diese Methode generiert eine Signatur für die angegebenen Daten durch hashing der Eingabedaten unter Verwendung der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> -Eigenschaft, und klicken Sie dann das Ergebnis signiert</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> Flag ist erforderlich, wenn der Schlüssel für die Cryptography Next Generation (CNG) durch nicht zufällig generiert wird die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> caused reading outside the bounds of the data string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> verursachte ein Lesen über das Ende der Datenzeichenfolge hinaus.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>for permission to sign data.</source>
          <target state="translated">für die Berechtigung zum Signieren von Daten.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">Der Hashwert der zu signierenden Daten.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Generates a signature for the specified hash value.</source>
          <target state="translated">Generiert eine Signatur für den angegebenen Hashwert.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>A digital signature for the specified hash value.</source>
          <target state="translated">Eine digitale Signatur für den angegebenen Hashwert.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> Flag ist erforderlich, wenn der Schlüssel für die Cryptography Next Generation (CNG) durch nicht zufällig generiert wird die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">für die Berechtigung zum Signieren von Daten.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">Diese Methode ist nicht implementiert.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">Nicht zutreffend.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">Um den aktuellen Schlüssel in eine XML-Darstellung zu konvertieren, verwenden die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> stattdessen überladen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">Diese Methode ist nicht implementiert.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Das einzige aktuell akzeptierte Format ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge mit dem angegebenen Format.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string according to the requested format.</source>
          <target state="translated">Ein Zeichenfolgenobjekt, das die serialisierten Schlüsselinformationen als XML-Zeichenfolge im angeforderten Format enthält.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> gibt ein ungültiges Format an.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Der einzige akzeptierte Wert ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Verifies a digital signature.</source>
          <target state="translated">Überprüft eine digitale Signatur.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">Die Daten, die signiert wurden.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">Die zu überprüfende Signatur.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>Verifies the digital signature of the specified data.</source>
          <target state="translated">Überprüft die digitale Signatur der angegebenen Daten.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>This method generates a signature for the given data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">Diese Methode generiert eine Signatur für die angegebenen Daten durch hashing der Eingabedaten unter Verwendung der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> -Eigenschaft, und klicken Sie dann das Ergebnis signiert.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The data stream that was signed.</source>
          <target state="translated">Der signierte Datenstream.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">Die zu überprüfende Signatur.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>Verifies the digital signature of the specified data stream, reading to the end of the stream.</source>
          <target state="translated">Überprüft die digitale Signatur des angegebenen Datenstreams und liest bis zum Ende des Streams.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">Diese Methode erstellt einen Hashwert für die Eingabedaten mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> Eigenschaft vor der Überprüfung.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">Die Daten, die signiert wurden.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The location in the data at which the signed data begins.</source>
          <target state="translated">Die Position innerhalb der Daten, an der die signierten Daten beginnen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The length of the data, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">Die Anzahl der zu signierenden Zeichen in den Daten, beginnend bei <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">Die zu überprüfende Signatur.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>Verifies a signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">Überprüft eine Signatur für alle Daten bis zur angegebenen Länge, beginnend beim angegebenen Offset.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">Diese Methode erstellt einen Hashwert für die Eingabedaten mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> Eigenschaft vor der Überprüfung.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less then zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the length of the byte array passed in the <ph id="ph3">&lt;paramref name="data" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> verweist auf eine Position, die außerhalb der Länge des Bytearrays liegt, das im <ph id="ph3">&lt;paramref name="data" /&gt;</ph>-Parameter übergeben wurde.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The hash value of the data to be verified.</source>
          <target state="translated">Der Hashwert der zu überprüfenden Daten.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The digital signature of the data to be verified against the hash value.</source>
          <target state="translated">Die digitale Signatur der Daten, die mit dem Hashwert überprüft werden sollen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>Verifies the specified digital signature against a specified hash value.</source>
          <target state="translated">Überprüft die angegebene digitale Signatur mit einem angegebenen Hashwert.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur gültig ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>