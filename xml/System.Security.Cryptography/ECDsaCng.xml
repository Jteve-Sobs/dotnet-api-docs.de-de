<Type Name="ECDsaCng" FullName="System.Security.Cryptography.ECDsaCng">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20f94e9836c6b0c61d4397932295d34553c11e78" /><Meta Name="ms.sourcegitcommit" Value="0cb8bc0854af5bc6af4211b6cf43cbda48e9f6c8" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/04/2019" /><Meta Name="ms.locfileid" Value="74797986" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDsaCng : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaCng extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaCng&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCng sealed : System::Security::Cryptography::ECDsa" />
  <TypeSignature Language="F#" Value="type ECDsaCng = class&#xA;    inherit ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9323a-101">Stellt eine CNG (Cryptography Next Generation)-Implementierung des ECDSA-Algorithmus (Elliptic Curve Digital Signature Algorithm) bereit.</span><span class="sxs-lookup"><span data-stu-id="9323a-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="9323a-102">Diese Klasse sollte nur bei der plattformübergreifenden Interoperabilität mit der Windows CNG-Bibliothek direkt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9323a-102">This class should only be used directly when doing platform interop with the Windows CNG library.</span></span>
<span data-ttu-id="9323a-103">Wenn eine plattformübergreifende Interoperabilität nicht erforderlich ist, sollten Sie die <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> Factorymethoden anstelle einer bestimmten abgeleiteten Implementierung verwenden.</span><span class="sxs-lookup"><span data-stu-id="9323a-103">When platform interop is not needed, you should use the <xref:System.Security.Cryptography.ECDsa.Create%2A?displayProperty=nameWithType> factory methods instead of a specific derived implementation.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9323a-104">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.Cryptography.ECDsaCng>-Klasse zum Signieren einer Nachricht verwenden und die Signatur verwenden, um zu überprüfen, ob die Nachricht nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="9323a-104">The following example shows how to use the <xref:System.Security.Cryptography.ECDsaCng> class to sign a message and how to use the signature to verify that the message has not been altered.</span></span>  
  
 [!code-csharp[ECDsaCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdsacng/cs/program.cs#1)]
 [!code-vb[ECDsaCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdsacng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9323a-105">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9323a-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9323a-106">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse mit einem zufällig generierten Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="9323a-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9323a-107">Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="9323a-107">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="9323a-108">Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaCng.KeySize>-Eigenschaft auf 521 fest, und wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Zielkurve zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9323a-108">This constructor sets the <xref:System.Security.Cryptography.ECDsaCng.KeySize> property to 521 and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="9323a-109">Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaCng.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="9323a-109">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaCng.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-110">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9323a-110">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : int -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="9323a-111">Die Größe des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="9323a-111">The size of the key.</span></span> <span data-ttu-id="9323a-112">Gültige Schlüsselgrößen sind 256, 384 und 521 Bits.</span><span class="sxs-lookup"><span data-stu-id="9323a-112">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="9323a-113">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse mit einer angegebenen Zielschlüsselgröße.</span><span class="sxs-lookup"><span data-stu-id="9323a-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a specified target key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9323a-114">Dieser Konstruktor generiert nicht sofort ein neues öffentliches/privates Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="9323a-114">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="9323a-115">Dieser Konstruktor legt die <xref:System.Security.Cryptography.ECDsaCng.KeySize>-Eigenschaft auf den angegebenen Wert fest. Wenn ein Schlüssel benötigt wird, wird die gespeicherte Größe verwendet, um die Ziel Kurve zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9323a-115">This constructor sets the <xref:System.Security.Cryptography.ECDsaCng.KeySize> property to the provided value and when a key is needed the saved size is used to identify the target curve.</span></span>
<span data-ttu-id="9323a-116">Wenn eine Taste über die <xref:System.Security.Cryptography.ECDsaCng.ImportParameters%2A>-Methode oder eine andere Schlüssel Import Methode geladen wird, hat die Schlüsselgröße dieses Konstruktors keine Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="9323a-116">If a key is loaded via the <xref:System.Security.Cryptography.ECDsaCng.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>
 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-117">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9323a-117">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-118">Die <paramref name="keySize" /> gibt eine ungültige Länge an.</span><span class="sxs-lookup"><span data-stu-id="9323a-118"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.ECDsa.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9323a-119">Der Schlüssel, der als Eingabe für kryptografische Vorgänge verwendet wird, die vom aktuellen Objekt durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9323a-119">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="9323a-120">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse unter Verwendung des angegebenen <see cref="T:System.Security.Cryptography.CngKey" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="9323a-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9323a-121"><paramref name="key" /> gibt keine ECDSA (Elliptic Curve Digital Signature Algorithm)-Gruppe an.</span><span class="sxs-lookup"><span data-stu-id="9323a-121"><paramref name="key" /> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-122"><paramref name="key" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-122"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-123">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9323a-123">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDsaCng : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDsaCng" Usage="new System.Security.Cryptography.ECDsaCng curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="9323a-124">Die Kurve, die für das Generieren des Paars aus privatem und öffentlichem Schlüssel verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-124">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="9323a-125">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse, deren Paar aus öffentlichem und privatem Schlüssel über die angegebene Kurve generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-126">`curve` muss bei der Übergabe an die <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType>-Methode überprüfen (d. h., Sie muss `true`zurückgeben) und muss entweder eine benannte oder eine explizite Primzahl sein.</span><span class="sxs-lookup"><span data-stu-id="9323a-126">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-127"><paramref name="curve" /> führt keine Validierung durch.</span><span class="sxs-lookup"><span data-stu-id="9323a-127"><paramref name="curve" /> does not validate.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-128"><paramref name="curve" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-128"><paramref name="curve" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-129">Wenn <paramref name="curve" /> keine OID mit FriendlyName enthält.</span><span class="sxs-lookup"><span data-stu-id="9323a-129">if <paramref name="curve" /> does not contain an Oid with a FriendlyName.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDsaCng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9323a-130"><see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="9323a-130"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9323a-131">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.ECDsaCng" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="9323a-131">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaCng.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="9323a-132"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-132"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9323a-133">Exportiert die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt (Elliptic Curve Cryptography) verwendet werden, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="9323a-133">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="9323a-134">Die Schlüssel- und expliziten Kurvenparameter, die vom ECC-Objekt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9323a-134">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-135">Fehler beim Abrufen der Kurvenwerte.</span><span class="sxs-lookup"><span data-stu-id="9323a-135">An error occurred while obtaining the curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-136">Der explizite Export wird von dieser Plattform nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9323a-136">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="9323a-137">Windows 10 oder höher ist erforderlich.</span><span class="sxs-lookup"><span data-stu-id="9323a-137">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDsaCng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="9323a-138"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-138"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9323a-139">Exportiert den Schlüssel, der vom ECC-Objekt (Elliptic Curve Cryptography) verwendet wird, in ein <see cref="T:System.Security.Cryptography.ECParameters" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="9323a-139">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="9323a-140">Wenn der Schlüssel als benannte Kurve erstellt wurde, enthält das Feld <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> benannte Kurvenparameter, andernfalls enthält sie explizite Parameter.</span><span class="sxs-lookup"><span data-stu-id="9323a-140">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="9323a-141">Die Schlüssel- und die benannten Kurvenparameter, die vom ECC-Objekt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9323a-141">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-142">Fehler beim Abrufen der Kurvenwerte.</span><span class="sxs-lookup"><span data-stu-id="9323a-142">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9323a-143">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9323a-143">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="eCDsaCng.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="9323a-144">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</span><span class="sxs-lookup"><span data-stu-id="9323a-144">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="9323a-145">Diese Methode ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-145">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-146">Um einen XML-Schlüssel zu deserialisieren, verwenden Sie stattdessen die <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> Überladung.</span><span class="sxs-lookup"><span data-stu-id="9323a-146">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="9323a-147">Diese Methode wurde für diese Instanz nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="9323a-147">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string * System.Security.Cryptography.ECKeyXmlFormat -&gt; unit" Usage="eCDsaCng.FromXmlString (xml, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="9323a-148">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</span><span class="sxs-lookup"><span data-stu-id="9323a-148">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="9323a-149">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="9323a-149">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="9323a-150">Das einzige aktuell akzeptierte Format ist <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-150">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="9323a-151">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge mit dem angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="9323a-151">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-152"><paramref name="xml" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-152"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9323a-153"><paramref name="format" /> gibt ein ungültiges Format an.</span><span class="sxs-lookup"><span data-stu-id="9323a-153"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="9323a-154">Der einzige akzeptierte Wert ist <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-154">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-155">Alle anderen Fehler.</span><span class="sxs-lookup"><span data-stu-id="9323a-155">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDsaCng.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="9323a-156">Die Kurve zum Generieren des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="9323a-156">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="9323a-157">Generiert ein neues kurzlebiges Paar aus privatem und öffentlichem Schlüssel für die angegebene Kurve und ersetzt den aktuellen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="9323a-157">Generates a new ephemeral public/private key pair for the specified curve, replacing the current key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-158"><paramref name="curve" /> führt keine Validierung durch.</span><span class="sxs-lookup"><span data-stu-id="9323a-158"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.CngAlgorithm with get, set" Usage="System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9323a-159">Ruft den Hashalgorithmus ab, der zum Signieren und Überprüfen von Daten verwendet wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="9323a-159">Gets or sets the hash algorithm to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="9323a-160">Ein Objekt, das den Hashalgorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="9323a-160">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-161">Diese Eigenschaft akzeptiert die folgenden Algorithmen: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>und <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="9323a-161">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="9323a-162">Andere benutzerdefinierte Hash Algorithmen können ebenfalls verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9323a-162">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="9323a-163">Aufgrund von Konnektivitätsproblemen mit MD5 und SHA1 empfiehlt Microsoft <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="9323a-163">Due to collision problems with MD5 and SHA1, Microsoft recommends <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span> <span data-ttu-id="9323a-164">Der Standard Algorithmus ist <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="9323a-164">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 <span data-ttu-id="9323a-165">Diese Eigenschaft wird nicht verwendet, wenn Sie Daten signieren oder überprüfen, für die bereits ein Hash Vorgang durchlaufen wurde.</span><span class="sxs-lookup"><span data-stu-id="9323a-165">This property is not used if you are signing or verifying data that is already hashed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-166">Der Wert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-166">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaCng.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-167">Der binäre Datenstrom, für den der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-167">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="9323a-168">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-168">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="9323a-169">Berechnet den Hashwert des angegebenen Binärdatenstroms mithilfe des angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="9323a-169">Computes the hash value of the specified binary stream by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="9323a-170">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="9323a-170">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="eCDsaCng.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-171">Die Daten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-171">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="9323a-172">Der Index des ersten Bytes in <paramref name="data" />, für das der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-172">The index of the first byte in <paramref name="data" /> to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="9323a-173">Die Anzahl der Bytes, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-173">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="9323a-174">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-174">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="9323a-175">Berechnet den Hashwert des angegebenen Teils eines Bytearrays mithilfe des angegebenen Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="9323a-175">Computes the hash value of the specified portion of a byte array by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="9323a-176">Die Daten, für die der Hashwert berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="9323a-176">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDsaCng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="9323a-177">Die Kurvenparameter.</span><span class="sxs-lookup"><span data-stu-id="9323a-177">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="9323a-178">Ersetzt den vorhandenen Schlüssel, mit dem die aktuelle Instanz arbeitet, indem ein neuer <see cref="T:System.Security.Cryptography.CngKey" /> für die Struktur "parameters" erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-178">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-179">Wenn `parameters` nur <xref:System.Security.Cryptography.ECParameters.Q>enthält, wird nur ein öffentlicher Schlüssel importiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-179">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="9323a-180">Wenn `parameters` auch <xref:System.Security.Cryptography.ECParameters.D>enthält, wird ein vollständiges Schlüsselpaar importiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-180">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="9323a-181">Das <xref:System.Security.Cryptography.ECParameters.Curve> Feld gibt den Typ der zu importierenden Kurve an.</span><span class="sxs-lookup"><span data-stu-id="9323a-181">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-182"><paramref name="parameters" /> enthält keine gültigen Werte.</span><span class="sxs-lookup"><span data-stu-id="9323a-182"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9323a-183"><paramref name="parameters" /> verweist auf eine Kurve, die nicht importiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="9323a-183"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="9323a-184"><paramref name="parameters" /> verweist auf eine Kurve, die von dieser Plattform nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-184"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.ECDsaCng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9323a-185">Ruft den Schlüssel ab oder legt diesen fest, der zum Signieren und Überprüfen von Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-185">Gets or sets the key to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="9323a-186">Ein Objekt, das den Schlüssel angibt.</span><span class="sxs-lookup"><span data-stu-id="9323a-186">An object that specifies the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9323a-187">Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="9323a-187">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="9323a-188">Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits.</span><span class="sxs-lookup"><span data-stu-id="9323a-188">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9323a-189">Das Festlegen dieser Eigenschaft auf den aktuellen Wert hat keinen sichtbaren Effekt.</span><span class="sxs-lookup"><span data-stu-id="9323a-189">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="9323a-190">Wenn diese Eigenschaft auf einen neuen zulässigen Wert festgelegt wird, wird der aktuelle Schlüssel verworfen, aber die Erstellung eines neuen Schlüssels wird so lange festgelegt, bis eine solche benötigt wird</span><span class="sxs-lookup"><span data-stu-id="9323a-190">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

<span data-ttu-id="9323a-191">Da mit Schlüsselgrößen elliptische Kurven nicht eindeutig identifiziert werden, wird die Verwendung des Eigenschaften Setter nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="9323a-191">Because key sizes do not uniquely identify elliptic curves, the use of the property setter is discouraged.</span></span> <span data-ttu-id="9323a-192">Um einen neuen Schlüssel für eine bestimmte Kurve zu generieren, verwenden Sie die <xref:System.Security.Cryptography.ECDsaCng.GenerateKey%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="9323a-192">To generate a new key on a specific curve, use the <xref:System.Security.Cryptography.ECDsaCng.GenerateKey%2A> method.</span></span>

]]></format>
        </remarks> 
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-193"><paramref name="value" /> wird von <see cref="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" /> nicht zugelassen.</span><span class="sxs-lookup"><span data-stu-id="9323a-193"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9323a-194">Ruft die vom Setter der <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" />-Eigenschaft unterstützten Schlüsselgrößen in Bits ab.</span><span class="sxs-lookup"><span data-stu-id="9323a-194">Gets the key sizes, in bits, that are supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></summary>
        <value><span data-ttu-id="9323a-195">Ein Array, das die vom <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> Eigenschaften Setter unterstützten Schlüsselgrößen enthält.</span><span class="sxs-lookup"><span data-stu-id="9323a-195">An array that contains the key sizes supported by the <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> property setter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9323a-196">In der Kryptografie für elliptische Kurven (ECC) ist die Schlüsselgröße nicht die einzige Eingabe in den Schlüssel Generierungsprozess, sondern wird von den Kurven Parametern für eine bestimmte elliptische Kurve abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="9323a-196">In Elliptic Curve Cryptography (ECC) the key size is not the only input into the key generation process, it is derived from the curve parameters for a specific elliptic curve.</span></span>
<span data-ttu-id="9323a-197">Diese Eigenschaft meldet nur drei zulässige Schlüsselgrößen: 256, 384 und 521 Bits.</span><span class="sxs-lookup"><span data-stu-id="9323a-197">This property reports only three legal key sizes: 256, 384, and 521 bits.</span></span>
<span data-ttu-id="9323a-198">Wenn die Schlüsselgröße allein als Grundlage für die Schlüsselgenerierung verwendet wird, werden die unterstützten Größen den benannten Kurven secp256r1 (Alias p-256), secp384r1 (auch NIST p-384) und secp521r1 (auch NIST p-521) zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="9323a-198">When the key size is used alone as a basis for key generation, the supported sizes map to the named curves secp256r1 (aka NIST P-256), secp384r1 (aka NIST P-384), and secp521r1 (aka NIST P-521).</span></span>

<span data-ttu-id="9323a-199">Wenn diese Klasse unter Windows 10 ausgeführt wird, unterstützt Sie viele zusätzliche benannte Kurven, dies wird jedoch in dieser Eigenschaft nicht widergespiegelt.</span><span class="sxs-lookup"><span data-stu-id="9323a-199">When executed on Windows 10, this class supports many additional named curves, but that is not reflected in this property.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9323a-200">Generiert eine Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-200">Generates a signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-201">Die zu signierenden Nachrichtendaten.</span><span class="sxs-lookup"><span data-stu-id="9323a-201">The message data to be signed.</span></span></param>
        <summary><span data-ttu-id="9323a-202">Generiert eine Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-202">Generates a signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="9323a-203">Eine digitale Signatur für die angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-203">A digital signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-204">Diese Methode generiert eine Signatur für die angegebenen Daten, indem die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft als Hashwert versehen und das Ergebnis anschließend signiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-204">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="9323a-205">Das <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>-Flag ist erforderlich, wenn der CNG-Schlüssel (Cryptography Next Generation) nicht zufällig vom <xref:System.Security.Cryptography.ECDsaCng>-Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-205">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-206"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-206"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-207">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</span><span class="sxs-lookup"><span data-stu-id="9323a-207">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="9323a-208">für die Berechtigung zum Signieren von Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-208">for permission to sign data.</span></span> <span data-ttu-id="9323a-209">Demand-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-209">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9323a-210">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="9323a-210">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data);" />
      <MemberSignature Language="F#" Value="override this.SignData : System.IO.Stream -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : System.IO.Stream -&gt; byte[]" Usage="eCDsaCng.SignData data" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-211">Der zu signierende Datenstream.</span><span class="sxs-lookup"><span data-stu-id="9323a-211">The data stream to be signed.</span></span></param>
        <summary><span data-ttu-id="9323a-212">Generiert eine Signatur für den angegebenen Datenstream und liest bis zum Ende des Streams.</span><span class="sxs-lookup"><span data-stu-id="9323a-212">Generates a signature for the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="9323a-213">Eine digitale Signatur für den angegebenen Datenstream.</span><span class="sxs-lookup"><span data-stu-id="9323a-213">A digital signature for the specified data stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-214">Diese Methode generiert eine Signatur für den angegebenen Datenstrom, indem die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft mit einem Hashwert versehen und das Ergebnis anschließend signiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-214">This method generates a signature for the specified data stream by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="9323a-215">Das <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>-Flag ist erforderlich, wenn der CNG-Schlüssel (Cryptography Next Generation) nicht zufällig vom <xref:System.Security.Cryptography.ECDsaCng>-Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-215">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-216"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-216"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-217">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</span><span class="sxs-lookup"><span data-stu-id="9323a-217">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="9323a-218">für die Berechtigung zum Signieren von Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-218">for permission to sign data.</span></span> <span data-ttu-id="9323a-219">Demand-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-219">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9323a-220">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="9323a-220">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * int * int -&gt; byte[]" Usage="eCDsaCng.SignData (data, offset, count)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * int * int -&gt; byte[]" Usage="eCDsaCng.SignData (data, offset, count)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-221">Die zu signierenden Nachrichtendaten.</span><span class="sxs-lookup"><span data-stu-id="9323a-221">The message data to be signed.</span></span></param>
        <param name="offset"><span data-ttu-id="9323a-222">Die Position in der Zeichenfolge, ab der mit der Signatur begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-222">The location in the string at which to start signing.</span></span></param>
        <param name="count"><span data-ttu-id="9323a-223">Die Anzahl der zu signierenden Zeichen in der Zeichenfolge, beginnend bei <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-223">The length of the string, in characters, following <paramref name="offset" /> that will be signed.</span></span></param>
        <summary><span data-ttu-id="9323a-224">Generiert eine digitale Signatur für alle Daten bis zur angegebenen Länge, beginnend beim angegebenen Offset.</span><span class="sxs-lookup"><span data-stu-id="9323a-224">Generates a digital signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="9323a-225">Eine digitale Signatur für die angegebene Datenmenge.</span><span class="sxs-lookup"><span data-stu-id="9323a-225">A digital signature for the specified length of data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-226">Diese Methode generiert eine Signatur für die angegebenen Daten, indem die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft mit einem Hashwert versehen werden. Anschließend wird das Ergebnis signiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-226">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result</span></span>  
  
 <span data-ttu-id="9323a-227">Das <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>-Flag ist erforderlich, wenn der CNG-Schlüssel (Cryptography Next Generation) nicht zufällig vom <xref:System.Security.Cryptography.ECDsaCng>-Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-227">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-228"><paramref name="data" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-228"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9323a-229"><paramref name="count" /> oder <paramref name="offset" /> verursachte ein Lesen über das Ende der Datenzeichenfolge hinaus.</span><span class="sxs-lookup"><span data-stu-id="9323a-229"><paramref name="count" /> or <paramref name="offset" /> caused reading outside the bounds of the data string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-230">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</span><span class="sxs-lookup"><span data-stu-id="9323a-230">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="9323a-231">für die Berechtigung zum Signieren von Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-231">for permission to sign data.</span></span> <span data-ttu-id="9323a-232">Demand-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-232">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9323a-233">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="9323a-233">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] -&gt; byte[]" Usage="eCDsaCng.SignHash hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="9323a-234">Der Hashwert der zu signierenden Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-234">The hash value of the data to be signed.</span></span></param>
        <summary><span data-ttu-id="9323a-235">Generiert eine Signatur für den angegebenen Hashwert.</span><span class="sxs-lookup"><span data-stu-id="9323a-235">Generates a signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="9323a-236">Eine digitale Signatur für den angegebenen Hashwert.</span><span class="sxs-lookup"><span data-stu-id="9323a-236">A digital signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-237">Das <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>-Flag ist erforderlich, wenn der CNG-Schlüssel (Cryptography Next Generation) nicht zufällig vom <xref:System.Security.Cryptography.ECDsaCng>-Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-237">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-238"><paramref name="hash" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-238"><paramref name="hash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-239">Für die der Instanz zugeordneten Schlüsselinformationen ist kein privater Schlüssel vorhanden.</span><span class="sxs-lookup"><span data-stu-id="9323a-239">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="9323a-240">für die Berechtigung zum Signieren von Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-240">for permission to sign data.</span></span> <span data-ttu-id="9323a-241">Demand-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-241">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="9323a-242">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="9323a-242">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9323a-243">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9323a-243">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="eCDsaCng.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="9323a-244"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-244"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9323a-245">Diese Methode ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-245">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="9323a-246">Nicht zutreffend.</span><span class="sxs-lookup"><span data-stu-id="9323a-246">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-247">Verwenden Sie stattdessen die <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> Überladung, um den aktuellen Schlüssel in eine XML-Darstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9323a-247">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="9323a-248">Diese Methode ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="9323a-248">This method is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : System.Security.Cryptography.ECKeyXmlFormat -&gt; string" Usage="eCDsaCng.ToXmlString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="9323a-249">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="9323a-249">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="9323a-250">Das einzige aktuell akzeptierte Format ist <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-250">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="9323a-251">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge mit dem angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="9323a-251">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="9323a-252">Ein Zeichenfolgenobjekt, das die serialisierten Schlüsselinformationen als XML-Zeichenfolge im angeforderten Format enthält.</span><span class="sxs-lookup"><span data-stu-id="9323a-252">A string object that contains the key information, serialized to an XML string according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9323a-253"><paramref name="format" /> gibt ein ungültiges Format an.</span><span class="sxs-lookup"><span data-stu-id="9323a-253"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="9323a-254">Der einzige akzeptierte Wert ist <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-254">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="9323a-255">Alle anderen Fehler.</span><span class="sxs-lookup"><span data-stu-id="9323a-255">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="protected override bool TryHashData (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashData (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool&#xA;override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="eCDsaCng.TryHashData (source, destination, hashAlgorithm, bytesWritten)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; bool" Usage="eCDsaCng.TryHashData (source, destination, hashAlgorithm, bytesWritten)" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9323a-256">Die Daten, für die der Hashwert berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-256">The data to be hashed.</span></span></param>
        <param name="destination"><span data-ttu-id="9323a-257">Der Puffer zum Empfangen des Hashwerts.</span><span class="sxs-lookup"><span data-stu-id="9323a-257">The buffer to receive the hash value.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="9323a-258">Der Algorithmus, der zum Bestimmen des Hashwerts der Daten verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9323a-258">The algorithm to use to hash the data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="9323a-259">Die Rückgabe dieser Methode ist die Gesamtanzahl der in <paramref name="destination" /> geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="9323a-259">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="9323a-260">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="9323a-260">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="9323a-261">Versucht, den Hashwert der angegebenen schreibgeschützten Spanne von Bytes in das angegebene Ziel unter Verwendung des angegebenen Hashalgorithmus zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="9323a-261">Attempts to compute the hash value of the specified read-only span of bytes into the provided destination by using the specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="9323a-262"><see langword="false" />, wenn <paramref name="destination" /> für das Empfangen des Hashwerts nicht lang genug ist.</span><span class="sxs-lookup"><span data-stu-id="9323a-262"><see langword="false" /> if <paramref name="destination" /> is not long enough to receive the hash value.</span></span></returns>
      </Docs>
    </Member>
    <Member MemberName="TrySignHash">
      <MemberSignature Language="C#" Value="public override bool TrySignHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySignHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.TrySignHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySignHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySignHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="eCDsaCng.TrySignHash (source, destination, bytesWritten)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.TrySignHash : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="eCDsaCng.TrySignHash (source, destination, bytesWritten)" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9323a-263">Der Hashwert der signierten Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-263">The hash value of the data that is being signed.</span></span></param>
        <param name="destination"><span data-ttu-id="9323a-264">Der Puffer zum Empfangen der Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-264">The buffer to receive the signature.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="9323a-265">Die Rückgabe dieser Methode ist die Gesamtanzahl der in <paramref name="destination" /> geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="9323a-265">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="9323a-266">Dieser Parameter wird nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="9323a-266">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="9323a-267">Versucht, die digitale ECDSA-Signatur für die angegebene schreibgeschützte Spanne von Bytes zu berechnen, die einen Datenhash in das angegebene Ziel darstellen, indem der aktuelle Schlüssel verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-267">Attempts to compute the ECDSA digital signature for the specified read-only span of bytes representing a data hash into the provided destination by using the current key.</span></span></summary>
        <returns><span data-ttu-id="9323a-268"><see langword="false" />, wenn <paramref name="destination" /> für das Empfangen der Signatur nicht lang genug ist.</span><span class="sxs-lookup"><span data-stu-id="9323a-268"><see langword="false" /> if <paramref name="destination" /> is not long enough to receive the signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9323a-269">Überprüft eine digitale Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-269">Verifies a digital signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-270">Die Daten, die signiert wurden.</span><span class="sxs-lookup"><span data-stu-id="9323a-270">The data that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="9323a-271">Die zu überprüfende Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-271">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="9323a-272">Überprüft die digitale Signatur der angegebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-272">Verifies the digital signature of the specified data.</span></span></summary>
        <returns><span data-ttu-id="9323a-273"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-273"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-274">Diese Methode generiert eine Signatur für die angegebenen Daten, indem die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft als Hashwert versehen und das Ergebnis anschließend signiert wird.</span><span class="sxs-lookup"><span data-stu-id="9323a-274">This method generates a signature for the given data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-275"><paramref name="data" /> oder <paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-275"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (System.IO.Stream data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Stream, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : System.IO.Stream * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : System.IO.Stream * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-276">Der signierte Datenstream.</span><span class="sxs-lookup"><span data-stu-id="9323a-276">The data stream that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="9323a-277">Die zu überprüfende Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-277">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="9323a-278">Überprüft die digitale Signatur des angegebenen Datenstreams und liest bis zum Ende des Streams.</span><span class="sxs-lookup"><span data-stu-id="9323a-278">Verifies the digital signature of the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="9323a-279"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-279"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-280">Diese Methode erstellt einen Hashwert für die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft vor der Überprüfung.</span><span class="sxs-lookup"><span data-stu-id="9323a-280">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-281"><paramref name="data" /> oder <paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-281"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, int offset, int count, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * int * int * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, offset, count, signature)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * int * int * byte[] -&gt; bool" Usage="eCDsaCng.VerifyData (data, offset, count, signature)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9323a-282">Die Daten, die signiert wurden.</span><span class="sxs-lookup"><span data-stu-id="9323a-282">The data that was signed.</span></span></param>
        <param name="offset"><span data-ttu-id="9323a-283">Die Position innerhalb der Daten, an der die signierten Daten beginnen.</span><span class="sxs-lookup"><span data-stu-id="9323a-283">The location in the data at which the signed data begins.</span></span></param>
        <param name="count"><span data-ttu-id="9323a-284">Die Anzahl der zu überprüfenden Daten in der Zeichenfolge, beginnend bei <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-284">The length of the data, in characters, following <paramref name="offset" /> that will be signed.</span></span></param>
        <param name="signature"><span data-ttu-id="9323a-285">Die zu überprüfende Signatur.</span><span class="sxs-lookup"><span data-stu-id="9323a-285">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="9323a-286">Überprüft eine Signatur für alle Daten bis zur angegebenen Länge, beginnend beim angegebenen Offset.</span><span class="sxs-lookup"><span data-stu-id="9323a-286">Verifies a signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="9323a-287"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-287"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9323a-288">Diese Methode erstellt einen Hashwert für die Eingabedaten mithilfe der <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>-Eigenschaft vor der Überprüfung.</span><span class="sxs-lookup"><span data-stu-id="9323a-288">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9323a-289"><paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9323a-289"><paramref name="offset" /> or <paramref name="count" /> is less then zero.</span></span>  
  
<span data-ttu-id="9323a-290">- oder -</span><span class="sxs-lookup"><span data-stu-id="9323a-290">-or-</span></span> 
 <span data-ttu-id="9323a-291"><paramref name="offset" /> oder <paramref name="count" /> verweist auf eine Position, die außerhalb der Länge des Bytearrays liegt, das im <paramref name="data" />-Parameter übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="9323a-291"><paramref name="offset" /> or <paramref name="count" /> is larger than the length of the byte array passed in the <paramref name="data" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-292"><paramref name="data" /> oder <paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-292"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] -&gt; bool" Usage="eCDsaCng.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="9323a-293">Der Hashwert der zu überprüfenden Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-293">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="9323a-294">Die digitale Signatur der Daten, die mit dem Hashwert überprüft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9323a-294">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="9323a-295">Überprüft, ob eine digitale Signatur für den aktuellen Schlüssel und den bereitgestellten Datenhash geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="9323a-295">Verifies that a digital signature is appropriate for the current key and provided data hash.</span></span></summary>
        <returns><span data-ttu-id="9323a-296"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-296"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9323a-297"><paramref name="hash" /> oder <paramref name="signature" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-297"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (ReadOnlySpan&lt;byte&gt; hash, ReadOnlySpan&lt;byte&gt; signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(ReadOnlySpan&lt;System::Byte&gt; hash, ReadOnlySpan&lt;System::Byte&gt; signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="eCDsaCng.VerifyHash (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="9323a-298">Der Hashwert der zu überprüfenden Daten.</span><span class="sxs-lookup"><span data-stu-id="9323a-298">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="9323a-299">Die digitale Signatur der Daten, die mit dem Hashwert überprüft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9323a-299">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="9323a-300">Überprüft, ob eine digitale Signatur für den aktuellen Schlüssel und den bereitgestellten Datenhash geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="9323a-300">Verifies that a digital signature is appropriate for the current key and provided data hash.</span></span></summary>
        <returns><span data-ttu-id="9323a-301"><see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9323a-301"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
