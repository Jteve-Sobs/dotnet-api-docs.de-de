<Type Name="IncrementalHash" FullName="System.Security.Cryptography.IncrementalHash">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b2e239864865d83ed8aa588b335299d1a4f81c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IncrementalHash : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IncrementalHash extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.IncrementalHash" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IncrementalHash&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHash sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d8858-101">Stellt Unterstützung für die Berechnung eines Hash- oder eines auf einem Hash basierenden HMAC-Werts (Hash-based Message Authentication Code) inkrementell über mehrere Segmente hinweg bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8858-101">Provides support for computing a hash or Hash-based Message Authentication Code (HMAC) value incrementally across several segments.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlgorithmName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName AlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName AlgorithmName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmName As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName AlgorithmName { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8858-102">Ruft den Namen des Algorithmus ab, der ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-102">Gets the name of the algorithm being performed.</span>
          </span>
          <span data-ttu-id="d8858-103">HMAC-Algorithmen wird „HMAC“ vorangestellt, um sie von einem unverschlüsselten Digest zu unterscheiden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-103">HMAC algorithms are prepended with "HMAC" to distinguish them from an unkeyed digest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8858-104">Der Name des Algorithmus, der ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-104">The name of the algorithm being performed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="d8858-105">Die zu verarbeitenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-105">The data to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8858-106">Fügt die angegebenen Daten den Daten hinzu, die bereits im Hash oder HMAC verarbeitet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-106">Appends the specified data to the data already processed in the hash or HMAC.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8858-107">
            <paramref name="data" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-107">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8858-108">Das <see cref="T:System.Security.Cryptography.IncrementalHash" />-Objekt wurde bereits entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-108">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (ReadOnlySpan&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(ReadOnlySpan&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="d8858-109">Die zu verarbeitenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-109">The data to process.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d8858-110">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-110">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d8858-111">Die Anzahl der Bytes, die aus <c>data</c> verwendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-111">The number of bytes to use from <c>data</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8858-112">Fügt die angegebene Zahl an Bytes aus den angegebenen Daten in die bereits verarbeiteten im Hash oder HMAC (Hash-basierter Nachrichtenauthentifizierungscode) ein, beginnend mit dem angegebenen Offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-112">Appends the specified number of bytes from the specified data, starting at the specified offset, to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8858-113">
            <paramref name="data" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-113">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d8858-114">
            <paramref name="count" /> oder <paramref name="offset" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-114">
              <paramref name="count" /> or <paramref name="offset" /> is negative.</span>
          </span>
          <span data-ttu-id="d8858-115">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-115">-or-</span>
          </span>
          <span data-ttu-id="d8858-116">
            <paramref name="count" /> ist größer als <paramref name="data" /> lang ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-116">
              <paramref name="count" /> is larger than the length of <paramref name="data" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8858-117">Die Summe aus <paramref name="offset" /> und <paramref name="count" /> ist größer als die Datenlänge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-117">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the data length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8858-118">Das <see cref="T:System.Security.Cryptography.IncrementalHash" />-Objekt wurde bereits entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-118">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHash (System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHash(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHash (hashAlgorithm As HashAlgorithmName) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHash(System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm">
          <span data-ttu-id="d8858-119">Der Name des Hashalgorithmus, der ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-119">The name of the hash algorithm to perform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8858-120">Erstellt einen <see cref="T:System.Security.Cryptography.IncrementalHash" /> für den angegebenen Algorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-120">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8858-121">Ein <see cref="T:System.Security.Cryptography.IncrementalHash" />-Instanz, die bereit ist, den von <paramref name="hashAlgorithm" /> angegebenen Hashalgorithmus zu berechnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-121">An <see cref="T:System.Security.Cryptography.IncrementalHash" /> instance ready to compute the hash algorithm specified by <paramref name="hashAlgorithm" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8858-122">
            <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-122">
              <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          </span>
          <span data-ttu-id="d8858-123">ist <see langword="null" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-123">is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d8858-124">
            <paramref name="hashAlgorithm" /> ist kein bekannter Hashalgorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-124">
              <paramref name="hashAlgorithm" /> is not a known hash algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHMAC">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHMAC (System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHMAC(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHMAC (hashAlgorithm As HashAlgorithmName, key As Byte()) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHMAC(System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm">
          <span data-ttu-id="d8858-125">Der Name des Hashalgorithmus, der im HMAC ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-125">The name of the hash algorithm to perform within the HMAC.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="d8858-126">Der geheime Schlüssel für den HMAC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-126">The secret key for the HMAC.</span>
          </span>
          <span data-ttu-id="d8858-127">Der Schlüssel kann von beliebiger Länge sein, doch ein Schlüssel, der länger als die Ausgabegröße des angegebenen Hashalgorithmus ist, wird mit eindeutigem Hashwert berechnet, um den Schlüssel mit richtiger Größe abzuleiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-127">The key can be of any length, but a key longer than the output size of the specified hash algorithm will be hashed to derive a correctly-sized key.</span>
          </span>
          <span data-ttu-id="d8858-128">Daher ist die empfohlene Größe des geheimen Schlüssels die Ausgabegröße des angegebenen Hashalgorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-128">Therefore, the recommended size of the secret key is the output size of the specified hash algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8858-129">Erstellt <see cref="T:System.Security.Cryptography.IncrementalHash" /> für den Algorithmus des hashbasierten Nachrichtenauthentifizierungscodes (HMAC, Hash-based Message Authentication Code) mithilfe des angegebenen Hashalgorithmus und Schlüssels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-129">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the Hash-based Message Authentication Code (HMAC) algorithm using the specified hash algorithm and key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8858-130">Eine Instanz der <see cref="T:System.Security.Cryptography.IncrementalHash" />-Klasse, die den angegebenen Hashalgorithmus berechnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-130">An instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class ready to compute the specified hash algorithm.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8858-131">
            <paramref name="key" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-131">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8858-132">
            <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-132">
              <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          </span>
          <span data-ttu-id="d8858-133">ist <see langword="null" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-133">is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d8858-134">
            <paramref name="hashAlgorithm" /> ist kein bekannter Hashalgorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-134">
              <paramref name="hashAlgorithm" /> is not a known hash algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8858-135">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.IncrementalHash" />-Klasse verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-135">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAndReset">
      <MemberSignature Language="C#" Value="public byte[] GetHashAndReset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetHashAndReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashAndReset () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetHashAndReset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8858-136">Ruft den Hash oder HMAC für die Daten ab, die von früheren Aufrufen der <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" />-Methode gesammelt wurden, und setzt das Objekt auf seinen ursprünglichen Zustand zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-136">Retrieves the hash or Hash-based Message Authentication Code (HMAC) for the data accumulated from prior calls to the <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /> method,  and resets the object to its initial state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8858-137">Der berechnete Hash oder HMAC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-137">The computed hash or HMAC.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8858-138">Das <see cref="T:System.Security.Cryptography.IncrementalHash" />-Objekt wurde bereits entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8858-138">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetHashAndReset">
      <MemberSignature Language="C#" Value="public bool TryGetHashAndReset (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHashAndReset(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.TryGetHashAndReset(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetHashAndReset (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetHashAndReset(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>