<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanCng.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5286bf918255ea8d29ba319f459e569551d533740.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">286bf918255ea8d29ba319f459e569551d533740</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Stellt eine CNG (Cryptography Next Generation)-Implementierung des ECDH (Elliptic Curve Diffie-Hellman)-Algorithmus bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This class is used to perform cryptographic operations.</source>
          <target state="translated">Diese Klasse wird für kryptografische Operationen verwendet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class enables two parties to exchange private key material even if they are communicating through a public channel.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> Klasse ermöglicht zwei Parteien privates Schlüsselmaterial austauschen, auch wenn sie über einen öffentlichen Kanal kommunizieren.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Both parties can calculate the same secret value, which is referred to as the <bpt id="p1">*</bpt>secret agreement<ept id="p1">*</ept> in the managed Diffie-Hellman classes.</source>
          <target state="translated">Beide Parteien können denselben geheimen Wert, der so genannte Berechnen der <bpt id="p1">*</bpt>Geheimvertrag<ept id="p1">*</ept> in den verwalteten Diffie-Hellman-Klassen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement can then be used for a variety of purposes, including as a symmetric key.</source>
          <target state="translated">Der Geheimvertrag kann dann für verschiedene Zwecke verwenden, einschließlich eines symmetrischen Schlüssels verwendet werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>However, instead of exposing the secret agreement directly, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class does some post-processing on the agreement before providing the value.</source>
          <target state="translated">Jedoch anstelle der Geheimvertrag direkt, Verfügbarmachen der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> Klasse ist eine nach der Verarbeitung auf die Vereinbarung, bevor Sie den Wert angeben.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This post processing is referred to as the <bpt id="p1">*</bpt>key derivation function (KDF)<ept id="p1">*</ept>; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</source>
          <target state="translated">Diese Post-Verarbeitung wird als bezeichnet den <bpt id="p1">*</bpt>Ableitung-Funktion (KDF) für Schlüssel<ept id="p1">*</ept>; Sie können auswählen, welche KDF, die Sie verwenden möchten und legen ihre Parameter durch einen Satz von Eigenschaften für die Instanz des Objekts Diffie-Hellman.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Key derivation function</source>
          <target state="translated">Schlüsselableitungsfunktion</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Properties</source>
          <target state="translated">Eigenschaften</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -Der Hashalgorithmus, der zum Verarbeiten der Geheimvertrag verwendet wird.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> - An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> -Ein optionales Bytearray, das Geheimvertrag vor Hashs Bildressourcen vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> -Ein optionales Bytearray, an den Geheimvertrag vor Hashs angefügt werden soll.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -Der Hashalgorithmus, der zum Verarbeiten der Geheimvertrag verwendet wird.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>- An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>-Ein optionales Bytearray, das Geheimvertrag vor Hashs Bildressourcen vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> -Ein optionales Bytearray, an den Geheimvertrag vor Hashs angefügt werden soll.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> - The label for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> -Die Bezeichnung für die schlüsselableitung.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> - The seed for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> – Der Ausgangswert für die schlüsselableitung.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</source>
          <target state="translated">Das Ergebnis der Übergabe der Geheimvertrag über die Schlüsselableitungsfunktion ist ein Bytearray, das als Schlüsselmaterial für Ihre Anwendung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</source>
          <target state="translated">Die Anzahl der Bytes von generiertem Schlüsselmaterial ist die Schlüsselableitungsfunktion abhängig. Beispielsweise wird SHA-256 256 Bits Schlüsselmaterial, generieren, wohingegen SHA-512 512 Bits Schlüsselmaterial generiert wird. Die grundlegende Vorgehensweise einen ECDH-Schlüsselaustausch lautet wie folgt:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</source>
          <target state="translated">Alice und Bob Erstellen eines Schlüsselpaars für den Diffie-Hellman-Schlüsselaustauschvorgang verwenden</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob configure the KDF using parameters the agree on.</source>
          <target state="translated">Alice und Bob konfigurieren die KDF mit Parametern der Stimme zu auf.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice sends Bob her public key.</source>
          <target state="translated">Alice sendet Bob ihren öffentlichen Schlüssel.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Bob sends Alice his public key.</source>
          <target state="translated">Bob sendet Alice seinen öffentlichen Schlüssel an.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</source>
          <target state="translated">Alice und Bob jeweils anderen öffentlichen Schlüssel verwenden, um die Geheimvertrag zu generieren, und wenden die KDF auf den Geheimvertrag Schlüsselmaterial zu generieren.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> Klasse zum Herstellen einer Schlüsselaustausch und wie Sie diesen Schlüssel zum Verschlüsseln einer Nachricht, die über einen öffentlichen Kanal gesendet und vom Empfänger entschlüsselt werden können.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse mit einem zufällig generierten Schlüsselpaar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>The random key pair has a default public key length of 521 bits.</source>
          <target state="translated">Die zufällige Schlüsselpaar hat eine standardmäßige Länge des öffentlichen Schlüssels von 521 Bits.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">Die Größe des Schlüssels.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">Gültige Schlüsselgrößen sind 256, 384 und 521 Bits.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse mit einem zufällig erzeugten Schlüsselpaar mit der angegebenen Schlüsselgröße.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">Das zufälligen Schlüsselpaar wird die Länge des öffentliche Schlüssels von definiert haben die <ph id="ph1">`keySize`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated">Die <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> gibt eine ungültige Länge an.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">Der Schlüssel, der als Eingabe für kryptografische Vorgänge verwendet wird, die vom aktuellen Objekt durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse unter Verwendung des angegebenen <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> gibt keine ECDH (Elliptic Curve Diffie-Hellman)-Algorithmusgruppe an.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG-Klassen (Cryptography Next Generation) werden auf diesem System nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">Die Kurve, die für das Generieren des Paars aus privatem und öffentlichem Schlüssel verwendet wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">Erstellt eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse, deren Paar aus öffentlichem und privatem Schlüssel über die angegebene Kurve generiert wird.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> Überprüfen müssen (d. h. es muss zurückgegeben werden <ph id="ph2">`true`</ph>) bei der Übergabe an die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode muss eine benannte oder explizite Prime.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a hash function .</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einer Hashfunktion verwendet werden können.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren angefügt wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">Leitet Bytes ab, die mithilfe einer Hashfunktion als Schlüssel verwendet werden können. Der öffentliche Schlüssel einer anderen Partei, der Name des Hashalgorithmus, ein vorangestellter und ein angefügter Wert werden übergeben.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">`secretPrepend`</ph> oder <ph id="ph2">`secretAppend`</ph> ist <ph id="ph3">`null`</ph>, sie werden als leere Arrays behandelt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein ECDH-Schlüssel, oder es ist nicht die richtige Größe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">ist <ph id="ph1">&lt;see langword="null" /&gt;</ph> oder <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einem Hash-based Message Authentication Code (HMAC) verwendet werden können.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">Der Schlüssel für den HMAC.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren angefügt wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einem Hash-based Message Authentication Code (HMAC) verwendet werden können.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">`secretPrepend`</ph> oder <ph id="ph2">`secretAppend`</ph> ist <ph id="ph3">`null`</ph>, sie werden als leere Arrays behandelt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`hmacKey`</ph> is <ph id="ph2">`null`</ph>, the result of the Elliptic Curve Diffie-Hellman (ECDH) algorithm will be used as the HMAC key.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">`hmacKey`</ph> ist <ph id="ph2">`null`</ph>, wird das Ergebnis des Algorithmus Elliptic Curve Diffie-Hellman (ECDH) der HMAC-Schlüssel verwendet werden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein ECDH-Schlüssel, oder es ist nicht die richtige Größe.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">ist <ph id="ph1">&lt;see langword="null" /&gt;</ph> oder <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives the key material that is generated from the secret agreement between two parties.</source>
          <target state="translated">Leitet das Schlüsselmaterial ab, das aus dem Geheimvertrag zweier Seiten generiert wird.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party’s public key as input, and produces the secret agreement as output.</source>
          <target state="translated">Der Algorithmus Elliptic Curve Diffie-Hellman (ECDH) den privaten Schlüssel und ein öffentlicher Schlüssel von der anderen Partei als Eingabe akzeptiert und der Geheimvertrag als Ausgabe erzeugt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</source>
          <target state="translated">Die Schlüsselableitungsfunktion (KDF) klicken Sie dann die Geheimvertrag akzeptiert und das Schlüsselmaterial als Ausgabe erzeugt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">En Objekt, das den öffentlichen Teil des ECDH (Elliptic Curve Diffie-Hellman)-Schlüssels der anderen Seite des Schlüsselaustauschs enthält.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">Leitet das Schlüsselmaterial ab, das aus dem Geheimvertrag zweier Seiten generiert wird, und erwartet ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>-Objekt, das den öffentlichen Schlüssel der anderen Seite enthält.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">Ein Bytearray mit dem Schlüsselmaterial.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">Diese Informationen werden aus dem Geheimvertrag generiert, der aus dem privaten Schlüssel des aktuellen Objekts und dem angegebenen öffentlichen Schlüssel berechnet wird.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Either its <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph> property does not specify <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph> or its key size does not match the key size of this instance.</source>
          <target state="translated">Entweder ist in dessen <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph>-Eigenschaft nicht <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph> angegeben, oder die Schlüsselgröße stimmt nicht mit der Schlüsselgröße dieser Instanz überein.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This object's <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph> property specifies the <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> key derivation function, but either <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> or <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph>-Eigenschaft dieses Objekts gibt die <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>-Schlüsselableitungsfunktion an, aber <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> oder <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> ist <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Seite des Schlüsselaustauschs.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">Leitet das Schlüsselmaterial ab, das aus dem Geheimvertrag zweier Seiten generiert wird, und erwartet ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>-Objekt, das den öffentlichen Schlüssel der anderen Seite enthält.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">Ein Bytearray mit dem Schlüsselmaterial.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">Diese Informationen werden aus dem Geheimvertrag generiert, der aus dem privaten Schlüssel des aktuellen Objekts und dem angegebenen öffentlichen Schlüssel berechnet wird.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph>-Schlüssel.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">Die ASCII-codierte PRF-Bezeichnung.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">Der 64-Byte-PRF-Startwert.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">Leitet Bytes ab, die mithilfe eines Transport Layer Security-Pseudo-Random Function-Ableitungsalgorithmus (TLS, PRF) als Schlüssel verwendet werden können.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein ECDH-Schlüssel, oder es ist nicht die richtige Größe.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is not exactly 64 bytes in length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> ist nicht genau 64 Bytes lang.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>All other cryptographic errors.</source>
          <target state="translated">Alle anderen kryptografischen Fehler.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Gets a handle to the secret agreement generated between two parties.</source>
          <target state="translated">Ruft ein Handle für den Geheimvertrag ab, der zwischen zwei Seiten generiert wurde.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph> methodenüberladungen sind für erfahrene Benutzer benötigen ein Handle für die unformatierten Geheimvertrag anstelle des Schlüsselmaterials.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class.</source>
          <target state="translated">Das Handle Geheimvertrag Plattform genutzt werden Plattformaufrufen bei allen Aufgaben, die nicht von umgeben ist die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">En Objekt, das den öffentlichen Teil des ECDH (Elliptic Curve Diffie-Hellman)-Schlüssels der anderen Seite des Schlüsselaustauschs enthält.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">Ruft ein Handle für den Geheimvertrag ab, der zwischen zwei Seiten generiert wird, und erwartet ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>-Objekt, das den öffentlichen Schlüssel der anderen Seite enthält.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">Ein Handle für den Geheimvertrag.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">Diese Informationen werden aus dem privaten Schlüssel des aktuellen Objekts und dem angegebenen öffentlichen Schlüssel berechnet.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein ECDH-Schlüssel, oder es ist nicht die richtige Größe.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">für die Berechtigung zum Aufrufen von nicht verwalteten Codes.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand"-Wert: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Seite des Schlüsselaustauschs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">Ruft ein Handle für den Geheimvertrag ab, der zwischen zwei Seiten generiert wird, und erwartet ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>-Objekt, das den öffentlichen Schlüssel der anderen Seite enthält.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">Ein Handle für den Geheimvertrag.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">Diese Informationen werden aus dem privaten Schlüssel des aktuellen Objekts und dem angegebenen öffentlichen Schlüssel berechnet.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> ist kein <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>-Schlüssel.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">Exportiert die Schlüssel- und expliziten Kurvenparameter, die vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>-Objekt verwendet werden, in ein <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">Die Schlüssel- und expliziten Kurvenparameter, die vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>-Objekt verwendet werden.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">Die Methode kann keine Kurvenwerte abrufen.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">Der explizite Export wird von dieser Plattform nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">Windows 10 oder höher ist erforderlich.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">Exportiert den vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>-Objekt verwendeten Schlüssel in ein <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">Die Schlüssel- und die benannten Kurvenparameter, die vom <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>-Objekt verwendet werden.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph> field contains named curve parameters;          otherwise,  it contains explicit parameters.</source>
          <target state="translated">Wenn der Schlüssel, als benannte Kurve erstellt wurde, die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph> Feld enthält die benannte Kurvenzugparameter angegeben werden          Andernfalls enthält es explizite Parametern.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">Die Methode kann keine Kurvenwerte abrufen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">Diese Methode ist nicht implementiert.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">Verwenden Sie einen XML-Schlüssel zu deserialisieren, der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> stattdessen überladen.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">Diese Methode wurde für diese Instanz nicht überschrieben.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">Die XML-basierten Schlüsselinformationen, die deserialisiert werden sollten.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Das einzige aktuell akzeptierte Format ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">Deserialisiert die Schlüsselinformationen aus einer XML-Zeichenfolge mit dem angegebenen Format.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is malformed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> ist ungültig.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> gibt ein ungültiges Format an.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Der einzige akzeptierte Wert ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">Alle anderen Fehler.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate an ephemeral public/private key pair.</source>
          <target state="translated">Die Kurve, die für das Generieren eines kurzlebigen Paars aus privatem und öffentlichem Schlüssel verwendet wird.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a new ephemeral public/private key pair for the specified curve.</source>
          <target state="translated">Generiert ein neues kurzlebiges Paar aus privatem und öffentlichem Schlüssel für die angegebene Kurve.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return true when passed to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method) and must not be implicit.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> Überprüfen müssen (d. h. er "true", bei der Übergabe an zurückgeben muss die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode) und nicht implizit sein.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Merkmal-2-Kurven werden unter Windows nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when generating key material.</source>
          <target state="translated">Ruft den Hashalgorithmus ab, der zur Generierung des Schlüsselmaterials verwendet wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">Ein Objekt, das den Hashalgorithmus angibt.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property is used by Cryptography Next Generation (CNG) objects only if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">Diese Eigenschaft wird verwendet, von Cryptography Next Generation (CNG) Objekte nur, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> oder <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> Wert wird festgelegt, der <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft akzeptiert die folgenden Algorithmen: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">Andere benutzerdefinierte Hashalgorithmen können auch verwendet werden.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">Standardmäßig wird der Algorithmus <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated">Der Wert ist <ph id="ph1">&lt;see langword="null." /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">Ruft den HMAC (Hash-based Message Authentication Code)-Schlüssel ab, mit dem das Schlüsselmaterial abgeleitet wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">Der HMAC (Hash-based Message Authentication Code)-Schlüssel, mit dem das Schlüsselmaterial abgeleitet wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>This property applies only when the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Diese Eigenschaft gilt nur, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> Wert wird festgelegt, der <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> -Eigenschaft, und die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph> Eigenschaft ist <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">In der Standardeinstellung ist der Wert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve's parameters to import.</source>
          <target state="translated">Die zu importierenden Parameter der Kurve.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Imports the specified parameters for an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object as a key into the current instance.</source>
          <target state="translated">Importiert die angegebenen Parameter für ein <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>-Objekt als Schlüssel in die Kurveninstanz.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph> method replaces the existing key that this object is working with by creating a         new <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph> Methode ersetzt den vorhandenen Schlüssel, mit denen dieses Objekt arbeiten wird durch Erstellen eines neuen <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph> field, then only a public key is imported.</source>
          <target state="translated">Wenn <ph id="ph1">`parameters`</ph> enthält nur die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph> Feld, und klicken Sie dann nur ein öffentlicher Schlüssel importiert wird.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, then a full key pair is be imported.</source>
          <target state="translated">Wenn <ph id="ph1">`parameters`</ph> enthält auch <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, und klicken Sie dann ein vollständiges Schlüsselpaar wird importiert werden.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> value specifies the type of the curve to import.</source>
          <target state="translated">Die <ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> Wert gibt den Typ der Kurve zu importieren.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> verweist auf eine Kurve, die nicht importiert werden kann.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> verweist auf eine Kurve, die von dieser Plattform nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> that is used by the current object for cryptographic operations.</source>
          <target state="translated">Gibt den <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> an, der vom aktuellen Objekt für kryptografische Operationen verwendet wird.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>The key pair used by this object to perform cryptographic operations.</source>
          <target state="translated">Das von diesem Objekt für kryptografische Operationen verwendete Schlüsselpaar.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>Gets or sets the key derivation function for the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated">Ruft die Schlüsselableitungsfunktion für die <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Klasse ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph> enumeration values: <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph>-Enumerationswerte: <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph> oder <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>This property specifies the key derivation function that is used to transform the secret agreement into key material.</source>
          <target state="translated">Diese Eigenschaft gibt die Schlüsselableitungsfunktion-Funktion, die zum Transformieren der Geheimvertrag in Schlüsselmaterial verwendet wird.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The enumeration value is out of range.</source>
          <target state="translated">Der Enumerationswert liegt außerhalb des Bereichs.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>Gets or sets the label value that is used for key derivation.</source>
          <target state="translated">Ruft die für die Schlüsselableitung verwendete Bezeichnung ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>The label value.</source>
          <target state="translated">Der Bezeichnungswert.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">Dieser Wert wird für die schlüsselableitung verwendet, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph> Wert wird festgelegt, der <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>By default, it is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Standardmäßig ist es <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>Gets the public key that can be used by another <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object to generate a shared secret agreement.</source>
          <target state="translated">Ruft den öffentlichen Schlüssel ab, der von einem anderen <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Objekt zum Generieren eines gemeinsamen Geheimvertrags verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>The public key that is associated with this instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object.</source>
          <target state="translated">Der öffentliche Schlüssel, der dieser Instanz des <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph>-Objekts zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>Gets or sets a value that will be appended to the secret agreement when generating key material.</source>
          <target state="translated">Ruft einen Wert ab, der beim Generieren des Schlüsselmaterials an den Geheimvertrag angefügt wird, oder legt diesen Wert fest.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value that is appended to the secret agreement.</source>
          <target state="translated">Der Wert, der an den Geheimvertrag angefügt wird.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> key derivation function (KDF) is used.</source>
          <target state="translated">Dieser Wert wird für die schlüsselableitung verwendet, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> oder <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> Schlüsselableitungsfunktion (KDF) verwendet wird.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</source>
          <target state="translated">Der Wert wird an den Geheimvertrag angefügt, und der kombinierte Wert wird an die KDF zum Generieren des Schlüsselmaterials übergeben.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">In der Standardeinstellung ist der Wert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</source>
          <target state="translated">Ruft einen Wert ab, der beim Ableiten des Schlüsselmaterials am Anfang des Geheimvertrags eingefügt wird, oder legt diesen Wert fest.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value that is appended to the beginning of the secret agreement during key derivation.</source>
          <target state="translated">Der Wert, der bei der Schlüsselableitung am Anfang des Geheimvertrags eingefügt wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to one of the following values:</source>
          <target state="translated">Dieser Wert wird für die schlüsselableitung verwendet, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> Eigenschaft auf einen der folgenden Werte festgelegt:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</source>
          <target state="translated">Der Wert der Geheimvertrag vorangestellt ist, und der kombinierte Wert wird an die Schlüsselableitungsfunktion (KDF) zum Generieren des Schlüsselmaterials übergeben.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">In der Standardeinstellung ist der Wert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>Gets or sets the seed value that will be used when deriving key material.</source>
          <target state="translated">Ruft den Startwert ab, der zum Ableiten des Schlüsselmaterials verwendet wird, oder legt diesen Wert fest.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>The seed value.</source>
          <target state="translated">Der Startwert.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>.</source>
          <target state="translated">Dieser Wert wird für die schlüsselableitung verwendet, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">In der Standardeinstellung ist der Wert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">Diese Methode ist nicht implementiert.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">Nicht zutreffend.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">Um den aktuellen Schlüssel in eine XML-Darstellung zu konvertieren, verwenden die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> stattdessen überladen.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">Diese Methode wurde für diese Instanz nicht überschrieben.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">Einer der Enumerationswerte, der das Format der XML-Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Das einzige aktuell akzeptierte Format ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">Serialisiert die Schlüsselinformationen in eine XML-Zeichenfolge mit dem angegebenen Format.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string, according to the requested format.</source>
          <target state="translated">Ein Zeichenfolgenobjekt, das die serialisierten Schlüsselinformationen als XML-Zeichenfolge im angeforderten Format enthält.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> gibt ein ungültiges Format an.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">Der einzige akzeptierte Wert ist <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Geheimvertrag als HMAC (Hash-based Message Authentication Code)-Schlüssel zur Ableitung von Schlüsselmaterial verwendet wird.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the secret agreement is used as an HMAC key to derive key material; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Geheimvertrag als HMAC-Schlüssel verwendet wird, um Schlüsselmaterial abzuleiten, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>.</source>
          <target state="translated">Dieser Wert wird für die schlüsselableitung verwendet, wenn die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>By default, the value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">In der Standardeinstellung ist der Wert <ph id="ph1">`false`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>