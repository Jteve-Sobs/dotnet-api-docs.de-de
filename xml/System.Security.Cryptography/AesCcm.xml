<Type Name="AesCcm" FullName="System.Security.Cryptography.AesCcm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0820a367b3a3fbe4fb266e03b8eeb3acfefe47d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82406969" /></Metadata><TypeSignature Language="C#" Value="public sealed class AesCcm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AesCcm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AesCcm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AesCcm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AesCcm sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type AesCcm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt einen AES-Schlüssel (Advanced Encryption Standard) dar, der mit dem CCM-Modus (Counter with CBC-MAC) des Vorgangs verwendet werden soll.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : byte[] -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">Der zu verwendende geheime Schlüssel für diese Instanz.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.AesCcm" />-Klasse mit einem angegebenen Schlüssel.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="key" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Länge des <paramref name="key" />-Parameters entspricht nicht 16, 24 oder 32 Bytes (128, 192 oder 256 Bits).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (ReadOnlySpan&lt;byte&gt; key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(ReadOnlySpan&lt;System::Byte&gt; key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="key">Der zu verwendende geheime Schlüssel für diese Instanz.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.AesCcm" />-Klasse mit einem angegebenen Schlüssel.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Länge des <paramref name="key" />-Parameters entspricht nicht 16, 24 oder 32 Bytes (128, 192 oder 256 Bits).</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (byte[] nonce, byte[] ciphertext, byte[] tag, byte[] plaintext, byte[] associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(unsigned int8[] nonce, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] plaintext, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As Byte(), ciphertext As Byte(), tag As Byte(), plaintext As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">Die dieser Nachricht zugeordneten Nonce, die mit dem Wert übereinstimmen muss, der während der Verschlüsselung bereitgestellt wird.</param>
        <param name="ciphertext">Der verschlüsselte Inhalt, der entschlüsselt werden soll.</param>
        <param name="tag">Das Authentifizierungstag, das während der Verschlüsselung für diese Nachricht produziert wird.</param>
        <param name="plaintext">Das Bytearray, das den entschlüsselten Inhalt empfangen soll.</param>
        <param name="associatedData">Die dieser Nachricht zugeordneten zusätzlichen Daten, die mit dem Wert übereinstimmen müssen, der während der Verschlüsselung bereitgestellt wird.</param>
        <summary>Entschlüsselt den Chiffretext in den angegebenen Zielpuffer, wenn das Authentifizierungstag validiert werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn `tag` nicht überprüft werden kann (mit den Werten Key, `nonce`, `ciphertext`und `associatedData`), wird `plaintext` gelöscht.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Parameter <paramref name="plaintext" /> und <paramref name="ciphertext" /> weisen nicht die gleiche Länge auf.

Oder

Die Länge des <paramref name="nonce" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> nicht zugelassen.

Oder

Die Länge des <paramref name="tag" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> nicht zugelassen.</exception>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="nonce" />, <paramref name="ciphertext" />,<paramref name="tag" /> oder <paramref name="plaintext" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der Tagwert konnte nicht verifiziert werden, oder der Entschlüsselungsvorgang ist anderweitig fehlgeschlagen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; ciphertext, ReadOnlySpan&lt;byte&gt; tag, Span&lt;byte&gt; plaintext, ReadOnlySpan&lt;byte&gt; associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ciphertext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; tag, valuetype System.Span`1&lt;unsigned int8&gt; plaintext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As ReadOnlySpan(Of Byte), ciphertext As ReadOnlySpan(Of Byte), tag As ReadOnlySpan(Of Byte), plaintext As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">Die dieser Nachricht zugeordneten Nonce, die mit dem Wert übereinstimmen muss, der während der Verschlüsselung bereitgestellt wird.</param>
        <param name="ciphertext">Der verschlüsselte Inhalt, der entschlüsselt werden soll.</param>
        <param name="tag">Das Authentifizierungstag, das während der Verschlüsselung für diese Nachricht produziert wird.</param>
        <param name="plaintext">Die Bytespanne, die den entschlüsselten Inhalt empfangen soll.</param>
        <param name="associatedData">Die dieser Nachricht zugeordneten zusätzlichen Daten, die mit dem Wert übereinstimmen müssen, der während der Verschlüsselung bereitgestellt wird.</param>
        <summary>Entschlüsselt den Chiffretext in den angegebenen Zielpuffer, wenn das Authentifizierungstag validiert werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Wenn `tag` nicht überprüft werden kann (mit den Werten Key, `nonce`, `ciphertext`und `associatedData`), wird `plaintext` gelöscht.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Parameter <paramref name="plaintext" /> und <paramref name="ciphertext" /> weisen nicht die gleiche Länge auf.

Oder

Die Länge des <paramref name="nonce" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> nicht zugelassen.

Oder

Die Länge des <paramref name="tag" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> nicht zugelassen.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der Tagwert konnte nicht verifiziert werden, oder der Entschlüsselungsvorgang ist anderweitig fehlgeschlagen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aesCcm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ressourcen frei, die von der aktuellen Instanz der Klasse <see cref="T:System.Security.Cryptography.AesCcm" /> verwendet werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (byte[] nonce, byte[] plaintext, byte[] ciphertext, byte[] tag, byte[] associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(unsigned int8[] nonce, unsigned int8[] plaintext, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As Byte(), plaintext As Byte(), ciphertext As Byte(), tag As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">Die der Nachricht zugeordnete Nonce, bei der es sich für jeden Vorgang mit demselben Schlüssel um einen eindeutigen Wert handeln sollte.</param>
        <param name="plaintext">Der zu verschlüsselnde Inhalt.</param>
        <param name="ciphertext">Das Bytearray, das den verschlüsselten Inhalt empfangen soll.</param>
        <param name="tag">Das Bytearray, das das generierte Authentifizierungstag empfangen soll.</param>
        <param name="associatedData">Die dieser Nachricht zugeordneten zusätzlichen Daten, die ebenfalls bei der Entschlüsselung bereitgestellt werden müssen.</param>
        <summary>Entschlüsselt den Klartext als Chiffretext in den Zielpuffer und generiert das Authentifizierungstag in einem separaten Puffer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Sicherheitsgarantien des AES-CCM-algorithmusmodus erfordern, dass derselbe Nonce-Wert nie zweimal mit demselben Schlüssel verwendet wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Parameter <paramref name="plaintext" /> und <paramref name="ciphertext" /> weisen nicht die gleiche Länge auf.

Oder

Die Länge des <paramref name="nonce" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> nicht zugelassen.

Oder

Die Länge des <paramref name="tag" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> nicht zugelassen.</exception>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="nonce" />, <paramref name="ciphertext" />,<paramref name="tag" /> oder <paramref name="plaintext" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der Verschlüsselungsvorgang ist fehlgeschlagen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; plaintext, Span&lt;byte&gt; ciphertext, Span&lt;byte&gt; tag, ReadOnlySpan&lt;byte&gt; associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; plaintext, valuetype System.Span`1&lt;unsigned int8&gt; ciphertext, valuetype System.Span`1&lt;unsigned int8&gt; tag, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As ReadOnlySpan(Of Byte), plaintext As ReadOnlySpan(Of Byte), ciphertext As Span(Of Byte), tag As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">Die der Nachricht zugeordnete Nonce, bei der es sich für jeden Vorgang mit demselben Schlüssel um einen eindeutigen Wert handeln sollte.</param>
        <param name="plaintext">Der zu verschlüsselnde Inhalt.</param>
        <param name="ciphertext">Die Bytespanne, die den verschlüsselten Inhalt empfangen soll.</param>
        <param name="tag">Die Bytespanne, die das generierte Authentifizierungstag empfangen soll.</param>
        <param name="associatedData">Die dieser Nachricht zugeordneten zusätzlichen Daten, die ebenfalls bei der Entschlüsselung bereitgestellt werden müssen.</param>
        <summary>Entschlüsselt den Klartext als Chiffretext in den Zielpuffer und generiert das Authentifizierungstag in einem separaten Puffer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Sicherheitsgarantien des AES-CCM-algorithmusmodus erfordern, dass derselbe Nonce-Wert nie zweimal mit demselben Schlüssel verwendet wird.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Parameter <paramref name="plaintext" /> und <paramref name="ciphertext" /> weisen nicht die gleiche Länge auf.

Oder

Die Länge des <paramref name="nonce" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> nicht zugelassen.

Oder

Die Länge des <paramref name="tag" />-Parameters wird von <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> nicht zugelassen.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der Verschlüsselungsvorgang ist fehlgeschlagen.</exception>
      </Docs>
    </Member>
    <Member MemberName="NonceByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes NonceByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes NonceByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NonceByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ NonceByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NonceByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von dieser Instanz unterstützten Noncengrößen in Bytes ab.</summary>
        <value>Die Nonce-Größen, die von dieser Instanz unterstützt werden: 7, 8, 9, 10, 11, 12 oder 13 bytes (56, 64, 72, 80, 88, 96 oder 104 Bits).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes TagByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes TagByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TagByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ TagByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von dieser Instanz unterstützten Taggrößen in Bytes ab.</summary>
        <value>Die von dieser Instanz unterstützten taggrößen: 4, 6, 8, 10, 12, 14 oder 16 Bytes (32, 48, 64, 80, 96, 112 oder 128 Bits).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
