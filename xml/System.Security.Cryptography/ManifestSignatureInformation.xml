<Type Name="ManifestSignatureInformation" FullName="System.Security.Cryptography.ManifestSignatureInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9a74a08f5940b7fa7f2fea5f7b90d0ca3cde569" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36426105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManifestSignatureInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManifestSignatureInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ManifestSignatureInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManifestSignatureInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManifestSignatureInformation sealed" />
  <TypeSignature Language="F#" Value="type ManifestSignatureInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen für eine Manifestsignatur bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> Methode zum Abrufen einer <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> -Objekt, das verwendet werden kann, um die Informationen zur Signatur zu überprüfen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticodeSignature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticodeSignature As AuthenticodeSignatureInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::AuthenticodeSignatureInformation ^ AuthenticodeSignature { System::Security::Cryptography::X509Certificates::AuthenticodeSignatureInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticodeSignature : System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" Usage="System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Authenticode-Signaturinformationen für ein Manifest ab.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />-Objekt, das die Authenticode-Signaturinformationen für das Manifest enthält, oder <see langword="null" />, wenn keine Signatur vorhanden ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manifest">
      <MemberSignature Language="C#" Value="public System.Security.ManifestKinds Manifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.ManifestKinds Manifest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ManifestSignatureInformation.Manifest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manifest As ManifestKinds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::ManifestKinds Manifest { System::Security::ManifestKinds get(); };" />
      <MemberSignature Language="F#" Value="member this.Manifest : System.Security.ManifestKinds" Usage="System.Security.Cryptography.ManifestSignatureInformation.Manifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.ManifestKinds</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ eines Manifests ab.</summary>
        <value>Einer der <see cref="T:System.Security.ManifestKinds" />-Werte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrongNameSignature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StrongNameSignature As StrongNameSignatureInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::StrongNameSignatureInformation ^ StrongNameSignature { System::Security::Cryptography::StrongNameSignatureInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameSignature : System.Security.Cryptography.StrongNameSignatureInformation" Usage="System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.StrongNameSignatureInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Detailinformationen zur starken Namenssignatur eines Manifests ab.</summary>
        <value>Ein <see cref="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />-Objekt, das die Signatur enthält, oder <see langword="null" />, wenn keine starke Namenssignatur vorhanden ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifySignature">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erfasst und überprüft Informationen über die Signaturen der angegebenen Manifeste.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature(class System.ActivationContext application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifySignature (application As ActivationContext) As ManifestSignatureInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ManifestSignatureInformationCollection ^ VerifySignature(ActivationContext ^ application);" />
      <MemberSignature Language="F#" Value="static member VerifySignature : ActivationContext -&gt; System.Security.Cryptography.ManifestSignatureInformationCollection" Usage="System.Security.Cryptography.ManifestSignatureInformation.VerifySignature application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ManifestSignatureInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="application">Der Aktivierungskontext des Manifests. Aktivierungskontexte gehören zu einer Anwendung und enthalten mehrere Manifeste.</param>
        <summary>Erfasst und überprüft Informationen über die Signaturen von Manifesten, die zu einem angegebenen Aktivierungskontext gehören.</summary>
        <returns>Eine Auflistung, die ein <see cref="T:System.Security.Cryptography.ManifestSignatureInformation" />-Objekt für jedes überprüfte Manifest enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="application" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature(class System.ActivationContext application, valuetype System.Security.ManifestKinds manifests) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifySignature (application As ActivationContext, manifests As ManifestKinds) As ManifestSignatureInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ManifestSignatureInformationCollection ^ VerifySignature(ActivationContext ^ application, System::Security::ManifestKinds manifests);" />
      <MemberSignature Language="F#" Value="static member VerifySignature : ActivationContext * System.Security.ManifestKinds -&gt; System.Security.Cryptography.ManifestSignatureInformationCollection" Usage="System.Security.Cryptography.ManifestSignatureInformation.VerifySignature (application, manifests)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ManifestSignatureInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.ActivationContext" />
        <Parameter Name="manifests" Type="System.Security.ManifestKinds" />
      </Parameters>
      <Docs>
        <param name="application">Der Aktivierungskontext des Manifests. Aktivierungskontexte gehören zu einer Anwendung und enthalten mehrere Manifeste.</param>
        <param name="manifests">Der Manifesttyp. Dieser Parameter gibt an, welche Manifeste innerhalb des Aktivierungskontexts überprüft werden sollen.</param>
        <summary>Erfasst und überprüft Informationen über die Signaturen von Manifesten, die zu einem angegebenen Aktivierungskontext gehören und den angegebenen Typ aufweisen.</summary>
        <returns>Eine Auflistung, die ein <see cref="T:System.Security.Cryptography.ManifestSignatureInformation" />-Objekt für jedes überprüfte Manifest enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="application" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests, System.Security.Cryptography.X509Certificates.X509RevocationFlag revocationFlag, System.Security.Cryptography.X509Certificates.X509RevocationMode revocationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature(class System.ActivationContext application, valuetype System.Security.ManifestKinds manifests, valuetype System.Security.Cryptography.X509Certificates.X509RevocationFlag revocationFlag, valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode revocationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifySignature (application As ActivationContext, manifests As ManifestKinds, revocationFlag As X509RevocationFlag, revocationMode As X509RevocationMode) As ManifestSignatureInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ManifestSignatureInformationCollection ^ VerifySignature(ActivationContext ^ application, System::Security::ManifestKinds manifests, System::Security::Cryptography::X509Certificates::X509RevocationFlag revocationFlag, System::Security::Cryptography::X509Certificates::X509RevocationMode revocationMode);" />
      <MemberSignature Language="F#" Value="static member VerifySignature : ActivationContext * System.Security.ManifestKinds * System.Security.Cryptography.X509Certificates.X509RevocationFlag * System.Security.Cryptography.X509Certificates.X509RevocationMode -&gt; System.Security.Cryptography.ManifestSignatureInformationCollection" Usage="System.Security.Cryptography.ManifestSignatureInformation.VerifySignature (application, manifests, revocationFlag, revocationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ManifestSignatureInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.ActivationContext" />
        <Parameter Name="manifests" Type="System.Security.ManifestKinds" />
        <Parameter Name="revocationFlag" Type="System.Security.Cryptography.X509Certificates.X509RevocationFlag" />
        <Parameter Name="revocationMode" Type="System.Security.Cryptography.X509Certificates.X509RevocationMode" />
      </Parameters>
      <Docs>
        <param name="application">Der Anwendungskontext der Manifeste. Aktivierungskontexte gehören zu einer Anwendung und enthalten mehrere Manifeste.</param>
        <param name="manifests">Der Manifesttyp. Dieser Parameter gibt an, welche Manifeste innerhalb des Aktivierungskontexts überprüft werden sollen.</param>
        <param name="revocationFlag">Einer der Enumerationswerte, der angibt, welche Zertifikate in der Kette auf Sperrungen überprüft werden. Der Standardwert ist <see cref="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot" />.</param>
        <param name="revocationMode">Bestimmt, ob die X.509-Überprüfung online nach Sperrlisten suchen soll.</param>
        <summary>Erfasst und überprüft Informationen über die Signaturen von Manifesten, die zu einem angegebenen Aktivierungskontext gehören und den angegebenen Typ aufweisen. Zusätzlich können Zertifikate zur Sperrung ausgewählt werden.</summary>
        <returns>Eine Auflistung, die ein <see cref="T:System.Security.Cryptography.ManifestSignatureInformation" />-Objekt für jedes überprüfte Manifest enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="application" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Ein für den <paramref name="revocationFlag" />-Parameter oder den <paramref name="revocationMode" />-Parameter angegebener Wert ist ungültig.</exception>
      </Docs>
    </Member>
  </Members>
</Type>