<Type Name="CryptoConfig" FullName="System.Security.Cryptography.CryptoConfig">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37780bd440902300e390b7f111fc2ef38f505c89" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70551461" /></Metadata><TypeSignature Language="C#" Value="public class CryptoConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CryptoConfig extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoConfig" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoConfig" />
  <TypeSignature Language="F#" Value="type CryptoConfig = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Greift auf Informationen über die Kryptografiekonfiguration zu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die einfachen Namen, die von dieser Klasse erkannt werden, und die standardalgorithmusimplementierungen, denen Sie zugeordnet sind. Alternativ können Sie diesen Namen auch andere Implementierungen zuordnen, wie unterzuordnen [von Algorithmusnamen zu Kryptografieklassen](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md)beschrieben.  
  
|Einfacher Name|Algorithmusimplementierung|  
|-----------------|------------------------------|  
|3DES, Triple des, TripleDES, System. Security. Cryptography. TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|  
|AES, System. Security. Cryptography. AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|  
|AesManaged, System. Security. Cryptography. AesManaged|<xref:System.Security.Cryptography.AesManaged>|  
|System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|Des, System. Security. Cryptography. des|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|  
|DSA, System. Security. Cryptography. DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|  
|ECDH, ECDiffieHellman, ECDiffieHellmanCng, System. Security. Cryptography. ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|  
|ECDsa, ECDsaCng, System. Security. Cryptography. ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|  
|System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|HMAC, System. Security. Cryptography. HMAC|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACMD5, System. Security. Cryptography. HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|  
|HMACRIPEMD160, System. Security. Cryptography. HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|  
|HMACSHA1, System. Security. Cryptography. HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACSHA256, System. Security. Cryptography. HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|  
|HMACSHA384, System. Security. Cryptography. HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|  
|HMACSHA512, System. Security. Cryptography. HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|  
|System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|  
|MACTripleDES, System. Security. Cryptography. MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|  
|MD5, System. Security. Cryptography. MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|  
|System. Security. Cryptography. MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|  
|RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|  
|RC2, System. Security. Cryptography. RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|  
|Rijndael, System. Security. Cryptography. Rijndael|<xref:System.Security.Cryptography.RijndaelManaged>|  
|RIPEMD160, RIPEMD-160, System. Security. Cryptography. RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|  
|RSA, System. Security. Cryptography. RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|SHA, SHA1, System. Security. Cryptography. SHA1|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|System. Security. Cryptography. SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|  
|SHA256, SHA-256, System. Security. Cryptography. SHA256|<xref:System.Security.Cryptography.SHA256Managed>|  
|System. Security. Cryptography. SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|  
|System. Security. Cryptography. SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|  
|SHA384, SHA-384, System. Security. Cryptography. SHA384|<xref:System.Security.Cryptography.SHA384Managed>|  
|System. Security. Cryptography. SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|  
|System. Security. Cryptography. SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|  
|SHA512, SHA-512, System. Security. Cryptography. SHA512|<xref:System.Security.Cryptography.SHA512Managed>|  
|System. Security. Cryptography. SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|  
|System. Security. Cryptography. SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|  
|System. Security. Cryptography. SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Member der <xref:System.Security.Cryptography.CryptoConfig> -Klasse verwendet werden.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptoConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CryptoConfig();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CryptoConfig" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="AddAlgorithm">
      <MemberSignature Language="C#" Value="public static void AddAlgorithm (Type algorithm, params string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAlgorithm(class System.Type algorithm, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAlgorithm (algorithm As Type, ParamArray names As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAlgorithm(Type ^ algorithm, ... cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="static member AddAlgorithm : Type * string[] -&gt; unit" Usage="System.Security.Cryptography.CryptoConfig.AddAlgorithm (algorithm, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="names" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">Der zuzuordnende Algorithmusname.</param>
        <param name="names">Ein Array von Namen, die dem Algorithmus zugeordnet werden sollen.</param>
        <summary>Fügt den Algorithmuszuordnungen, die für die aktuelle Anwendungsdomäne verwendet werden sollen, einen Satz von Namen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die angegebenen Zuordnungen haben Vorrang vor den integrierten Zuordnungen und den Zuordnungen in der Datei Machine. config. Die Zuordnungen werden verwendet, um zu verhindern, dass teilweise vertrauenswürdiger Code vertrauenswürdige kryptografische Vorgänge verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="algorithm" />-Parameter oder der <paramref name="names" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Auf <paramref name="algorithm" /> kann nicht von außerhalb der Assembly zugegriffen werden.  
  
- oder - 
Einer der Einträge im <paramref name="names" />-Parameter ist leer oder <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddOID">
      <MemberSignature Language="C#" Value="public static void AddOID (string oid, params string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddOID(string oid, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddOID (oid As String, ParamArray names As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddOID(System::String ^ oid, ... cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="static member AddOID : string * string[] -&gt; unit" Usage="System.Security.Cryptography.CryptoConfig.AddOID (oid, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oid" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="names" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="oid">Der zuzuordnende Objektbezeichner (OID).</param>
        <param name="names">Ein Array von Namen, die dem Objektbezeichner zugeordnet werden sollen.</param>
        <summary>Fügt den Objektbezeichnerzuordnungen (OID), die für die aktuelle Anwendungsdomäne verwendet werden sollen, einen Satz von Namen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die angegebenen Zuordnungen haben Vorrang vor den integrierten Zuordnungen und den Zuordnungen in der Datei Machine. config. Die Zuordnungen werden verwendet, um zu verhindern, dass teilweise vertrauenswürdiger Code vertrauenswürdige kryptografische Vorgänge verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="oid" />-Parameter oder der <paramref name="names" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Einer der Einträge im <paramref name="names" />-Parameter ist leer oder <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowOnlyFipsAlgorithms">
      <MemberSignature Language="C#" Value="public static bool AllowOnlyFipsAlgorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AllowOnlyFipsAlgorithms" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllowOnlyFipsAlgorithms As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AllowOnlyFipsAlgorithms { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowOnlyFipsAlgorithms : bool" Usage="System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob die Runtime die Richtlinie erzwingen soll, um nur FIPS-zertifizierte (Federal Information Processing Standard) Algorithmen zu erstellen.</summary>
        <value><see langword="true" />, um die Richtlinie zu erzwingen, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt `false`an, dass ein beliebiger Algorithmus erstellt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz des angegebenen Kryptografieobjekts.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateFromName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateFromName : string -&gt; obj" Usage="System.Security.Cryptography.CryptoConfig.CreateFromName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der einfache Name des Kryptografieobjekts, von dem eine Instanz erstellt werden soll.</param>
        <summary>Erstellt eine neue Instanz des angegebenen Kryptografieobjekts.</summary>
        <returns>Eine neue Instanz des angegebenen Kryptografieobjekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Liste der einfachen Namen, die von dieser Klasse erkannt werden <xref:System.Security.Cryptography.CryptoConfig>, finden Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> -Methode aufgerufen wird, um einen neuen SHA1-Anbieter zu erstellen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.CryptoConfig> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">Der durch den <paramref name="name" />-Parameter beschriebene Algorithmus wurde bei aktiviertem FIPS-Modus (Federal Information Processing Standards) verwendet, ist aber nicht FIPS-kompatibel.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromName (name As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateFromName(System::String ^ name, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateFromName : string * obj[] -&gt; obj" Usage="System.Security.Cryptography.CryptoConfig.CreateFromName (name, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Der einfache Name des Kryptografieobjekts, von dem eine Instanz erstellt werden soll.</param>
        <param name="args">Die zum Erstellen des angegebenen Kryptografieobjekts verwendeten Argumente.</param>
        <summary>Erstellt eine neue Instanz des angegebenen Kryptografieobjekts mit den angegebenen Argumenten.</summary>
        <returns>Eine neue Instanz des angegebenen Kryptografieobjekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Liste der einfachen Namen, die von dieser Klasse erkannt werden <xref:System.Security.Cryptography.CryptoConfig>, finden Sie unter.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht, wie die <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> -Methode aufgerufen wird, um eine neue RSA-Anbieter Instanz zu initialisieren, die auf den `TestContainer` Schlüssel Container zugreift. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.CryptoConfig> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">Der durch den <paramref name="name" />-Parameter beschriebene Algorithmus wurde bei aktiviertem FIPS-Modus (Federal Information Processing Standards) verwendet, ist aber nicht FIPS-kompatibel.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="EncodeOID">
      <MemberSignature Language="C#" Value="public static byte[] EncodeOID (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodeOID(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeOID (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncodeOID(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member EncodeOID : string -&gt; byte[]" Usage="System.Security.Cryptography.CryptoConfig.EncodeOID str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Der zu codierende OID.</param>
        <summary>Codiert den angegebenen Objektbezeichner (OID).</summary>
        <returns>Ein Bytearray, das den codierten OID enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.CryptoConfig.EncodeOID%2A> -Methode aufgerufen wird, um den angegebenen Objekt Bezeichner zu codieren. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.CryptoConfig> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="str" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">Fehler beim Codieren des OID.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="MapNameToOID">
      <MemberSignature Language="C#" Value="public static string MapNameToOID (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapNameToOID(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapNameToOID (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapNameToOID(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member MapNameToOID : string -&gt; string" Usage="System.Security.Cryptography.CryptoConfig.MapNameToOID name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der einfache Name des Algorithmus, dessen OID abgerufen werden soll.</param>
        <summary>Ruft den Objektbezeichner (OID) des Algorithmus ab, der dem angegebenen einfachen Namen entspricht.</summary>
        <returns>Der OID des angegebenen Algorithmus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Liste der einfachen Namen, die von dieser Klasse erkannt werden <xref:System.Security.Cryptography.CryptoConfig>, finden Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> -Methode aufgerufen wird, um einen Objekt Bezeichner (OID) aus dem Zeichen folgen Namen des SHA1-Algorithmus abzurufen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.CryptoConfig> -Klasse bereitgestellt wird.  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoConfig#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
  </Members>
</Type>
