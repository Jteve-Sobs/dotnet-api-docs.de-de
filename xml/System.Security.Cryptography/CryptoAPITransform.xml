<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CryptoAPITransform.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac558fbf7378f02612b784045b61cc6fcba0e136c80.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58fbf7378f02612b784045b61cc6fcba0e136c80</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CryptoAPITransform">
          <source>Performs a cryptographic transformation of data.</source>
          <target state="translated">Führt eine kryptografische Transformation von Daten aus.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CryptoAPITransform">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoAPITransform">
          <source>The following code example demonstrates how to use members of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Sie Mitglieder der der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Immer <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A&gt;</ph> property to determine if the current transform can be reused.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob die aktuelle Transformation wiederverwendet werden kann.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks">
          <source>Gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob mehrere Blöcke transformiert werden können.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple blocks can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn mehrere Blöcke transformiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A&gt;</ph> property to determine if multiple blocks can be transformed.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A&gt;</ph> Eigenschaft, um zu bestimmen, ob mehrere Blöcke transformiert werden können.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph> method.</source>
          <target state="translated">Gibt alle von der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph>-Methode verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>This method is a simple call to <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Diese Methode ist ein einfacher Aufruf <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Aufrufen von <ph id="ph1">`Dispose`</ph> können Ressourcen von der <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> neu für andere Zwecke reserviert werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">`Dispose`</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A&gt;</ph> method to release the resources used by the current transform.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A&gt;</ph> Methode zum Freigeben der Ressourcen, die von der aktuellen Transformation verwendet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Clear">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph> class.</source>
          <target state="translated">Gibt alle von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">`Dispose`</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">`Dispose`</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">`Dispose`</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">`Dispose`</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">Ruft die Größe des Eingabeblocks ab.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize">
          <source>The input block size in bytes.</source>
          <target state="translated">Die Größe des Eingabeblocks in Byte.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A&gt;</ph> property to retrieve the input block size.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A&gt;</ph> Eigenschaft, um die Größe des Eingabeblocks abzurufen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle">
          <source>Gets the key handle.</source>
          <target state="translated">Ruft das Schlüsselhandle ab.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle">
          <source>The key handle.</source>
          <target state="translated">Das Schlüsselhandle.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">für die Fähigkeit, nicht verwalteten Code aufrufen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">Ruft die Größe des Ausgabeblocks ab.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize">
          <source>The output block size in bytes.</source>
          <target state="translated">Die Größe des Ausgabeblocks in Byte.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A&gt;</ph> property to retrieve the output block size.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A&gt;</ph> Eigenschaft, um die Größe des Ausgabeblocks abzurufen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.Reset">
          <source>Resets the internal state of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph> so that it can be used again to do a different encryption or decryption.</source>
          <target state="translated">Setzt den internen Zustand von <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoAPITransform" /&gt;</ph> zurück, sodass diese erneut für eine andere Verschlüsselung oder Entschlüsselung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A&gt;</ph> method is called automatically when you call TransformFinalBlock.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A&gt;</ph> Methode wird beim Aufrufen von TransformFinalBlock automatisch aufgerufen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Reset">
          <source>The <ph id="ph1">`Reset`</ph> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</source>
          <target state="translated">Die <ph id="ph1">`Reset`</ph> Methode wird nicht aufgerufen, wenn Sie z. B. die verschlüsselten Eingabedaten Garbage und können nicht entschlüsselt werden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Reset">
          <source>In this case, an exception is thrown and <ph id="ph1">`Reset`</ph> is not called.</source>
          <target state="translated">In diesem Fall wird eine Ausnahme ausgelöst und <ph id="ph1">`Reset`</ph> wird nicht aufgerufen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.Reset">
          <source>You can choose to manually call the <ph id="ph1">`Reset`</ph> method in this case.</source>
          <target state="translated">Sie können auch manuell Aufrufen der <ph id="ph1">`Reset`</ph> Methode in diesem Fall.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input on which to perform the operation on.</source>
          <target state="translated">Die Eingabe, für die die Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data from.</source>
          <target state="translated">Der Offset im Eingabebytearray, ab dem Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to which to write the data to.</source>
          <target state="translated">Die Ausgabe, in die die Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data from.</source>
          <target state="translated">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</source>
          <target state="translated">Berechnet die Transformation für den angegebenen Bereich des Eingabebytearrays und kopiert die resultierende Transformation in den angegebenen Bereich des Ausgabebytearrays.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">Die Anzahl der geschriebenen Bytes.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A&gt;</ph> method to transform the bytes from <ph id="ph2">`currentPosition`</ph> in the <ph id="ph3">`sourceBytes`</ph> array, writing the bytes to the <ph id="ph4">`targetBytes`</ph> array.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A&gt;</ph> -Methode zum Transformieren der Bytes vom <ph id="ph2">`currentPosition`</ph> in der <ph id="ph3">`sourceBytes`</ph> Array, das Schreiben von Bytes, die <ph id="ph4">`targetBytes`</ph> Array.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="outputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="outputBuffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The length of the input buffer is less than the sum of the input offset and the input count.</source>
          <target state="translated">Die Länge des Eingabepuffers ist kleiner als die Summe von Eingabeoffset und Eingabeanzahl.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> liegt außerhalb des Bereichs.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input on which to perform the operation on.</source>
          <target state="translated">Die Eingabe, für die die Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data from.</source>
          <target state="translated">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the transformation for the specified region of the specified byte array.</source>
          <target state="translated">Berechnet die Transformation für den angegebenen Bereich des angegebenen Bytearrays.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed transformation.</source>
          <target state="translated">Die berechnete Transformation.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A&gt;</ph> method to transform the final block of bytes.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A&gt;</ph> Methode, um den letzten Block von Bytes zu transformieren.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoAPITransform&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph>-Parameter ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph>-Parameter ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the input buffer is less than the sum of the input offset and the input count.</source>
          <target state="translated">Die Länge des Eingabepuffers ist kleiner als die Summe von Eingabeoffset und Eingabeanzahl.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /&gt;</ph> padding is invalid.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /&gt;</ph>-Zeichenabstand ist ungültig.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> parameter is out of range.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph>-Parameter liegt außerhalb des gültigen Bereichs.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>