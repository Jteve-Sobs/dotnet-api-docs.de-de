<Type Name="DSASignatureFormat" FullName="System.Security.Cryptography.DSASignatureFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e8fdcfd3500e16bdcf3bd0e2d71ff644d3a01ff" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88266640" /></Metadata><TypeSignature Language="C#" Value="public enum DSASignatureFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DSASignatureFormat extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSASignatureFormat" />
  <TypeSignature Language="VB.NET" Value="Public Enum DSASignatureFormat" />
  <TypeSignature Language="C++ CLI" Value="public enum class DSASignatureFormat" />
  <TypeSignature Language="F#" Value="type DSASignatureFormat = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt das Datenformat für Signaturen mit der DSA-Familie von Algorithmen an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> Die Ersteller des DSA-Algorithmus haben ihre Unterstützung für Sie zurückgezogen. Verwenden Sie ggf. die- <xref:System.Security.Cryptography.RSA> Klasse oder die-Klasse anstelle der- <xref:System.Security.Cryptography.ECDsa> <xref:System.Security.Cryptography.DSA> Klasse. Verwenden Sie <xref:System.Security.Cryptography.DSA> nur aus Gründen der Kompatibilität mit Legacy Anwendungen und-Daten.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IeeeP1363FixedFieldConcatenation">
      <MemberSignature Language="C#" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.DSASignatureFormat IeeeP1363FixedFieldConcatenation = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="VB.NET" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="C++ CLI" Value="IeeeP1363FixedFieldConcatenation" />
      <MemberSignature Language="F#" Value="IeeeP1363FixedFieldConcatenation = 0" Usage="System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSASignatureFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Das Signaturformat aus IEEE P1363, das eine Signatur fester Größe für einen angegebenen Schlüssel generiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieses Signatur Format codiert das `(r, s)` Tupel als Verkettung der Big-Endian-Darstellung von `r` und der Big-Endian-Darstellung von. `s` jeder Wert wird mit der Anzahl von Bytes codiert, die für die Codierung des maximalen ganzzahligen Werts im mathematischen Feld des Schlüssels erforderlich ist. Beispielsweise codieren eine ECDSA-Signatur aus der Kurve `secp521r1` , ein 521-Bit-Feld, jede von `r` und `s` als 66 bytes, wodurch eine Signatur Ausgabe von 132 Bytes erzeugt wird.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rfc3279DerSequence">
      <MemberSignature Language="C#" Value="Rfc3279DerSequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.DSASignatureFormat Rfc3279DerSequence = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.DSASignatureFormat.Rfc3279DerSequence" />
      <MemberSignature Language="VB.NET" Value="Rfc3279DerSequence" />
      <MemberSignature Language="C++ CLI" Value="Rfc3279DerSequence" />
      <MemberSignature Language="F#" Value="Rfc3279DerSequence = 1" Usage="System.Security.Cryptography.DSASignatureFormat.Rfc3279DerSequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSASignatureFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Das Signaturformat aus IETF RFC 3279, das eine Signatur variabler Größen generiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Dieses Signatur Format codiert das `(r, s)` Tupel als die-Codierung von `SEQUENCE(INTEGER(r), INTEGER(s))` . Da die Länge einer ganzzahligen Codierung gemäß dem codierten Wert variiert, erzeugt dieses Signatur Format keine konsistente Signatur Länge. Signaturen in diesem Format beginnen immer mit `0x30` , und im Durchschnitt sind sieben Bytes länger als Signaturen im- <xref:System.Security.Cryptography.DSASignatureFormat.IeeeP1363FixedFieldConcatenation> Format.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
