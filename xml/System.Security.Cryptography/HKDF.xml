<Type Name="HKDF" FullName="System.Security.Cryptography.HKDF">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3b10ea2a736e7f8c6ba1aefef6c6ca08dc8f750" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88267112" /></Metadata><TypeSignature Language="C#" Value="public static class HKDF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HKDF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HKDF" />
  <TypeSignature Language="VB.NET" Value="Public Class HKDF" />
  <TypeSignature Language="C++ CLI" Value="public ref class HKDF abstract sealed" />
  <TypeSignature Language="F#" Value="type HKDF = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b2416-101">RFC5869 HMAC-basierte HKDF (Extract-and-Expand Key Derivation)</span><span class="sxs-lookup"><span data-stu-id="b2416-101">RFC5869  HMAC-based Extract-and-Expand Key Derivation (HKDF)</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b2416-102">In Situationen, in denen das Eingabe Schlüsselmaterial bereits eine gleichmäßig zufällige Bitzeichenfolge ist, ermöglicht der hkdf-Standard das Überspringen der Extrahierungs Phase, und der Hauptschlüssel wird direkt als Pseudo Zufalls-Schlüssel verwendet.</span><span class="sxs-lookup"><span data-stu-id="b2416-102">In situations where the input key material is already a uniformly random bit string, the HKDF standard allows the Extract phase to be skipped and the master key to be used directly as the pseudorandom key.</span></span>
<span data-ttu-id="b2416-103">Weitere Informationen finden Sie unter <a href="https://tools.ietf.org/html/rfc5869">RFC5869</a> .</span><span class="sxs-lookup"><span data-stu-id="b2416-103">See <a href="https://tools.ietf.org/html/rfc5869">RFC5869</a> for more information.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static byte[] DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, int outputLength, byte[]? salt = default, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, int32 outputLength, unsigned int8[] salt, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), outputLength As Integer, Optional salt As Byte() = Nothing, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, outputLength, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-104">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-104">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="b2416-105">Das Eingabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-105">The input keying material.</span></span></param>
        <param name="outputLength"><span data-ttu-id="b2416-106">Die Länge des Ausgabe-Schlüsselerstellungsmaterials.</span><span class="sxs-lookup"><span data-stu-id="b2416-106">The length of the output keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="b2416-107">Der optionale Salt-Wert (ein nicht geheimer zufälliger Wert).</span><span class="sxs-lookup"><span data-stu-id="b2416-107">The optional salt value (a non-secret random value).</span></span> <span data-ttu-id="b2416-108">Wenn keine Angabe erfolgt, wird standardmäßig ein Bytearray mit derselben Länge wie die Ausgabe des angegebenen Hashalgorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="b2416-108">If not provided, it defaults to a byte array of the same length as the output of the specified hash algorithm.</span></span></param>
        <param name="info"><span data-ttu-id="b2416-109">Der optionale Kontext und anwendungsspezifische Informationen.</span><span class="sxs-lookup"><span data-stu-id="b2416-109">The optional context and application specific information.</span></span></param>
        <summary><span data-ttu-id="b2416-110">Führt HKDF-Funktionen zum Erweitern und Extrahieren für die Schlüsselableitung aus.</span><span class="sxs-lookup"><span data-stu-id="b2416-110">Performs the key derivation HKDF Expand and Extract functions.</span></span></summary>
        <returns><span data-ttu-id="b2416-111">Das Ausgabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-111">The output keying material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveKey">
      <MemberSignature Language="C#" Value="public static void DeriveKey (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; salt, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveKey(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.DeriveKey(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveKey (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), output As Span(Of Byte), salt As ReadOnlySpan(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveKey(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; salt, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member DeriveKey : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.DeriveKey (hashAlgorithmName, ikm, output, salt, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-112">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-112">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="b2416-113">Das Eingabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-113">The input keying material.</span></span></param>
        <param name="output"><span data-ttu-id="b2416-114">Der Ausgabepuffer, der das Ausgabe-Schlüsselerstellungsmaterial darstellt.</span><span class="sxs-lookup"><span data-stu-id="b2416-114">The output buffer that represents output keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="b2416-115">Der Salt-Wert (ein nicht geheimer zufälliger Wert).</span><span class="sxs-lookup"><span data-stu-id="b2416-115">The salt value (a non-secret random value).</span></span></param>
        <param name="info"><span data-ttu-id="b2416-116">Der Kontext und anwendungsspezifische Informationen (kann eine leere Spanne sein).</span><span class="sxs-lookup"><span data-stu-id="b2416-116">The context and application specific information (can be an empty span).</span></span></param>
        <summary><span data-ttu-id="b2416-117">Führt HKDF-Funktionen zum Erweitern und Extrahieren für die Schlüsselableitung aus.</span><span class="sxs-lookup"><span data-stu-id="b2416-117">Performs the key derivation HKDF Expand and Extract functions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static byte[] Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] prk, int outputLength, byte[]? info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] prk, int32 outputLength, unsigned int8[] info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Expand (hashAlgorithmName As HashAlgorithmName, prk As Byte(), outputLength As Integer, Optional info As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * byte[] * int * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, outputLength, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.Byte[]" />
        <Parameter Name="outputLength" Type="System.Int32" />
        <Parameter Name="info" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-118">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-118">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="prk"><span data-ttu-id="b2416-119">Der Pseudozufallsschlüssel, der mindestens so lang ist wie das Ausgabebytearray des angegebenen Hashalgorithmus (in der Regel die Ausgabe aus dem Erweiterungsschritt).</span><span class="sxs-lookup"><span data-stu-id="b2416-119">The pseudorandom key that is at least as long as the output byte array of the specified hash algorithm (usually the output from Expand step).</span></span></param>
        <param name="outputLength"><span data-ttu-id="b2416-120">Die Länge des Ausgabe-Schlüsselerstellungsmaterials.</span><span class="sxs-lookup"><span data-stu-id="b2416-120">The length of the output keying material.</span></span></param>
        <param name="info"><span data-ttu-id="b2416-121">Der optionale Kontext und anwendungsspezifische Informationen.</span><span class="sxs-lookup"><span data-stu-id="b2416-121">The optional context and application specific information.</span></span></param>
        <summary><span data-ttu-id="b2416-122">Führt die HKDF-Expand-Funktion aus (siehe Abschnitt  2.3 von <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>).</span><span class="sxs-lookup"><span data-stu-id="b2416-122">Performs the HKDF-Expand function See section 2.3 of <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="b2416-123">Das Ausgabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-123">The output keying material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public static void Expand (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; prk, Span&lt;byte&gt; output, ReadOnlySpan&lt;byte&gt; info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Expand(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; prk, valuetype System.Span`1&lt;unsigned int8&gt; output, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Expand(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Expand (hashAlgorithmName As HashAlgorithmName, prk As ReadOnlySpan(Of Byte), output As Span(Of Byte), info As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Expand(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; prk, Span&lt;System::Byte&gt; output, ReadOnlySpan&lt;System::Byte&gt; info);" />
      <MemberSignature Language="F#" Value="static member Expand : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.HKDF.Expand (hashAlgorithmName, prk, output, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="prk" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="output" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="info" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-124">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-124">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="prk"><span data-ttu-id="b2416-125">Der Pseudozufallsschlüssel, der mindestens so lang ist wie das Ausgabebytearray des angegebenen Hashalgorithmus (in der Regel die Ausgabe aus dem Erweiterungsschritt).</span><span class="sxs-lookup"><span data-stu-id="b2416-125">The pseudorandom key that is at least as long as as the output byte array of the specified hash algorithm (usually the output from Expand step).</span></span></param>
        <param name="output"><span data-ttu-id="b2416-126">Der Zielpuffer, der das Ausgabe-Schlüsselerstellungsmaterial empfängt.</span><span class="sxs-lookup"><span data-stu-id="b2416-126">The destination buffer to receive the output keying material.</span></span></param>
        <param name="info"><span data-ttu-id="b2416-127">Der Kontext und anwendungsspezifische Informationen (kann eine leere Spanne sein).</span><span class="sxs-lookup"><span data-stu-id="b2416-127">The context and application specific information (can be an empty span).</span></span></param>
        <summary><span data-ttu-id="b2416-128">Führt die HKDF-Expand-Funktion aus.</span><span class="sxs-lookup"><span data-stu-id="b2416-128">Performs the HKDF-Expand function.</span></span> <span data-ttu-id="b2416-129">Weitere Informationen finden Sie im Abschnitt 2.3 von <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>.</span><span class="sxs-lookup"><span data-stu-id="b2416-129">See section 2.3 of <a href="https://tools.ietf.org/html/rfc5869#section-2.3">RFC5869</a>.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static byte[] Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, byte[] ikm, byte[]? salt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, unsigned int8[] ikm, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As Byte(), Optional salt As Byte() = Nothing) As Byte()" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-130">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-130">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="b2416-131">Das Eingabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-131">The input keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="b2416-132">Der optionale Salt-Wert (ein nicht geheimer zufälliger Wert).</span><span class="sxs-lookup"><span data-stu-id="b2416-132">The optional salt value (a non-secret random value).</span></span> <span data-ttu-id="b2416-133">Wenn keine Angabe erfolgt, wird standardmäßig ein Bytearray mit derselben Länge wie die Ausgabe des angegebenen Hashalgorithmus verwendet.</span><span class="sxs-lookup"><span data-stu-id="b2416-133">If not provided it defaults to a byte array of the same length as the output of the specified hash algorithm.</span></span></param>
        <summary><span data-ttu-id="b2416-134">Führt die HKDF-Extract-Funktion aus.</span><span class="sxs-lookup"><span data-stu-id="b2416-134">Performs the HKDF-Extract function.</span></span>
<span data-ttu-id="b2416-135">Weitere Informationen finden Sie im Abschnitt 2.2 von <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span><span class="sxs-lookup"><span data-stu-id="b2416-135">See section 2.2 of <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="b2416-136">Der Pseudozufallsschlüssel (prk).</span><span class="sxs-lookup"><span data-stu-id="b2416-136">The pseudorandom key (prk).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extract">
      <MemberSignature Language="C#" Value="public static int Extract (System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;byte&gt; ikm, ReadOnlySpan&lt;byte&gt; salt, Span&lt;byte&gt; prk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Extract(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithmName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ikm, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; salt, valuetype System.Span`1&lt;unsigned int8&gt; prk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HKDF.Extract(System.Security.Cryptography.HashAlgorithmName,System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Extract (hashAlgorithmName As HashAlgorithmName, ikm As ReadOnlySpan(Of Byte), salt As ReadOnlySpan(Of Byte), prk As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Extract(System::Security::Cryptography::HashAlgorithmName hashAlgorithmName, ReadOnlySpan&lt;System::Byte&gt; ikm, ReadOnlySpan&lt;System::Byte&gt; salt, Span&lt;System::Byte&gt; prk);" />
      <MemberSignature Language="F#" Value="static member Extract : System.Security.Cryptography.HashAlgorithmName * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; -&gt; int" Usage="System.Security.Cryptography.HKDF.Extract (hashAlgorithmName, ikm, salt, prk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithmName" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="ikm" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="salt" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="prk" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithmName"><span data-ttu-id="b2416-137">Der Hashalgorithmus, der für HMAC-Vorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b2416-137">The hash algorithm used for HMAC operations.</span></span></param>
        <param name="ikm"><span data-ttu-id="b2416-138">Das Eingabe-Schlüsselerstellungsmaterial.</span><span class="sxs-lookup"><span data-stu-id="b2416-138">The input keying material.</span></span></param>
        <param name="salt"><span data-ttu-id="b2416-139">Der Salt-Wert (ein nicht geheimer zufälliger Wert).</span><span class="sxs-lookup"><span data-stu-id="b2416-139">The salt value (a non-secret random value).</span></span></param>
        <param name="prk"><span data-ttu-id="b2416-140">Der Zielpuffer, der den Pseudozufallsschlüssel (prk) empfängt.</span><span class="sxs-lookup"><span data-stu-id="b2416-140">The destination buffer to receive the pseudorandom key (prk).</span></span></param>
        <summary><span data-ttu-id="b2416-141">Führt die HKDF-Extract-Funktion aus.</span><span class="sxs-lookup"><span data-stu-id="b2416-141">Performs the HKDF-Extract function.</span></span>
<span data-ttu-id="b2416-142">Weitere Informationen finden Sie im Abschnitt 2.2 von <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span><span class="sxs-lookup"><span data-stu-id="b2416-142">See section 2.2 of <a href="https://tools.ietf.org/html/rfc5869#section-2.2">RFC5869</a>.</span></span></summary>
        <returns><span data-ttu-id="b2416-143">Die Anzahl der in den <paramref name="prk" />-Puffer geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="b2416-143">The number of bytes written to the <paramref name="prk" /> buffer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
