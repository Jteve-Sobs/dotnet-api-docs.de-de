<Type Name="CngAlgorithm" FullName="System.Security.Cryptography.CngAlgorithm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc6a94d97ab6d2b4898b79c12b592b40e4ac89e3" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52376631" /></Metadata><TypeSignature Language="C#" Value="public sealed class CngAlgorithm : IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithm extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithm&#xA;Implements IEquatable(Of CngAlgorithm)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithm sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithm ^&gt;" />
  <TypeSignature Language="F#" Value="type CngAlgorithm = class&#xA;    interface IEquatable&lt;CngAlgorithm&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="236c2-101">Kapselt den Namen eines Verschlüsselungsalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="236c2-101">Encapsulates the name of an encryption algorithm.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="236c2-102">Die <xref:System.Security.Cryptography.CngAlgorithm> Klasse ist eine Dienstprogrammklasse.</span><span class="sxs-lookup"><span data-stu-id="236c2-102">The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class.</span></span> <span data-ttu-id="236c2-103">Es besteht aus der statischen Eigenschaften und Methoden zum Zeichenfolgenvergleich eine Private, die intern verwaltete Zeichenfolge des Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="236c2-103">It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.</span></span>  
  
 <span data-ttu-id="236c2-104">Die Eigenschaften für statischen Rückgabe <xref:System.Security.Cryptography.CngAlgorithm> Objekte.</span><span class="sxs-lookup"><span data-stu-id="236c2-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects.</span></span> <span data-ttu-id="236c2-105">Jedes Objekt die interne Zeichenfolge wird mit der Name des Algorithmus initialisiert, die den Namen der statischen Eigenschaft entspricht.</span><span class="sxs-lookup"><span data-stu-id="236c2-105">Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="236c2-106">Sie können auch diese Klasse verwenden, zum Erstellen von Objekten für die Algorithmustypen, die durch die statischen Eigenschaften nicht abgedeckt werden.</span><span class="sxs-lookup"><span data-stu-id="236c2-106">You can also use this class to create objects for algorithm types that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="236c2-107">Mehrere Cryptography Next Generation (CNG)-Klassen (z. B. <xref:System.Security.Cryptography.CngKey>) akzeptieren <xref:System.Security.Cryptography.CngAlgorithm> Objekte über eine `algorithm` Parameter.</span><span class="sxs-lookup"><span data-stu-id="236c2-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter.</span></span> <span data-ttu-id="236c2-108">Wenn die Klasse erhält die <xref:System.Security.Cryptography.CngAlgorithm> Objekt durch Aufrufen des Objekts abgerufen, der eingebettete Algorithmusname <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="236c2-108">When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.</span></span>  
  
 <span data-ttu-id="236c2-109">Aus diesem Grund <xref:System.Security.Cryptography.CngAlgorithm> dient als eine Enumeration von bekannten Algorithmen.</span><span class="sxs-lookup"><span data-stu-id="236c2-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms.</span></span> <span data-ttu-id="236c2-110">Sie können einen bekannten Algorithmus mit einem stark typisierten Wert anstelle einer Zeichenfolge angeben.</span><span class="sxs-lookup"><span data-stu-id="236c2-110">It lets you specify a well-known algorithm by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CngAlgorithm : string -&gt; System.Security.Cryptography.CngAlgorithm" Usage="new System.Security.Cryptography.CngAlgorithm algorithm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="236c2-111">Der Name des Algorithmus, der initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-111">The name of the algorithm to initialize.</span></span></param>
        <summary><span data-ttu-id="236c2-112">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="236c2-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="236c2-113">Instanzen der <xref:System.Security.Cryptography.CngAlgorithm> Klasse intern verwalten, der Name des Algorithmus, der angegeben wird die `algorithm` Parameter.</span><span class="sxs-lookup"><span data-stu-id="236c2-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.</span></span>  
  
 <span data-ttu-id="236c2-114">Der Hauptzweck dieser Konstruktor wird als Methode zum Erstellen von <xref:System.Security.Cryptography.CngAlgorithm> Objekte für die Algorithmustypen, die nicht durch die statischen Eigenschaften der dargestellt werden die <xref:System.Security.Cryptography.CngAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="236c2-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class.</span></span> <span data-ttu-id="236c2-115">Diese Kapazität kann in zukünftigen [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Versionen, Servicepacks und Drittanbieter-Entwickler neue Algorithmen hinzugefügt werden, die genau wie die Algorithmen, die derzeit verfügbar sind, zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="236c2-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="236c2-116">Der <paramref name="algorithm" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="236c2-116">The <paramref name="algorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="236c2-117">Der <paramref name="algorithm" />-Parameter hat die Länge 0 (null).</span><span class="sxs-lookup"><span data-stu-id="236c2-117">The <paramref name="algorithm" /> parameter length is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="System.Security.Cryptography.CngAlgorithm.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-118">Ruft den Algorithmusnamen ab, den das aktuelle <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-118">Gets the algorithm name that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <value><span data-ttu-id="236c2-119">Der eingebettete Algorithmusname.</span><span class="sxs-lookup"><span data-stu-id="236c2-119">The embedded algorithm name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellman : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDiffieHellman" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-120">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDH-Algorithmus (Elliptic Curve Diffie-Hellman) für die Schlüsseländerung angibt, dessen Kurve über eine Schlüsseleigenschaft beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.</span></span></summary>
        <value><span data-ttu-id="236c2-121">Ein Objekt, das einen ECDH-Algorithmus für die Schlüsseländerung angibt, dessen Kurve über eine Schlüsseleigenschaft beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-121">An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellmanP256 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-122">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDH (Elliptic Curve Diffie-Hellman)-Schlüsselaustauschalgorithmus angibt, der die P-256-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-123">Ein Objekt, das einen ECDH-Algorithmus angibt, der die P-256-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-123">An object that specifies an ECDH algorithm that uses the P-256 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellmanP384 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-124">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDH (Elliptic Curve Diffie-Hellman)-Schlüsselaustauschalgorithmus angibt, der die P-384-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-125">Ein Objekt, das einen ECDH-Algorithmus angibt, der die P-384-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-125">An object that specifies an ECDH algorithm that uses the P-384 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellmanP521 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-126">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDH (Elliptic Curve Diffie-Hellman)-Schlüsselaustauschalgorithmus angibt, der die P-521-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-127">Ein Objekt, das einen ECDH-Algorithmus angibt, der die P-521-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-127">An object that specifies an ECDH algorithm that uses the P-521 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsa : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-128">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDSA (Elliptic Curve Digital Signature Algorithm) angibt, dessen Kurve über eine Schlüsseleigenschaft beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-128">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.</span></span></summary>
        <value><span data-ttu-id="236c2-129">Ein Objekt, das einen ECDSA angibt, dessen Kurve über eine Schlüsseleigenschaft beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-129">An object that specifies an ECDSA whose curve is described via a key property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsaP256 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-130">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das einen ECDSA (Elliptic Curve Digital Signature Algorithm) angibt, der die P-256-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-130">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-131">Ein Objekt, das einen ECDSA-Algorithmus angibt, der die P-256-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-131">An object that specifies an ECDSA algorithm that uses the P-256 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsaP384 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-132">Ruft ein <see cref="T:System.Security.Cryptography.CngAlgorithm" />Objekt ab, das einen ECDSA (Elliptic Curve Digital Signature Algorithm) angibt, der die P-384-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-132">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-133">Ein Objekt, das einen ECDSA-Algorithmus angibt, der die P-384-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-133">An object that specifies an ECDSA algorithm that uses the P-384 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsaP521 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-134">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />Objekt ab, das einen ECDSA (Elliptic Curve Digital Signature Algorithm) angibt, der die P-521-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-134">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.</span></span></summary>
        <value><span data-ttu-id="236c2-135">Ein Objekt, das einen ECDSA-Algorithmus angibt, der die P-521-Kurve verwendet.</span><span class="sxs-lookup"><span data-stu-id="236c2-135">An object that specifies an ECDSA algorithm that uses the P-521 curve.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="236c2-136">Vergleicht zwei <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="236c2-136">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cngAlgorithm.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="236c2-137">Ein Objekt, das mit dem aktuellen <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="236c2-137">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="236c2-138">Vergleicht das angegebene Objekt mit dem aktuellen <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="236c2-138">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns><span data-ttu-id="236c2-139"><see langword="true" />, wenn der <paramref name="obj" />-Parameter einen <see cref="T:System.Security.Cryptography.CngAlgorithm" /> darstellt, der denselben Algorithmus angibt wie das aktuelle Objekt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="236c2-139"><see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> that specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithm other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithm other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithm ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.CngAlgorithm -&gt; bool" Usage="cngAlgorithm.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="236c2-140">Ein Objekt, das mit dem aktuellen <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="236c2-140">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="236c2-141">Vergleicht das angegebene <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt mit dem aktuellen <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="236c2-141">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns><span data-ttu-id="236c2-142"><see langword="true" />, wenn der <paramref name="other" />-Parameter denselben Algorithmus angibt wie das aktuelle Objekt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="236c2-142"><see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cngAlgorithm.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="236c2-143">Generiert einen Hashwert für den Algorithmusnamen, der in das aktuelle <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="236c2-143">Generates a hash value for the algorithm name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span></span></summary>
        <returns><span data-ttu-id="236c2-144">Der Hashwert des eingebetteten Algorithmusnamens.</span><span class="sxs-lookup"><span data-stu-id="236c2-144">The hash value of the embedded algorithm name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ MD5 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MD5 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.MD5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-145">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den MD5-Hashalgorithmus (Message Digest 5) angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-145">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Message Digest 5 (MD5) hash algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-146">Ein Objekt, das den MD5-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-146">An object that specifies the MD5 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.CngAlgorithm * System.Security.Cryptography.CngAlgorithm -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="236c2-147">Ein Objekt, das einen Algorithmusnamen angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-147">An object that specifies an algorithm name.</span></span></param>
        <param name="right"><span data-ttu-id="236c2-148">Ein zweites Objekt, das mit dem Objekt verglichen werden soll, das durch den <paramref name="left" />-Parameter identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-148">A second object, to be compared to the object that is identified by the <paramref name="left" /> parameter.</span></span></param>
        <summary><span data-ttu-id="236c2-149">Bestimmt, ob zwei <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekte denselben Algorithmusnamen angeben.</span><span class="sxs-lookup"><span data-stu-id="236c2-149">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects specify the same algorithm name.</span></span></summary>
        <returns><span data-ttu-id="236c2-150"><see langword="true" />, wenn beide Objekte denselben Algorithmusnamen angeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="236c2-150"><see langword="true" /> if the two objects specify the same algorithm name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.CngAlgorithm * System.Security.Cryptography.CngAlgorithm -&gt; bool" Usage="System.Security.Cryptography.CngAlgorithm.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="236c2-151">Ein Objekt, das einen Algorithmusnamen angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-151">An object that specifies an algorithm name.</span></span></param>
        <param name="right"><span data-ttu-id="236c2-152">Ein zweites Objekt, das mit dem Objekt verglichen werden soll, das durch den <paramref name="left" />-Parameter identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="236c2-152">A second object, to be compared to the object that is identified by the <paramref name="left" /> parameter.</span></span></param>
        <summary><span data-ttu-id="236c2-153">Bestimmt, ob zwei <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekte nicht denselben Algorithmus angeben.</span><span class="sxs-lookup"><span data-stu-id="236c2-153">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects do not specify the same algorithm.</span></span></summary>
        <returns><span data-ttu-id="236c2-154"><see langword="true" />, wenn beide Objekte nicht denselben Algorithmusnamen angeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="236c2-154"><see langword="true" /> if the two objects do not specify the same algorithm name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Rsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rsa : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.Rsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-155">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den RSA-Hash-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-155">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the RSA hash algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-156">Ein Objekt, das den RSA-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-156">An object that specifies the RSA algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha1 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha1 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sha1 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.Sha1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-157">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den SHA-1-Algorithmus (Secure-Hash-Algorithmus 1) angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-157">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-158">Ein Objekt, das den SHA-1-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-158">An object that specifies the SHA-1 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sha256 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-159">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den SHA-256-Algorithmus (Secure-Hash-Algorithmus 256) angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-159">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-160">Ein Objekt, das den SHA-256-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-160">An object that specifies the SHA-256 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sha384 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.Sha384" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-161">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den SHA-384-Algorithmus (Secure-Hash-Algorithmus 384) angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-161">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-162">Ein Objekt, das den SHA-384-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-162">An object that specifies the SHA-384 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha512 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha512 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sha512 : System.Security.Cryptography.CngAlgorithm" Usage="System.Security.Cryptography.CngAlgorithm.Sha512" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="236c2-163">Ruft ein neues <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt ab, das den SHA-512-Algorithmus (Secure-Hash-Algorithmus 512) angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-163">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.</span></span></summary>
        <value><span data-ttu-id="236c2-164">Ein Objekt, das den SHA-512-Algorithmus angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-164">An object that specifies the SHA-512 algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cngAlgorithm.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="236c2-165">Ruft den Namen des Algorithmus ab, den das aktuelle <see cref="T:System.Security.Cryptography.CngAlgorithm" />-Objekt angibt.</span><span class="sxs-lookup"><span data-stu-id="236c2-165">Gets the name of the algorithm that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span></span></summary>
        <returns><span data-ttu-id="236c2-166">Der eingebettete Algorithmusname.</span><span class="sxs-lookup"><span data-stu-id="236c2-166">The embedded algorithm name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>