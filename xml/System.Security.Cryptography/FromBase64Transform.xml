<Type Name="FromBase64Transform" FullName="System.Security.Cryptography.FromBase64Transform">
  <TypeSignature Language="C#" Value="public class FromBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FromBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.FromBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class FromBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class FromBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c49a-101">Konvertiert einen <see cref="T:System.Security.Cryptography.CryptoStream" /> aus Base-64.</span><span class="sxs-lookup"><span data-stu-id="8c49a-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> from base 64.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-102">Base 64 Content-Transfer-Encoding stellt beliebige Bit Sequenzen in einer Form, die nicht interaktive Workflowdienste ist lesbar.</span><span class="sxs-lookup"><span data-stu-id="8c49a-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c49a-103">Im folgende Beispiel decodiert eine base 64-codierte Datei in eine Ausgabedatei für den Text an.</span><span class="sxs-lookup"><span data-stu-id="8c49a-103">The following example decodes a base 64-encoded file to an output text file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c49a-104">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8c49a-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FromBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FromBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c49a-105">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8c49a-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-106">In der Standardkonfiguration werden Leerräume ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8c49a-106">In the default configuration, white spaces are ignored.</span></span> <span data-ttu-id="8c49a-107">Ausführliche Informationen finden Sie unter <xref:System.Security.Cryptography.FromBase64TransformMode>.</span><span class="sxs-lookup"><span data-stu-id="8c49a-107">See <xref:System.Security.Cryptography.FromBase64TransformMode> for more details.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FromBase64Transform (System.Security.Cryptography.FromBase64TransformMode whitespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.FromBase64TransformMode whitespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (whitespaces As FromBase64TransformMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FromBase64Transform(System::Security::Cryptography::FromBase64TransformMode whitespaces);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="whitespaces" Type="System.Security.Cryptography.FromBase64TransformMode" />
      </Parameters>
      <Docs>
        <param name="whitespaces"><span data-ttu-id="8c49a-108">Einer der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8c49a-108">One of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> values.</span></span></param>
        <summary><span data-ttu-id="8c49a-109">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Klasse mit dem angegebenen Transformationsmodus.</span><span class="sxs-lookup"><span data-stu-id="8c49a-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> class with the specified transformation mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c49a-110">Im folgende Beispiel decodiert eine base 64-codierte Datei in eine Ausgabedatei für den Text an.</span><span class="sxs-lookup"><span data-stu-id="8c49a-110">The following example decodes a base 64-encoded file to an output text file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c49a-111">Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="8c49a-111">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="8c49a-112">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8c49a-112">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c49a-113">Ruft einen Wert ab, der angibt, ob mehrere Blöcke transformiert werden können.</span><span class="sxs-lookup"><span data-stu-id="8c49a-113">Gets a value that indicates whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="8c49a-114">Immer <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c49a-114">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-115">In der aktuellen Implementierung kann nur ein Block zu einem Zeitpunkt transformiert werden, daher ist diese Eigenschaft stets `false`.</span><span class="sxs-lookup"><span data-stu-id="8c49a-115">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c49a-116">Gibt alle vom <see cref="T:System.Security.Cryptography.FromBase64Transform" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8c49a-116">Releases all resources used by the <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-117">Diese Methode ist ein einfacher Aufruf <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8c49a-117">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8c49a-118">Aufrufen von `Dispose` können Ressourcen von der <xref:System.Security.Cryptography.FromBase64Transform> neu für andere Zwecke reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="8c49a-118">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.FromBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="8c49a-119">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="8c49a-119">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c49a-120">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8c49a-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c49a-121">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8c49a-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-122">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.FromBase64Transform> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.FromBase64Transform>.</span></span> <span data-ttu-id="8c49a-123">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.FromBase64Transform> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="8c49a-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.FromBase64Transform> in an unusable state.</span></span> <span data-ttu-id="8c49a-124">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.Cryptography.FromBase64Transform> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.Cryptography.FromBase64Transform> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="8c49a-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.FromBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.FromBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="8c49a-125">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8c49a-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c49a-126">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.FromBase64Transform> freigeben.</span><span class="sxs-lookup"><span data-stu-id="8c49a-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.FromBase64Transform>.</span></span> <span data-ttu-id="8c49a-127">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.FromBase64Transform>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="8c49a-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.FromBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8c49a-128"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="8c49a-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8c49a-129">Gibt die von <see cref="T:System.Security.Cryptography.FromBase64Transform" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8c49a-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.FromBase64Transform" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-130">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die `Finalize` Methode.</span><span class="sxs-lookup"><span data-stu-id="8c49a-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="8c49a-131">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit der disposing-Parameter auf festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="8c49a-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="8c49a-132">`Finalize` Ruft `Dispose` mit disposing auf `false`.</span><span class="sxs-lookup"><span data-stu-id="8c49a-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="8c49a-133">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.FromBase64Transform> verweist.</span><span class="sxs-lookup"><span data-stu-id="8c49a-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.FromBase64Transform> references.</span></span> <span data-ttu-id="8c49a-134">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="8c49a-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8c49a-135"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8c49a-135"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8c49a-136">Zum Überschreiben <see langword="Dispose(Boolean)" />müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="8c49a-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8c49a-137">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8c49a-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="8c49a-138">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="8c49a-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FromBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FromBase64Transform ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c49a-139">Gibt die von <see cref="T:System.Security.Cryptography.FromBase64Transform" /> verwendeten, nicht verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8c49a-139">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.FromBase64Transform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c49a-140">Ruft die Größe des Eingabeblocks ab.</span><span class="sxs-lookup"><span data-stu-id="8c49a-140">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="8c49a-141">Die Größe des Eingabedatenblocks in Bytes.</span><span class="sxs-lookup"><span data-stu-id="8c49a-141">The size of the input data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-142">Die Größe des Eingabeblocks für diese Transformation ist ein Byte.</span><span class="sxs-lookup"><span data-stu-id="8c49a-142">The input block size for this transformation is one byte.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c49a-143">Ruft die Größe des Ausgabeblocks ab.</span><span class="sxs-lookup"><span data-stu-id="8c49a-143">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="8c49a-144">Die Größe des Ausgabedatenblocks in Bytes.</span><span class="sxs-lookup"><span data-stu-id="8c49a-144">The size of the output data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c49a-145">Die Größe des Ausgabeblocks für diese Transformation beträgt 3 Bytes.</span><span class="sxs-lookup"><span data-stu-id="8c49a-145">The output block size for this transformation is 3 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="8c49a-146">Die aus Base-64 zu berechnende Eingabe.</span><span class="sxs-lookup"><span data-stu-id="8c49a-146">The input to compute from base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="8c49a-147">Der Offset im Eingabebytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-147">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="8c49a-148">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-148">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="8c49a-149">Die Ausgabe, in die das Ergebnis geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="8c49a-149">The output to which to write the result.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="8c49a-150">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-150">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="8c49a-151">Wandelt den angegebenen Bereich des Eingabebytearrays aus Base-64 um und kopiert das Ergebnis in den angegebenen Bereich des Ausgabebytearrays.</span><span class="sxs-lookup"><span data-stu-id="8c49a-151">Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="8c49a-152">Die Anzahl der geschriebenen Bytes.</span><span class="sxs-lookup"><span data-stu-id="8c49a-152">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c49a-153">Im folgende Beispiel wird eine base 64-codierte Datei in eine Ausgabedatei für den Text entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="8c49a-153">The following example decrypts a base 64-encoded file to an output text file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8c49a-154">Das aktuelle <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Objekt wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="8c49a-154">The current <see cref="T:System.Security.Cryptography.FromBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8c49a-155"><paramref name="inputCount" /> verwendet einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="8c49a-155"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
 <span data-ttu-id="8c49a-156">- oder - </span><span class="sxs-lookup"><span data-stu-id="8c49a-156">-or-</span></span>  
  
 <span data-ttu-id="8c49a-157"><paramref name="inputBuffer" /> besitzt eine ungültige Offsetlänge.</span><span class="sxs-lookup"><span data-stu-id="8c49a-157"><paramref name="inputBuffer" /> has an invalid offset length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c49a-158"><paramref name="inputOffset" /> liegt außerhalb des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8c49a-158"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="8c49a-159">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8c49a-159">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c49a-160"><paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8c49a-160"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="8c49a-161">Die aus Base-64 zu konvertierende Eingabe.</span><span class="sxs-lookup"><span data-stu-id="8c49a-161">The input to convert from base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="8c49a-162">Der Offset im Bytearray, ab dem Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-162">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="8c49a-163">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8c49a-163">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="8c49a-164">Wandelt den angegebenen Bereich des angegebenen Bytearrays aus Base-64 um.</span><span class="sxs-lookup"><span data-stu-id="8c49a-164">Converts the specified region of the specified byte array from base 64.</span></span></summary>
        <returns><span data-ttu-id="8c49a-165">Die berechnete Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="8c49a-165">The computed conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c49a-166">Im folgende Beispiel wird eine base 64-codierte Datei in eine Ausgabedatei für den Text entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="8c49a-166">The following example decrypts a base 64-encoded file to an output text file.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.FromBase64Transform Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8c49a-167">Das aktuelle <see cref="T:System.Security.Cryptography.FromBase64Transform" />-Objekt wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="8c49a-167">The current <see cref="T:System.Security.Cryptography.FromBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8c49a-168"><paramref name="inputBuffer" /> besitzt eine ungültige Offsetlänge.</span><span class="sxs-lookup"><span data-stu-id="8c49a-168"><paramref name="inputBuffer" /> has an invalid offset length.</span></span>  
  
 <span data-ttu-id="8c49a-169">- oder - </span><span class="sxs-lookup"><span data-stu-id="8c49a-169">-or-</span></span>  
  
 <span data-ttu-id="8c49a-170"><paramref name="inputCount" /> besitzt einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="8c49a-170"><paramref name="inputCount" /> has an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8c49a-171"><paramref name="inputOffset" /> liegt außerhalb des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8c49a-171"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="8c49a-172">Für diesen Parameter ist eine nicht negative Zahl erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8c49a-172">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c49a-173"><paramref name="inputBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8c49a-173"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>