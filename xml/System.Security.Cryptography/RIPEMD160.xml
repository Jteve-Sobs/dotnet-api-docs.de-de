<Type Name="RIPEMD160" FullName="System.Security.Cryptography.RIPEMD160">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0735a3c7df0904171edfe9485f9a56f406995f6a" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48712369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RIPEMD160 : System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RIPEMD160 extends System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RIPEMD160&#xA;Inherits HashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class RIPEMD160 abstract : System::Security::Cryptography::HashAlgorithm" />
  <TypeSignature Language="F#" Value="type RIPEMD160 = class&#xA;    inherit HashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die abstrakte Klasse dar, von der alle Implementierungen des MD160-Hashalgorithmus vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hash ordnen binäre Zeichenfolgen eine beliebige Länge kleinen binären Zeichenfolgen fester Länge. Eine kryptografischen Hashfunktion verfügt über die Eigenschaft, dass es rechnerisch unmöglich, zwei verschiedenen Eingaben, die denselben Hashwert gefunden wird; d. h. sollte Hashwerte von zwei Sätzen von Daten übereinstimmt, wenn die entsprechenden Daten ebenfalls identisch. Kleine Änderungen an den Daten führen zu umfangreichen unvorhersehbare Änderungen im HashSet.  
  
 RIPEMD-160 ist eine kryptografische 160-Bit-Hash-Funktion. Es ist für die Verwendung als Ersatz für die 128-Bit-Hash-Funktionen, MD4, MD5 und RIPEMD vorgesehen. RIPEMD wurde in das Framework der EU-Projekts RIPE (RENNEN Integrität primitive Evaluierung, 1988-1992) entwickelt.  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.RIPEMD160> wurde durch die Secure Hash-Algorithmen SHA-256 und SHA-512 und ihrer abgeleiteten Klassen abgelöst. <xref:System.Security.Cryptography.SHA256> und <xref:System.Security.Cryptography.SHA512> bieten eine höhere Sicherheit und Leistung als <xref:System.Security.Cryptography.RIPEMD160>. Verwendung <xref:System.Security.Cryptography.RIPEMD160> , um die Kompatibilität mit älteren Anwendungen und Daten.  
  
   
  
## Examples  
 Das folgende Codebeispiel berechnet die <xref:System.Security.Cryptography.RIPEMD160> Hash für alle Dateien in einem Verzeichnis.  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RIPEMD160" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz einer abstrakten Klasse erstellen. Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Cryptography.RIPEMD160Managed>-Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel berechnet die <xref:System.Security.Cryptography.RIPEMD160> Hash für alle Dateien in einem Verzeichnis.  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt angegebene Implementierungen der <see cref="T:System.Security.Cryptography.RIPEMD160" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RIPEMD160 Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RIPEMD160 Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As RIPEMD160" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RIPEMD160 ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.RIPEMD160" Usage="System.Security.Cryptography.RIPEMD160.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RIPEMD160</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz der Standardimplementierung des <see cref="T:System.Security.Cryptography.RIPEMD160" />-Hashalgorithmus.</summary>
        <returns>Eine neue Instanz des <see cref="T:System.Security.Cryptography.RIPEMD160" />-Hashalgorithmus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz einer abstrakten Klasse erstellen. Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Cryptography.RIPEMD160Managed>-Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel berechnet die <xref:System.Security.Cryptography.RIPEMD160> Hash für alle Dateien in einem Verzeichnis.  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException">Der Algorithmus wurde bei aktiviertem FIPS-Modus (Federal Information Processing Standards) verwendet, ist aber nicht FIPS-kompatibel.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RIPEMD160 Create (string hashName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RIPEMD160 Create(string hashName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (hashName As String) As RIPEMD160" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RIPEMD160 ^ Create(System::String ^ hashName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.RIPEMD160" Usage="System.Security.Cryptography.RIPEMD160.Create hashName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RIPEMD160</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hashName">Der Name der spezifischen Implementierung von <see cref="T:System.Security.Cryptography.RIPEMD160" />, die verwendet werden soll.</param>
        <summary>Erstellt eine Instanz der angegebenen Implementierung des <see cref="T:System.Security.Cryptography.RIPEMD160" />-Hashalgorithmus.</summary>
        <returns>Eine neue Instanz der angegebenen Implementierung von <see cref="T:System.Security.Cryptography.RIPEMD160" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz einer abstrakten Klasse erstellen. Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Cryptography.RIPEMD160Managed>-Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException">Der durch den <paramref name="hashName" />-Parameter beschriebene Algorithmus wurde bei aktiviertem FIPS-Modus (Federal Information Processing Standards) verwendet, ist aber nicht FIPS-kompatibel.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
  </Members>
</Type>