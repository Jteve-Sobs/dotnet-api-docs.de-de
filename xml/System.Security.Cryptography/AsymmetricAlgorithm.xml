<Type Name="AsymmetricAlgorithm" FullName="System.Security.Cryptography.AsymmetricAlgorithm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de326480bdc4f8df40b1a01c4ac56ea6fdf783b4" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83971755" /></Metadata><TypeSignature Language="C#" Value="public abstract class AsymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricAlgorithm abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type AsymmetricAlgorithm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67547-101">Stellt die abstrakte Basisklasse dar, von der alle Implementierungen von asymmetrischen Algorithmen erben müssen.</span><span class="sxs-lookup"><span data-stu-id="67547-101">Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-102">Asymmetrische Kryptografiealgorithmen, auch als Algorithmen mit öffentlichem Schlüssel bezeichnet, erfordern, dass sowohl der Absender als auch der Empfänger ein Paar verknüpfter Schlüssel beibehalten: einen privaten Schlüssel und einen öffentlichen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="67547-102">Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</span></span> <span data-ttu-id="67547-103">Beide Schlüssel sind für die Entität eindeutig.</span><span class="sxs-lookup"><span data-stu-id="67547-103">Both keys are unique to the entity.</span></span> <span data-ttu-id="67547-104">Der öffentliche Schlüssel kann allen Benutzern zur Verfügung gestellt werden. Dieser Schlüssel wird zum Codieren von Daten verwendet, die an einen Empfänger gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="67547-104">The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</span></span> <span data-ttu-id="67547-105">Der private Schlüssel muss vom Empfänger privat aufbewahrt werden. Dieser Schlüssel wird zum Decodieren von Nachrichten verwendet, die mit dem öffentlichen Schlüssel des Empfängers codiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-105">The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</span></span> <span data-ttu-id="67547-106">Die <xref:System.Security.Cryptography.RSACryptoServiceProvider>-Klasse ist eine Implementierung eines Algorithmus mit öffentlichem Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="67547-106">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class is an implementation of a public-key algorithm.</span></span> <span data-ttu-id="67547-107">Eine ausführliche Erläuterung der Verschlüsselung und der Algorithmen mit öffentlichem Schlüssel finden Sie im Abschnitt "Verschlüsselung mit öffentlichem Schlüssel" unter [Kryptografiedienste](/dotnet/standard/security/cryptographic-services).</span><span class="sxs-lookup"><span data-stu-id="67547-107">For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in [Cryptographic Services](/dotnet/standard/security/cryptographic-services).</span></span> <span data-ttu-id="67547-108">Informationen dazu, wie Sie mit dem Strong Name-Tool (Sn. exe) Schlüsselpaare erstellen, finden Sie unter Gewusst [wie: Erstellen eines öffentlichen/privaten Schlüssel Paars](/dotnet/standard/assembly/create-public-private-key-pair).</span><span class="sxs-lookup"><span data-stu-id="67547-108">For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see [How to: Create a Public-Private Key Pair](/dotnet/standard/assembly/create-public-private-key-pair).</span></span>  
  
 <span data-ttu-id="67547-109">Sie können öffentliche Schlüsselsysteme verwenden, um digitale Signaturen zu bilden.</span><span class="sxs-lookup"><span data-stu-id="67547-109">You can use public-key systems to form digital signatures.</span></span> <span data-ttu-id="67547-110">Digitale Signaturen werden verwendet, um die Integrität der Daten zu schützen.</span><span class="sxs-lookup"><span data-stu-id="67547-110">Digital signatures are used to help to protect the integrity of data.</span></span> <span data-ttu-id="67547-111">Um z. b. ein Public-Key-System zum digitalen Signieren einer Nachricht zu verwenden, wendet der Absender zuerst eine Hash Funktion auf die Nachricht an, um einen Nachrichten Digest zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="67547-111">For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="67547-112">Der Absender verschlüsselt den Nachrichten Digest dann mit dem privaten Schlüssel des Absenders, um die persönliche Signatur des Absenders zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="67547-112">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="67547-113">Beim Empfang der Nachricht und der Signatur entschlüsselt der Empfänger die Signatur mithilfe des öffentlichen Schlüssels des Absenders, um den Nachrichten Digest wiederherzustellen, und erstellt einen Hashwert für die Nachricht mit dem gleichen Hash Algorithmus, den der Absender verwendet hat.</span><span class="sxs-lookup"><span data-stu-id="67547-113">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="67547-114">Wenn der vom Empfänger eingehende Nachrichten Digest mit dem vom Absender empfangenen Nachrichten Digest übereinstimmt, kann der Empfänger annehmen, dass die Nachricht während der Übertragung nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="67547-114">If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="67547-115">Beachten Sie, dass jeder eine Signatur überprüfen kann, weil der öffentliche Schlüssel des Absenders allgemein bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="67547-115">Note that anyone can verify a signature, because the sender's public key is common knowledge.</span></span> <span data-ttu-id="67547-116">Bei dieser Vorgehensweise wird das Geheimnis der Nachricht nicht beibehalten. damit die Nachricht geheim ist, muss Sie auch verschlüsselt werden.</span><span class="sxs-lookup"><span data-stu-id="67547-116">This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</span></span>  
  
 <span data-ttu-id="67547-117">Der .NET Framework stellt die folgenden Klassen bereit, die digitale Signatur Algorithmen implementieren: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (Basisklasse) und <xref:System.Security.Cryptography.ECDsaCng>.</span><span class="sxs-lookup"><span data-stu-id="67547-117">The .NET Framework provides the following classes that implement digital signature algorithms: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (base class), and <xref:System.Security.Cryptography.ECDsaCng>.</span></span>  
  
 <span data-ttu-id="67547-118">Der <xref:System.Security.Cryptography>-Namespace stellt konkrete Klassen für <xref:System.Security.Cryptography.RSA> und <xref:System.Security.Cryptography.DSA> bereit.</span><span class="sxs-lookup"><span data-stu-id="67547-118">The <xref:System.Security.Cryptography> namespace provides concrete classes for <xref:System.Security.Cryptography.RSA> and <xref:System.Security.Cryptography.DSA> only.</span></span>  
  
 <span data-ttu-id="67547-119">Informationen zur Verwendung des RSA-Algorithmus zum Verschlüsseln und Entschlüsseln von XML-Daten sowie zum Erstellen und Überprüfen von digitalen XML-Signaturen finden Sie in den folgenden Artikeln:</span><span class="sxs-lookup"><span data-stu-id="67547-119">To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:</span></span>  
  
-   [<span data-ttu-id="67547-120">Gewusst wie: Verschlüsseln von XML-Elementen mit asymmetrischen Schlüsseln</span><span class="sxs-lookup"><span data-stu-id="67547-120">How to: Encrypt XML Elements with Asymmetric Keys</span></span>](/dotnet/standard/security/how-to-encrypt-xml-elements-with-asymmetric-keys)  
  
-   [<span data-ttu-id="67547-121">Gewusst wie: Entschlüsseln von XML-Elementen mit asymmetrischen Schlüsseln</span><span class="sxs-lookup"><span data-stu-id="67547-121">How to: Decrypt XML Elements with Asymmetric Keys</span></span>](/dotnet/standard/security/how-to-decrypt-xml-elements-with-asymmetric-keys)  
  
-   [<span data-ttu-id="67547-122">Gewusst wie: Signieren von XML-Dokumenten mit digitalen Signaturen</span><span class="sxs-lookup"><span data-stu-id="67547-122">How to: Sign XML Documents with Digital Signatures</span></span>](/dotnet/standard/security/how-to-sign-xml-documents-with-digital-signatures)  
  
-   [<span data-ttu-id="67547-123">Gewusst wie: Überprüfen der digitalen Signaturen von XML-Dokumenten</span><span class="sxs-lookup"><span data-stu-id="67547-123">How to: Verify the Digital Signatures of XML Documents</span></span>](/dotnet/standard/security/how-to-verify-the-digital-signatures-of-xml-documents)  
  
   
  
## Examples  
 <span data-ttu-id="67547-124">Das folgende Codebeispiel zeigt, wie ein benutzerdefinierter asymmetrischer Algorithmus implementiert wird, der von der <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse geerbt wurde.</span><span class="sxs-lookup"><span data-stu-id="67547-124">The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  <span data-ttu-id="67547-125">Eine zusätzliche Klasse wird bereitgestellt, um die Verwendung der benutzerdefinierten Klasse zu veranschaulichen.</span><span class="sxs-lookup"><span data-stu-id="67547-125">An additional class is provided to demonstrate how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#2)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#2)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#2)]  
  
 <span data-ttu-id="67547-126">Im folgenden finden Sie eine weitere Klasse, die die Verwendung der benutzerdefinierten-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="67547-126">Here's an additional class that demonstrates how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#3)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#3)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#3)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-127">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-127">Cryptographic Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/05026813-f3bd-4d7c-9e0b-fc588eb3d114"><span data-ttu-id="67547-128">Gewusst wie: Erstellen eines öffentlichen/privaten Schlüsselpaars</span><span class="sxs-lookup"><span data-stu-id="67547-128">How to: Create a Public/Private Key Pair</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-129">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="67547-129">Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-130">Eine Instanz einer abstrakten Klasse kann nicht erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="67547-130">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="67547-131">Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="67547-131">Application code creates a new instance of a derived class.</span></span> <span data-ttu-id="67547-132">Die Klassen <xref:System.Security.Cryptography.RSACryptoServiceProvider> und <xref:System.Security.Cryptography.DSACryptoServiceProvider> sind die einzigen derzeit unterstützten Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="67547-132">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> and <xref:System.Security.Cryptography.DSACryptoServiceProvider> classes are the only currently supported implementations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-133">Die Implementierung der abgeleiteten Klasse ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="67547-133">The implementation of the derived class is not valid.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-134">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-134">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="asymmetricAlgorithm.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-135">Gibt alle von der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="67547-135">Releases all resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-136">Diese Methode ist ein einfacher Rückruf für die <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="67547-136">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="67547-137">Durch Aufrufen von `Dispose` können die Ressourcen, die von der <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse verwendet werden, für andere Zwecke neu zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="67547-137">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="67547-138">Weitere Informationen zu `Dispose`finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged).</span><span class="sxs-lookup"><span data-stu-id="67547-138">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67547-139">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>-Methode aufgerufen wird, um die Ressourcen des aktuellen `customCrypto`-Objekts freizugeben.</span><span class="sxs-lookup"><span data-stu-id="67547-139">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method to release the resources of the current `customCrypto` object.</span></span> <span data-ttu-id="67547-140">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-140">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#1)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#1)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-141">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-141">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67547-142">Erstellt ein Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="67547-142">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="System.Security.Cryptography.AsymmetricAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-143">Erstellt ein Standardkryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="67547-143">Creates a default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="67547-144">Eine neue <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Instanz, sofern die Standardeinstellungen nicht mit dem [&lt;cryptoClass&gt;-Element](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element) geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-144">A new <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> instance, unless the default settings have been changed with the [&lt;cryptoClass&gt; element](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-145">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A>-Methode in einer erweiterten Klasse implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="67547-145">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="67547-146">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-146">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#11)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#11)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-147">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-147">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="System.Security.Cryptography.AsymmetricAlgorithm.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="67547-148">Die zu verwendende asymmetrische Algorithmusimplementierung.</span><span class="sxs-lookup"><span data-stu-id="67547-148">The asymmetric algorithm implementation to use.</span></span> <span data-ttu-id="67547-149">Die folgende Tabelle zeigt die gültigen Werte für den <paramref name="algName" />-Parameter sowie die Algorithmen, denen sie zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="67547-149">The following table shows the valid values for the <paramref name="algName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="67547-150">Parameterwert</span><span class="sxs-lookup"><span data-stu-id="67547-150">Parameter value</span></span> 
 </term><description> <span data-ttu-id="67547-151">Implementiert</span><span class="sxs-lookup"><span data-stu-id="67547-151">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="67547-152">System.Security.Cryptography.AsymmetricAlgorithm</span><span class="sxs-lookup"><span data-stu-id="67547-152">System.Security.Cryptography.AsymmetricAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> <span data-ttu-id="67547-153">RSA</span><span class="sxs-lookup"><span data-stu-id="67547-153">RSA</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> <span data-ttu-id="67547-154">System.Security.Cryptography.RSA</span><span class="sxs-lookup"><span data-stu-id="67547-154">System.Security.Cryptography.RSA</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> <span data-ttu-id="67547-155">DSA</span><span class="sxs-lookup"><span data-stu-id="67547-155">DSA</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> <span data-ttu-id="67547-156">System.Security.Cryptography.DSA</span><span class="sxs-lookup"><span data-stu-id="67547-156">System.Security.Cryptography.DSA</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> <span data-ttu-id="67547-157">ECDsa</span><span class="sxs-lookup"><span data-stu-id="67547-157">ECDsa</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> <span data-ttu-id="67547-158">ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="67547-158">ECDsaCng</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> <span data-ttu-id="67547-159">System.Security.Cryptography.ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="67547-159">System.Security.Cryptography.ECDsaCng</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> <span data-ttu-id="67547-160">ECDH</span><span class="sxs-lookup"><span data-stu-id="67547-160">ECDH</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> <span data-ttu-id="67547-161">ECDiffieHellman</span><span class="sxs-lookup"><span data-stu-id="67547-161">ECDiffieHellman</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> <span data-ttu-id="67547-162">ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="67547-162">ECDiffieHellmanCng</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> <span data-ttu-id="67547-163">System.Security.Cryptography.ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="67547-163">System.Security.Cryptography.ECDiffieHellmanCng</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item></list></param>
        <summary><span data-ttu-id="67547-164">Erstellt eine Instanz der angegebenen Implementierung eines symmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="67547-164">Creates an instance of the specified implementation of an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="67547-165">Eine neue Instanz der angegebenen asymmetrischen Algorithmusimplementierung.</span><span class="sxs-lookup"><span data-stu-id="67547-165">A new instance of the specified asymmetric algorithm implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-166">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A>-Methode in einer erweiterten Klasse implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="67547-166">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="67547-167">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-167">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#12)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#12)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#12)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-168">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-168">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67547-169">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="67547-169">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="asymmetricAlgorithm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-170">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="67547-170">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-171">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.AsymmetricAlgorithm> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="67547-171">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="67547-172">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.AsymmetricAlgorithm> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="67547-172">The `Dispose` method leaves the <xref:System.Security.Cryptography.AsymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="67547-173">Nachdem Sie `Dispose`aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Security.Cryptography.AsymmetricAlgorithm> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Security.Cryptography.AsymmetricAlgorithm> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="67547-173">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.AsymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.AsymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="67547-174">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="67547-174">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67547-175">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.AsymmetricAlgorithm> freigeben.</span><span class="sxs-lookup"><span data-stu-id="67547-175">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="67547-176">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="67547-176">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.AsymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="asymmetricAlgorithm.Dispose disposing" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="asymmetricAlgorithm.Dispose disposing" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="67547-177"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="67547-177"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="67547-178">Gibt die von der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="67547-178">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-179">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der `Finalize`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67547-179">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="67547-180">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="67547-180">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="67547-181">`Finalize` ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="67547-181">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="67547-182">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.AsymmetricAlgorithm> verweist.</span><span class="sxs-lookup"><span data-stu-id="67547-182">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.AsymmetricAlgorithm> references.</span></span> <span data-ttu-id="67547-183">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="67547-183">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="67547-184">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="67547-184">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="67547-185">Wenn Sie <see langword="Dispose(Boolean)" />überschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren <see langword="Dispose" />aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-185">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="67547-186">Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="67547-186">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="67547-187">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged).</span><span class="sxs-lookup"><span data-stu-id="67547-187">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-188">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-188">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual byte[] ExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportEncryptedPkcs8PrivateKey (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]&#xA;override this.ExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="asymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey (passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="67547-189">Die Bytes, die als Kennwort bei der Verschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67547-189">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="67547-190">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-190">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="67547-191">Exportiert den aktuellen Schlüssel in das Format „PKCS#8 EncryptedPrivateKeyInfo“ mit einem bytebasierten Kennwort.</span><span class="sxs-lookup"><span data-stu-id="67547-191">Exports the current key in the PKCS#8 EncryptedPrivateKeyInfo format with a byte-based password.</span></span></summary>
        <returns><span data-ttu-id="67547-192">Ein Bytearray mit der „PKCS#8 EncryptedPrivateKeyInfo“-Darstellung dieses Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-192">A byte array containing the PKCS#8 EncryptedPrivateKeyInfo representation of this key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-193">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="67547-193">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="67547-194">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="67547-194">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-195">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-195">The key could not be exported.</span></span>

<span data-ttu-id="67547-196">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-196">-or-</span></span>

<span data-ttu-id="67547-197"><paramref name="pbeParameters" /> gibt an, dass <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> verwendet werden soll, wofür <see cref="T:System.Char" />-basierte Kennwörter erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="67547-197"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="ExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual byte[] ExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportEncryptedPkcs8PrivateKey (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]&#xA;override this.ExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="asymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey (password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="67547-198">Das Kennwort, das bei der Verschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="67547-198">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="67547-199">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-199">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="67547-200">Exportiert den aktuellen Schlüssel in das Format „PKCS#8 EncryptedPrivateKeyInfo“ mit einem zeichenbasierten Kennwort.</span><span class="sxs-lookup"><span data-stu-id="67547-200">Exports the current key in the PKCS#8 EncryptedPrivateKeyInfo format with a char-based password.</span></span></summary>
        <returns><span data-ttu-id="67547-201">Ein Bytearray mit der „PKCS#8 EncryptedPrivateKeyInfo“-Darstellung dieses Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-201">A byte array containing the PKCS#8 EncryptedPrivateKeyInfo representation of this key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-202">Wenn `pbeParameters` einen Algorithmus angibt, der PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="67547-202">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-203">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-203">The key could not be exported.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="ExportPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual byte[] ExportPkcs8PrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportPkcs8PrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportPkcs8PrivateKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportPkcs8PrivateKey();" />
      <MemberSignature Language="F#" Value="abstract member ExportPkcs8PrivateKey : unit -&gt; byte[]&#xA;override this.ExportPkcs8PrivateKey : unit -&gt; byte[]" Usage="asymmetricAlgorithm.ExportPkcs8PrivateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-204">Exportiert den aktuellen Schlüssel im Format „PKCS#8 PrivateKeyInfo“.</span><span class="sxs-lookup"><span data-stu-id="67547-204">Exports the current key in the PKCS#8 PrivateKeyInfo format.</span></span></summary>
        <returns><span data-ttu-id="67547-205">Ein Bytearray mit der „PKCS#8 PrivateKeyInfo“-Darstellung dieses Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-205">A byte array containing the PKCS#8 PrivateKeyInfo representation of this key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-206">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-206">The key could not be exported.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="ExportSubjectPublicKeyInfo">
      <MemberSignature Language="C#" Value="public virtual byte[] ExportSubjectPublicKeyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportSubjectPublicKeyInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportSubjectPublicKeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportSubjectPublicKeyInfo () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportSubjectPublicKeyInfo();" />
      <MemberSignature Language="F#" Value="abstract member ExportSubjectPublicKeyInfo : unit -&gt; byte[]&#xA;override this.ExportSubjectPublicKeyInfo : unit -&gt; byte[]" Usage="asymmetricAlgorithm.ExportSubjectPublicKeyInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-207">Exportiert den Teil mit dem öffentlichen Schlüssel des aktuellen Schlüssels in das Format „X.509 SubjectPublicKeyInfo“.</span><span class="sxs-lookup"><span data-stu-id="67547-207">Exports the public-key portion of the current key in the X.509 SubjectPublicKeyInfo format.</span></span></summary>
        <returns><span data-ttu-id="67547-208">Ein Bytearray mit der „X.509 SubjectPublicKeyInfo“-Darstellung des Teils mit dem öffentlichen Schlüssel dieses Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-208">A byte array containing the X.509 SubjectPublicKeyInfo representation of the public-key portion of this key.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo" />
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public virtual void FromXmlString (string xmlString);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXmlString (xmlString As String)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXmlString(System::String ^ xmlString);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member FromXmlString : string -&gt; unit&#xA;override this.FromXmlString : string -&gt; unit" Usage="asymmetricAlgorithm.FromXmlString xmlString" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void FromXmlString (string xmlString);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FromXmlString (xmlString As String)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FromXmlString(System::String ^ xmlString);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="F#" Value="abstract member FromXmlString : string -&gt; unit" Usage="asymmetricAlgorithm.FromXmlString xmlString" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="67547-209">Die XML-Zeichenfolge zur Wiederherstellung des <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="67547-209">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="67547-210">Stellt beim Überschreiben in einer abgeleiteten Klasse ein <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekt aus einer XML-Zeichenfolge wieder her.</span><span class="sxs-lookup"><span data-stu-id="67547-210">When overridden in a derived class, reconstructs an <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object from an XML string.</span></span> <span data-ttu-id="67547-211">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-211">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-212">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A>-Methode implementiert wird, um die angegebene XML-Zeichenfolge zu analysieren, um das aktuelle <xref:System.Security.Cryptography.CspParameters>-Objekt aufzufüllen.</span><span class="sxs-lookup"><span data-stu-id="67547-212">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="67547-213">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-213">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#4)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#4)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-214">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-214">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual void ImportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportEncryptedPkcs8PrivateKey (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="abstract member ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit&#xA;override this.ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="asymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="67547-215">Die Bytes, die als Kennwort bei der Entschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67547-215">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="67547-216">Die Bytes einer PKCS#8-EncryptedPrivateKeyInfo-Struktur in der ASN.1-BER-Codierung.</span><span class="sxs-lookup"><span data-stu-id="67547-216">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="67547-217">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-217">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="67547-218">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-218">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-219">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird das öffentliche/private Schlüsselpaar aus einer PKCS#8-EncryptedPrivateKeyInfo-Struktur nach der Entschlüsselung mit einem bytebasierten Kennwort importiert und ersetzt die Schlüssel für dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="67547-219">When overridden in a derived class, imports the public/private keypair from a PKCS#8 EncryptedPrivateKeyInfo structure after decrypting with a byte-based password, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-220">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="67547-220">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="67547-221">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="67547-221">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="67547-222">Diese Methode unterstützt nur die binäre Codierung (ber/CER/der) von "verschlüsseltedprivatekeyinfo".</span><span class="sxs-lookup"><span data-stu-id="67547-222">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="67547-223">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="67547-223">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 <span data-ttu-id="67547-224">Da für die Interpretation der Inhalte dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, wird von <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="67547-224">Because algorithm-specific support is required to interpret the contents of this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-225">Das Kennwort ist falsch.</span><span class="sxs-lookup"><span data-stu-id="67547-225">The password is incorrect.</span></span>

<span data-ttu-id="67547-226">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-226">-or-</span></span>

<span data-ttu-id="67547-227">Der Inhalt von <paramref name="source" /> gibt an, dass die anzuwendende Schlüsselableitungsfunktion die Legacy-PKCS#12-KDF ist, die <see cref="T:System.Char" />-basierte Kennwörter erfordert.</span><span class="sxs-lookup"><span data-stu-id="67547-227">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="67547-228">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-228">-or-</span></span>

<span data-ttu-id="67547-229">Der Inhalt von <paramref name="source" /> stellt keine ASN.1-BER-codierte PKCS#8-EncryptedPrivateKeyInfo-Struktur dar.</span><span class="sxs-lookup"><span data-stu-id="67547-229">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span>

<span data-ttu-id="67547-230">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-230">-or-</span></span>

<span data-ttu-id="67547-231">Der Inhalt von <paramref name="source" /> gibt an, dass der Schlüssel für einen anderen Algorithmus als den von dieser Instanz dargestellten Algorithmus gilt.</span><span class="sxs-lookup"><span data-stu-id="67547-231">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="67547-232">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-232">-or-</span></span>

<span data-ttu-id="67547-233">Der Inhalt von <paramref name="source" /> stellt den Schlüssel in einem Format dar, das nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-233">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="67547-234">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-234">-or-</span></span>

<span data-ttu-id="67547-235">Fehler beim Importieren des algorithmusspezifischen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-235">The algorithm-specific key import failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-236">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-236">A derived type has not overriden this member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual void ImportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;char&gt; password, ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportEncryptedPkcs8PrivateKey (password As ReadOnlySpan(Of Char), source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;char&gt; password, ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="abstract member ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit&#xA;override this.ImportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="asymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="67547-237">Das Kennwort, das bei der Entschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="67547-237">The password to use for decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="67547-238">Die Bytes einer PKCS#8-EncryptedPrivateKeyInfo-Struktur in der ASN.1-BER-Codierung.</span><span class="sxs-lookup"><span data-stu-id="67547-238">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="67547-239">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-239">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="67547-240">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-240">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-241">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird das öffentliche/private Schlüsselpaar aus einer PKCS#8-EncryptedPrivateKeyInfo-Struktur nach der Entschlüsselung mit einem zeichenbasierten Kennwort importiert und ersetzt die Schlüssel für dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="67547-241">When overridden in a derived class, imports the public/private keypair from a PKCS#8 EncryptedPrivateKeyInfo structure after decrypting with a char-based password, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-242">Wenn der Inhalt `source` einen Algorithmus angibt, der PBKDF1 (Kenn Wort basierte Schlüssel abderivations Funktion 1) oder PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="67547-242">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="67547-243">Diese Methode unterstützt nur die binäre Codierung (ber/CER/der) von "verschlüsseltedprivatekeyinfo".</span><span class="sxs-lookup"><span data-stu-id="67547-243">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="67547-244">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="67547-244">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 <span data-ttu-id="67547-245">Da für die Interpretation der Inhalte dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, wird von <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="67547-245">Because algorithm-specific support is required to interpret the contents of this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-246">Das Kennwort ist falsch.</span><span class="sxs-lookup"><span data-stu-id="67547-246">The password is incorrect.</span></span>

<span data-ttu-id="67547-247">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-247">-or-</span></span>

<span data-ttu-id="67547-248">Der Inhalt von <paramref name="source" /> stellt keine ASN.1-BER-codierte PKCS#8-EncryptedPrivateKeyInfo-Struktur dar.</span><span class="sxs-lookup"><span data-stu-id="67547-248">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span>

<span data-ttu-id="67547-249">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-249">-or-</span></span>

<span data-ttu-id="67547-250">Der Inhalt von <paramref name="source" /> gibt an, dass der Schlüssel für einen anderen Algorithmus als den von dieser Instanz dargestellten Algorithmus gilt.</span><span class="sxs-lookup"><span data-stu-id="67547-250">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="67547-251">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-251">-or-</span></span>

<span data-ttu-id="67547-252">Der Inhalt von <paramref name="source" /> stellt den Schlüssel in einem Format dar, das nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-252">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="67547-253">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-253">-or-</span></span>

<span data-ttu-id="67547-254">Fehler beim Importieren des algorithmusspezifischen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-254">The algorithm-specific key import failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-255">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-255">A derived type has not overriden this member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportFromEncryptedPem">
      <MemberSignature Language="C#" Value="public virtual void ImportFromEncryptedPem (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;byte&gt; passwordBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFromEncryptedPem(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportFromEncryptedPem (input As ReadOnlySpan(Of Char), passwordBytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportFromEncryptedPem(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;System::Byte&gt; passwordBytes);" />
      <MemberSignature Language="F#" Value="abstract member ImportFromEncryptedPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.ImportFromEncryptedPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="asymmetricAlgorithm.ImportFromEncryptedPem (input, passwordBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="passwordBytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFromEncryptedPem">
      <MemberSignature Language="C#" Value="public virtual void ImportFromEncryptedPem (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFromEncryptedPem(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportFromEncryptedPem (input As ReadOnlySpan(Of Char), password As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportFromEncryptedPem(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="abstract member ImportFromEncryptedPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.ImportFromEncryptedPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="asymmetricAlgorithm.ImportFromEncryptedPem (input, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFromPem">
      <MemberSignature Language="C#" Value="public virtual void ImportFromPem (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFromPem(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromPem(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportFromPem (input As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportFromPem(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="abstract member ImportFromPem : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.ImportFromPem : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="asymmetricAlgorithm.ImportFromPem input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual void ImportPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportPkcs8PrivateKey (source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="abstract member ImportPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * int -&gt; unit&#xA;override this.ImportPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="asymmetricAlgorithm.ImportPkcs8PrivateKey (source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="67547-256">Die Bytes einer „PKCS#8 PrivateKeyInfo“-Struktur in der ASN.1-BER-Codierung.</span><span class="sxs-lookup"><span data-stu-id="67547-256">The bytes of a PKCS#8 PrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="67547-257">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-257">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="67547-258">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-258">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-259">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird das öffentliche/private Schlüsselpaar nach der Entschlüsselung aus einer PKCS#8-PrivateKeyInfo-Struktur importiert und ersetzt die Schlüssel für dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="67547-259">When overriden in a derived class, imports the public/private keypair from a PKCS#8 PrivateKeyInfo structure after decryption, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-260">Diese Methode unterstützt nur die binäre Codierung (ber/CER/der) von privatekeyinfo.</span><span class="sxs-lookup"><span data-stu-id="67547-260">This method only supports the binary (BER/CER/DER) encoding of PrivateKeyInfo.</span></span>
<span data-ttu-id="67547-261">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="67547-261">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 <span data-ttu-id="67547-262">Da für die Interpretation der Inhalte dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, wird von <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="67547-262">Because algorithm-specific support is required to interpret the contents of this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-263">Der Inhalt von <paramref name="source" /> stellt keine ASN.1-BER-codierte PKCS#8-PrivateKeyInfo-Struktur dar.</span><span class="sxs-lookup"><span data-stu-id="67547-263">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 PrivateKeyInfo structure.</span></span>

<span data-ttu-id="67547-264">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-264">-or-</span></span>

<span data-ttu-id="67547-265">Der Inhalt von <paramref name="source" /> gibt an, dass der Schlüssel für einen anderen Algorithmus als den von dieser Instanz dargestellten Algorithmus gilt.</span><span class="sxs-lookup"><span data-stu-id="67547-265">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="67547-266">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-266">-or-</span></span>

<span data-ttu-id="67547-267">Der Inhalt von <paramref name="source" /> stellt den Schlüssel in einem Format dar, das nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-267">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="67547-268">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-268">-or-</span></span>

<span data-ttu-id="67547-269">Fehler beim Importieren des algorithmusspezifischen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-269">The algorithm-specific key import failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-270">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-270">A derived type has not overriden this member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportSubjectPublicKeyInfo">
      <MemberSignature Language="C#" Value="public virtual void ImportSubjectPublicKeyInfo (ReadOnlySpan&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportSubjectPublicKeyInfo(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ImportSubjectPublicKeyInfo (source As ReadOnlySpan(Of Byte), ByRef bytesRead As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportSubjectPublicKeyInfo(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="abstract member ImportSubjectPublicKeyInfo : ReadOnlySpan&lt;byte&gt; * int -&gt; unit&#xA;override this.ImportSubjectPublicKeyInfo : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="asymmetricAlgorithm.ImportSubjectPublicKeyInfo (source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="67547-271">Die Bytes einer X.509-SubjectPublicKeyInfo-Struktur in der ASN.1-DER-Codierung.</span><span class="sxs-lookup"><span data-stu-id="67547-271">The bytes of an X.509 SubjectPublicKeyInfo structure in the ASN.1-DER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="67547-272">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die aus <paramref name="source" /> gelesen wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-272">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="67547-273">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-273">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-274">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird der öffentliche Schlüssel nach der Entschlüsselung aus einer X.509-SubjectPublicKeyInfo-Struktur importiert und ersetzt die Schlüssel für dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="67547-274">When overriden in a derived class, imports the public key from an X.509 SubjectPublicKeyInfo structure after decryption, replacing the keys for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-275">Diese Methode unterstützt nur die binäre Codierung (der) von "subjetpublickeyinfo".</span><span class="sxs-lookup"><span data-stu-id="67547-275">This method only supports the binary (DER) encoding of SubjectPublicKeyInfo.</span></span>
<span data-ttu-id="67547-276">Wenn der Wert Base64-codiert ist oder im PEM-Textformat vorliegt, muss der Aufrufer den Inhalt vor dem Aufrufen dieser Methode Base64-decodieren.</span><span class="sxs-lookup"><span data-stu-id="67547-276">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 <span data-ttu-id="67547-277">Da für die Interpretation der Inhalte dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, wird von <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportSubjectPublicKeyInfo%2A> standardmäßig eine <xref:System.NotImplementedException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="67547-277">Because algorithm-specific support is required to interpret the contents of this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.ImportSubjectPublicKeyInfo%2A> throws a <xref:System.NotImplementedException> by default.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-278">Der Inhalt von <paramref name="source" /> stellt keine ASN.1-DER-codierte X.509-SubjectPublicKeyInfo-Struktur dar.</span><span class="sxs-lookup"><span data-stu-id="67547-278">The contents of <paramref name="source" /> do not represent an ASN.1-DER-encoded X.509 SubjectPublicKeyInfo structure.</span></span>

<span data-ttu-id="67547-279">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-279">-or-</span></span>

<span data-ttu-id="67547-280">Der Inhalt von <paramref name="source" /> gibt an, dass der Schlüssel für einen anderen Algorithmus als den von dieser Instanz dargestellten Algorithmus gilt.</span><span class="sxs-lookup"><span data-stu-id="67547-280">The contents of <paramref name="source" /> indicate the key is for an algorithm other than the algorithm represented by this instance.</span></span>

<span data-ttu-id="67547-281">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-281">-or-</span></span>

<span data-ttu-id="67547-282">Der Inhalt von <paramref name="source" /> stellt den Schlüssel in einem Format dar, das nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-282">The contents of <paramref name="source" /> represent the key in a format that is not supported.</span></span>

<span data-ttu-id="67547-283">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-283">-or-</span></span>

<span data-ttu-id="67547-284">Fehler beim Importieren des algorithmusspezifischen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="67547-284">The algorithm-specific key import failed.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-285">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-285">A derived type has not overriden this member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string KeyExchangeAlgorithm { get; }" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As String" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="C#" Value="public abstract string KeyExchangeAlgorithm { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property KeyExchangeAlgorithm As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-286">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Algorithmus für den Schlüsselaustausch ab.</span><span class="sxs-lookup"><span data-stu-id="67547-286">When overridden in a derived class, gets the name of the key exchange algorithm.</span></span> <span data-ttu-id="67547-287">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-287">Otherwise, throws an <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="67547-288">Der Name des Algorithmus für den Schlüsselaustausch.</span><span class="sxs-lookup"><span data-stu-id="67547-288">The name of the key exchange algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-289">Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A>-Eigenschaft überschreiben, um den Namen des Algorithmus für den Schlüsselaustausch zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="67547-289">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> property to return the name for the key exchange algorithm.</span></span> <span data-ttu-id="67547-290">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-290">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#6)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#6)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-291">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-291">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-292">Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="67547-292">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="67547-293">Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits.</span><span class="sxs-lookup"><span data-stu-id="67547-293">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-294">Die gültigen Schlüsselgrößen werden von der jeweiligen Implementierung des asymmetrischen Algorithmus angegeben und in der <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>-Eigenschaft aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="67547-294">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67547-295">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>-Eigenschaft überschrieben wird, um zu überprüfen, ob Sie innerhalb des Bereichs liegt, der in der lokalen `keySizes` Member-Variable</span><span class="sxs-lookup"><span data-stu-id="67547-295">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property to verify that it falls within the range identified in the local `keySizes` member variable.</span></span> <span data-ttu-id="67547-296">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-296">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#9)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#9)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-297">Die Größe des Schlüsselmodulos ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="67547-297">The key modulus size is invalid.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-298">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-298">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberSignature Language="F#" Value="val mutable KeySizeValue : int" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-299">Stellt die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits dar.</span><span class="sxs-lookup"><span data-stu-id="67547-299">Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-300">Die gültigen Schlüsselgrößen werden von der jeweiligen Implementierung des asymmetrischen Algorithmus angegeben und in der <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>-Eigenschaft aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="67547-300">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="67547-301">Auf dieses Feld kann über die <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>-Eigenschaft zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="67547-301">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-302">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-302">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-303">Ruft die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen ab.</span><span class="sxs-lookup"><span data-stu-id="67547-303">Gets the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="67547-304">Ein Array, das die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen enthält.</span><span class="sxs-lookup"><span data-stu-id="67547-304">An array that contains the key sizes supported by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-305">Der asymmetrische Algorithmus unterstützt nur Schlüsselgrößen, die einem Eintrag in diesem Array entsprechen.</span><span class="sxs-lookup"><span data-stu-id="67547-305">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67547-306">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>-Eigenschaft aufgerufen wird, um die Eigenschaften <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>und <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> abzurufen.</span><span class="sxs-lookup"><span data-stu-id="67547-306">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties.</span></span> <span data-ttu-id="67547-307">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-307">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#10)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#10)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-308">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-308">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalKeySizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.MaybeNull</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-309">Gibt die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen an.</span><span class="sxs-lookup"><span data-stu-id="67547-309">Specifies the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-310">Der asymmetrische Algorithmus unterstützt nur Schlüsselgrößen, die einem Eintrag in diesem Array entsprechen.</span><span class="sxs-lookup"><span data-stu-id="67547-310">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="67547-311">Auf dieses Feld kann über die <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>-Eigenschaft zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="67547-311">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-312">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-312">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string SignatureAlgorithm { get; }" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SignatureAlgorithm As String" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="C#" Value="public abstract string SignatureAlgorithm { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SignatureAlgorithm As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SignatureAlgorithm { System::String ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67547-313">Ruft beim Implementieren in einer abgeleiteten Klasse den Namen des Signaturalgorithmus ab.</span><span class="sxs-lookup"><span data-stu-id="67547-313">When implemented in a derived class, gets the name of the signature algorithm.</span></span> <span data-ttu-id="67547-314">Löst andernfalls immer eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-314">Otherwise, always throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="67547-315">Der Name des Signaturalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="67547-315">The name of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-316">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A>-Eigenschaft überschrieben wird, um den Namen des Signatur Algorithmus zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="67547-316">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> property to return the name of the signature algorithm.</span></span> <span data-ttu-id="67547-317">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-317">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#7)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#7)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-318">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-318">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="asymmetricAlgorithm.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67547-319">Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.IDisposable.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="67547-319">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="67547-320">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="67547-320">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67547-321">Er kann nur verwendet werden, wenn die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Instanz in eine <xref:System.IDisposable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-321">It can be used only when the <xref:System.Security.Cryptography.AsymmetricAlgorithm> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-322">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-322">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString (bool includePrivateParameters);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString (includePrivateParameters As Boolean) As String" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString(bool includePrivateParameters);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ToXmlString : bool -&gt; string&#xA;override this.ToXmlString : bool -&gt; string" Usage="asymmetricAlgorithm.ToXmlString includePrivateParameters" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract string ToXmlString (bool includePrivateParameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToXmlString (includePrivateParameters As Boolean) As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ToXmlString(bool includePrivateParameters);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="F#" Value="abstract member ToXmlString : bool -&gt; string" Usage="asymmetricAlgorithm.ToXmlString includePrivateParameters" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="67547-323"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67547-323"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="67547-324">Erstellt beim Überschreiben in einer abgeleiteten Klasse eine XML-Zeichenfolgendarstellung des aktuellen <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="67547-324">When overridden in a derived class, creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span> <span data-ttu-id="67547-325">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-325">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <returns><span data-ttu-id="67547-326">Eine XML-Zeichenfolgencodierung des aktuellen <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="67547-326">An XML string encoding of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67547-327">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A>-Methode aufgerufen wird, um eine XML-Darstellung der Parameter im aktuellen <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Objekt zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="67547-327">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object.</span></span> <span data-ttu-id="67547-328">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67547-328">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#5)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#5)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="67547-329">Kryptografische Dienste</span><span class="sxs-lookup"><span data-stu-id="67547-329">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual bool TryExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryExportEncryptedPkcs8PrivateKey (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="asymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="67547-330">Die Bytes, die als Kennwort bei der Verschlüsselung des Schlüsselmaterials verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67547-330">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="67547-331">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-331">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="67547-332">Die Bytespanne, in der die PKCS#8-EncryptedPrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-332">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="67547-333">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-333">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="67547-334">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-334">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-335">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird mit einem bytebasierten Kennwort versucht, den aktuellen Schlüssel in einen bereitgestellten Puffer in das PKCS#8-EncryptedPrivateKeyInfo-Format zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="67547-335">When overridden in a derived class, attempts to export the current key in the PKCS#8 EncryptedPrivateKeyInfo format into a provided buffer, using a byte-based password.</span></span></summary>
        <returns><span data-ttu-id="67547-336"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67547-336"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-337">Die Kenn Wort Bytes werden direkt an die kdf (Key derivations Function) übergeben, die vom Algorithmus verwendet wird, der durch `pbeParameters`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="67547-337">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="67547-338">Dadurch wird die Kompatibilität mit anderen Systemen ermöglicht, bei denen bei der Verarbeitung von Kenn Wörtern mit PBKDF2 eine andere Text Codierung als UTF-8 verwendet wird (Kenn Wort basierte Schlüssel abderivations Funktion 2).</span><span class="sxs-lookup"><span data-stu-id="67547-338">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="67547-339">Da für die Erstellung dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, löst <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-339">Because algorithm-specific support is required to produce this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-340">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-340">The key could not be exported.</span></span>

<span data-ttu-id="67547-341">- oder -</span><span class="sxs-lookup"><span data-stu-id="67547-341">-or-</span></span>

<span data-ttu-id="67547-342"><paramref name="pbeParameters" /> gibt an, dass <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> verwendet werden soll, wofür <see cref="T:System.Char" />-basierte Kennwörter erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="67547-342"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-343">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-343">A derived type has not overriden this member.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportEncryptedPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual bool TryExportEncryptedPkcs8PrivateKey (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryExportEncryptedPkcs8PrivateKey(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryExportEncryptedPkcs8PrivateKey (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryExportEncryptedPkcs8PrivateKey : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="asymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="67547-344">Das Kennwort, das bei der Verschlüsselung des Schlüsselmaterials verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="67547-344">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="67547-345">Die Parameter der kennwortbasierten Verschlüsselung, die bei der Verschlüsselung des Schlüsselmaterials verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-345">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="67547-346">Die Bytespanne, in der die PKCS#8-EncryptedPrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-346">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="67547-347">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-347">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="67547-348">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-348">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-349">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird mit einem zeichenbasierten Kennwort versucht, den aktuellen Schlüssel in einen bereitgestellten Puffer in das PKCS#8-EncryptedPrivateKeyInfo-Format zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="67547-349">When overriden in a derived class, attempts to export the current key in the PKCS#8 EncryptedPrivateKeyInfo format into a provided buffer, using a char-based password.</span></span></summary>
        <returns><span data-ttu-id="67547-350"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67547-350"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-351">Wenn `pbeParameters` einen Algorithmus angibt, der PBKDF2 (Kenn Wort basierte Schlüssel abderivations Funktion 2) verwendet, wird das Kennwort über die UTF-8-Codierung in Bytes konvertiert.</span><span class="sxs-lookup"><span data-stu-id="67547-351">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="67547-352">Da für die Erstellung dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, löst <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-352">Because algorithm-specific support is required to produce this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-353">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-353">The key could not be exported.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-354">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-354">A derived type has not overriden this member.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportPkcs8PrivateKey">
      <MemberSignature Language="C#" Value="public virtual bool TryExportPkcs8PrivateKey (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryExportPkcs8PrivateKey(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryExportPkcs8PrivateKey (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryExportPkcs8PrivateKey(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryExportPkcs8PrivateKey : Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryExportPkcs8PrivateKey : Span&lt;byte&gt; * int -&gt; bool" Usage="asymmetricAlgorithm.TryExportPkcs8PrivateKey (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="67547-355">Die Bytespanne, in der die PKCS#8-PrivateKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-355">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="67547-356">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-356">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="67547-357">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-357">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-358">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird versucht, den aktuellen Schlüssel in einen bereitgestellten Puffer in das PKCS#8-PrivateKeyInfo-Format zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="67547-358">When overridden in a derived class, attempts to export the current key in the PKCS#8 PrivateKeyInfo format into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="67547-359"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67547-359"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-360">Da für die Erstellung dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, löst <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey%2A> standardmäßig eine <xref:System.NotImplementedException> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-360">Because algorithm-specific support is required to produce this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-361">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-361">The key could not be exported.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-362">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-362">A derived type has not overriden this member.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="TryExportSubjectPublicKeyInfo">
      <MemberSignature Language="C#" Value="public virtual bool TryExportSubjectPublicKeyInfo (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryExportSubjectPublicKeyInfo(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryExportSubjectPublicKeyInfo (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryExportSubjectPublicKeyInfo(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryExportSubjectPublicKeyInfo : Span&lt;byte&gt; * int -&gt; bool&#xA;override this.TryExportSubjectPublicKeyInfo : Span&lt;byte&gt; * int -&gt; bool" Usage="asymmetricAlgorithm.TryExportSubjectPublicKeyInfo (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="67547-363">Die Bytespanne, in der die X.509-SubjectPublicKeyInfo-Daten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="67547-363">The byte span to receive the X.509 SubjectPublicKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="67547-364">In der Rückgabe dieser Methode ist die Anzahl der Bytes enthalten, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="67547-364">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="67547-365">Dieser Parameter wird als nicht initialisiert behandelt.</span><span class="sxs-lookup"><span data-stu-id="67547-365">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="67547-366">Wenn das Element in eine abgeleitete Klasse überschrieben wird, wird versucht, den aktuellen Schlüssel in einen bereitgestellten Puffer in das X.509-SubjectPublicKeyInfo-Format zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="67547-366">When overridden in a derived class, attempts to export the current key in the X.509 SubjectPublicKeyInfo format into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="67547-367"><see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um die Ausgabe zu empfangen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="67547-367"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67547-368">Da für die Erstellung dieses Datenformats eine algorithmusspezifische Unterstützung erforderlich ist, löst <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo%2A> standardmäßig eine <xref:System.NotImplementedException> aus.</span><span class="sxs-lookup"><span data-stu-id="67547-368">Because algorithm-specific support is required to produce this data format, <xref:System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo%2A> throws a <xref:System.NotImplementedException> by default.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="67547-369">Der Schlüssel konnte nicht exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="67547-369">The key could not be exported.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="67547-370">Ein abgeleiteter Typ hat diesen Member nicht überschrieben.</span><span class="sxs-lookup"><span data-stu-id="67547-370">A derived type has not overriden this member.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ExportSubjectPublicKeyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
