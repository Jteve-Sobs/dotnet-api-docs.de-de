<Type Name="AsymmetricAlgorithm" FullName="System.Security.Cryptography.AsymmetricAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class AsymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricAlgorithm abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b806-101">Stellt die abstrakte Basisklasse dar, von der alle Implementierungen von asymmetrischen Algorithmen erben müssen.</span><span class="sxs-lookup"><span data-stu-id="6b806-101">Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-102">Asymmetrische kryptografische Algorithmen, auch bekannt als Algorithmen mit öffentlichem Schlüssel, erfordern, dass Sender und Empfänger ein Paar von verwandten Schlüssel verwalten: einen privaten Schlüssel und einem öffentlichen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="6b806-102">Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</span></span> <span data-ttu-id="6b806-103">Beide Schlüssel gelten nur für die Entität.</span><span class="sxs-lookup"><span data-stu-id="6b806-103">Both keys are unique to the entity.</span></span> <span data-ttu-id="6b806-104">Der öffentliche Schlüssel kann für Personen, die verfügbar gemacht werden; Dieser Schlüssel wird zum Codieren von Daten, die an einen Empfänger gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="6b806-104">The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</span></span> <span data-ttu-id="6b806-105">Der private Schlüssel muss vom Empfänger vertraulich behandelt werden; Dieser Schlüssel wird zum Decodieren von Nachrichten mit dem öffentlichen Schlüssel des Empfängers codiert verwendet.</span><span class="sxs-lookup"><span data-stu-id="6b806-105">The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</span></span> <span data-ttu-id="6b806-106">Die <xref:System.Security.Cryptography.RSACryptoServiceProvider> -Klasse ist eine Implementierung eines Algorithmus mit öffentlichem Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="6b806-106">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class is an implementation of a public-key algorithm.</span></span> <span data-ttu-id="6b806-107">Eine ausführliche Diskussion der Verschlüsselung mit öffentlichem Schlüssel und Algorithmen, finden Sie im Abschnitt "Verschlüsselung mit öffentlichem Schlüssel" im [Kryptografiedienste](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-107">For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="6b806-108">Informationen über das Strong Name-Tool (Sn.exe) verwenden, um Schlüsselpaare zu erstellen, finden Sie unter [Vorgehensweise: Erstellen eines öffentlich / privaten Schlüsselpaars](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-108">For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see [How to: Create a Public-Private Key Pair](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span></span>  
  
 <span data-ttu-id="6b806-109">Sie können Systeme mit öffentlichem Schlüssel für digitale Signaturen verwenden.</span><span class="sxs-lookup"><span data-stu-id="6b806-109">You can use public-key systems to form digital signatures.</span></span> <span data-ttu-id="6b806-110">Digitale Signaturen verwendet, um die Integrität der Daten zu schützen.</span><span class="sxs-lookup"><span data-stu-id="6b806-110">Digital signatures are used to help to protect the integrity of data.</span></span> <span data-ttu-id="6b806-111">Z. B. gelten für die Verwendung ein Systems öffentlichem Schlüssel zum digitalen Signieren eine Nachricht, der Absender zuerst eine Hash-Funktion in der Nachricht, um einen Nachrichtenhash zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="6b806-111">For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="6b806-112">Der Absender verschlüsselt klicken Sie dann den Message Digest mit dem privaten Schlüssel des Absenders, zum Erstellen des Absenders persönliche Signatur.</span><span class="sxs-lookup"><span data-stu-id="6b806-112">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="6b806-113">Nach dem Empfang der Nachricht und der Signatur wird der Empfänger entschlüsselt die Signatur mit der öffentlichen Schlüssel des Absenders, Message Digest wiederherzustellen und die Nachricht mithilfe des gleichen Hashalgorithmus, den der Absender verwendet.</span><span class="sxs-lookup"><span data-stu-id="6b806-113">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="6b806-114">Wenn der Message-Digest, den der Empfänger berechnet die vom Absender empfangenen Nachrichtenhash übereinstimmt, kann der Empfänger davon ausgehen, dass die Nachricht bei der Übertragung nicht geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="6b806-114">If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="6b806-115">Beachten Sie, dass jeder Benutzer eine Signatur zu überprüfen, da der öffentliche Schlüssel des Absenders allgemein bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="6b806-115">Note that anyone can verify a signature, because the sender's public key is common knowledge.</span></span> <span data-ttu-id="6b806-116">Dieses Verfahren wird die Nachricht jedoch nicht geheim gehalten. für die Nachricht geheim sein müssen sie zusätzlich verschlüsselt werden.</span><span class="sxs-lookup"><span data-stu-id="6b806-116">This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</span></span>  
  
 <span data-ttu-id="6b806-117">.NET Framework bietet die folgenden Klassen, die digitale Signaturalgorithmen implementiert: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (Basisklasse), und <xref:System.Security.Cryptography.ECDsaCng>.</span><span class="sxs-lookup"><span data-stu-id="6b806-117">The .NET Framework provides the following classes that implement digital signature algorithms: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (base class), and <xref:System.Security.Cryptography.ECDsaCng>.</span></span>  
  
 <span data-ttu-id="6b806-118">Die <xref:System.Security.Cryptography> -Namespace stellt konkrete Klassen für <xref:System.Security.Cryptography.RSA> und <xref:System.Security.Cryptography.DSA> nur.</span><span class="sxs-lookup"><span data-stu-id="6b806-118">The <xref:System.Security.Cryptography> namespace provides concrete classes for <xref:System.Security.Cryptography.RSA> and <xref:System.Security.Cryptography.DSA> only.</span></span>  
  
 <span data-ttu-id="6b806-119">Informationen zum Verwenden des RSA-Algorithmus zum Verschlüsseln und Entschlüsseln von XML-Daten, und erstellen und Überprüfen von digitalen Signaturen von XML, finden in diesen Artikeln:</span><span class="sxs-lookup"><span data-stu-id="6b806-119">To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:</span></span>  
  
-   [<span data-ttu-id="6b806-120">Gewusst wie: Verschlüsseln von XML-Elementen mit asymmetrischen Schlüsseln</span><span class="sxs-lookup"><span data-stu-id="6b806-120">How to: Encrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-encrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="6b806-121">Gewusst wie: Entschlüsseln von XML-Elementen mit asymmetrischen Schlüsseln</span><span class="sxs-lookup"><span data-stu-id="6b806-121">How to: Decrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-decrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="6b806-122">Gewusst wie: Signieren von XML-Dokumenten mit digitalen Signaturen</span><span class="sxs-lookup"><span data-stu-id="6b806-122">How to: Sign XML Documents with Digital Signatures</span></span>](~/docs/standard/security/how-to-sign-xml-documents-with-digital-signatures.md)  
  
-   [<span data-ttu-id="6b806-123">Gewusst wie: Überprüfen der digitalen Signaturen von XML-Dokumenten</span><span class="sxs-lookup"><span data-stu-id="6b806-123">How to: Verify the Digital Signatures of XML Documents</span></span>](~/docs/standard/security/how-to-verify-the-digital-signatures-of-xml-documents.md)  
  
   
  
## Examples  
 <span data-ttu-id="6b806-124">Im folgenden Codebeispiel wird veranschaulicht, wie implementieren ein benutzerdefiniertes asymmetrisches Algorithmus geerbt von der <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-124">The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  <span data-ttu-id="6b806-125">Veranschaulicht, wie Sie die benutzerdefinierte Klasse zu verwenden, wird eine zusätzliche Klasse bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="6b806-125">An additional class is provided to demonstrate how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#2)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#2)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#2)]  
  
 <span data-ttu-id="6b806-126">Hier ist eine weitere Klasse, die die benutzerdefinierte Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="6b806-126">Here's an additional class that demonstrates how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#3)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#3)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b806-127">Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-128">Eine Instanz einer abstrakten Klasse kann nicht erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="6b806-128">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="6b806-129">Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-129">Application code creates a new instance of a derived class.</span></span> <span data-ttu-id="6b806-130">Die <xref:System.Security.Cryptography.RSACryptoServiceProvider> und <xref:System.Security.Cryptography.DSACryptoServiceProvider> Klassen sind der einzigen derzeit unterstützten Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="6b806-130">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> and <xref:System.Security.Cryptography.DSACryptoServiceProvider> classes are the only currently supported implementations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6b806-131">Die Implementierung der abgeleiteten Klasse ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="6b806-131">The implementation of the derived class is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b806-132">Gibt alle von der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6b806-132">Releases all resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-133">Diese Methode ist ein einfacher Aufruf der <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="6b806-133">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6b806-134">Aufrufen von `Dispose` können Ressourcen von der <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse für andere Zwecke neu reserviert werden.</span><span class="sxs-lookup"><span data-stu-id="6b806-134">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="6b806-135">Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-135">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b806-136">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> Methode zum Freigeben der Ressourcen des aktuellen `customCrypto` Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b806-136">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method to release the resources of the current `customCrypto` object.</span></span> <span data-ttu-id="6b806-137">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-137">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#1)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#1)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b806-138">Erstellt ein Kryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="6b806-138">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b806-139">Erstellt ein Standardkryptografieobjekt zum Ausführen des asymmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="6b806-139">Creates a default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="6b806-140">Eine neue <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Instanz, sofern die Standardeinstellungen nicht mit dem [&lt;cryptoClass&gt;-Element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md) geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="6b806-140">A new <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> instance, unless the default settings have been changed with the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-141">Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> Methode in einer erweiterten Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-141">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="6b806-142">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-142">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#11)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#11)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="6b806-143">Die zu verwendende asymmetrische Algorithmusimplementierung.</span><span class="sxs-lookup"><span data-stu-id="6b806-143">The asymmetric algorithm implementation to use.</span></span> <span data-ttu-id="6b806-144">Die folgende Tabelle zeigt die gültigen Werte für den <c>algName</c>-Parameter sowie die Algorithmen, denen sie zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="6b806-144">The following table shows the valid values for the <c>algName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="6b806-145"><list type="table"><listheader><term>-Parameterwert</span><span class="sxs-lookup"><span data-stu-id="6b806-145"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="6b806-146"></term><description> implementiert</span><span class="sxs-lookup"><span data-stu-id="6b806-146"></term><description> Implements</span></span>  
  
 <span data-ttu-id="6b806-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span><span class="sxs-lookup"><span data-stu-id="6b806-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span></span>  
  
 <span data-ttu-id="6b806-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span><span class="sxs-lookup"><span data-stu-id="6b806-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span></span>  
  
 <span data-ttu-id="6b806-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span><span class="sxs-lookup"><span data-stu-id="6b806-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span></span>  
  
 <span data-ttu-id="6b806-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span><span class="sxs-lookup"><span data-stu-id="6b806-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span></span>  
  
 <span data-ttu-id="6b806-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span><span class="sxs-lookup"><span data-stu-id="6b806-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span></span>  
  
 <span data-ttu-id="6b806-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span><span class="sxs-lookup"><span data-stu-id="6b806-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span></span>  
  
 <span data-ttu-id="6b806-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="6b806-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span></span>  
  
 <span data-ttu-id="6b806-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="6b806-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span></span>  
  
 <span data-ttu-id="6b806-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span><span class="sxs-lookup"><span data-stu-id="6b806-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span></span>  
  
 <span data-ttu-id="6b806-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span><span class="sxs-lookup"><span data-stu-id="6b806-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span></span>  
  
 <span data-ttu-id="6b806-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="6b806-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span></span>  
  
 <span data-ttu-id="6b806-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="6b806-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item></list></param>
        <summary><span data-ttu-id="6b806-159">Erstellt eine Instanz der angegebenen Implementierung eines symmetrischen Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="6b806-159">Creates an instance of the specified implementation of an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="6b806-160">Eine neue Instanz der angegebenen asymmetrischen Algorithmusimplementierung.</span><span class="sxs-lookup"><span data-stu-id="6b806-160">A new instance of the specified asymmetric algorithm implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-161">Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> Methode in einer erweiterten Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-161">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="6b806-162">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-162">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#12)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#12)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b806-163">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6b806-163">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b806-164">Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6b806-164">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-165">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.AsymmetricAlgorithm> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="6b806-165">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="6b806-166">Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.AsymmetricAlgorithm> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="6b806-166">The `Dispose` method leaves the <xref:System.Security.Cryptography.AsymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="6b806-167">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.Cryptography.AsymmetricAlgorithm> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.Cryptography.AsymmetricAlgorithm> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="6b806-167">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.AsymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.AsymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="6b806-168">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-168">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b806-169">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.AsymmetricAlgorithm> freigeben.</span><span class="sxs-lookup"><span data-stu-id="6b806-169">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="6b806-170">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.AsymmetricAlgorithm>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="6b806-170">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.AsymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6b806-171"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="6b806-171"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6b806-172">Gibt die von der <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="6b806-172">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-173">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die `Finalize` Methode.</span><span class="sxs-lookup"><span data-stu-id="6b806-173">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="6b806-174">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6b806-174">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6b806-175">`Finalize` Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="6b806-175">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6b806-176">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.Cryptography.AsymmetricAlgorithm> verweist.</span><span class="sxs-lookup"><span data-stu-id="6b806-176">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.AsymmetricAlgorithm> references.</span></span> <span data-ttu-id="6b806-177">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="6b806-177">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b806-178"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="6b806-178"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6b806-179">Zum Überschreiben <see langword="Dispose(Boolean)" />müssen Sie darauf achten, nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="6b806-179">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="6b806-180">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-180">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="6b806-181">Weitere Informationen zu <see langword="Dispose" /> und <see langword="Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="6b806-181">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public virtual void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="6b806-182">Die XML-Zeichenfolge zur Wiederherstellung des <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="6b806-182">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="6b806-183">Stellt beim Überschreiben in einer abgeleiteten Klasse ein <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekt aus einer XML-Zeichenfolge wieder her.</span><span class="sxs-lookup"><span data-stu-id="6b806-183">When overridden in a derived class, reconstructs an <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object from an XML string.</span></span> <span data-ttu-id="6b806-184">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6b806-184">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-185">Das folgende Codebeispiel veranschaulicht das Implementieren der <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> Methode analysiert die angegebene XML-Zeichenfolge zum Auffüllen des aktuellen <xref:System.Security.Cryptography.CspParameters> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b806-185">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="6b806-186">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-186">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#4)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#4)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-187">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Algorithmus für den Schlüsselaustausch ab.</span><span class="sxs-lookup"><span data-stu-id="6b806-187">When overridden in a derived class, gets the name of the key exchange algorithm.</span></span> <span data-ttu-id="6b806-188">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6b806-188">Otherwise, throws an <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="6b806-189">Der Name des Algorithmus für den Schlüsselaustausch.</span><span class="sxs-lookup"><span data-stu-id="6b806-189">The name of the key exchange algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-190">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> -Eigenschaft zum Zurückgeben des Namens für den Algorithmus für den Schlüsselaustausch.</span><span class="sxs-lookup"><span data-stu-id="6b806-190">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> property to return the name for the key exchange algorithm.</span></span> <span data-ttu-id="6b806-191">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-191">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#6)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#6)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-192">Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="6b806-192">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="6b806-193">Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits.</span><span class="sxs-lookup"><span data-stu-id="6b806-193">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-194">Gültigen Schlüsselgrößen sind von der jeweiligen Implementierung des asymmetrischen Algorithmus angegeben und sind aufgeführt, der <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6b806-194">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b806-195">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> Eigenschaft, um festzustellen, dass dieser innerhalb des Bereichs, in der lokalen identifiziert liegt `keySizes` Membervariablen gespeichert.</span><span class="sxs-lookup"><span data-stu-id="6b806-195">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property to verify that it falls within the range identified in the local `keySizes` member variable.</span></span> <span data-ttu-id="6b806-196">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-196">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#9)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#9)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6b806-197">Die Größe des Schlüsselmodulos ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="6b806-197">The key modulus size is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-198">Stellt die Größe des vom asymmetrischen Algorithmus verwendeten Schlüsselmodulos in Bits dar.</span><span class="sxs-lookup"><span data-stu-id="6b806-198">Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-199">Gültigen Schlüsselgrößen sind von der jeweiligen Implementierung des asymmetrischen Algorithmus angegeben und sind aufgeführt, der <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6b806-199">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="6b806-200">Dieses Feld erfolgt über die <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6b806-200">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-201">Ruft die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen ab.</span><span class="sxs-lookup"><span data-stu-id="6b806-201">Gets the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="6b806-202">Ein Array, das die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen enthält.</span><span class="sxs-lookup"><span data-stu-id="6b806-202">An array that contains the key sizes supported by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-203">Der asymmetrische Algorithmus unterstützt nur Schlüsselgrößen, die einen Eintrag in diesem Array entsprechen.</span><span class="sxs-lookup"><span data-stu-id="6b806-203">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b806-204">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> Eigenschaft zum Abrufen der <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, und <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="6b806-204">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties.</span></span> <span data-ttu-id="6b806-205">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-205">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#10)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#10)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-206">Gibt die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen an.</span><span class="sxs-lookup"><span data-stu-id="6b806-206">Specifies the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b806-207">Der asymmetrische Algorithmus unterstützt nur Schlüsselgrößen, die einen Eintrag in diesem Array entsprechen.</span><span class="sxs-lookup"><span data-stu-id="6b806-207">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="6b806-208">Dieses Feld erfolgt über die <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6b806-208">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b806-209">Ruft beim Implementieren in einer abgeleiteten Klasse den Namen des Signaturalgorithmus ab.</span><span class="sxs-lookup"><span data-stu-id="6b806-209">When implemented in a derived class, gets the name of the signature algorithm.</span></span> <span data-ttu-id="6b806-210">Löst andernfalls immer eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6b806-210">Otherwise, always throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="6b806-211">Der Name des Signaturalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="6b806-211">The name of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-212">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> Eigenschaft, um den Namen des Signaturalgorithmus zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="6b806-212">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> property to return the name of the signature algorithm.</span></span> <span data-ttu-id="6b806-213">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-213">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#7)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#7)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="6b806-214"><see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6b806-214"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6b806-215">Erstellt beim Überschreiben in einer abgeleiteten Klasse eine XML-Zeichenfolgendarstellung des aktuellen <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="6b806-215">When overridden in a derived class, creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span> <span data-ttu-id="6b806-216">Löst andernfalls eine <see cref="T:System.NotImplementedException" /> aus.</span><span class="sxs-lookup"><span data-stu-id="6b806-216">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <returns><span data-ttu-id="6b806-217">Eine XML-Zeichenfolgencodierung des aktuellen <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="6b806-217">An XML string encoding of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b806-218">Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> Methode zum Erstellen einer XML-Darstellung der Parameter in der aktuellen <xref:System.Security.Cryptography.AsymmetricAlgorithm> Objekt.</span><span class="sxs-lookup"><span data-stu-id="6b806-218">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object.</span></span> <span data-ttu-id="6b806-219">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.AsymmetricAlgorithm> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6b806-219">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#5)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#5)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>