<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HMACRIPEMD160.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dbae615f73b276d9a73b731a30e0587151fc9c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dbae615f73b276d9a73b731a30e0587151fc9c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>Computes a Hash-based Message Authentication Code (HMAC) by using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RIPEMD160" /&gt;</ph> hash function.</source>
          <target state="translated">Berechnet unter Verwendung der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RIPEMD160" /&gt;</ph>-Hashfunktion einen Hash-Nachrichtenauthentifizierungscode (HMAC, Hash-based Message Authentication Code).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> ist ein Typ schlüsselgebundenen Hashalgorithmus, der aus der RIPEMD-160-Hashfunktion erstellt und als einen hashbasierten Message Authentication Code (HMAC) verwendet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Der HMAC-Prozess kombiniert einen geheimen Schlüssel mit den Nachrichtendaten, erstellt einen Hashwert für das Ergebnis bei der Hashfunktion vermischt diesen Hashwert mit dem geheimen Schlüssel erneut aus und wendet dann die Hashfunktion ein zweites Mal.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The output hash is 160 bits in length.</source>
          <target state="translated">Die Ausgabehash ist 160 Bits lang.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">Ein HMAC kann verwendet werden, um zu bestimmen, ob eine über einen unsicheren Kanal gesendete Nachricht manipuliert wurde, vorausgesetzt, dass Sender und Empfänger einen gemeinsamen geheimen Schlüssel besitzen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</source>
          <target state="translated">Der Absender berechnet den Hashwert für die ursprünglichen Daten und sendet die ursprünglichen Daten und den Hashwert als eine einzelne Nachricht.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">Der Empfänger berechnet den Hashwert für die empfangene Nachricht und überprüft, ob der berechnete HMAC den übertragenen HMAC übereinstimmt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">Alle Änderungen an den Daten oder der Hashwert führt keine Übereinstimmung gefunden, da Wissen des geheimen Schlüssels zum Ändern der Nachricht, und reproduzieren Sie den richtigen Hashwert erforderlich ist.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>Therefore, if the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">Aus diesem Grund wird der ursprüngliche und der berechnete Hashwerte übereinstimmen, die Nachricht authentifiziert.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> accepts keys of any size, and produces a hash sequence that is 160 bits long.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> akzeptiert Schlüssel jeder Größe und erzeugt eine Hashsequenz, die 160 Bits lang ist.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The RIPEMD hash algorithm and its successors were developed by the European RIPE project.</source>
          <target state="translated">RIPEMD-Hashalgorithmus und seine Nachfolger wurden von der Europäischen REIF Projekt entwickelt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The original RIPEMD algorithm was designed to replace MD4 and MD5 and was later strengthened and renamed RIPEMD-160.</source>
          <target state="translated">Der ursprüngliche RIPEMD-Algorithmus wurde entwickelt, um MD4 und MD5 ersetzen und später verstärkt wurde und RIPEMD-160 umbenannt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The RIPEMD-160 hash algorithm produces a 160-bit hash value.</source>
          <target state="translated">Der RIPEMD-160-Hashalgorithmus erzeugt einen 160-Bit-Hash-Wert.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The algorithm's designers have placed it in the public domain.</source>
          <target state="translated">Der Algorithmus Designer haben es in der öffentlichen Domäne gespeichert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>The following example shows how to sign a file by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> object and then how to verify the file.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Signieren einer Datei mithilfe der <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> -Objekt, und klicken Sie dann überprüfen, ob die Datei.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACRIPEMD160">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph> class with a randomly generated 64-byte key.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph>-Klasse mit einem nach dem Zufallsprinzip generierten 64-Byte-Schlüssel.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> ist ein Typ schlüsselgebundenen Hashalgorithmus, der aus der RIPEMD-160-Hashfunktion erstellt und als einen hashbasierten Message Authentication Code (HMAC) verwendet.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Der HMAC-Prozess kombiniert einen geheimen Schlüssel mit den Nachrichtendaten, erstellt einen Hashwert für das Ergebnis bei der Hashfunktion vermischt diesen Hashwert mit dem geheimen Schlüssel erneut aus und wendet dann die Hashfunktion ein zweites Mal.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor">
          <source>The output hash is 160 bytes in length.</source>
          <target state="translated">Die Ausgabehash ist 160 Bytes lang.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor">
          <source>This constructor uses a 64-byte, randomly generated key.</source>
          <target state="translated">Dieser Konstruktor verwendet einen zufällig generierten Schlüssel 64 Byte.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>The secret key for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph> encryption.</source>
          <target state="translated">Der geheime Schlüssel für die <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph>-Verschlüsselung.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>The key can be any length, but if it is more than 64 bytes long it is hashed (using SHA-1) to derive a 64-byte key.</source>
          <target state="translated">Der Schlüssel kann eine beliebige Länge aufweisen. Ab einer Länge von mehr als 64 Bytes wird jedoch unter Verwendung des SHA-1-Hashalgorithmus ein 64-Byte-Schlüssel aus ihm abgeleitet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>Therefore, the recommended size of the secret key is 64 bytes.</source>
          <target state="translated">Für den geheimen Schlüssel wird daher eine Größe von 64 Bytes empfohlen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph> class with the specified key data.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACRIPEMD160" /&gt;</ph>-Klasse mit den angegebenen Schlüsseldaten.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> ist ein Typ schlüsselgebundenen Hashalgorithmus, der aus der RIPEMD-160-Hashfunktion erstellt und als einen hashbasierten Message Authentication Code (HMAC) verwendet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">Der HMAC-Prozess kombiniert einen geheimen Schlüssel mit den Nachrichtendaten, erstellt einen Hashwert für das Ergebnis bei der Hashfunktion vermischt diesen Hashwert mit dem geheimen Schlüssel erneut aus und wendet dann die Hashfunktion ein zweites Mal.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>The output hash is 160 bytes in length.</source>
          <target state="translated">Die Ausgabehash ist 160 Bytes lang.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>For an example of how to use this constructor, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> class.</source>
          <target state="translated">Ein Beispiel dafür, wie dieser Konstruktor verwendet, finden Sie die <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACRIPEMD160&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="key" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>