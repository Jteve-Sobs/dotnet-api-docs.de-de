<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellman.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5240947e743f897b08d004de6a9deb8c851fcc7e3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">240947e743f897b08d004de6a9deb8c851fcc7e3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Provides an abstract base class that Elliptic Curve Diffie-Hellman (ECDH) algorithm implementations can derive from.</source>
          <target state="translated">Stellt eine abstrakte Basisklasse bereit, von der Implementierungen des ECDH (Elliptic Curve Diffie-Hellman)-Algorithmus abgeleitet werden können.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>This class provides the basic set of operations that all ECDH implementations must support.</source>
          <target state="translated">Diese Klasse stellt einen grundlegenden Satz an Operationen bereit, den alle ECDH-Implementierungen unterstützen müssen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>This class serves as the abstract base class for ECDH implementations.</source>
          <target state="translated">Diese Klasse dient als abstrakte Basisklasse für ECDH-Implementierungen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>This constructor is called by classes that derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> class.</source>
          <target state="translated">Dieser Konstruktor wird aufgerufen, durch abgeleitete Klassen die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class is the only implementation that is currently included in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> Klasse ist die einzige Implementierung, die derzeit in enthalten ist das <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>For information about how to create a new implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</ph> method.</source>
          <target state="translated">Informationen über das Erstellen einer neuen Implementierung des Algorithmus Elliptic Curve Diffie-Hellman (ECDH) finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Creates a new instance of an implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Erstellt eine neue Instanz einer Implementierung des ECDH (Elliptic Curve Diffie-Hellman)-Algorithmus.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Erstellt eine neue Instanz der Standardimplementierung des ECDH (Elliptic Curve Diffie-Hellman)-Algorithmus.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create">
          <source>A new instance of the default implementation of this class.</source>
          <target state="translated">Eine neue Instanz der Standardimplementierung dieser Klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>The curve to use to generate a new public/private key-pair.</source>
          <target state="translated">Die Kurve, die für das Generieren eines neuen Paars aus privatem und öffentlichem Schlüssel verwendet wird.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm with a new public/private key-pair generated over the specified curve.</source>
          <target state="translated">Erstellt eine neue Instanz der Standardimplementierung des ECDH-Algorithmus (Elliptic Curve Diffie-Hellman) mit einem neuen Paar aus öffentlichem und privatem Schlüssel, das über die angegebene Kurve generiert wurde.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>A new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Eine neue Instanz der Standardimplementierung des ECDH-Algorithmus (Elliptic Curve Diffie-Hellman).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>curve must validate (that is, it must return true when passed to the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Kurve überprüfen muss (d. h. er "true", bei der Übergabe an zurückgeben muss die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Merkmal-2-Kurven werden unter Windows nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>The parameters  for the elliptic curve cryptography (ECC) algorithm.</source>
          <target state="translated">Die Parameter für den ECC-Algorithmus (Elliptic Curve Cryptography)</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm with the key described by the specified  <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">Erstellt eine neue Instanz der Standardimplementierung des ECDH-Algorithmus (Elliptic Curve Diffie-Hellman) mit dem Schlüssel, der im angegebenen <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Objekt beschrieben wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>A new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Eine neue Instanz der Standardimplementierung des ECDH-Algorithmus (Elliptic Curve Diffie-Hellman).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">`parameters`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`parameters`</ph> Überprüfen müssen (d. h. es muss zurückgegeben werden <ph id="ph2">`true`</ph>) bei der Übergabe an die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Parameters over implicit curves are not supported.</source>
          <target state="translated">Parameter über implizite Kurven werden nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Merkmal-2-Kurven werden unter Windows nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The name of an implementation of the ECDH algorithm.</source>
          <target state="translated">Der Name einer Implementierung des ECDH-Algorithmus.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>Creates a new instance of the specified implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">Erstellt eine neue Instanz der angegebenen Implementierung des ECDH-Algorithmus (Elliptic Curve Diffie-Hellman)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>A new instance of the specified implementation of this class.</source>
          <target state="translated">Eine neue Instanz der angegebenen Implementierung dieser Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If the specified algorithm name does not map to an ECDH implementation, this method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn der angegebene Name des Algorithmus keiner ECDH-Implementierung zugeordnet ist, gibt diese Methode <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If you develop your own implementation of an <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%28System.String%29&gt;</ph> method overload to create a custom <ph id="ph3">`algorithm`</ph> string that specifies your implementation.</source>
          <target state="translated">Wenn Sie Ihre eigene Implementierung der entwickeln eine <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> -Objekt können Sie die <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%28System.String%29&gt;</ph> -methodenüberladung, um das Erstellen eines benutzerdefinierten <ph id="ph3">`algorithm`</ph> Zeichenfolge, die Ihre Implementierung angibt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The <ph id="ph1">`algorithm`</ph> parameter specifies the name of an implementation of the ECDH algorithm.</source>
          <target state="translated">Die <ph id="ph1">`algorithm`</ph> Parameter gibt den Namen der Implementierung des ECDH-Algorithmus.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The following strings all refer to the same implementation, which is the only implementation currently supported in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>:</source>
          <target state="translated">Die folgenden Zeichenfolgen verweisen alle auf dieselbe Implementierung, bei der es sich um die einzige aktuell in <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> unterstützte Implementierung handelt:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDH"</source>
          <target state="translated">"ECDH"</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDiffieHellman"</source>
          <target state="translated">"ECDiffieHellman"</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDiffieHellmanCng"</source>
          <target state="translated">"ECDiffieHellmanCng"</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"System.Security.Cryptography.ECDiffieHellmanCng"</source>
          <target state="translated">"System.Security.Cryptography.ECDiffieHellmanCng"</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>You can also provide the name of a custom ECDH implementation for the <ph id="ph1">`algorithm`</ph> parameter.</source>
          <target state="translated">Sie können auch angeben, den Namen einer benutzerdefinierten ECDH-Implementierung für die <ph id="ph1">`algorithm`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If you do that, the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> object will use it to determine whether an ECDH object can be created.</source>
          <target state="translated">Wenn in diesem Fall wird die <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> Objekt wird verwendet, um zu bestimmen, ob ein ECDH-Objekt erstellt werden kann.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Derives bytes that can be used as a key using a hash function .</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einer Hashfunktion verwendet werden können.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key and hash algorithm's name.</source>
          <target state="translated">Leitet Bytes ab, die mithilfe einer Hashfunktion als Schlüssel verwendet werden können. Der öffentliche Schlüssel einer anderen Partei und der Name des Hashalgorithmus werden übergeben.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</ph> method passing <ph id="ph2">`null`</ph> as the prepend and append values.</source>
          <target state="translated">Diese Überladung ruft die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</ph> Methode übergeben <ph id="ph2">`null`</ph> als die Stellen, und fügt Werte.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren angefügt wird.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">Leitet bei Implementierung in einer abgeleiteten Klasse Bytes ab, die mithilfe einer Hashfunktion als Schlüssel verwendet werden können. Der öffentliche Schlüssel einer anderen Partei, der Name des Hashalgorithmus, ein vorangestellter und ein angefügter Wert werden übergeben.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einem Hash-based Message Authentication Code (HMAC) verwendet werden können.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">Der Schlüssel für den HMAC.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">Leitet Bytes ab, die als Schlüssel mit einem Hash-based Message Authentication Code (HMAC) verwendet werden können.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</ph> method passing <ph id="ph2">`null`</ph> as the prepend and append values.</source>
          <target state="translated">Diese Überladung ruft die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</ph> Methode übergeben <ph id="ph2">`null`</ph> als die Stellen, und fügt Werte.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">Der Hashalgorithmus, der zum Ableiten des Schlüsselmaterials verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">Der Schlüssel für den HMAC.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren vorangestellt wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">Ein Wert, der dem abgeleiteten geheimen Schlüssel vor dem Hashverfahren angefügt wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">Leitet bei Implementierung in eine abgeleitete Klasse Bytes ab, die mit einem Hash-based Message Authentication Code (HMAC) als Schlüssel verwendet werden können.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Derives bytes that can be used as a key, given another party's public key.</source>
          <target state="translated">Leitet aus dem öffentlichen Schlüssel eines anderen Benutzers Bytes ab, die als Schlüssel verwendet werden können.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>For more information about public keys, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> class.</source>
          <target state="translated">Weitere Informationen zu öffentlichen Schlüsseln finden Sie unter der <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">Der öffentliche Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">Die ASCII-codierte PRF-Bezeichnung.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">Der 64-Byte-PRF-Startwert.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">Leitet bei Implementierung in einer abgeleiteten Klasse Bytes ab, die mithilfe eines Transport Layer Security-Pseudo-Random Function-Ableitungsalgorithmus (TLS, PRF) als Schlüssel verwendet werden können.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">Das Schlüsselmaterial aus dem Schlüsselaustausch mit dem öffentlichen Schlüssel der anderen Partei.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn private Parameter angegeben werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>When overridden in a derived class, exports either the public or the public and private key information using the explicit curve form from a working <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> key to an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> structure so that it can be passed to the <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated">Exportiert beim Überschreiben in einer abgeleiteten Klasse Informationen zum öffentlichen oder zum öffentlichen und privaten Schlüssel unter Verwendung der expliziten Kurvenform aus einem verwendeten <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>-Schlüssel in eine <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Struktur, damit sie an die <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph>-Methode übergeben werden können.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>An object that represents the point on the curve for this key, using the explicit curve format.</source>
          <target state="translated">Ein Objekt, das unter Verwendung des expliziten Kurvenformats den Punkt auf der Kurve für diesen Schlüssel darstellt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otehrwise,  <ph id="ph2">&lt;see langword="false" /&gt;</ph> to include public parameters only.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um private Parameter einzuschließen, oder <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um nur die öffentlichen Parameter einzuschließen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>When overridden in a derived class, exports either the public or the public and private key information from a working <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> key to an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> structure so that it can be passed to the <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated">Exportiert beim Überschreiben in einer abgeleiteten Klasse Informationen zum öffentlichen oder zum öffentlichen und privaten Schlüssel aus einem verwendeten <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>-Schlüssel in eine <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>-Struktur, damit sie an die <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph>-Methode übergeben werden können.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>An object that represents the point on the curve for this key.</source>
          <target state="translated">Ein Objekt, das den Punkt auf der Kurve für diesen Schlüssel darstellt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>It can be passed to the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated">Es kann an die <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph>-Methode übergeben werden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>If the curve has a name, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> property contains named curve parameters; otherwise, it will contain explicit parameters.</source>
          <target state="translated">Wenn die Kurve einen Namen besitzt, die <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> Eigenschaft benannte Kurvenzugparameter enthält; andernfalls enthält es explizite Parametern.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate an ephemeral public/private key pair.</source>
          <target state="translated">Die Kurve, die für das Generieren eines kurzlebigen Paars aus privatem und öffentlichem Schlüssel verwendet wird.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>When overridden in a derived class, generates a new ephemeral public/private key pair for the specified curve.</source>
          <target state="translated">Generiert beim Überschreiben in einer abgeleiteten Klasse ein neues kurzlebiges Paar aus privatem und öffentlichem Schlüssel für die angegebene Kurve.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method) and must not be implicit.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> Überprüfen müssen (d. h. es muss zurückgegeben werden <ph id="ph2">`true`</ph>) bei der Übergabe an die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode) und nicht implizit sein.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Merkmal-2-Kurven werden unter Windows nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve's parameters to import.</source>
          <target state="translated">Die zu importierenden Parameter der Kurve.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>When overridden in a derived class, imports the specified parameters for an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> as an ephemeral key into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> object.</source>
          <target state="translated">Importiert beim Überschreiben in einer abgeleiteten Klasse die angegebenen Parameter für eine <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> als einen kurzlebigen Schlüssel in das aktuelle <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">`parameters`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`parameters`</ph> Überprüfen müssen (d. h. es muss zurückgegeben werden <ph id="ph2">`true`</ph>) bei der Übergabe an die <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Parameters over implicit curves are not supported.</source>
          <target state="translated">Parameter über implizite Kurven werden nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Merkmal-2-Kurven werden unter Windows nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> führt keine Validierung durch.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>A derived class must override this method.</source>
          <target state="translated">Eine abgeleitete Klasse muss diese Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm.</source>
          <target state="translated">Ruft den Namen des Algorithmus für den Schlüsselaustausch ab.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">Der Name des Algorithmus für den Schlüsselaustausch.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>The default (non-overridden) implementation of this property returns the string "ECDiffieHellman".</source>
          <target state="translated">Die Standardimplementierung (nicht überschrieben) für diese Eigenschaft gibt die Zeichenfolge "ECDiffieHellman" zurück.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>This property is inherited from the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> base class.</source>
          <target state="translated">Diese Eigenschaft wird geerbt, aus der <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> Basisklasse.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
          <source>Gets the public key that is being used by the current Elliptic Curve Diffie-Hellman (ECDH) instance.</source>
          <target state="translated">Ruft den öffentlichen Schlüssel ab, der von der aktuellen ECDH (Elliptic Curve Diffie-Hellman)-Instanz verwendet wird.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
          <source>The public part of the ECDH key pair that is being used by this <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> instance.</source>
          <target state="translated">Der öffentliche Teil des ECDH-Schlüsselpaares, der von dieser <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>-Instanz verwendet wird.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm.</source>
          <target state="translated">Ruft den Namen des Signaturalgorithmus ab.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Immer <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>This property is inherited from the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> base class.</source>
          <target state="translated">Diese Eigenschaft wird geerbt, aus der <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> Basisklasse.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm is used for key derivation, not digital signature generation.</source>
          <target state="translated">Der Algorithmus Elliptic Curve Diffie-Hellman (ECDH) wird verwendet, für die schlüsselableitung, keine digitale Signatur Generation.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Therefore, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Diese Eigenschaft daher gibt <ph id="ph1">`null`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>