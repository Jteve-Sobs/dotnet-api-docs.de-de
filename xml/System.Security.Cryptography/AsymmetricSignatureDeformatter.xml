<Type Name="AsymmetricSignatureDeformatter" FullName="System.Security.Cryptography.AsymmetricSignatureDeformatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e00f9994ee4810c21e593d1cafa984ab5c42e5b4" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52211688" /></Metadata><TypeSignature Language="C#" Value="public abstract class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSignatureDeformatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSignatureDeformatter abstract" />
  <TypeSignature Language="F#" Value="type AsymmetricSignatureDeformatter = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die abstrakte Basisklasse dar, von der alle Implementierungen asymmetrischer Signaturdeformatierer abgeleitet sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asymmetrischer Signaturdeformatierer Überprüfen der digitalen Signaturen, die erstellt werden, mithilfe von Implementierungen der <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSignatureDeformatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSignatureDeformatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz einer abstrakten Klasse erstellen. Anwendungscode erstellt eine neue Instanz einer abgeleiteten Klasse.  
  
 Verwenden Sie die Implementierungen der <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> und <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> den Schlüssel und Hash-Algorithmus zu festlegen, bevor Sie eine Implementierung von <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="SetHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract void SetHashAlgorithm (string strName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHashAlgorithm(string strName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetHashAlgorithm (strName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetHashAlgorithm(System::String ^ strName);" />
      <MemberSignature Language="F#" Value="abstract member SetHashAlgorithm : string -&gt; unit" Usage="asymmetricSignatureDeformatter.SetHashAlgorithm strName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strName">Der Name des Hashalgorithmus, der zum Überprüfen der Signatur verwendet werden soll.</param>
        <summary>Legt beim Überschreiben in einer abgeleiteten Klasse den Hashalgorithmus fest, der zum Überprüfen der Signatur verwendet werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen einen Hashalgorithmus festlegen, bevor Sie eine Implementierung von <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="abstract member SetKey : System.Security.Cryptography.AsymmetricAlgorithm -&gt; unit" Usage="asymmetricSignatureDeformatter.SetKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Die Instanz einer Implementierung von <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, die den öffentlichen Schlüssel enthält.</param>
        <summary>Legt beim Überschreiben in einer abgeleiteten Klasse den öffentlichen Schlüssel fest, der zum Überprüfen der Signatur verwendet werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen einen Schlüssel festlegen, bevor Sie eine Implementierung von <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifySignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Überprüft die Signatur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : byte[] * byte[] -&gt; bool" Usage="asymmetricSignatureDeformatter.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">Die mit <paramref name="rgbSignature" /> signierten Daten.</param>
        <param name="rgbSignature">Die für <paramref name="rgbHash" /> zu überprüfende Signatur.</param>
        <summary>Überprüft beim Überschreiben in einer abgeleiteten Klasse die Signatur für die angegebenen Daten.</summary>
        <returns><see langword="true" />, wenn <paramref name="rgbSignature" /> der Signatur entspricht, die mit dem angegebenen Hashalgorithmus und Schlüssel für <paramref name="rgbHash" /> berechnet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen einen öffentlichen Schlüssel und ein Hash-Algorithmus angeben, bevor diese Methode aufgerufen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(class System.Security.Cryptography.HashAlgorithm hash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As HashAlgorithm, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(System::Security::Cryptography::HashAlgorithm ^ hash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : System.Security.Cryptography.HashAlgorithm * byte[] -&gt; bool&#xA;override this.VerifySignature : System.Security.Cryptography.HashAlgorithm * byte[] -&gt; bool" Usage="asymmetricSignatureDeformatter.VerifySignature (hash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash">Der zum Überprüfen der Signatur zu verwendende Hashalgorithmus.</param>
        <param name="rgbSignature">Die zu überprüfende Signatur.</param>
        <summary>Überprüft die Signatur aus dem angegebenen Hashwert.</summary>
        <returns><see langword="true" />, wenn die Signatur für den Hash gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird der Hash-Algorithmus vor dem Überprüfen der Signatur des Werts der eingabehash-Algorithmus verwendet werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="hash" />-Parameter ist <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Kryptografische Dienste</related>
      </Docs>
    </Member>
  </Members>
</Type>