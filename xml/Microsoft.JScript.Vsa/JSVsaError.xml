<Type Name="JSVsaError" FullName="Microsoft.JScript.Vsa.JSVsaError">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72f7da81d115781b3b33e83f518c9ec1e753d6ec" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55307163" /></Metadata><TypeSignature Language="C#" Value="public enum JSVsaError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JSVsaError extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Vsa.JSVsaError" />
  <TypeSignature Language="VB.NET" Value="Public Enum JSVsaError" />
  <TypeSignature Language="C++ CLI" Value="public enum class JSVsaError" />
  <TypeSignature Language="F#" Value="type JSVsaError = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7607D148-3AA5-4CC6-AED5-D4DB0ECBD992")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the set of exceptions that can be thrown by a .NET script engine.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AppDomainCannotBeSet">
      <MemberSignature Language="C#" Value="AppDomainCannotBeSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AppDomainCannotBeSet = int32(-2146226176)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainCannotBeSet" />
      <MemberSignature Language="VB.NET" Value="AppDomainCannotBeSet" />
      <MemberSignature Language="C++ CLI" Value="AppDomainCannotBeSet" />
      <MemberSignature Language="F#" Value="AppDomainCannotBeSet = -2146226176" Usage="Microsoft.JScript.Vsa.JSVsaError.AppDomainCannotBeSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226176</MemberValue>
      <Docs>
        <summary>Value: 0x80133000</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die Anwendungsdomäne kann nicht festgelegt werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> Methode oder der <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode, wenn die Versuche fehlschlagen, um die AppDomain-Option auf einem verwalteten Modul, wie z. B. die Visual Basic und JScript-Skript-Engines festzulegen. Verwaltete Skript-Engines unterstützen nicht die Verwendung benutzerdefinierter Anwendungsdomänen. Verwaltete Skript-Engines verwendet immer die Anwendungsdomäne, in der sie ausgeführt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInvalid">
      <MemberSignature Language="C#" Value="AppDomainInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AppDomainInvalid = int32(-2146226175)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AppDomainInvalid" />
      <MemberSignature Language="VB.NET" Value="AppDomainInvalid" />
      <MemberSignature Language="C++ CLI" Value="AppDomainInvalid" />
      <MemberSignature Language="F#" Value="AppDomainInvalid = -2146226175" Usage="Microsoft.JScript.Vsa.JSVsaError.AppDomainInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226175</MemberValue>
      <Docs>
        <summary>Value: 0x80133001</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Anwendungsdomäne ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> Methode oder <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode beim Versuch, einen AppDomain-Verweis festgelegt, der ungültig ist. Zurücksetzen der `AppDomain` Option aus, um einen null-Verweis Aufruf der <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBaseCannotBeSet">
      <MemberSignature Language="C#" Value="ApplicationBaseCannotBeSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ApplicationBaseCannotBeSet = int32(-2146226174)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseCannotBeSet" />
      <MemberSignature Language="VB.NET" Value="ApplicationBaseCannotBeSet" />
      <MemberSignature Language="C++ CLI" Value="ApplicationBaseCannotBeSet" />
      <MemberSignature Language="F#" Value="ApplicationBaseCannotBeSet = -2146226174" Usage="Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseCannotBeSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226174</MemberValue>
      <Docs>
        <summary>Value: 0x80133002</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Anwendungsbasis werden nicht festgelegt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> Methode oder <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode, wenn diese versuchen zum Abrufen oder Festlegen der ApplicationBase-Option auf einem verwalteten Modul, wie z. B. die Visual Basic .NET bzw. JScript .NET. Der Host muss Festlegen der `ApplicationBase` Option in der Anwendungsdomäne, in dem sie die Skript-Engine erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBaseInvalid">
      <MemberSignature Language="C#" Value="ApplicationBaseInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ApplicationBaseInvalid = int32(-2146226173)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseInvalid" />
      <MemberSignature Language="VB.NET" Value="ApplicationBaseInvalid" />
      <MemberSignature Language="C++ CLI" Value="ApplicationBaseInvalid" />
      <MemberSignature Language="F#" Value="ApplicationBaseInvalid = -2146226173" Usage="Microsoft.JScript.Vsa.JSVsaError.ApplicationBaseInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226173</MemberValue>
      <Docs>
        <summary>Value: 0x80133003</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das Basisverzeichnis für die angegebene Anwendung ist ungültig.  
  
 Wird ausgelöst, indem Sie die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> Methode oder <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode, wenn die Versuche zum Abrufen oder Festlegen der ApplicationBase auf ein Modul, und von option der <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> Methode, wenn als Basisverzeichnis der Anwendung angegebene Verzeichnis nicht um ein gültiges Verzeichnis ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyExpected">
      <MemberSignature Language="C#" Value="AssemblyExpected" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AssemblyExpected = int32(-2146226172)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyExpected" />
      <MemberSignature Language="VB.NET" Value="AssemblyExpected" />
      <MemberSignature Language="C++ CLI" Value="AssemblyExpected" />
      <MemberSignature Language="F#" Value="AssemblyExpected = -2146226172" Usage="Microsoft.JScript.Vsa.JSVsaError.AssemblyExpected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226172</MemberValue>
      <Docs>
        <summary>Value: 0x80133004</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem> verweist auf keine gültige Assembly.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> Methode, wenn eine von der `IVsaReferenceItem` in enthaltenen Objekte der <xref:Microsoft.JScript.Vsa.IJSVsaItems> Sammlung stellt keine gültige Assembly dar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyNameInvalid">
      <MemberSignature Language="C#" Value="AssemblyNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError AssemblyNameInvalid = int32(-2146226171)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.AssemblyNameInvalid" />
      <MemberSignature Language="VB.NET" Value="AssemblyNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="AssemblyNameInvalid" />
      <MemberSignature Language="F#" Value="AssemblyNameInvalid = -2146226171" Usage="Microsoft.JScript.Vsa.JSVsaError.AssemblyNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226171</MemberValue>
      <Docs>
        <summary>Value: 0x80133005</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Assemblyname ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem.AssemblyName*> beim Namen einer Assembly, die nicht gültig ist die Eigenschaft wird angegeben, für eine <xref:Microsoft.JScript.Vsa.IJSVsaReferenceItem> Objekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BadAssembly">
      <MemberSignature Language="C#" Value="BadAssembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError BadAssembly = int32(-2146226170)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.BadAssembly" />
      <MemberSignature Language="VB.NET" Value="BadAssembly" />
      <MemberSignature Language="C++ CLI" Value="BadAssembly" />
      <MemberSignature Language="F#" Value="BadAssembly = -2146226170" Usage="Microsoft.JScript.Vsa.JSVsaError.BadAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226170</MemberValue>
      <Docs>
        <summary>Value: 0x80133006</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Assemblyformat ist ungültig.  
  
 Wird ausgelöst, wenn die Assembly bereitgestellt, um das Modul nicht gültig ist. Diese Ausnahme tritt in der Regel auf, wenn ein Modul versucht, ausführen, oder verwenden die Assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserNotExist">
      <MemberSignature Language="C#" Value="BrowserNotExist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError BrowserNotExist = int32(-2146226115)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.BrowserNotExist" />
      <MemberSignature Language="VB.NET" Value="BrowserNotExist" />
      <MemberSignature Language="C++ CLI" Value="BrowserNotExist" />
      <MemberSignature Language="F#" Value="BrowserNotExist = -2146226115" Usage="Microsoft.JScript.Vsa.JSVsaError.BrowserNotExist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226115</MemberValue>
      <Docs>
        <summary>Value: 0x8013303D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Browser wurde nicht gefunden.  
  
 Durch die aDTEngine.AttachDebugger-Methode ausgelöst, wenn wurde eine Remotedebugsitzung initiiert und versucht, den remote-Browser zu starten, aber ein Browser nicht verfügbar ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedAssemblyInvalid">
      <MemberSignature Language="C#" Value="CachedAssemblyInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CachedAssemblyInvalid = int32(-2146226169)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CachedAssemblyInvalid" />
      <MemberSignature Language="VB.NET" Value="CachedAssemblyInvalid" />
      <MemberSignature Language="C++ CLI" Value="CachedAssemblyInvalid" />
      <MemberSignature Language="F#" Value="CachedAssemblyInvalid = -2146226169" Usage="Microsoft.JScript.Vsa.JSVsaError.CachedAssemblyInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226169</MemberValue>
      <Docs>
        <summary>Value: 0x80133007</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die zwischengespeicherte Assembly ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> Methode, wenn er aufgerufen wird und versucht, eine zuvor zwischengespeicherte Assembly zu verwenden, jedoch die Assembly ist ungültig, z. B. kann ein null-Verweis (`Nothing` in Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackUnexpected">
      <MemberSignature Language="C#" Value="CallbackUnexpected" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CallbackUnexpected = int32(-2146226168)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CallbackUnexpected" />
      <MemberSignature Language="VB.NET" Value="CallbackUnexpected" />
      <MemberSignature Language="C++ CLI" Value="CallbackUnexpected" />
      <MemberSignature Language="F#" Value="CallbackUnexpected = -2146226168" Usage="Microsoft.JScript.Vsa.JSVsaError.CallbackUnexpected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226168</MemberValue>
      <Docs>
        <summary>Value: 0x80133008</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Rückruf darf nicht zu diesem Zeitpunkt nicht vorgenommen werden.  
  
 Wird ausgelöst, anhand verschiedener Methoden, wenn eine von der <xref:Microsoft.JScript.Vsa.IJSVsaSite> oder <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite> Rückrufmethoden zu einem unerwarteten Zeitpunkt aufgerufen wird. Z. B. die <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> Methode sollte nur aufgerufen werden, die von einem Modul infolge eines Aufrufs für den <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> Methode. Wenn sie zu einem anderen Zeitpunkt aufgerufen wird, wird eine CallbackUnexpected-Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotAttachToWebServer">
      <MemberSignature Language="C#" Value="CannotAttachToWebServer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CannotAttachToWebServer = int32(-2146226100)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CannotAttachToWebServer" />
      <MemberSignature Language="VB.NET" Value="CannotAttachToWebServer" />
      <MemberSignature Language="C++ CLI" Value="CannotAttachToWebServer" />
      <MemberSignature Language="F#" Value="CannotAttachToWebServer = -2146226100" Usage="Microsoft.JScript.Vsa.JSVsaError.CannotAttachToWebServer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226100</MemberValue>
      <Docs>
        <summary>Value: 0x8013304C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: An den angegebenen Webserver kann nicht angefügt werden.  
  
 Ausgelöst von der Methode aDTEngine.AttachDebugger beim Starten einer Debugsitzung für serverseitige und VSA den Debugger an den angegebenen Webserver angefügt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOMNotAvailable">
      <MemberSignature Language="C#" Value="CodeDOMNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CodeDOMNotAvailable = int32(-2146226167)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CodeDOMNotAvailable" />
      <MemberSignature Language="VB.NET" Value="CodeDOMNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="CodeDOMNotAvailable" />
      <MemberSignature Language="F#" Value="CodeDOMNotAvailable = -2146226167" Usage="Microsoft.JScript.Vsa.JSVsaError.CodeDOMNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226167</MemberValue>
      <Docs>
        <summary>Value: 0x80133009</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Eine gültige Code Document Object Model (CodeDOM) ist nicht verfügbar.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.CodeDOM*> Eigenschaft, wenn die Eigenschaft nicht zum Lesen verfügbar ist. Entweder wird die Eigenschaft die Engine nicht unterstützt, oder es muss einen expliziten Aufruf an die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> Methode, um die (DOKUMENTOBJEKTMODELL) zu generieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompiledStateNotFound">
      <MemberSignature Language="C#" Value="CompiledStateNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError CompiledStateNotFound = int32(-2146226166)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.CompiledStateNotFound" />
      <MemberSignature Language="VB.NET" Value="CompiledStateNotFound" />
      <MemberSignature Language="C++ CLI" Value="CompiledStateNotFound" />
      <MemberSignature Language="F#" Value="CompiledStateNotFound = -2146226166" Usage="Microsoft.JScript.Vsa.JSVsaError.CompiledStateNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226166</MemberValue>
      <Docs>
        <summary>Value: 0x8013300A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene kompilierte Zustand konnte nicht geladen werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> Methode, wenn sie aufgerufen wird, für ein Modul, das nicht kompilierten Zustand verfügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebuggeeNotStarted">
      <MemberSignature Language="C#" Value="DebuggeeNotStarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError DebuggeeNotStarted = int32(-2146226114)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.DebuggeeNotStarted" />
      <MemberSignature Language="VB.NET" Value="DebuggeeNotStarted" />
      <MemberSignature Language="C++ CLI" Value="DebuggeeNotStarted" />
      <MemberSignature Language="F#" Value="DebuggeeNotStarted = -2146226114" Usage="Microsoft.JScript.Vsa.JSVsaError.DebuggeeNotStarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226114</MemberValue>
      <Docs>
        <summary>Value: 0x8013303E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Debuggen Sie die Zielanwendung nicht gestartet.  
  
 Von der Methode aDTEngine.AttachDebugger ausgelöst wird, wenn ein Windows-Client, die Debugsitzung initiiert wird, aber die `AttachDebugger` Methode kann sich nicht um die Anwendung zu starten, die mit der TargetEXE-Option angegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugInfoNotSupported">
      <MemberSignature Language="C#" Value="DebugInfoNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError DebugInfoNotSupported = int32(-2146226165)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.DebugInfoNotSupported" />
      <MemberSignature Language="VB.NET" Value="DebugInfoNotSupported" />
      <MemberSignature Language="C++ CLI" Value="DebugInfoNotSupported" />
      <MemberSignature Language="F#" Value="DebugInfoNotSupported = -2146226165" Usage="Microsoft.JScript.Vsa.JSVsaError.DebugInfoNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226165</MemberValue>
      <Docs>
        <summary>Value: 0x8013300B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die Verwendung von Informationen zum Debuggen wird nicht unterstützt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GenerateDebugInfo*> Eigenschaft, wenn sie auf "true", aber die Engine festgelegt ist, unterstützt nicht die Generierung der Debuginformationen. Die Kompilierung wird fortgesetzt, aber das Modul kompiliert den Code ohne Debuginformationen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementNameInvalid">
      <MemberSignature Language="C#" Value="ElementNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ElementNameInvalid = int32(-2146226164)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ElementNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ElementNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ElementNameInvalid" />
      <MemberSignature Language="F#" Value="ElementNameInvalid = -2146226164" Usage="Microsoft.JScript.Vsa.JSVsaError.ElementNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226164</MemberValue>
      <Docs>
        <summary>Value: 0x8013300C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der Elementname ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement*> Methoden ein, wenn eine aufgerufen wird mit einem Namensparameter, die nicht gültig ist, z. B. eine, die Zeichen enthält, die nicht gültig sind. Beachten Sie, dass der Host nicht ElementNameInvalid beim eine Ausnahme der Namensparameter ein null-Zeiger ist ausgelöst muss als null-Zeiger auf ein gültiges Argument, das zum Anfordern von Daten auf Engine-Ebene ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementNotFound">
      <MemberSignature Language="C#" Value="ElementNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ElementNotFound = int32(-2146226163)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ElementNotFound" />
      <MemberSignature Language="VB.NET" Value="ElementNotFound" />
      <MemberSignature Language="C++ CLI" Value="ElementNotFound" />
      <MemberSignature Language="F#" Value="ElementNotFound = -2146226163" Usage="Microsoft.JScript.Vsa.JSVsaError.ElementNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226163</MemberValue>
      <Docs>
        <summary>Value: 0x8013300D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das Element wurde nicht gefunden.  
  
 Ausgelöst durch <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> Methode, wenn sie mit einem Namensparameter, die nicht gültig ist, d. h. eine, die aufgerufen wird, entspricht nicht auf eine zuvor gespeicherte Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineBusy">
      <MemberSignature Language="C#" Value="EngineBusy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineBusy = int32(-2146226162)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineBusy" />
      <MemberSignature Language="VB.NET" Value="EngineBusy" />
      <MemberSignature Language="C++ CLI" Value="EngineBusy" />
      <MemberSignature Language="F#" Value="EngineBusy = -2146226162" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineBusy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226162</MemberValue>
      <Docs>
        <summary>Value: 0x8013300E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: -Engine ist die Verarbeitung eines anderen Threads ausgelastet.  
  
 Von allen Mitgliedern ausgelöst, wenn ein Modul derzeit eine Anforderung von einem anderen Thread verarbeitet wird. Standardmäßig sollte eine Skript-Engine für .NET nur von einem Thread zu einem Zeitpunkt aufgerufen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineCannotClose">
      <MemberSignature Language="C#" Value="EngineCannotClose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineCannotClose = int32(-2146226161)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotClose" />
      <MemberSignature Language="VB.NET" Value="EngineCannotClose" />
      <MemberSignature Language="C++ CLI" Value="EngineCannotClose" />
      <MemberSignature Language="F#" Value="EngineCannotClose = -2146226161" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineCannotClose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226161</MemberValue>
      <Docs>
        <summary>Value: 0x8013300F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul kann nicht geschlossen werden.  
  
 Ausgelöst durch <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Close*> Methode beim Versuch dieser Methode wird aufgerufen, aber die. NET-Skript-Engine werden nicht ordnungsgemäß geschlossen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineCannotReset">
      <MemberSignature Language="C#" Value="EngineCannotReset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineCannotReset = int32(-2146226160)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineCannotReset" />
      <MemberSignature Language="VB.NET" Value="EngineCannotReset" />
      <MemberSignature Language="C++ CLI" Value="EngineCannotReset" />
      <MemberSignature Language="F#" Value="EngineCannotReset = -2146226160" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineCannotReset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226160</MemberValue>
      <Docs>
        <summary>Value: 0x80133010</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul kann nicht zurückgesetzt werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> Methode, wenn diese aufgerufen wird, aber die .NET Skript-Engine nicht zurückgesetzt werden konnte oder die Ereignisse konnte nicht entfernt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineClosed">
      <MemberSignature Language="C#" Value="EngineClosed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineClosed = int32(-2146226159)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineClosed" />
      <MemberSignature Language="VB.NET" Value="EngineClosed" />
      <MemberSignature Language="C++ CLI" Value="EngineClosed" />
      <MemberSignature Language="F#" Value="EngineClosed = -2146226159" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineClosed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226159</MemberValue>
      <Docs>
        <summary>Value: 0x80133011</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Modul wurde geschlossen.  
  
 In den meisten Fällen ausgelöst werden, nachdem die Skript-Engine von .NET mithilfe eines Aufrufs geschlossen wurde die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Close*> Methode. Sobald die Close-Methode aufgerufen wurde, kann das Modul nicht mehr verwendet werden, und eine neue Skript-Engine muss zum Durchführen von Aufgaben erstellt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineEmpty">
      <MemberSignature Language="C#" Value="EngineEmpty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineEmpty = int32(-2146226159)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineEmpty" />
      <MemberSignature Language="VB.NET" Value="EngineEmpty" />
      <MemberSignature Language="C++ CLI" Value="EngineEmpty" />
      <MemberSignature Language="F#" Value="EngineEmpty = -2146226159" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226159</MemberValue>
      <Docs>
        <summary>Value: 0x80133012</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul verfügt über keine Quellelemente zu kompilieren.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> Methode, wenn sie aufgerufen wird, aber es keine Elemente in sind der <xref:Microsoft.JScript.Vsa.IJSVsaItems> Auflistung zum Kompilieren, d. h. die <xref:Microsoft.JScript.Vsa.IJSVsaItems.Count*> Eigenschaft = 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineInitialized">
      <MemberSignature Language="C#" Value="EngineInitialized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineInitialized = int32(-2146226157)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineInitialized" />
      <MemberSignature Language="VB.NET" Value="EngineInitialized" />
      <MemberSignature Language="C++ CLI" Value="EngineInitialized" />
      <MemberSignature Language="F#" Value="EngineInitialized = -2146226157" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineInitialized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226157</MemberValue>
      <Docs>
        <summary>Value: 0x80133013</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Modul wurde bereits initialisiert wurde.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> Methoden ein, wenn diese Methoden werden aufgerufen, aber die Skript-Engine für .NET wurde bereits initialisiert. Wenn der Host will laden oder Initialisieren einer neuen Skript-Engine, muss die entsprechenden Methoden zunächst auf kommunaler wird aufgerufen, nach dem Festlegen der < xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*
> und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameInUse">
      <MemberSignature Language="C#" Value="EngineNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameInUse = int32(-2146226156)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInUse" />
      <MemberSignature Language="VB.NET" Value="EngineNameInUse" />
      <MemberSignature Language="C++ CLI" Value="EngineNameInUse" />
      <MemberSignature Language="F#" Value="EngineNameInUse = -2146226156" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226156</MemberValue>
      <Docs>
        <summary>Value: 0x80133014</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Engine-Name wird bereits von einem anderen Modul.  
  
 Ausgelöst durch <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> Eigenschaft beim Versuch, diese auf dem gleichen Namen wie festzulegen, die von einer vorhandenen .NET Skript innerhalb des Hosts. Während die Name-Eigenschaft nicht global eindeutig sein muss, es identisch mit dem Namen einer Skript-Engine nicht, die derzeit gehostet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameInvalid">
      <MemberSignature Language="C#" Value="EngineNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameInvalid = int32(-2146226113)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameInvalid" />
      <MemberSignature Language="VB.NET" Value="EngineNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="EngineNameInvalid" />
      <MemberSignature Language="F#" Value="EngineNameInvalid = -2146226113" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226113</MemberValue>
      <Docs>
        <summary>Value: 0x8013303F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Engine-Name ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> Eigenschaft, wenn der angegebene Namen bereits vorhanden ist von einem anderen Modul verwenden. VSA muss-Engine während der Entwurfszeit-Namen eindeutig sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNameNotSet">
      <MemberSignature Language="C#" Value="EngineNameNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNameNotSet = int32(-2146226099)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNameNotSet" />
      <MemberSignature Language="VB.NET" Value="EngineNameNotSet" />
      <MemberSignature Language="C++ CLI" Value="EngineNameNotSet" />
      <MemberSignature Language="F#" Value="EngineNameNotSet = -2146226099" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNameNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226099</MemberValue>
      <Docs>
        <summary>Value: 0x8013303F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Engine-Name ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> Eigenschaft, wenn der angegebene Namen bereits vorhanden ist von einem anderen Modul verwenden. VSA muss-Engine während der Entwurfszeit-Namen eindeutig sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotCompiled">
      <MemberSignature Language="C#" Value="EngineNotCompiled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotCompiled = int32(-2146226155)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotCompiled" />
      <MemberSignature Language="VB.NET" Value="EngineNotCompiled" />
      <MemberSignature Language="C++ CLI" Value="EngineNotCompiled" />
      <MemberSignature Language="F#" Value="EngineNotCompiled = -2146226155" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNotCompiled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226155</MemberValue>
      <Docs>
        <summary>Value: 0x80133015</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul wird nicht kompiliert.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState*> Methoden, wenn es keinen kompilierter Zustand auszuführen oder zu speichern. Das Skriptmodul .NET muss kompilieren Sie den Code durch einen Aufruf der <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> -Methode, oder die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> Methode muss aufgerufen werden, bevor die Skript-Engine ausgeführt oder gespeichert werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotExist">
      <MemberSignature Language="C#" Value="EngineNotExist" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotExist = int32(-2146226112)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotExist" />
      <MemberSignature Language="VB.NET" Value="EngineNotExist" />
      <MemberSignature Language="C++ CLI" Value="EngineNotExist" />
      <MemberSignature Language="F#" Value="EngineNotExist = -2146226112" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNotExist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226112</MemberValue>
      <Docs>
        <summary>Value: 0x80133040</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Engine ist nicht vorhanden.  
  
 Wird ausgelöst, durch die Eigenschaft aIDE.ExtensibilityObject in Fällen, wenn es sind keine gültigen Module aus dem das Erweiterbarkeitsobjekt abgerufen werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotInitialized">
      <MemberSignature Language="C#" Value="EngineNotInitialized" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotInitialized = int32(-2146226154)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotInitialized" />
      <MemberSignature Language="VB.NET" Value="EngineNotInitialized" />
      <MemberSignature Language="C++ CLI" Value="EngineNotInitialized" />
      <MemberSignature Language="F#" Value="EngineNotInitialized = -2146226154" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNotInitialized" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226154</MemberValue>
      <Docs>
        <summary>Value: 0x80133016</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul wurde nicht initialisiert.  
  
 Ausgelöst durch mehrere Elemente auf, wenn es sich bei die Skript-Engine für .NET nicht ordnungsgemäß initialisiert wurde, und der Host versucht, Zugriff auf eine Eigenschaft oder Methode, die die Skript-Engine initialisiert werden muss.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineNotRunning">
      <MemberSignature Language="C#" Value="EngineNotRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineNotRunning = int32(-2146226153)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineNotRunning" />
      <MemberSignature Language="VB.NET" Value="EngineNotRunning" />
      <MemberSignature Language="C++ CLI" Value="EngineNotRunning" />
      <MemberSignature Language="F#" Value="EngineNotRunning = -2146226153" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineNotRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226153</MemberValue>
      <Docs>
        <summary>Value: 0x80133017</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Modul muss ausgeführt werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Reset*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Assembly*> Eigenschaft, wenn eine aufgerufen wird und die angegebene .NET Skript-Engine wird nicht ausgeführt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineRunning">
      <MemberSignature Language="C#" Value="EngineRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EngineRunning = int32(-2146226152)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EngineRunning" />
      <MemberSignature Language="VB.NET" Value="EngineRunning" />
      <MemberSignature Language="C++ CLI" Value="EngineRunning" />
      <MemberSignature Language="F#" Value="EngineRunning = -2146226152" Usage="Microsoft.JScript.Vsa.JSVsaError.EngineRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226152</MemberValue>
      <Docs>
        <summary>Value: 0x80133018</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: -Engine ausgeführt wird.  
  
 Von mehreren Membern ausgelöst, wenn das Skriptmodul .NET ausgeführt wird, und der Host versucht, einen Vorgang auszuführen, der nicht zulässig ist, während die Skript-Engine ausgeführt wird. Beispielsweise möchten, erstellen Sie einen neuen Code, der mit der <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> Methode wird diese Ausnahme erzeugt, wenn das Modul ausgeführt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceInvalid">
      <MemberSignature Language="C#" Value="EventSourceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceInvalid = int32(-2146226151)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceInvalid" />
      <MemberSignature Language="F#" Value="EventSourceInvalid = -2146226151" Usage="Microsoft.JScript.Vsa.JSVsaError.EventSourceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226151</MemberValue>
      <Docs>
        <summary>Value: 0x80133019</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Ereignisquelle ist nicht vorhanden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetEventSourceInstance*> Methode auf, wenn es sich um einen Parameter namens oder Kombination von Parametern, die nicht gültig ist. Entweder die `itemName` Parameter verweist auf ein Element, das der Host nicht die-Engine hinzugefügt haben oder die `eventSourceName` Parameter verweist auf eine Ereignisquelle, die nicht für das angegebene Element hinzugefügt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNameInUse">
      <MemberSignature Language="C#" Value="EventSourceNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNameInUse = int32(-2146226150)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInUse" />
      <MemberSignature Language="VB.NET" Value="EventSourceNameInUse" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNameInUse" />
      <MemberSignature Language="F#" Value="EventSourceNameInUse = -2146226150" Usage="Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226150</MemberValue>
      <Docs>
        <summary>Value: 0x8013301A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der Name der angegebenen Ereignisquelle wird bereits verwendet.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> Methode, wenn sie mit aufgerufen wird ein `eventSourceName` Parameter, der zuvor als Name für eine Ereignisquelle verwendet wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNameInvalid">
      <MemberSignature Language="C#" Value="EventSourceNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNameInvalid = int32(-2146226149)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNameInvalid" />
      <MemberSignature Language="F#" Value="EventSourceNameInvalid = -2146226149" Usage="Microsoft.JScript.Vsa.JSVsaError.EventSourceNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226149</MemberValue>
      <Docs>
        <summary>Value: 0x8013301B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der Name der angegebenen Ereignisquelle ist ungültig.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource*> Methoden ein, wenn eine aufgerufen wird, mit einer `eventSourceName` Parameter, der kein gültiger Bezeichner ist. Hosts können bestimmen, ob ein Bezeichner gültig ist, durch den ersten Aufruf der <xref:Microsoft.JScript.Vsa.IJSVsaEngine> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceNotFound">
      <MemberSignature Language="C#" Value="EventSourceNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceNotFound = int32(-2146226148)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceNotFound" />
      <MemberSignature Language="VB.NET" Value="EventSourceNotFound" />
      <MemberSignature Language="C++ CLI" Value="EventSourceNotFound" />
      <MemberSignature Language="F#" Value="EventSourceNotFound = -2146226148" Usage="Microsoft.JScript.Vsa.JSVsaError.EventSourceNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226148</MemberValue>
      <Docs>
        <summary>Value: 0x8013301C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Ereignisquelle, die nicht gefunden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.RemoveEventSource*> Methode, wenn sie mit aufgerufen wird ein `eventNameType` -Parameter, der nicht bereits verwenden, als Ereignisquelle in das Codeelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceTypeInvalid">
      <MemberSignature Language="C#" Value="EventSourceTypeInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError EventSourceTypeInvalid = int32(-2146226147)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.EventSourceTypeInvalid" />
      <MemberSignature Language="VB.NET" Value="EventSourceTypeInvalid" />
      <MemberSignature Language="C++ CLI" Value="EventSourceTypeInvalid" />
      <MemberSignature Language="F#" Value="EventSourceTypeInvalid = -2146226147" Usage="Microsoft.JScript.Vsa.JSVsaError.EventSourceTypeInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226147</MemberValue>
      <Docs>
        <summary>Value: 0x8013301D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Quelle Ereignistyp ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaCodeItem.AddEventSource*> Methode, wenn sie mit aufgerufen wird ein `eventSourceType` Parameter, der kein gültiger Typ ist. Beachten Sie, dass dies nicht "true" für die Visual Basic-Skript-Engine, die eine Kompilierung-Ausnahme in diesem Fall stattdessen meldet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFormatUnsupported">
      <MemberSignature Language="C#" Value="FileFormatUnsupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError FileFormatUnsupported = int32(-2146226111)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.FileFormatUnsupported" />
      <MemberSignature Language="VB.NET" Value="FileFormatUnsupported" />
      <MemberSignature Language="C++ CLI" Value="FileFormatUnsupported" />
      <MemberSignature Language="F#" Value="FileFormatUnsupported = -2146226111" Usage="Microsoft.JScript.Vsa.JSVsaError.FileFormatUnsupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226111</MemberValue>
      <Docs>
        <summary>Value: 0x80133041</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Dateiformat wird nicht unterstützt.  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileTypeUnknown">
      <MemberSignature Language="C#" Value="FileTypeUnknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError FileTypeUnknown = int32(-2146226110)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.FileTypeUnknown" />
      <MemberSignature Language="VB.NET" Value="FileTypeUnknown" />
      <MemberSignature Language="C++ CLI" Value="FileTypeUnknown" />
      <MemberSignature Language="F#" Value="FileTypeUnknown = -2146226110" Usage="Microsoft.JScript.Vsa.JSVsaError.FileTypeUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226110</MemberValue>
      <Docs>
        <summary>Value: 0x80133042</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Datei hat unbekannten Typ.  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledStateFailed">
      <MemberSignature Language="C#" Value="GetCompiledStateFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GetCompiledStateFailed = int32(-2146226146)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GetCompiledStateFailed" />
      <MemberSignature Language="VB.NET" Value="GetCompiledStateFailed" />
      <MemberSignature Language="C++ CLI" Value="GetCompiledStateFailed" />
      <MemberSignature Language="F#" Value="GetCompiledStateFailed = -2146226146" Usage="Microsoft.JScript.Vsa.JSVsaError.GetCompiledStateFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226146</MemberValue>
      <Docs>
        <summary>Value: 0x8013301E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene kompilierte Zustand konnte nicht geladen werden.  
  
 Wird ausgelöst, indem die <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetCompiledState*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> Methoden bei der `GetCompiledState` Methode schlägt fehl. Die Run-Methode an den Aufrufer zurückgegeben. die `GetCompiledStateFailed` von zurückgegebenen Ausnahme der `GetCompiledState` Methode. Die `Run` Methode kann auch die GetCompiledStateFailed-Ausnahme generiert, wenn es sich bei der Assemblycache eine Ausnahme auslöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalInstanceInvalid">
      <MemberSignature Language="C#" Value="GlobalInstanceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GlobalInstanceInvalid = int32(-2146226145)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceInvalid" />
      <MemberSignature Language="VB.NET" Value="GlobalInstanceInvalid" />
      <MemberSignature Language="C++ CLI" Value="GlobalInstanceInvalid" />
      <MemberSignature Language="F#" Value="GlobalInstanceInvalid = -2146226145" Usage="Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226145</MemberValue>
      <Docs>
        <summary>Value: 0x8013301F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene globale Instanz ist nicht vorhanden.  
  
 Ausgelöst durch <xref:Microsoft.JScript.Vsa.IJSVsaSite.GetGlobalInstance*> Methode, wenn sie einen ungültigen Parameter, d. h. eine aufgerufen wird, die nicht mit hinzugefügt wurde die <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalInstanceTypeInvalid">
      <MemberSignature Language="C#" Value="GlobalInstanceTypeInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError GlobalInstanceTypeInvalid = int32(-2146226144)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceTypeInvalid" />
      <MemberSignature Language="VB.NET" Value="GlobalInstanceTypeInvalid" />
      <MemberSignature Language="C++ CLI" Value="GlobalInstanceTypeInvalid" />
      <MemberSignature Language="F#" Value="GlobalInstanceTypeInvalid = -2146226144" Usage="Microsoft.JScript.Vsa.JSVsaError.GlobalInstanceTypeInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226144</MemberValue>
      <Docs>
        <summary>Value: 0x80133020</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Globale Instanztyp ist ungültig.  
  
 Wird ausgelöst, wenn die `TypeString` Eigenschaft eine <xref:Microsoft.JScript.Vsa.IJSVsaGlobalItem> -Objekt ist ungültig.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCompilerError">
      <MemberSignature Language="C#" Value="InternalCompilerError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError InternalCompilerError = int32(-2146226143)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.InternalCompilerError" />
      <MemberSignature Language="VB.NET" Value="InternalCompilerError" />
      <MemberSignature Language="C++ CLI" Value="InternalCompilerError" />
      <MemberSignature Language="F#" Value="InternalCompilerError = -2146226143" Usage="Microsoft.JScript.Vsa.JSVsaError.InternalCompilerError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226143</MemberValue>
      <Docs>
        <summary>Value: 0x80133021</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Eine interne Compilerfehler-Ausnahme ist aufgetreten.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> Methode, wenn er aufgerufen wird und eine unerwartete Ausnahme, innerhalb des Compilers auftritt. Diese Ausnahme wird nicht ausgelöst, für die Kompilierungsfehler, die an den Host mithilfe von signalisiert werden die <xref:Microsoft.JScript.Vsa.IJSVsaSite.OnCompilerError*> -Methode, aber für Ausnahmen, die im Compiler selbst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCannotBeRemoved">
      <MemberSignature Language="C#" Value="ItemCannotBeRemoved" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemCannotBeRemoved = int32(-2146226142)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRemoved" />
      <MemberSignature Language="VB.NET" Value="ItemCannotBeRemoved" />
      <MemberSignature Language="C++ CLI" Value="ItemCannotBeRemoved" />
      <MemberSignature Language="F#" Value="ItemCannotBeRemoved = -2146226142" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRemoved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226142</MemberValue>
      <Docs>
        <summary>Value: 0x80133022</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Element kann nicht entfernt werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> und <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> Methoden, bei dem Versuch, ein Element zu entfernen, die nicht entfernt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCannotBeRenamed">
      <MemberSignature Language="C#" Value="ItemCannotBeRenamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemCannotBeRenamed = int32(-2146226109)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRenamed" />
      <MemberSignature Language="VB.NET" Value="ItemCannotBeRenamed" />
      <MemberSignature Language="C++ CLI" Value="ItemCannotBeRenamed" />
      <MemberSignature Language="F#" Value="ItemCannotBeRenamed = -2146226109" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemCannotBeRenamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226109</MemberValue>
      <Docs>
        <summary>Value: 0x80133043</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das Element kann nicht umbenannt werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItem.Name*> Eigenschaft in Fällen, in denen es wird versucht, ein Element umzubenennen, die nicht umbenannt werden können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemFlagNotSupported">
      <MemberSignature Language="C#" Value="ItemFlagNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemFlagNotSupported = int32(-2146226141)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemFlagNotSupported" />
      <MemberSignature Language="VB.NET" Value="ItemFlagNotSupported" />
      <MemberSignature Language="C++ CLI" Value="ItemFlagNotSupported" />
      <MemberSignature Language="F#" Value="ItemFlagNotSupported = -2146226141" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemFlagNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226141</MemberValue>
      <Docs>
        <summary>Value: 0x80133023</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Flag wird nicht unterstützt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> Methode, wenn der Aufruf gibt ein Flag, das nicht gültig ist, oder ein Flag, das vom Host nicht unterstützt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNameInUse">
      <MemberSignature Language="C#" Value="ItemNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNameInUse = int32(-2146226140)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInUse" />
      <MemberSignature Language="VB.NET" Value="ItemNameInUse" />
      <MemberSignature Language="C++ CLI" Value="ItemNameInUse" />
      <MemberSignature Language="F#" Value="ItemNameInUse = -2146226140" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226140</MemberValue>
      <Docs>
        <summary>Value: 0x80133024</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Name des Elements wird bereits verwendet.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> Methode und die <xref:Microsoft.JScript.Vsa.IJSVsaItem.Name*> Eigenschaft, wenn ein Aufruf von der `CreateItem` Methode erfolgt mit einem Parameter, der sich bereits in Gebrauch, oder wenn ein vorhandenes Element aufweist, seine `Name` -Eigenschaft auf einen Namen, der bereits verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNameInvalid">
      <MemberSignature Language="C#" Value="ItemNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNameInvalid = int32(-2146226139)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ItemNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ItemNameInvalid" />
      <MemberSignature Language="F#" Value="ItemNameInvalid = -2146226139" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226139</MemberValue>
      <Docs>
        <summary>Value: 0x80133025</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Elementname ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> Eigenschaft, wenn der Name eines Elements nicht gültig ist. Der Name eines Elements kann festgelegt werden entweder beim Aufrufen der `CreateItem` -Methode, oder beim Festlegen der `Name` Eigenschaft. Verwenden der <xref:Microsoft.JScript.Vsa.IJSVsaEngine> Methode, um zu bestimmen, ob ein Bezeichner für die Engine gültig ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemNotFound">
      <MemberSignature Language="C#" Value="ItemNotFound" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemNotFound = int32(-2146226138)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemNotFound" />
      <MemberSignature Language="VB.NET" Value="ItemNotFound" />
      <MemberSignature Language="C++ CLI" Value="ItemNotFound" />
      <MemberSignature Language="F#" Value="ItemNotFound = -2146226138" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226138</MemberValue>
      <Docs>
        <summary>Value: 0x80133026</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Element in der Auflistung nicht gefunden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> -Eigenschaft, <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaItems.Item*> -Eigenschaft, und <xref:Microsoft.JScript.Vsa.IJSVsaItems.Remove*> Methode, wenn die aItems.Item-Eigenschaft indiziert ist mit einem Parameter, der ungültig ist. Wenn Sie die zeichenfolgenüberladung verwenden zu können, muss der Name-Parameter der Name eines Artikels bereits in der Auflistung identisch sein; Bei Verwendung der Int-Überladung, die `index` Parameter muss zwischen 0 und der Wert des der <xref:Microsoft.JScript.Vsa.IJSVsaItems.Count*> Eigenschaft-1 (einschließlich).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeNotSupported">
      <MemberSignature Language="C#" Value="ItemTypeNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ItemTypeNotSupported = int32(-2146226137)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ItemTypeNotSupported" />
      <MemberSignature Language="VB.NET" Value="ItemTypeNotSupported" />
      <MemberSignature Language="C++ CLI" Value="ItemTypeNotSupported" />
      <MemberSignature Language="F#" Value="ItemTypeNotSupported = -2146226137" Usage="Microsoft.JScript.Vsa.JSVsaError.ItemTypeNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226137</MemberValue>
      <Docs>
        <summary>Value: 0x80133027</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Typ wird nicht unterstützt.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaItems.CreateItem*> Methode, wenn der Aufruf ausgeführt wird, mit einer `itemType` Parameter, der von der Engine nicht unterstützt wird. Beachten Sie, dass nicht alle Module auf alle Werte der Enumeration VsaItemType unterstützen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCIDNotSupported">
      <MemberSignature Language="C#" Value="LCIDNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError LCIDNotSupported = int32(-2146226136)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.LCIDNotSupported" />
      <MemberSignature Language="VB.NET" Value="LCIDNotSupported" />
      <MemberSignature Language="C++ CLI" Value="LCIDNotSupported" />
      <MemberSignature Language="F#" Value="LCIDNotSupported = -2146226136" Usage="Microsoft.JScript.Vsa.JSVsaError.LCIDNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226136</MemberValue>
      <Docs>
        <summary>Value: 0x80133028</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebenen Gebietsschemabezeichner (LCID) wird nicht unterstützt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LCID*> Eigenschaft, wenn er auf einen LCID-Wert festgelegt ist, die von der Engine nicht unterstützt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadElementFailed">
      <MemberSignature Language="C#" Value="LoadElementFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError LoadElementFailed = int32(-2146226135)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.LoadElementFailed" />
      <MemberSignature Language="VB.NET" Value="LoadElementFailed" />
      <MemberSignature Language="C++ CLI" Value="LoadElementFailed" />
      <MemberSignature Language="F#" Value="LoadElementFailed = -2146226135" Usage="Microsoft.JScript.Vsa.JSVsaError.LoadElementFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226135</MemberValue>
      <Docs>
        <summary>Value: 0x80133029</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Element konnte nicht geladen werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.LoadElement*> Methoden auf, wenn ein Aufruf von der `LoadElement` -Methode fehlschlägt. Die `LoadSourceState` Methodenrückgabe die LoadElementFailed-Ausnahme aus der `IVsaPersistSite.LoadElement` Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingPdb">
      <MemberSignature Language="C#" Value="MissingPdb" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError MissingPdb = int32(-2146226102)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.MissingPdb" />
      <MemberSignature Language="VB.NET" Value="MissingPdb" />
      <MemberSignature Language="C++ CLI" Value="MissingPdb" />
      <MemberSignature Language="F#" Value="MissingPdb = -2146226102" Usage="Microsoft.JScript.Vsa.JSVsaError.MissingPdb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226102</MemberValue>
      <Docs>
        <summary>Value: 0x8013304A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: n/v  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingSource">
      <MemberSignature Language="C#" Value="MissingSource" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError MissingSource = int32(-2146226108)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.MissingSource" />
      <MemberSignature Language="VB.NET" Value="MissingSource" />
      <MemberSignature Language="C++ CLI" Value="MissingSource" />
      <MemberSignature Language="F#" Value="MissingSource = -2146226108" Usage="Microsoft.JScript.Vsa.JSVsaError.MissingSource" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226108</MemberValue>
      <Docs>
        <summary>Value: 0x80133044</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die Quelle nicht vorhanden.  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTooLong">
      <MemberSignature Language="C#" Value="NameTooLong" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NameTooLong = int32(-2146226106)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NameTooLong" />
      <MemberSignature Language="VB.NET" Value="NameTooLong" />
      <MemberSignature Language="C++ CLI" Value="NameTooLong" />
      <MemberSignature Language="F#" Value="NameTooLong = -2146226106" Usage="Microsoft.JScript.Vsa.JSVsaError.NameTooLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226106</MemberValue>
      <Docs>
        <summary>Value: 0x80133046</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der Engine-Name überschreitet die zulässige Länge von 256 Zeichen.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Name*> Eigenschaft in Fällen, in denen der Wert, für den Modulnamen festgelegt, länger als 256 Zeichen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotClientSideAndNoUrl">
      <MemberSignature Language="C#" Value="NotClientSideAndNoUrl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotClientSideAndNoUrl = int32(-2146226101)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotClientSideAndNoUrl" />
      <MemberSignature Language="VB.NET" Value="NotClientSideAndNoUrl" />
      <MemberSignature Language="C++ CLI" Value="NotClientSideAndNoUrl" />
      <MemberSignature Language="F#" Value="NotClientSideAndNoUrl = -2146226101" Usage="Microsoft.JScript.Vsa.JSVsaError.NotClientSideAndNoUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226101</MemberValue>
      <Docs>
        <summary>Value: 0x8013304B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: n/v  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationInvalid">
      <MemberSignature Language="C#" Value="NotificationInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotificationInvalid = int32(-2146226134)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotificationInvalid" />
      <MemberSignature Language="VB.NET" Value="NotificationInvalid" />
      <MemberSignature Language="C++ CLI" Value="NotificationInvalid" />
      <MemberSignature Language="F#" Value="NotificationInvalid = -2146226134" Usage="Microsoft.JScript.Vsa.JSVsaError.NotificationInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226134</MemberValue>
      <Docs>
        <summary>Value: 0x8013302A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Benachrichtigung ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaSite.Notify*> Methode, wenn sie mit der Benachrichtigung aufgerufen wird, der ungültig ist. Es wird im Allgemeinen empfohlen, dass beim Hosten von Anwendungen ignoriert, Benachrichtigungen, die sie nicht bewusst sind, oder auf die sie nicht benötigen, reagieren. In Fällen, in dem sie eine bestimmte Benachrichtigung behandeln und die Benachrichtigung ist ungültig, sollte hostet jedoch die NotificationInvalid-Ausnahme auslösen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotInitCompleted">
      <MemberSignature Language="C#" Value="NotInitCompleted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError NotInitCompleted = int32(-2146226107)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.NotInitCompleted" />
      <MemberSignature Language="VB.NET" Value="NotInitCompleted" />
      <MemberSignature Language="C++ CLI" Value="NotInitCompleted" />
      <MemberSignature Language="F#" Value="NotInitCompleted = -2146226107" Usage="Microsoft.JScript.Vsa.JSVsaError.NotInitCompleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226107</MemberValue>
      <Docs>
        <summary>Value: 0x80133045</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die aDTEngine.InitCompleted-Methode wurde nicht aufgerufen.  
  
 Wird ausgelöst, durch die aDTEngine.GetIDE-Methode oder der Methode in Fällen, in denen entweder aufgerufen wird, bevor, die `InitCompleted` Methode aufgerufen wurde, signalisieren, dass die Initialisierung abgeschlossen ist. Im Fall von der `ShowIDE` -Methode, die die Ausnahme signalisiert, dass das erste Modul in der Auflistung Engines noch nicht initialisiert wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionInvalid">
      <MemberSignature Language="C#" Value="OptionInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError OptionInvalid = int32(-2146226133)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.OptionInvalid" />
      <MemberSignature Language="VB.NET" Value="OptionInvalid" />
      <MemberSignature Language="C++ CLI" Value="OptionInvalid" />
      <MemberSignature Language="F#" Value="OptionInvalid = -2146226133" Usage="Microsoft.JScript.Vsa.JSVsaError.OptionInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226133</MemberValue>
      <Docs>
        <summary>Value: 0x8013302B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Option ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methoden ein, wenn der Host versucht, eine Option, mit der Methode festgelegt, aber der angegebene Wert nicht gültig für die Option ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionNotSupported">
      <MemberSignature Language="C#" Value="OptionNotSupported" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError OptionNotSupported = int32(-2146226132)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.OptionNotSupported" />
      <MemberSignature Language="VB.NET" Value="OptionNotSupported" />
      <MemberSignature Language="C++ CLI" Value="OptionNotSupported" />
      <MemberSignature Language="F#" Value="OptionNotSupported = -2146226132" Usage="Microsoft.JScript.Vsa.JSVsaError.OptionNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226132</MemberValue>
      <Docs>
        <summary>Value: 0x8013302C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Option wird nicht unterstützt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> Methode <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SetOption*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.GetOption*> -Methode und `IVsaItem.SetOption` Methoden zum Abrufen oder Festlegen einer Optionswertes, die beim wird von der Engine nicht unterstützt  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcNameInUse">
      <MemberSignature Language="C#" Value="ProcNameInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ProcNameInUse = int32(-2146226105)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInUse" />
      <MemberSignature Language="VB.NET" Value="ProcNameInUse" />
      <MemberSignature Language="C++ CLI" Value="ProcNameInUse" />
      <MemberSignature Language="F#" Value="ProcNameInUse = -2146226105" Usage="Microsoft.JScript.Vsa.JSVsaError.ProcNameInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226105</MemberValue>
      <Docs>
        <summary>Value: 0x80133047</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: n/v  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcNameInvalid">
      <MemberSignature Language="C#" Value="ProcNameInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError ProcNameInvalid = int32(-2146226104)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.ProcNameInvalid" />
      <MemberSignature Language="VB.NET" Value="ProcNameInvalid" />
      <MemberSignature Language="C++ CLI" Value="ProcNameInvalid" />
      <MemberSignature Language="F#" Value="ProcNameInvalid = -2146226104" Usage="Microsoft.JScript.Vsa.JSVsaError.ProcNameInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226104</MemberValue>
      <Docs>
        <summary>Value: 0x80133048</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: n/v  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeFailed">
      <MemberSignature Language="C#" Value="RevokeFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RevokeFailed = int32(-2146226131)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RevokeFailed" />
      <MemberSignature Language="VB.NET" Value="RevokeFailed" />
      <MemberSignature Language="C++ CLI" Value="RevokeFailed" />
      <MemberSignature Language="F#" Value="RevokeFailed = -2146226131" Usage="Microsoft.JScript.Vsa.JSVsaError.RevokeFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226131</MemberValue>
      <Docs>
        <summary>Value: 0x8013302D</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Fehler bei eine Anforderung, den Assemblycache aufzuheben.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RevokeCache*> Methode, wenn er aufgerufen wird, jedoch nicht kann den Cache widerrufen. Weitere Informationen kann mithilfe der Exception.InnerException-Eigenschaft verfügbar sein. Beachten Sie, dass ist keine zwischengespeicherte Assembly aufzuheben, das Modul "Success" und soll diese Ausnahme nicht ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerAlreadySet">
      <MemberSignature Language="C#" Value="RootMonikerAlreadySet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerAlreadySet = int32(-2146226130)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerAlreadySet" />
      <MemberSignature Language="VB.NET" Value="RootMonikerAlreadySet" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerAlreadySet" />
      <MemberSignature Language="F#" Value="RootMonikerAlreadySet = -2146226130" Usage="Microsoft.JScript.Vsa.JSVsaError.RootMonikerAlreadySet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226130</MemberValue>
      <Docs>
        <summary>Value: 0x8013302E</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> Eigenschaft wurde bereits festgelegt und kann nicht erneut festgelegt werden.  
  
 Wird ausgelöst, durch die `IVsaEngine.RootMoniker` Eigenschaft, bei dem Versuch, diese Eigenschaft festzulegen, nachdem es bereits auf einen gültigen Wert festgelegt wurde. Die `RootMoniker` Eigenschaft kann nur einmal festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerInUse">
      <MemberSignature Language="C#" Value="RootMonikerInUse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerInUse = int32(-2146226129)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInUse" />
      <MemberSignature Language="VB.NET" Value="RootMonikerInUse" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerInUse" />
      <MemberSignature Language="F#" Value="RootMonikerInUse = -2146226129" Usage="Microsoft.JScript.Vsa.JSVsaError.RootMonikerInUse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226129</MemberValue>
      <Docs>
        <summary>Value: 0x8013302F</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Stammmoniker wird bereits verwendet.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> Eigenschaft, bei dem Versuch, diese Eigenschaft auf einen Wert festzulegen, die bereits von einem anderen Modul. Die `RootMoniker` Eigenschaft muss global eindeutig sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerInvalid">
      <MemberSignature Language="C#" Value="RootMonikerInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerInvalid = int32(-2146226128)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerInvalid" />
      <MemberSignature Language="VB.NET" Value="RootMonikerInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerInvalid" />
      <MemberSignature Language="F#" Value="RootMonikerInvalid = -2146226128" Usage="Microsoft.JScript.Vsa.JSVsaError.RootMonikerInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226128</MemberValue>
      <Docs>
        <summary>Value: 0x80133030</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Stammmoniker ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> Eigenschaft, bei dem Versuch, diese Eigenschaft auf einen Wert festzulegen, der kein gültiger Moniker ist. Ein Moniker kann aus den folgenden Gründen ungültig werden:  
  
 Es nicht mit der Monikersyntax des entsprechen \<Protokoll > ://\<Pfad >.  
  
 Er verwendet die Zeichen, die nicht in einen Uniform Resource Identifier (URI) gültig sind. Weitere Informationen zu gültigen Zeichen finden Sie unter [Request For Comments 2396](https://www.ietf.org/rfc/rfc2396).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerNotSet">
      <MemberSignature Language="C#" Value="RootMonikerNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerNotSet = int32(-2146226127)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerNotSet" />
      <MemberSignature Language="VB.NET" Value="RootMonikerNotSet" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerNotSet" />
      <MemberSignature Language="F#" Value="RootMonikerNotSet = -2146226127" Usage="Microsoft.JScript.Vsa.JSVsaError.RootMonikerNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226127</MemberValue>
      <Docs>
        <summary>Value: 0x80133031</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> Eigenschaft nicht festgelegt wurde.  
  
 Wird ausgelöst, indem die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> -Methode, und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> Methoden, und die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> Eigenschaft, wenn die Eigenschaft oder Methode einen gültigen Stammmoniker erfordert, aber die `RootMoniker` Eigenschaft nicht festgelegt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMonikerProtocolInvalid">
      <MemberSignature Language="C#" Value="RootMonikerProtocolInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootMonikerProtocolInvalid = int32(-2146226126)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootMonikerProtocolInvalid" />
      <MemberSignature Language="VB.NET" Value="RootMonikerProtocolInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootMonikerProtocolInvalid" />
      <MemberSignature Language="F#" Value="RootMonikerProtocolInvalid = -2146226126" Usage="Microsoft.JScript.Vsa.JSVsaError.RootMonikerProtocolInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226126</MemberValue>
      <Docs>
        <summary>Value: 0x80133032</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das Protokoll in der Stammmoniker angegeben ist ungültig.  
  
 Wird ausgelöst, indem die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker*> Eigenschaft, bei dem Versuch, diese Eigenschaft auf einen Wert festzulegen, die bereits, ein Protokoll verwendet auf dem Computer, z.B. Datei- oder HTTP-registriert. Registrierte Protokolle können nicht als Teil des Monikers verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespaceInvalid">
      <MemberSignature Language="C#" Value="RootNamespaceInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootNamespaceInvalid = int32(-2146226125)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceInvalid" />
      <MemberSignature Language="VB.NET" Value="RootNamespaceInvalid" />
      <MemberSignature Language="C++ CLI" Value="RootNamespaceInvalid" />
      <MemberSignature Language="F#" Value="RootNamespaceInvalid = -2146226125" Usage="Microsoft.JScript.Vsa.JSVsaError.RootNamespaceInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226125</MemberValue>
      <Docs>
        <summary>Value: 0x80133033</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Stammnamespace ist ungültig.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace*> Eigenschaft, bei dem Versuch, diese Eigenschaft auf einen Wert festzulegen, der kein gültiger Namespace-Bezeichner ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespaceNotSet">
      <MemberSignature Language="C#" Value="RootNamespaceNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError RootNamespaceNotSet = int32(-2146226124)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.RootNamespaceNotSet" />
      <MemberSignature Language="VB.NET" Value="RootNamespaceNotSet" />
      <MemberSignature Language="C++ CLI" Value="RootNamespaceNotSet" />
      <MemberSignature Language="F#" Value="RootNamespaceNotSet = -2146226124" Usage="Microsoft.JScript.Vsa.JSVsaError.RootNamespaceNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226124</MemberValue>
      <Docs>
        <summary>Value: 0x80133034</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der Stamm-Namespace wurde nicht festgelegt.  
  
 Wird ausgelöst, indem Sie die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> Methode, wenn es aufgerufen wird, bevor Sie die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.RootNamespace*> festgelegt wird. Das Ladeprogramm-Laufzeitmodul und der Visual Basic-Skript-Engine auch löst diese Ausnahme auf die Run-Methode aufrufen, wenn die Eigenschaft nicht festgelegt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledStateFailed">
      <MemberSignature Language="C#" Value="SaveCompiledStateFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SaveCompiledStateFailed = int32(-2146226123)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SaveCompiledStateFailed" />
      <MemberSignature Language="VB.NET" Value="SaveCompiledStateFailed" />
      <MemberSignature Language="C++ CLI" Value="SaveCompiledStateFailed" />
      <MemberSignature Language="F#" Value="SaveCompiledStateFailed = -2146226123" Usage="Microsoft.JScript.Vsa.JSVsaError.SaveCompiledStateFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226123</MemberValue>
      <Docs>
        <summary>Value: 0x80133035</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene kompilierte Zustand konnte nicht gespeichert werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveCompiledState*> Methode, wenn diese Methode schlägt fehl. Beachten Sie, dass diese Methode Code nicht tatsächlich gespeichert, sondern stattdessen einfach die hostanwendung mit den angegebenen binären Daten stellt, damit der Host, die sie speichern kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveElementFailed">
      <MemberSignature Language="C#" Value="SaveElementFailed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SaveElementFailed = int32(-2146226122)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SaveElementFailed" />
      <MemberSignature Language="VB.NET" Value="SaveElementFailed" />
      <MemberSignature Language="C++ CLI" Value="SaveElementFailed" />
      <MemberSignature Language="F#" Value="SaveElementFailed = -2146226122" Usage="Microsoft.JScript.Vsa.JSVsaError.SaveElementFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226122</MemberValue>
      <Docs>
        <summary>Value: 0x80133036</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das angegebene Element konnte nicht gespeichert werden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.SaveSourceState*> Methode und <xref:Microsoft.JScript.Vsa.IJSVsaPersistSite.SaveElement*> Methoden auf, wenn ein Aufruf von der `SaveElement` -Methode fehlschlägt. Die `InnerException` Eigenschaft der <xref:System.Exception> -Klasse festgelegt, dass die eigentliche Ausnahme, die von der zugrunde liegende Code (z. B. eine Out-of Disk Space-Ausnahme) ausgelöst. Weitere Informationen finden Sie unter <xref:System.Exception.InnerException%2A?displayProperty=nameWithType>. Die `SaveSourceState` Methode gibt die `SaveElementFailed` Ausnahme von der `SaveElement` Methode an den Aufrufer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteAlreadySet">
      <MemberSignature Language="C#" Value="SiteAlreadySet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteAlreadySet = int32(-2146226121)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteAlreadySet" />
      <MemberSignature Language="VB.NET" Value="SiteAlreadySet" />
      <MemberSignature Language="C++ CLI" Value="SiteAlreadySet" />
      <MemberSignature Language="F#" Value="SiteAlreadySet = -2146226121" Usage="Microsoft.JScript.Vsa.JSVsaError.SiteAlreadySet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226121</MemberValue>
      <Docs>
        <summary>Value: 0x80133037</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Der angegebene Standort wurde bereits festgelegt.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> Eigenschaft, wenn es versucht wird, diese Eigenschaft festzulegen, und bereits einen Wert ungleich Null hat. Nachdem es festgelegt wurde, kann die Site-Eigenschaft nicht zurückgesetzt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteInvalid">
      <MemberSignature Language="C#" Value="SiteInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteInvalid = int32(-2146226120)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteInvalid" />
      <MemberSignature Language="VB.NET" Value="SiteInvalid" />
      <MemberSignature Language="C++ CLI" Value="SiteInvalid" />
      <MemberSignature Language="F#" Value="SiteInvalid = -2146226120" Usage="Microsoft.JScript.Vsa.JSVsaError.SiteInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226120</MemberValue>
      <Docs>
        <summary>Value: 0x80133038</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Die angegebene Site ist ungültig.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> Eigenschaft, bei dem Versuch, diese Eigenschaft auf einen Wert festzulegen, das ist kein gültiger <xref:Microsoft.JScript.Vsa.IJSVsaSite> Objektverweis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteNotSet">
      <MemberSignature Language="C#" Value="SiteNotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SiteNotSet = int32(-2146226119)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SiteNotSet" />
      <MemberSignature Language="VB.NET" Value="SiteNotSet" />
      <MemberSignature Language="C++ CLI" Value="SiteNotSet" />
      <MemberSignature Language="F#" Value="SiteNotSet = -2146226119" Usage="Microsoft.JScript.Vsa.JSVsaError.SiteNotSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226119</MemberValue>
      <Docs>
        <summary>Value: 0x80133039</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Website wurde nicht festgelegt.  
  
 Ausgelöst durch die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Compile*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.LoadSourceState*> -Methode, <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Run*> -Methode und <xref:Microsoft.JScript.Vsa.IJSVsaEngine.InitNew*> Methoden ein, wenn eine Eigenschaft oder Methode, die eine gültige erfordert <xref:Microsoft.JScript.Vsa.IJSVsaSite> Objekt aufgerufen wird, aber die <xref:Microsoft.JScript.Vsa.IJSVsaEngine.Site*> Eigenschaft nicht festgelegt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceItemNotAvailable">
      <MemberSignature Language="C#" Value="SourceItemNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SourceItemNotAvailable = int32(-2146226118)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SourceItemNotAvailable" />
      <MemberSignature Language="VB.NET" Value="SourceItemNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="SourceItemNotAvailable" />
      <MemberSignature Language="F#" Value="SourceItemNotAvailable = -2146226118" Usage="Microsoft.JScript.Vsa.JSVsaError.SourceItemNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226118</MemberValue>
      <Docs>
        <summary>Value: 0x8013303A</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Das Quellelement ist nicht verfügbar, für diese Ausnahme.  
  
 Ausgelöst, wenn keine Quellelement für eine Ausnahme aus, d. h. die <xref:Microsoft.JScript.Vsa.IJSVsaError.SourceItem*> Eigenschaft nicht festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceMonikerNotAvailable">
      <MemberSignature Language="C#" Value="SourceMonikerNotAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError SourceMonikerNotAvailable = int32(-2146226117)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.SourceMonikerNotAvailable" />
      <MemberSignature Language="VB.NET" Value="SourceMonikerNotAvailable" />
      <MemberSignature Language="C++ CLI" Value="SourceMonikerNotAvailable" />
      <MemberSignature Language="F#" Value="SourceMonikerNotAvailable = -2146226117" Usage="Microsoft.JScript.Vsa.JSVsaError.SourceMonikerNotAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226117</MemberValue>
      <Docs>
        <summary>Value: 0x8013303B</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Source-Moniker ist nicht verfügbar, für diese Ausnahme.  
  
 Ausgelöst, wenn keine der Moniker für die eine Ausnahme aus, d. h. die <xref:Microsoft.JScript.Vsa.IJSVsaError.SourceMoniker*> Eigenschaft nicht festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownError">
      <MemberSignature Language="C#" Value="UnknownError" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError UnknownError = int32(-2146225921)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.UnknownError" />
      <MemberSignature Language="VB.NET" Value="UnknownError" />
      <MemberSignature Language="C++ CLI" Value="UnknownError" />
      <MemberSignature Language="F#" Value="UnknownError = -2146225921" Usage="Microsoft.JScript.Vsa.JSVsaError.UnknownError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146225921</MemberValue>
      <Docs>
        <summary>Value: 0x801330FF</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Unbekannte Ausnahme.  
  
 Von mehreren Membern ausgelöst, wenn die Ausnahme nicht erkannt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="URLInvalid">
      <MemberSignature Language="C#" Value="URLInvalid" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError URLInvalid = int32(-2146226116)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.URLInvalid" />
      <MemberSignature Language="VB.NET" Value="URLInvalid" />
      <MemberSignature Language="C++ CLI" Value="URLInvalid" />
      <MemberSignature Language="F#" Value="URLInvalid = -2146226116" Usage="Microsoft.JScript.Vsa.JSVsaError.URLInvalid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226116</MemberValue>
      <Docs>
        <summary>Value: 0x8013303C</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: Ungültige URL; ASPX-Erweiterung ist nicht vorhanden.  
  
 Wird ausgelöst, durch die <xref:Microsoft.JScript.Vsa.IVsaDTEngine.TargetURL%2A> Eigenschaft, wenn die Ziel-URL für den der Debugger festgelegt wird, nicht gültig ist. Die Eigenschaft muss auf eine ASPX-Datei verweisen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VsaServerDown">
      <MemberSignature Language="C#" Value="VsaServerDown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.JScript.Vsa.JSVsaError VsaServerDown = int32(-2146226103)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.Vsa.JSVsaError.VsaServerDown" />
      <MemberSignature Language="VB.NET" Value="VsaServerDown" />
      <MemberSignature Language="C++ CLI" Value="VsaServerDown" />
      <MemberSignature Language="F#" Value="VsaServerDown = -2146226103" Usage="Microsoft.JScript.Vsa.JSVsaError.VsaServerDown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.JSVsaError</ReturnType>
      </ReturnValue>
      <MemberValue>-2146226103</MemberValue>
      <Docs>
        <summary>Value: 0x80133049</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ausnahmezeichenfolge: n/v  
  
 Für zukünftige Verwendung reserviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>