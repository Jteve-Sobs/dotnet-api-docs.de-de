<Type Name="VsaEngine" FullName="Microsoft.JScript.Vsa.VsaEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd8c6fd4c91f460dbab0a3dd2a8509d5b8d29225" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77040802" /></Metadata><TypeSignature Language="C#" Value="public sealed class VsaEngine : Microsoft.JScript.Vsa.BaseVsaEngine, Microsoft.JScript.IEngine2, Microsoft.JScript.IRedirectOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VsaEngine extends Microsoft.JScript.Vsa.BaseVsaEngine implements class Microsoft.JScript.IEngine2, class Microsoft.JScript.IRedirectOutput" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.Vsa.VsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VsaEngine&#xA;Inherits BaseVsaEngine&#xA;Implements IEngine2, IRedirectOutput" />
  <TypeSignature Language="C++ CLI" Value="public ref class VsaEngine sealed : Microsoft::JScript::Vsa::BaseVsaEngine, Microsoft::JScript::IEngine2, Microsoft::JScript::IRedirectOutput" />
  <TypeSignature Language="F#" Value="type VsaEngine = class&#xA;    inherit BaseVsaEngine&#xA;    interface IEngine2&#xA;    interface IRedirectOutput" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.Vsa.BaseVsaEngine</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">Microsoft.Vsa.BaseVsaEngine</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IEngine2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.JScript.IRedirectOutput</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("B71E484D-93ED-4b56-BFB9-CEED5134822B")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="622b9-101">Implementiert die <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="622b9-101">Implements <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> interface.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="622b9-102">Diese Klasse, Member oder Eigenschaft ist f√ºr die Skript-Engine intern und sollte nicht im Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="622b9-102">This class, member, or property is internal to the script engine and should not be called from your code.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VsaEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VsaEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-103">Initialisiert eine neue Instanz der <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="622b9-103">Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VsaEngine (bool fast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fast) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fast As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VsaEngine(bool fast);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.Vsa.VsaEngine : bool -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="new Microsoft.JScript.Vsa.VsaEngine fast" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fast"><span data-ttu-id="622b9-104"><see langword="true" />, um den schnellen Modus anzugeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-104"><see langword="true" /> to indicate fast mode; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="622b9-105">Hiermit wird eine neue Instanz der <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />-Klasse initialisiert und optional der schnelle Modus festgelegt.</span><span class="sxs-lookup"><span data-stu-id="622b9-105">Initializes a new instance of the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> class and optionally sets fast mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Clone(System.AppDomain)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IJSVsaEngine" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::Vsa::IJSVsaEngine ^ Clone(AppDomain ^ domain);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Clone : AppDomain -&gt; Microsoft.JScript.Vsa.IJSVsaEngine&#xA;override this.Clone : AppDomain -&gt; Microsoft.JScript.Vsa.IJSVsaEngine" Usage="vsaEngine.Clone domain" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="622b9-106">Die Anwendungsdom√§ne, in der die neue Engine erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="622b9-106">The application domain in which to create the new engine.</span></span></param>
        <summary><span data-ttu-id="622b9-107">Erstellt eine neue, identische Engine, die in einer neuen Anwendungsdom√§ne ausgef√ºhrt wird, mit demselben kompilierten Zustand und denselben benannten Elementen.</span><span class="sxs-lookup"><span data-stu-id="622b9-107">Creates a new identical engine that runs in a new application domain, with the same compiled state and named items.</span></span></summary>
        <returns><span data-ttu-id="622b9-108">Die neue Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-108">The new engine.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CompileEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CompileEmpty();" />
      <MemberSignature Language="F#" Value="abstract member CompileEmpty : unit -&gt; bool&#xA;override this.CompileEmpty : unit -&gt; bool" Usage="vsaEngine.CompileEmpty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.CompileEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-109">L√∂st die Kompilierung aller derzeit in der Engine vorhandenen Zust√§nde aus.</span><span class="sxs-lookup"><span data-stu-id="622b9-109">Triggers compilation of all the state currently in the engine.</span></span> <span data-ttu-id="622b9-110">Alle Verweise, Codeelemente, Hostelemente und Ressourcen werden durch den Compiler geschickt.</span><span class="sxs-lookup"><span data-stu-id="622b9-110">All references, code items, host items, and resources are run through the compiler.</span></span></summary>
        <returns><span data-ttu-id="622b9-111"><see langword="true" />, wenn die Kompilierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-111"><see langword="true" /> if the compilation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ConnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member ConnectEvents : unit -&gt; unit&#xA;override this.ConnectEvents : unit -&gt; unit" Usage="vsaEngine.ConnectEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.ConnectEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-112">Diese Methode teilt der Engine mit, dass alle registrierten Ereignisquellen mit Ereignissen mit beliebigen globalen Ereignishandlern verbunden werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="622b9-112">Communicates to the engine that it can connect any registered event sources that have events to any global event handlers.</span></span> <span data-ttu-id="622b9-113">Diese Methode ist in dieser Klasse nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="622b9-113">This method is not implemented in this class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngine">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.Vsa.VsaEngine CreateEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.Vsa.VsaEngine CreateEngine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngine () As VsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::Vsa::VsaEngine ^ CreateEngine();" />
      <MemberSignature Language="F#" Value="static member CreateEngine : unit -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-114">Hiermit wird die Engine erstellt.</span><span class="sxs-lookup"><span data-stu-id="622b9-114">Creates the engine.</span></span></summary>
        <returns><span data-ttu-id="622b9-115">Die neue Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-115">The new engine.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScope">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScope (bool fast, string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScope(bool fast, string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope(System.Boolean,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScope (fast As Boolean, assemblyNames As String()) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScope(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScope : bool * string[] -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScope (fast, assemblyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fast"><span data-ttu-id="622b9-116"><see langword="true" />, um den schnellen Modus anzugeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-116"><see langword="true" /> to indicate fast mode; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="622b9-117">Dies ist ein Array von Assemblynamen.</span><span class="sxs-lookup"><span data-stu-id="622b9-117">An array of assembly names.</span></span></param>
        <summary><span data-ttu-id="622b9-118">Mit dieser Methode wird die Engine erstellt und der globale G√ºltigkeitsbereich zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="622b9-118">Creates the engine and returns the global scope.</span></span></summary>
        <returns><span data-ttu-id="622b9-119">Der globale Bereich.</span><span class="sxs-lookup"><span data-stu-id="622b9-119">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScopeWithType">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithType (bool fast, string[] assemblyNames, RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithType(bool fast, string[] assemblyNames, valuetype System.RuntimeTypeHandle callingTypeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType(System.Boolean,System.String[],System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScopeWithType (fast As Boolean, assemblyNames As String(), callingTypeHandle As RuntimeTypeHandle) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScopeWithType(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames, RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScopeWithType : bool * string[] * RuntimeTypeHandle -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithType (fast, assemblyNames, callingTypeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" />
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="fast"><span data-ttu-id="622b9-120"><see langword="true" />, um den schnellen Modus anzugeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-120"><see langword="true" /> to indicate fast mode; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="622b9-121">Dies ist ein Array von Assemblynamen.</span><span class="sxs-lookup"><span data-stu-id="622b9-121">An array of assembly names.</span></span></param>
        <param name="callingTypeHandle"><span data-ttu-id="622b9-122">Dies ist das aufrufende Typhandle.</span><span class="sxs-lookup"><span data-stu-id="622b9-122">The calling type handle.</span></span></param>
        <summary><span data-ttu-id="622b9-123">Mit dieser Methode wird die Engine erstellt und der globale G√ºltigkeitsbereich mit dem aufrufenden Typhandle zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="622b9-123">Creates the engine and returns the global scope with the calling type handle.</span></span></summary>
        <returns><span data-ttu-id="622b9-124">Der globale Bereich.</span><span class="sxs-lookup"><span data-stu-id="622b9-124">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (bool fast, string[] assemblyNames, RuntimeTypeHandle callingTypeHandle, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.GlobalScope CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, string[] assemblyNames, valuetype System.RuntimeTypeHandle callingTypeHandle, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(System.Boolean,System.String[],System.RuntimeTypeHandle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (fast As Boolean, assemblyNames As String(), callingTypeHandle As RuntimeTypeHandle, rootNamespace As String) As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::GlobalScope ^ CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace(bool fast, cli::array &lt;System::String ^&gt; ^ assemblyNames, RuntimeTypeHandle callingTypeHandle, System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="static member CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace : bool * string[] * RuntimeTypeHandle * string -&gt; Microsoft.JScript.GlobalScope" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineAndGetGlobalScopeWithTypeAndRootNamespace (fast, assemblyNames, callingTypeHandle, rootNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fast" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rootNamespace" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fast"><span data-ttu-id="622b9-125"><see langword="true" />, um den schnellen Modus anzugeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-125"><see langword="true" /> to indicate fast mode; otherwise, <see langword="false" />.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="622b9-126">Dies ist ein Array von Assemblynamen.</span><span class="sxs-lookup"><span data-stu-id="622b9-126">An array of assembly names.</span></span></param>
        <param name="callingTypeHandle"><span data-ttu-id="622b9-127">Dies ist das aufrufende Typhandle.</span><span class="sxs-lookup"><span data-stu-id="622b9-127">The calling type handle.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="622b9-128">Der Stammnamespace.</span><span class="sxs-lookup"><span data-stu-id="622b9-128">The root namespace.</span></span></param>
        <summary><span data-ttu-id="622b9-129">Mit dieser Methode wird die Engine erstellt und der globale G√ºltigkeitsbereich mit dem aufrufenden Typhandle und Stammnamespace zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="622b9-129">Creates the engine and returns the global scope with the calling type handle and root namespace.</span></span></summary>
        <returns><span data-ttu-id="622b9-130">Der globale Bereich.</span><span class="sxs-lookup"><span data-stu-id="622b9-130">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateEngineWithType">
      <MemberSignature Language="C#" Value="public static Microsoft.JScript.Vsa.VsaEngine CreateEngineWithType (RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.JScript.Vsa.VsaEngine CreateEngineWithType(valuetype System.RuntimeTypeHandle callingTypeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEngineWithType (callingTypeHandle As RuntimeTypeHandle) As VsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::JScript::Vsa::VsaEngine ^ CreateEngineWithType(RuntimeTypeHandle callingTypeHandle);" />
      <MemberSignature Language="F#" Value="static member CreateEngineWithType : RuntimeTypeHandle -&gt; Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.Vsa.VsaEngine.CreateEngineWithType callingTypeHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingTypeHandle" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="callingTypeHandle"><span data-ttu-id="622b9-131">Dies ist das aufrufende Typhandle.</span><span class="sxs-lookup"><span data-stu-id="622b9-131">The calling type handle.</span></span></param>
        <summary><span data-ttu-id="622b9-132">Mit dieser Methode wird die Engine unter Verwendung des angegebenen Typs erstellt.</span><span class="sxs-lookup"><span data-stu-id="622b9-132">Creates the engine using the specified type.</span></span></summary>
        <returns><span data-ttu-id="622b9-133">Die neue Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-133">The new engine.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DisconnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member DisconnectEvents : unit -&gt; unit&#xA;override this.DisconnectEvents : unit -&gt; unit" Usage="vsaEngine.DisconnectEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.DisconnectEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-134">Diese Methode weist die Engine an, die Verkn√ºpfung von Ereignisquellen und Ereignishandlern aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="622b9-134">Directs the engine to unhook event sources from event handlers.</span></span> <span data-ttu-id="622b9-135">Diese Methode ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="622b9-135">This method is not implemented.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DoClose">
      <MemberSignature Language="C#" Value="protected override void DoClose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoClose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoClose" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoClose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoClose();" />
      <MemberSignature Language="F#" Value="override this.DoClose : unit -&gt; unit" Usage="vsaEngine.DoClose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-136">Schlie√üt die Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-136">Closes the engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCompile">
      <MemberSignature Language="C#" Value="protected override bool DoCompile ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DoCompile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoCompile" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DoCompile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DoCompile();" />
      <MemberSignature Language="F#" Value="override this.DoCompile : unit -&gt; bool" Usage="vsaEngine.DoCompile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-137">Bewirkt, dass die Skript-Engine den vorhandenen Quellzustand kompiliert.</span><span class="sxs-lookup"><span data-stu-id="622b9-137">Causes the script engine to compile the existing source state.</span></span></summary>
        <returns><span data-ttu-id="622b9-138"><see langword="true" /> bei erfolgreicher Kompilierung, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-138"><see langword="true" /> on successful compilation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoLoadSourceState">
      <MemberSignature Language="C#" Value="protected override void DoLoadSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoLoadSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoLoadSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoLoadSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoLoadSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoLoadSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="vsaEngine.DoLoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="622b9-139">Die Site, von der die angegebenen Quellelemente geladen werden.</span><span class="sxs-lookup"><span data-stu-id="622b9-139">The site from which the specified source items are loaded.</span></span></param>
        <summary><span data-ttu-id="622b9-140">Weist die Engine an, Quellelemente zu laden.</span><span class="sxs-lookup"><span data-stu-id="622b9-140">Directs the engine to load source items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoLoadSourceState">
      <MemberSignature Language="C#" Value="protected override void DoLoadSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoLoadSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoLoadSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoLoadSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoLoadSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoLoadSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="vsaEngine.DoLoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="622b9-141">Die Site, von der die angegebenen Quellelemente geladen werden.</span><span class="sxs-lookup"><span data-stu-id="622b9-141">The site from which the specified source items are loaded.</span></span></param>
        <summary><span data-ttu-id="622b9-142">Weist die Engine an, Quellelemente zu laden.</span><span class="sxs-lookup"><span data-stu-id="622b9-142">Directs the engine to load source items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveCompiledState">
      <MemberSignature Language="C#" Value="protected override void DoSaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="override this.DoSaveCompiledState : Byte[] * Byte[] -&gt; unit" Usage="vsaEngine.DoSaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="622b9-143">Der kompilierte Zustand der Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-143">The compiled state of the engine.</span></span></param>
        <param name="pdb"><span data-ttu-id="622b9-144">Die in der PDB-Datei enthaltenen Debuginformationen.</span><span class="sxs-lookup"><span data-stu-id="622b9-144">The debugging information contained in the .PDB file.</span></span></param>
        <summary><span data-ttu-id="622b9-145">Hiermit wird der kompilierte Zustand der Skript-Engine gespeichert.</span><span class="sxs-lookup"><span data-stu-id="622b9-145">Saves the compiled state of the script engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveSourceState">
      <MemberSignature Language="C#" Value="protected override void DoSaveSourceState (Microsoft.JScript.Vsa.IJSVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveSourceState(class Microsoft.JScript.Vsa.IJSVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveSourceState(Microsoft.JScript.Vsa.IJSVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveSourceState (site As IJSVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveSourceState(Microsoft::JScript::Vsa::IJSVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoSaveSourceState : Microsoft.JScript.Vsa.IJSVsaPersistSite -&gt; unit" Usage="vsaEngine.DoSaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaPersistSite" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="622b9-146">Der Site, in der der Quellzustand gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="622b9-146">The site to which source state is saved.</span></span></param>
        <summary><span data-ttu-id="622b9-147">Weist die Skript-Engine an, seinen Quellzustand f√ºr das angegebene Objekt beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="622b9-147">Directs the script engine to persist its source state to the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoSaveSourceState">
      <MemberSignature Language="C#" Value="protected override void DoSaveSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DoSaveSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.DoSaveSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DoSaveSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DoSaveSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="override this.DoSaveSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="vsaEngine.DoSaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="622b9-148">Der Site, in der der Quellzustand gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="622b9-148">The site to which source state is saved.</span></span></param>
        <summary><span data-ttu-id="622b9-149">Weist die Skript-Engine an, seinen Quellzustand f√ºr das angegebene Objekt beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="622b9-149">Directs the script engine to persist its source state to the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetAssembly();" />
      <MemberSignature Language="F#" Value="abstract member GetAssembly : unit -&gt; System.Reflection.Assembly&#xA;override this.GetAssembly : unit -&gt; System.Reflection.Assembly" Usage="vsaEngine.GetAssembly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-150">Ruft die im Kompilierungsschritt erzeugte Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-150">Gets the compiled assembly that is produced by the compilation step.</span></span></summary>
        <returns><span data-ttu-id="622b9-151">Die kompilierte Assembly.</span><span class="sxs-lookup"><span data-stu-id="622b9-151">The compiled assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetCustomOption">
      <MemberSignature Language="C#" Value="protected override object GetCustomOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetCustomOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetCustomOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCustomOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetCustomOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetCustomOption : string -&gt; obj" Usage="vsaEngine.GetCustomOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="622b9-152">Der Name der abzurufenden Option.</span><span class="sxs-lookup"><span data-stu-id="622b9-152">The name of the option to get.</span></span></param>
        <summary><span data-ttu-id="622b9-153">Ruft implementierungsspezifische Optionen f√ºr die Engine ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-153">Gets implementation-specific options for the engine.</span></span></summary>
        <returns><span data-ttu-id="622b9-154">Der Wert der Option.</span><span class="sxs-lookup"><span data-stu-id="622b9-154">The value of the option.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As IVsaScriptScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::IVsaScriptScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.IVsaScriptScope&#xA;override this.GetGlobalScope : unit -&gt; Microsoft.JScript.IVsaScriptScope" Usage="vsaEngine.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-155">Ruft das globale Bereichsobjekt ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-155">Gets the global scope object.</span></span></summary>
        <returns><span data-ttu-id="622b9-156">Das globale Bereichsobjekt.</span><span class="sxs-lookup"><span data-stu-id="622b9-156">The global scope object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaItem GetItem (string itemName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.Vsa.IJSVsaItem GetItem(string itemName) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItem(System.String)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (itemName As String) As IJSVsaItem" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaItem ^ GetItem(System::String ^ itemName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetItem : string -&gt; Microsoft.JScript.Vsa.IJSVsaItem" Usage="vsaEngine.GetItem itemName" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemName"><span data-ttu-id="622b9-157">Der Name des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="622b9-157">The name of the item to get.</span></span></param>
        <summary><span data-ttu-id="622b9-158">Ruft das Element aus dem durch den angegebenen Namen bezeichneten Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-158">Gets the item from the scope that is designated by the specified name.</span></span></summary>
        <returns><span data-ttu-id="622b9-159">Das Element mit dem angegebenen Namen</span><span class="sxs-lookup"><span data-stu-id="622b9-159">The item with the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItemAtIndex">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaItem GetItemAtIndex (int index);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.Vsa.IJSVsaItem GetItemAtIndex(int32 index) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItemAtIndex(System.Int32)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAtIndex (index As Integer) As IJSVsaItem" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaItem ^ GetItemAtIndex(int index);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetItemAtIndex : int -&gt; Microsoft.JScript.Vsa.IJSVsaItem" Usage="vsaEngine.GetItemAtIndex index" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="622b9-160">Der Index des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="622b9-160">The index of the item to get.</span></span></param>
        <summary><span data-ttu-id="622b9-161">Ruft das Element aus dem durch den angegebenen Indexwert bezeichneten Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-161">Gets the item from the scope that is designated by the specified index value.</span></span></summary>
        <returns><span data-ttu-id="622b9-162">Das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="622b9-162">The item at the specified index.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetItemCount">
      <MemberSignature Language="C#" Value="public int GetItemCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemCount();" />
      <MemberSignature Language="F#" Value="member this.GetItemCount : unit -&gt; int" Usage="vsaEngine.GetItemCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-163">Ruft die Anzahl der Elemente im Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-163">Gets the number of items in the scope.</span></span></summary>
        <returns><span data-ttu-id="622b9-164">Die Anzahl der Elemente im Bereich.</span><span class="sxs-lookup"><span data-stu-id="622b9-164">The number of items in the scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetMainScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetMainScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.GlobalScope GetMainScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetMainScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMainScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetMainScope();" />
      <MemberSignature Language="F#" Value="member this.GetMainScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="vsaEngine.GetMainScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-165">Mit dieser Methode wird der Hauptbereich abgerufen.</span><span class="sxs-lookup"><span data-stu-id="622b9-165">Gets the main scope.</span></span></summary>
        <returns><span data-ttu-id="622b9-166">Dies ist der Hauptbereich.</span><span class="sxs-lookup"><span data-stu-id="622b9-166">The main scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule();" />
      <MemberSignature Language="F#" Value="abstract member GetModule : unit -&gt; System.Reflection.Module&#xA;override this.GetModule : unit -&gt; System.Reflection.Module" Usage="vsaEngine.GetModule " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.GetModule</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-167">Ruft das Codemodul aus der kompilierten Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-167">Gets the code module from the compiled assembly.</span></span></summary>
        <returns><span data-ttu-id="622b9-168">Das Codemodul aus der kompilierten Assembly.</span><span class="sxs-lookup"><span data-stu-id="622b9-168">The code module from the compiled assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalArrayConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ArrayConstructor GetOriginalArrayConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ArrayConstructor GetOriginalArrayConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalArrayConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalArrayConstructor () As ArrayConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ArrayConstructor ^ GetOriginalArrayConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalArrayConstructor : unit -&gt; Microsoft.JScript.ArrayConstructor" Usage="vsaEngine.GetOriginalArrayConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ArrayConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-169">Mit dieser Methode wird die urspr√ºngliche <see cref="T:Microsoft.JScript.ArrayConstructor" />-Klasse abgerufen.</span><span class="sxs-lookup"><span data-stu-id="622b9-169">Gets the original <see cref="T:Microsoft.JScript.ArrayConstructor" />.</span></span></summary>
        <returns><span data-ttu-id="622b9-170">Der urspr√ºngliche <see cref="T:Microsoft.JScript.ArrayConstructor" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-170">The original <see cref="T:Microsoft.JScript.ArrayConstructor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalObjectConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ObjectConstructor GetOriginalObjectConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ObjectConstructor GetOriginalObjectConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalObjectConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalObjectConstructor () As ObjectConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ObjectConstructor ^ GetOriginalObjectConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalObjectConstructor : unit -&gt; Microsoft.JScript.ObjectConstructor" Usage="vsaEngine.GetOriginalObjectConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ObjectConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-171">Mit dieser Methode wird die urspr√ºngliche <see cref="T:Microsoft.JScript.ObjectConstructor" />-Klasse abgerufen.</span><span class="sxs-lookup"><span data-stu-id="622b9-171">Gets the original <see cref="T:Microsoft.JScript.ObjectConstructor" />.</span></span></summary>
        <returns><span data-ttu-id="622b9-172">Der urspr√ºngliche <see cref="T:Microsoft.JScript.ObjectConstructor" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-172">The original <see cref="T:Microsoft.JScript.ObjectConstructor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetOriginalRegExpConstructor">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.RegExpConstructor GetOriginalRegExpConstructor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.RegExpConstructor GetOriginalRegExpConstructor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.GetOriginalRegExpConstructor" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalRegExpConstructor () As RegExpConstructor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::RegExpConstructor ^ GetOriginalRegExpConstructor();" />
      <MemberSignature Language="F#" Value="member this.GetOriginalRegExpConstructor : unit -&gt; Microsoft.JScript.RegExpConstructor" Usage="vsaEngine.GetOriginalRegExpConstructor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.RegExpConstructor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-173">Mit dieser Methode wird die urspr√ºngliche <see cref="T:Microsoft.JScript.RegExpConstructor" />-Klasse abgerufen.</span><span class="sxs-lookup"><span data-stu-id="622b9-173">Gets the original <see cref="T:Microsoft.JScript.RegExpConstructor" />.</span></span></summary>
        <returns><span data-ttu-id="622b9-174">Der urspr√ºngliche <see cref="T:Microsoft.JScript.RegExpConstructor" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-174">The original <see cref="T:Microsoft.JScript.RegExpConstructor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IJSVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitVsaEngine(System::String ^ rootMoniker, Microsoft::JScript::Vsa::IJSVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.JScript.Vsa.IJSVsaSite -&gt; unit&#xA;override this.InitVsaEngine : string * Microsoft.JScript.Vsa.IJSVsaSite -&gt; unit" Usage="vsaEngine.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rootMoniker"><span data-ttu-id="622b9-175">Der Stammmoniker der Skript-Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-175">The root moniker of the script engine.</span></span></param>
        <param name="site"><span data-ttu-id="622b9-176">Das vom Host implementierte <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" />-Objekt, das von der Skript-Engine zum Kommunizieren mit dem Host verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="622b9-176">The host-implemented <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> object that is used by the script engine to communicate with the host.</span></span></param>
        <summary><span data-ttu-id="622b9-177">Initialisiert das <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-177">Initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.Vsa.IVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.Vsa.IVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitVsaEngine(System::String ^ rootMoniker, Microsoft::Vsa::IVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.Vsa.IVsaSite -&gt; unit&#xA;override this.InitVsaEngine : string * Microsoft.Vsa.IVsaSite -&gt; unit" Usage="vsaEngine.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaSite" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="rootMoniker"><span data-ttu-id="622b9-178">Der Stammmoniker der Skript-Engine.</span><span class="sxs-lookup"><span data-stu-id="622b9-178">The root moniker of the script engine.</span></span></param>
        <param name="site"><span data-ttu-id="622b9-179">Das vom Host implementierte <see cref="T:Microsoft.Vsa.IVsaSite" />-Objekt, das von der Skript-Engine zum Kommunizieren mit dem Host verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="622b9-179">The host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span></span></param>
        <summary><span data-ttu-id="622b9-180">Initialisiert das <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-180">Initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Interrupt();" />
      <MemberSignature Language="F#" Value="abstract member Interrupt : unit -&gt; unit&#xA;override this.Interrupt : unit -&gt; unit" Usage="vsaEngine.Interrupt " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Interrupt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-181">Hiermit wird <see cref="M:System.Threading.Thread.Abort" /> f√ºr den Thread aufgerufen, der den Skriptcode ausf√ºhrt.</span><span class="sxs-lookup"><span data-stu-id="622b9-181">Calls <see cref="M:System.Threading.Thread.Abort" /> on the thread that is running the script code.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public override bool IsValidIdentifier (string ident);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidIdentifier(string ident) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidIdentifier (ident As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValidIdentifier(System::String ^ ident);" />
      <MemberSignature Language="F#" Value="override this.IsValidIdentifier : string -&gt; bool" Usage="vsaEngine.IsValidIdentifier ident" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ident" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ident"><span data-ttu-id="622b9-182">Ein als Bezeichner bereitgestellter Zeichenfolgenwert.</span><span class="sxs-lookup"><span data-stu-id="622b9-182">A string value provided as identifier.</span></span></param>
        <summary><span data-ttu-id="622b9-183">√úberpr√ºft, ob der angegebene Bezeichner f√ºr die Engine g√ºltig ist.</span><span class="sxs-lookup"><span data-stu-id="622b9-183">Checks whether the supplied identifier is valid for the engine.</span></span></summary>
        <returns><span data-ttu-id="622b9-184"><see langword="true" />, wenn der Bezeichner g√ºltig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-184"><see langword="true" /> if the identifier is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsValidNamespaceName">
      <MemberSignature Language="C#" Value="protected override bool IsValidNamespaceName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValidNamespaceName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.IsValidNamespaceName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValidNamespaceName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValidNamespaceName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.IsValidNamespaceName : string -&gt; bool" Usage="vsaEngine.IsValidNamespaceName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="622b9-185">Der Namespace.</span><span class="sxs-lookup"><span data-stu-id="622b9-185">The namespace.</span></span></param>
        <summary><span data-ttu-id="622b9-186">√úberpr√ºft, ob der angegebene Namespace f√ºr die Engine g√ºltig ist.</span><span class="sxs-lookup"><span data-stu-id="622b9-186">Checks whether the supplied namespace is valid for the engine.</span></span></summary>
        <returns><span data-ttu-id="622b9-187"><see langword="true" />, wenn der Namespace g√ºltig ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="622b9-187"><see langword="true" /> if the namespace is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LenientGlobalObject">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.LenientGlobalObject LenientGlobalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.JScript.LenientGlobalObject LenientGlobalObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LenientGlobalObject As LenientGlobalObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::JScript::LenientGlobalObject ^ LenientGlobalObject { Microsoft::JScript::LenientGlobalObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LenientGlobalObject : Microsoft.JScript.LenientGlobalObject" Usage="Microsoft.JScript.Vsa.VsaEngine.LenientGlobalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.LenientGlobalObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="622b9-188">Diese Eigenschaft ruft das flexible globale Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="622b9-188">Gets the lenient global object.</span></span></summary>
        <value><span data-ttu-id="622b9-189">Das milde globale Objekt.</span><span class="sxs-lookup"><span data-stu-id="622b9-189">The lenient global object.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LoadCompiledState">
      <MemberSignature Language="C#" Value="protected override System.Reflection.Assembly LoadCompiledState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.Assembly LoadCompiledState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.LoadCompiledState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function LoadCompiledState () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::Assembly ^ LoadCompiledState();" />
      <MemberSignature Language="F#" Value="override this.LoadCompiledState : unit -&gt; System.Reflection.Assembly" Usage="vsaEngine.LoadCompiledState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-190">L√§dt den kompilierten Zustand.</span><span class="sxs-lookup"><span data-stu-id="622b9-190">Loads the compiled state.</span></span></summary>
        <returns><span data-ttu-id="622b9-191">Der kompilierte Zustand.</span><span class="sxs-lookup"><span data-stu-id="622b9-191">The compiled state.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopScriptObject">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject PopScriptObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject PopScriptObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.PopScriptObject" />
      <MemberSignature Language="VB.NET" Value="Public Function PopScriptObject () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ PopScriptObject();" />
      <MemberSignature Language="F#" Value="member this.PopScriptObject : unit -&gt; Microsoft.JScript.ScriptObject" Usage="vsaEngine.PopScriptObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-192">Hiermit wird das Objekt am Anfang des globalen G√ºltigkeitsbereichstapels erntfernt und gibt es zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="622b9-192">Removes and returns the object at the top of the global scope stack.</span></span></summary>
        <returns><span data-ttu-id="622b9-193">Dies ist das Objekt am Anfang des globalen G√ºltigkeitsbereichstapels.</span><span class="sxs-lookup"><span data-stu-id="622b9-193">The object at the top of the global scope stack.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PushScriptObject">
      <MemberSignature Language="C#" Value="public void PushScriptObject (Microsoft.JScript.ScriptObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushScriptObject(class Microsoft.JScript.ScriptObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.PushScriptObject(Microsoft.JScript.ScriptObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushScriptObject (obj As ScriptObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushScriptObject(Microsoft::JScript::ScriptObject ^ obj);" />
      <MemberSignature Language="F#" Value="member this.PushScriptObject : Microsoft.JScript.ScriptObject -&gt; unit" Usage="vsaEngine.PushScriptObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.JScript.ScriptObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="622b9-194">Das Objekt, das auf dem Stapel abgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="622b9-194">The object to push onto the stack.</span></span></param>
        <summary><span data-ttu-id="622b9-195">Mit dieser Methode wird ein Objekt am Anfang des globalen G√ºltigkeitsbereichstapels eingef√ºgt.</span><span class="sxs-lookup"><span data-stu-id="622b9-195">Inserts an object at the top of the global scope stack.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.RegisterEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventSource (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterEventSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member RegisterEventSource : string -&gt; unit&#xA;override this.RegisterEventSource : string -&gt; unit" Usage="vsaEngine.RegisterEventSource name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="622b9-196">Der Name eines hinzugef√ºgten Elements, dass Ereignisquellen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="622b9-196">The name of an added item that provides events.</span></span></param>
        <summary><span data-ttu-id="622b9-197">Gibt den Namen eines als Ereignisquelle markierten Elements an, sodass die <see cref="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents" />-Methode die zu verbindenden Ereignisse bestimmen kann.</span><span class="sxs-lookup"><span data-stu-id="622b9-197">Specifies the name of an item that is marked as an event source, so that the <see cref="M:Microsoft.JScript.Vsa.VsaEngine.ConnectEvents" /> method can determine which events to connect.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="vsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-198">Beendet den Ausf√ºhrungszustand der Engine und trennt automatisch gebundene Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="622b9-198">Removes the engine from the running state and disconnects automatically bound event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResetCompiledState">
      <MemberSignature Language="C#" Value="protected override void ResetCompiledState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ResetCompiledState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ResetCompiledState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ResetCompiledState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ResetCompiledState();" />
      <MemberSignature Language="F#" Value="override this.ResetCompiledState : unit -&gt; unit" Usage="vsaEngine.ResetCompiledState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-199">Setzt den kompilierten Zustand zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="622b9-199">Resets the compiled state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Restart();" />
      <MemberSignature Language="F#" Value="abstract member Restart : unit -&gt; unit&#xA;override this.Restart : unit -&gt; unit" Usage="vsaEngine.Restart " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Restart</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-200">Hiermit wird die Engine neu gestartet.</span><span class="sxs-lookup"><span data-stu-id="622b9-200">Restarts the engine.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.Run(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Run(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="override this.Run : AppDomain -&gt; unit" Usage="vsaEngine.Run domain" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.Run(System.AppDomain)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="622b9-201">Die Anwendungsdom√§ne, in der der kompilierte Code ausgef√ºhrt werden soll.</span><span class="sxs-lookup"><span data-stu-id="622b9-201">The application domain in which to run the compiled code.</span></span></param>
        <summary><span data-ttu-id="622b9-202">F√ºhrt den kompilierten Code in der angegebenen Anwendungsdom√§ne aus.</span><span class="sxs-lookup"><span data-stu-id="622b9-202">Runs the compiled code in the specified application domain.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.RunEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RunEmpty();" />
      <MemberSignature Language="F#" Value="abstract member RunEmpty : unit -&gt; unit&#xA;override this.RunEmpty : unit -&gt; unit" Usage="vsaEngine.RunEmpty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IEngine2.RunEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-203">Diese Methode f√ºhrt den kompilierten Code in der aktuellen <see cref="T:System.AppDomain" />-Klasse aus.</span><span class="sxs-lookup"><span data-stu-id="622b9-203">Runs the compiled code in the current <see cref="T:System.AppDomain" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ScriptObjectStackTop">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject ScriptObjectStackTop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject ScriptObjectStackTop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ScriptObjectStackTop" />
      <MemberSignature Language="VB.NET" Value="Public Function ScriptObjectStackTop () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ ScriptObjectStackTop();" />
      <MemberSignature Language="F#" Value="member this.ScriptObjectStackTop : unit -&gt; Microsoft.JScript.ScriptObject" Usage="vsaEngine.ScriptObjectStackTop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="622b9-204">Diese Methode gibt das Objekt am Anfang des globalen G√ºltigkeitsbereichstapels zur√ºck, ohne es zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="622b9-204">Returns the object at the top of the global scope stack without removing it.</span></span></summary>
        <returns><span data-ttu-id="622b9-205">Dies ist das Objekt am Anfang des globalen G√ºltigkeitsbereichstapels.</span><span class="sxs-lookup"><span data-stu-id="622b9-205">The object at the top of the global scope stack.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SetCustomOption">
      <MemberSignature Language="C#" Value="protected override void SetCustomOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetCustomOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.SetCustomOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetCustomOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetCustomOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetCustomOption : string * obj -&gt; unit" Usage="vsaEngine.SetCustomOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="622b9-206">Der Name der festzulegenden Option.</span><span class="sxs-lookup"><span data-stu-id="622b9-206">The name of the option to set.</span></span></param>
        <param name="value"><span data-ttu-id="622b9-207">Der Wert f√ºr die Option, die festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="622b9-207">The value for the option being set.</span></span></param>
        <summary><span data-ttu-id="622b9-208">Legt implementierungsspezifische Optionen f√ºr die Engine fest.</span><span class="sxs-lookup"><span data-stu-id="622b9-208">Sets implementation-specific options for the engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputStream">
      <MemberSignature Language="C#" Value="public void SetOutputStream (Microsoft.JScript.IMessageReceiver output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputStream(class Microsoft.JScript.IMessageReceiver output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.SetOutputStream(Microsoft.JScript.IMessageReceiver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputStream (output As IMessageReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOutputStream(Microsoft::JScript::IMessageReceiver ^ output);" />
      <MemberSignature Language="F#" Value="abstract member SetOutputStream : Microsoft.JScript.IMessageReceiver -&gt; unit&#xA;override this.SetOutputStream : Microsoft.JScript.IMessageReceiver -&gt; unit" Usage="vsaEngine.SetOutputStream output" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IRedirectOutput.SetOutputStream(Microsoft.JScript.IMessageReceiver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="Microsoft.JScript.IMessageReceiver" />
      </Parameters>
      <Docs>
        <param name="output"><span data-ttu-id="622b9-209">Die umzuleitende Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="622b9-209">The output to redirect.</span></span></param>
        <summary><span data-ttu-id="622b9-210">Diese Methode leitet den angegebenen Ausgabestream in einen neuen Stream oder einen Datenspeicher um.</span><span class="sxs-lookup"><span data-stu-id="622b9-210">Redirects the specified output stream to a new stream or data storage.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRootMoniker">
      <MemberSignature Language="C#" Value="protected override void ValidateRootMoniker (string rootMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateRootMoniker(string rootMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.Vsa.VsaEngine.ValidateRootMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateRootMoniker (rootMoniker As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateRootMoniker(System::String ^ rootMoniker);" />
      <MemberSignature Language="F#" Value="override this.ValidateRootMoniker : string -&gt; unit" Usage="vsaEngine.ValidateRootMoniker rootMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootMoniker"><span data-ttu-id="622b9-211">Der zu √ºberpr√ºfende Stammmoniker.</span><span class="sxs-lookup"><span data-stu-id="622b9-211">The root moniker to validate.</span></span></param>
        <summary><span data-ttu-id="622b9-212">Hiermit wird der angegebene Stammmoniker √ºberpr√ºft.</span><span class="sxs-lookup"><span data-stu-id="622b9-212">Validates the specified root moniker.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
