<Namespace Name="System.Messaging">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30734694" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Messaging" />-Namespace stellt Klassen für folgende Aufgaben zur Verfügung: Herstellen von Verbindungen mit Meldungswarteschlangen im Netzwerk, Überwachen und Verwalten von Meldungswarteschlangen im Netzwerk sowie Senden, Empfangen und Einsehen von Meldungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mitglieder der <xref:System.Messaging.MessageQueue> Klasse enthalten die folgenden Methoden zum Lesen und Schreiben von Nachrichten an die Warteschlange:  
  
-   Die <xref:System.Messaging.MessageQueue.Send%2A> Methode kann die Anwendung so schreiben Sie Meldungen an die Warteschlange. Überladungen der Methode ermöglichen es Ihnen, anzugeben, ob zum Senden der Nachricht mit einem <xref:System.Messaging.Message> (ausführlichen Kontrolle der Informationen, die Sie senden) oder andere verwaltete Objekte, einschließlich der anwendungsspezifische Klassen. Die Methode unterstützt auch sendende von Nachrichten als Teil einer Transaktion.  
  
-   Die <xref:System.Messaging.MessageQueue.Receive%2A>, <xref:System.Messaging.MessageQueue.ReceiveById%2A>, und <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A> Methoden bieten Funktionen zum Lesen von Nachrichten aus einer Warteschlange. Wie die <xref:System.Messaging.MessageQueue.Send%2A> -Methode, diese Methoden bieten Überladungen, die Verarbeitung der transaktionalen Warteschlange unterstützen. Diese Methoden bieten auch Überladungen mit Timeouts.  
  
     Out-Parameter, mit denen die Verarbeitung fortgesetzt werden, wenn die Warteschlange leer ist. Da diese Methoden Beispiele für die synchrone Verarbeitung sind, unterbrechen sie den aktuellen Thread, bis eine Meldung verfügbar ist, es sei denn, Sie einen Timeout angeben.  
  
-   Die <xref:System.Messaging.MessageQueue.Peek%2A> -Methode ist vergleichbar mit <xref:System.Messaging.MessageQueue.Receive%2A>, aber es bewirkt nicht, eine Nachricht aus der Warteschlange entfernt werden soll, wenn es gelesen wird. Da <xref:System.Messaging.MessageQueue.Peek%2A> ändert sich nicht auf der Inhalt der Warteschlange, es gibt keine Überladungen transaktionsverarbeitung zu unterstützen. Aber da <xref:System.Messaging.MessageQueue.Peek%2A>, z. B. <xref:System.Messaging.MessageQueue.Receive%2A>, Nachrichten synchron aus der Warteschlange liest, Überladungen der Methode werden einen Timeout angeben, um zu verhindern, dass den Thread wartet auf unbestimmte Zeit unterstützt.  
  
-   Die <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>, <xref:System.Messaging.MessageQueue.BeginReceive%2A>, und <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> Methoden bieten Möglichkeiten zum asynchronen Lesen von Nachrichten aus der Warteschlange. Unterbrechen sie den aktuellen Thread nicht während des Wartens auf einer Nachricht in der Warteschlange eintrifft.  
  
 Die folgenden Methoden der der <xref:System.Messaging.MessageQueue> -Klasse bieten Funktionen zum Abrufen von Listen von Warteschlangen durch die angegebenen Kriterien und bestimmen, ob ein bestimmter Warteschlangen:  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> ermöglicht das Abrufen der privaten Warteschlangen auf einem Computer.  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, und <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> bieten Möglichkeiten zum Abrufen von öffentlichen Warteschlangen durch common Criteria. Eine Überladung der <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> ermöglicht eine noch genauere Auswahl von Warteschlangen basierend auf einer Reihe von Suchkriterien.  
  
 Andere Methoden der <xref:System.Messaging.MessageQueue> Klasse die folgenden Funktionen enthalten:  
  
-   Erstellen und Löschen von Message Queuing-Warteschlangen.  
  
-   Verwenden einen Enumerator für die Nachricht, durchlaufen die Nachrichten in einer Warteschlange.  
  
-   Verwenden einen Warteschlangen-Enumerator zum Durchlaufen der Warteschlangen auf dem System.  
  
-   Festlegen von ACL-basierte Zugriffsrechte.  
  
-   Arbeiten mit den Verbindungscache.  
  
 Die <xref:System.Messaging.Message> Klasse bietet detaillierte Kontrolle über die Informationen, die Sie an eine Warteschlange senden aus, und das Objekt wird nur verwendet werden, wenn aus einer Warteschlange empfangen oder Einsehen von Nachrichten. Neben dem Nachrichtentext und die Eigenschaften der <xref:System.Messaging.Message> Klasse zählen bestätigungseinstellungen, Formatierungsprogramm Auswahl, Identifizierung, Authentifizierung und Verschlüsselung, Zeitstempel, sowie Angaben zur Verwendung der Ablaufverfolgung, Server Journalfunktion, und unzustellbare Warteschlangen und Transaktionsdaten.  
  
 Die <xref:System.Messaging.MessageQueue> Komponente bezieht sich auf die folgenden drei Formatierer, dadurch können Sie zum Serialisieren und Deserialisieren von Nachrichten gesendet und Empfangen von Warteschlangen:  
  
-   Die <xref:System.Messaging.XmlMessageFormatter> bietet lose gekoppelten messaging, voneinander unabhängige Versionen serialisierten Typen auf dem Client und Server zu aktivieren.  
  
-   Die <xref:System.Messaging.ActiveXMessageFormatter> ist kompatibel mit dem MSMQ-COM-Steuerelement. Sie können zum Senden von Typen, die vom Steuerelement empfangen werden können und das Empfangen von Typen, die vom Steuerelement gesendet wurden.  
  
-   Die <xref:System.Messaging.BinaryMessageFormatter> bietet eine schnellere Alternative zu den <xref:System.Messaging.XmlMessageFormatter>, jedoch nicht den Vorteil lose verknüpften Messaging.  
  
 Andere Klassen in der `Messaging` Namespaces unterstützt den Codezugriff und ACL-basierte Sicherheit, Filterung <xref:System.Messaging.Message> Eigenschaften, die beim Lesen von Nachrichten aus einer Warteschlange, und Verwenden von Transaktionen, die beim Senden und Empfangen von Nachrichten.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>