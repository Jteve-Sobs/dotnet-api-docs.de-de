<Namespace Name="System.Messaging">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70626802" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Messaging" />-Namespace stellt Klassen für folgende Aufgaben zur Verfügung: Herstellen von Verbindungen mit Meldungswarteschlangen im Netzwerk, Überwachen und Verwalten von Meldungswarteschlangen im Netzwerk sowie Senden, Empfangen und Einsehen von Meldungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Member der <xref:System.Messaging.MessageQueue> -Klasse umfassen die folgenden Methoden zum Lesen und Schreiben von Nachrichten in der Warteschlange:  
  
-   Die <xref:System.Messaging.MessageQueue.Send%2A> -Methode ermöglicht der Anwendung das Schreiben von Nachrichten in die Warteschlange. Mithilfe von über Ladungen der-Methode können Sie angeben, ob Ihre Nachricht mit einem <xref:System.Messaging.Message> (das eine ausführliche Kontrolle über die gesendeten Informationen bietet) oder mit einem beliebigen anderen verwalteten Objekt (einschließlich anwendungsspezifischer Klassen) gesendet werden soll. Die-Methode unterstützt auch das Senden von Nachrichten als Teil einer Transaktion.  
  
-   Die <xref:System.Messaging.MessageQueue.Receive%2A>Methoden <xref:System.Messaging.MessageQueue.ReceiveById%2A>, und <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>  stellen Funktionen zum Lesen von Nachrichten aus einer Warteschlange bereit. Wie die <xref:System.Messaging.MessageQueue.Send%2A> -Methode stellen diese Methoden über Ladungen bereit, die die Verarbeitung transaktionaler Warteschlangen unterstützen. Diese Methoden bieten auch über Ladungen mit Timeouts.  
  
     Out-Parameter, die die Verarbeitung fortsetzen können, wenn die Warteschlange leer ist. Da diese Methoden Beispiele für die synchrone Verarbeitung sind, unterbrechen Sie den aktuellen Thread, bis eine Meldung verfügbar ist, es sei denn, Sie geben ein Timeout an.  
  
-   Die <xref:System.Messaging.MessageQueue.Peek%2A> -Methode <xref:System.Messaging.MessageQueue.Receive%2A>ähnelt, führt jedoch nicht dazu, dass eine Meldung beim Lesen aus der Warteschlange entfernt wird. Da <xref:System.Messaging.MessageQueue.Peek%2A> den Inhalt der Warteschlange nicht ändert, sind keine über Ladungen vorhanden, um die Transaktionsverarbeitung zu unterstützen. Da z. <xref:System.Messaging.MessageQueue.Peek%2A>b. <xref:System.Messaging.MessageQueue.Receive%2A>Nachrichten synchron aus der Warteschlange liest, unterstützen über Ladungen der-Methode die Angabe eines Timeouts, um zu verhindern, dass der Thread unbegrenzt wartet.  
  
-   Die <xref:System.Messaging.MessageQueue.BeginPeek%2A>Methoden <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>, , <xref:System.Messaging.MessageQueue.BeginReceive%2A>  und <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>  bieten Möglichkeiten zum asynchronen Lesen von Nachrichten aus der Warteschlange. Der aktuelle Thread wird nicht unterbrochen, während darauf gewartet wird, dass eine Nachricht in der Warteschlange eintrifft.  
  
 Die folgenden Methoden der <xref:System.Messaging.MessageQueue> -Klasse stellen Funktionen zum Abrufen von Warteschlangen Listen nach angegebenen Kriterien bereit und bestimmen, ob bestimmte Warteschlangen vorhanden sind:  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>ermöglicht das Abrufen der privaten Warteschlangen auf einem Computer.  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> und <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>  bieten Möglichkeiten, öffentliche Warteschlangen nach allgemeinen Kriterien abzurufen. Eine Überladung <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> von bietet noch genauere Details zum Auswählen von Warteschlangen basierend auf einer Reihe von Suchkriterien.  
  
 Andere Methoden der <xref:System.Messaging.MessageQueue> -Klasse bieten die folgenden Funktionen:  
  
-   Erstellen und Löschen von Message Queuing-Warteschlangen.  
  
-   Verwenden eines nachrichtenenumerators, um die Nachrichten in einer Warteschlange schrittweise zu durchlaufen.  
  
-   Verwenden eines Warteschlangen Enumerators zum Durchlaufen der Warteschlangen auf dem System.  
  
-   Festlegen von ACL-basierten Zugriffsrechten.  
  
-   Arbeiten mit dem Verbindungs Cache.  
  
 Die <xref:System.Messaging.Message> -Klasse bietet eine ausführliche Kontrolle über die Informationen, die Sie an eine Warteschlange senden, und ist das Objekt, das verwendet wird, um Nachrichten aus einer Warteschlange zu empfangen oder per Peer Neben dem Nachrichtentext enthalten die Eigenschaften <xref:System.Messaging.Message> der-Klasse Bestätigungs Einstellungen, Formatierungs Auswahl, Identifikation, Authentifizierungs-und Verschlüsselungs Informationen, Zeitstempel, Hinweise zur Verwendung von Ablauf Verfolgung, Server Journalisierung und Warteschlangen für unzustellbare Nachrichten und Transaktionsdaten.  
  
 Die <xref:System.Messaging.MessageQueue> Komponente ist den folgenden drei Formatierungen zugeordnet, mit denen Sie Nachrichten, die von Warteschlangen gesendet und empfangen werden, serialisieren und deserialisieren können:  
  
-   <xref:System.Messaging.XmlMessageFormatter> Bietet lose gekoppelte Messaging und ermöglicht eine unabhängige Versionsverwaltung serialisierter Typen auf dem Client und dem Server.  
  
-   Der <xref:System.Messaging.ActiveXMessageFormatter> ist kompatibel mit dem MSMQ-COM-Steuerelement. Es ermöglicht Ihnen das Senden von Typen, die vom Steuerelement empfangen werden können, sowie das Empfangen von Typen, die vom Steuerelement gesendet wurden.  
  
-   Bietet eine schnellere Alternative <xref:System.Messaging.XmlMessageFormatter>zum, aber ohne den Vorteil von locker gekoppelten Nachrichten. <xref:System.Messaging.BinaryMessageFormatter>  
  
 Andere Klassen im- `Messaging` Namespace unterstützen die Code Zugriffs-und ACL-basierte Sicherheit <xref:System.Messaging.Message> , das Filtern von Eigenschaften beim Lesen von Nachrichten aus einer Warteschlange und das Verwenden von Transaktionen beim Senden und empfangen von Nachrichten.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>