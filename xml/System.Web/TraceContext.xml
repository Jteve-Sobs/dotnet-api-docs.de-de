<Type Name="TraceContext" FullName="System.Web.TraceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2993d7c9d30be540dfaea3a7d782ca96c1e45082" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51882467" /></Metadata><TypeSignature Language="C#" Value="public sealed class TraceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContext sealed" />
  <TypeSignature Language="F#" Value="type TraceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Erfasst und präsentiert Ausführungsdetails über eine Webanforderung. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Klasse verwenden, um Nachrichten an bestimmte Ablaufverfolgungskategorien angefügt werden soll. Beispielsweise wird bei der Erstellung einer Instanz von der <xref:System.Web.UI.WebControls.Calendar> Klasse für Ihre Anwendung können Sie die ablaufverfolgungsnachricht "Zum Rendern starten" in eine Rendering-Prozedur, und "OnChange-Ereignis auslösen" einschließen, in einer Ereignishandlerprozedur.  
  
 Sie können auch die <xref:System.Web.TraceContext> Klasse, um einen Satz von Ablaufverfolgungsdatensätzen am Ende der anforderungsausführung zur benutzerdefinierten Verarbeitung zu erhalten. Weitere Informationen finden Sie unter [ASP.NET Tracing Overview](https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 Legen Sie zum Aktivieren der Ablaufverfolgung die `Trace` -Attribut in der [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) Richtlinie oder die <xref:System.Web.TraceContext.IsEnabled%2A> Eigenschaft `true`. Wenn die Ablaufverfolgung aktiviert ist, zusätzlich zum Anzeigen der vom Benutzer bereitgestellte Ablaufverfolgungsinhalt, die <xref:System.Web.UI.Page> Klasse automatisch enthält, Leistungsdaten, Steuerelementstruktur Strukturinformationen und State Management-Inhalten für jede Anforderung.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="T:System.Web.TraceContextRecord" />
    <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContext : System.Web.HttpContext -&gt; System.Web.TraceContext" Usage="new System.Web.TraceContext context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />, der Informationen über die aktuelle Webanforderung enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.TraceContext" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Web.TraceContext.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wert ab, der angibt, ob die Ablaufverfolgung für die aktuelle Webanforderung aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ablaufverfolgung aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Flag, um zu überprüfen, ob die Seite oder Anwendung Ablaufverfolgungsinformationen ausgeben soll, bevor etwas in das Ablaufverfolgungsprotokoll geschrieben.  
  
 Der Wert des der <xref:System.Web.TraceContext.IsEnabled%2A> Eigenschaft hängt von den Einstellungen in den Unterabschnitt der der `system.web` Konfigurationsabschnitt und den Wert des der `trace` Attribut der Richtlinie. Die Ablaufverfolgung-Option, die in der Seitendirektive festgelegt haben Vorrang vor der Option in der Konfigurationsdatei. Festlegen der <xref:System.Web.TraceContext.IsEnabled%2A> Wert hat Vorrang vor programmgesteuert über die Page-Direktive-Attribut und die Konfigurationseinstellung.  
  
> [!NOTE]
>  Setzen Sie die <xref:System.Web.TraceContext.IsEnabled%2A> Eigenschaft `true` für eine gesamte Anwendung, müssen Sie diese Eigenschaft dann explizit festlegen, um `false` für eine beliebige Seite in der Anwendung, die für die Sie nicht Ablaufverfolgungsinformationen angezeigt möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie ermitteln, ob die Ablaufverfolgung für eine Seite aktiviert ist. Der Code durchläuft die Zeilen in einem Dataset, das Schreiben von Trace-Anweisungen für jede Zeile im Dataset ab.  
  
 [!code-csharp[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/CS/source.cs#1)]
 [!code-vb[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7931c942-63c1-47c3-a045-9d9de3cacdbf">&lt;Ablaufverfolgung&gt; Element</related>
      </Docs>
    </Member>
    <Member MemberName="TraceFinished">
      <MemberSignature Language="C#" Value="public event System.Web.TraceContextEventHandler TraceFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.TraceContextEventHandler TraceFinished" />
      <MemberSignature Language="DocId" Value="E:System.Web.TraceContext.TraceFinished" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TraceFinished As TraceContextEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::TraceContextEventHandler ^ TraceFinished;" />
      <MemberSignature Language="F#" Value="member this.TraceFinished : System.Web.TraceContextEventHandler " Usage="member this.TraceFinished : System.Web.TraceContextEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContextEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird vom <see cref="T:System.Web.TraceContext" />-Objekt ausgelöst, um die Ablaufverfolgungsmeldungen nach dem Erfassen aller Anforderungsinformationen verfügbar zu machen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.TraceContext.TraceFinished> Ereignis wird ausgelöst, während die `EndRequest` Phase der Verarbeitung der HTTP-Anforderung. Es wird ausgelöst, indem eine <xref:System.Web.TraceContext> Objekt nach dem Erfassen aller Anforderungsinformationen ist, um die Auflistung der verfügbar zu machen, <xref:System.Web.TraceContextRecord> Nachrichten registriert <xref:System.Web.TraceContextEventHandler> Delegaten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie registrieren, können eine <xref:System.Web.TraceContextEventHandler> , behandeln die <xref:System.Web.TraceContext.TraceFinished> Ereignis. In diesem Beispiel wird der Delegat die Ablaufverfolgungsmeldungen durchläuft und schreibt sie in den Antwortstream; Sie können jedoch die gleiche Informationen mit einer Datenbank oder einer profilerstellung Tool Consumer schreiben.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContextEventArgs" />
        <altmember cref="T:System.Web.TraceContextRecord" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.TraceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceMode As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceMode { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberSignature Language="F#" Value="member this.TraceMode : System.Web.TraceMode with get, set" Usage="System.Web.TraceContext.TraceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sortierreihenfolge ab, in der Ablaufverfolgungsanweisungen an einen anfordernden Browser ausgegeben werden sollen, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.TraceMode" />-Enumerationswerte. Die Standardeinstellung wird durch das <see langword="traceMode" />-Attribut im <see langword="trace" />-Abschnitt einer Konfigurationsdatei festgelegt, deren Standardwert <see langword="SortByTime" /> ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Meldungen zur Ablaufverfolgung können sortiert werden, in der Reihenfolge, in die sie verarbeitet wurden oder alphabetisch nach benutzerdefinierten Kategorien.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einer Seite Trace-Anweisungen alphabetisch nach Kategorien sortieren können, die Sie die Anweisungen zugewiesen haben.  
  
 [!code-aspx-csharp[Classic TraceContext.TraceMode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TraceContext.TraceMode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.TraceMode" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warn">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsinformationen in das Ablaufverfolgungsprotokoll. Im Gegensatz zu <see cref="M:System.Web.TraceContext.Write(System.String)" /> werden alle Warnungen im Protokoll mit rotem Text angezeigt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Warn : string -&gt; unit" Usage="traceContext.Warn message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt eine Ablaufverfolgungsmeldung in das Ablaufverfolgungsprotokoll. Alle Warnungen werden im Protokoll mit rotem Text angezeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Warn%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `true` und die zugehörige <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaft auf festgelegt `null`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Warn : string * string -&gt; unit" Usage="traceContext.Warn (category, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Die Ablaufverfolgungskategorie, die die Meldung empfängt.</param>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, einschließlich aller benutzerdefinierten Kategorien und Ablaufverfolgungsmeldungen, in das Ablaufverfolgungsprotokoll. Alle Warnungen werden im Protokoll mit rotem Text angezeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Warn%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `true` und die zugehörige <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaft auf festgelegt `null`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="member this.Warn : string * string * Exception -&gt; unit" Usage="traceContext.Warn (category, message, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Die Ablaufverfolgungskategorie, die die Meldung empfängt.</param>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <param name="errorInfo">Eine <see cref="T:System.Exception" />, die Informationen über den Fehler enthält.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, einschließlich aller benutzerdefinierten Kategorien, Ablaufverfolgungsmeldungen und Fehlerinformationen, in das Ablaufverfolgungsprotokoll. Alle Warnungen werden im Protokoll mit rotem Text angezeigt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Warn%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `true`, und die <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaftensatz auf das Objekt übergeben, indem die `errorInfo` Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.TraceContext.Write%2A> Methode, um eine Fehlermeldung für die Ablaufverfolgung in das Ablaufverfolgungsprotokoll geschrieben. In diesem Beispiel werden verschiedene Ausnahmen als Fehler und Warnungen verfolgt. Wenn die Seite auslöst ein <xref:System.ArgumentException>, schreibt eine Warnung mithilfe der <xref:System.Web.TraceContext.Warn%2A> Methode. Wenn die Seite auslöst ein <xref:System.InvalidOperationException>, schreibt eine Fehlermeldung mit dem <xref:System.Web.TraceContext.Write%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt Ablaufverfolgungsinformationen in das Ablaufverfolgungsprotokoll.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="traceContext.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt eine Ablaufverfolgungsmeldung in das Ablaufverfolgungsprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Write%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `false` und die zugehörige <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaft auf festgelegt `null`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Write : string * string -&gt; unit" Usage="traceContext.Write (category, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Die Ablaufverfolgungskategorie, die die Meldung empfängt.</param>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, einschließlich einer Meldung und aller benutzerdefinierten Kategorien, in das Ablaufverfolgungsprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Write%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `false` und die zugehörige <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaft auf festgelegt `null`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.TraceContext.Write%2A> Methode, um eine Fehlermeldung für die Ablaufverfolgung in das Ablaufverfolgungsprotokoll geschrieben. In diesem Beispiel wird der Delegat die Ablaufverfolgungsmeldungen durchläuft und schreibt sie als HTML-Tabelle; Allerdings können Sie die gleiche Informationen in eine Datenbank oder einer profilerstellung Tool Consumer schreiben.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="member this.Write : string * string * Exception -&gt; unit" Usage="traceContext.Write (category, message, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Die Ablaufverfolgungskategorie, die die Meldung empfängt.</param>
        <param name="message">Die in das Protokoll zu schreibende Ablaufverfolgungsmeldung.</param>
        <param name="errorInfo">Eine <see cref="T:System.Exception" />, die Informationen über den Fehler enthält.</param>
        <summary>Schreibt Ablaufverfolgungsinformationen, einschließlich aller benutzerdefinierten Kategorien, Ablaufverfolgungsmeldungen und Fehlerinformationen, in das Ablaufverfolgungsprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die <xref:System.Web.TraceContext.Write%2A> -Methode aufgerufen wird, eine <xref:System.Web.TraceContext> Ablaufverfolgungsmeldung wird hinzugefügt. die <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> -Auflistung, die verfügbar ist, wenn Sie verarbeiten von Nachrichten die <xref:System.Web.TraceContext.TraceFinished> Ereignis. Die Meldung wird hinzugefügt, mit dessen <xref:System.Web.TraceContextRecord.IsWarning%2A> -Eigenschaft auf festgelegt `false`, und die <xref:System.Web.TraceContextRecord.ErrorInfo%2A> -Eigenschaftensatz auf das Objekt übergeben, indem die `errorInfo` Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Web.TraceContext.Write%2A> Methode, um eine Fehlermeldung für die Ablaufverfolgung in das Ablaufverfolgungsprotokoll geschrieben. In diesem Beispiel werden verschiedene Ausnahmen als Fehler und Warnungen verfolgt. Wenn die Seite auslöst ein <xref:System.ArgumentException>, schreibt eine Warnung mithilfe der <xref:System.Web.TraceContext.Warn%2A> Methode. Wenn die Seite auslöst ein <xref:System.InvalidOperationException>, schreibt eine Fehlermeldung mit dem <xref:System.Web.TraceContext.Write%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Übersicht über die ASP.NET-Ablaufverfolgung</related>
      </Docs>
    </Member>
  </Members>
</Type>