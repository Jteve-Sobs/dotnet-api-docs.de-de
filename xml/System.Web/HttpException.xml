<Type Name="HttpException" FullName="System.Web.HttpException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7905d3d848180d81c3583ba77b11bbeac228d644" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpException" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type HttpException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1b75d-101">Beschreibt eine Ausnahme, die während der Verarbeitung der HTTP-Anforderungen aufgetreten ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b75d-101">Describes an exception that occurred during the processing of HTTP requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-102">Die <xref:System.Web.HttpException> -Klasse ist eine HTTP-spezifische Ausnahmeklasse, die ASP.NET ermöglicht, Ausnahmeinformationen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="1b75d-102">The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information.</span></span> <span data-ttu-id="1b75d-103">Weitere Informationen zum Auslösen und Behandeln von Ausnahmen finden Sie unter [Ausnahmen](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span><span class="sxs-lookup"><span data-stu-id="1b75d-103">For more information about throwing and handling exceptions, see [Exceptions](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b75d-104">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.HttpException> Klasse benutzerdefinierte Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-104">The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions.</span></span> <span data-ttu-id="1b75d-105">Die `Button_Click` Methode bestimmt, welches Steuerelement die Schaltfläche geklickt wurde, und ruft dann die `CheckNumber` oder `CheckBoolean` Methode.</span><span class="sxs-lookup"><span data-stu-id="1b75d-105">The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method.</span></span> <span data-ttu-id="1b75d-106">Wenn der Benutzer eingegebenen Wert in das Textfeld nicht dem erwarteten Typ entspricht einem <xref:System.Web.HttpException> Ausnahme wird erstellt und mit einer benutzerdefinierten Meldung, die basierend auf den Fehler ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1b75d-106">If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-107">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-108">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-109">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-109">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]
 [!code-aspx-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1b75d-110">Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-110">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b75d-111">Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse und erstellt ein leeres <see cref="T:System.Web.HttpException" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-111">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class and creates an empty <see cref="T:System.Web.HttpException" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-112">Bei der Behandlung von Ausnahmen kann es sinnvoll, eine Reihe von verwandten Ausnahmen mit der äußeren Ausnahme ausgelöst wird, als Antwort auf eine interne Ausnahme zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-112">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="1b75d-113">Ein Verweis auf die innere Ausnahme, die die äußeren Ausnahme verursacht hat steht über die <xref:System.Exception.InnerException%2A> -Eigenschaft der äußeren Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="1b75d-113">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="1b75d-114">Dieser Mechanismus behält die Fehlerinformationen, die von früheren Ausnahmen, z. B. die ursprünglichen Ausnahmen beim ermöglicht Ihnen die Erstellung von aussagekräftigere äußerer Ausnahmen übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="1b75d-114">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="1b75d-115">Weitere Informationen finden Sie unter <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="1b75d-115">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b75d-116">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-116">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-117">Die `CheckNumber` Methode akzeptiert einen vom Benutzer eingegebenen Wert über ein Textfeld, und überprüft, ob es sich um eine ganze Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-117">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="1b75d-118">Wenn der Wert keine ganze Zahl ist, wird eine Ausnahme ausgelöst, und klicken Sie dann eine neue <xref:System.Web.HttpException> Objekt erstellt und ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1b75d-118">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="1b75d-119">Dass die Ausnahme abgefangen wird, in der `Button_Click` -Ereignishandler und die Fehlermeldung wird im Browser angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b75d-119">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-120">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-120">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-121">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-121">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-122">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-122">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string -&gt; System.Web.HttpException" Usage="new System.Web.HttpException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1b75d-123">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-123">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-124">Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse mit der angegebenen Fehlermeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-124">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using a supplied error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b75d-125">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-125">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-126">Ein <xref:System.Web.HttpException> wird ausgelöst, wenn ein vom Benutzer eingegebenen Wert 0 ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-126">An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-127">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-127">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-128">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-128">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-129">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-129">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="1b75d-130">Der HTTP-Antwortstatuscode, der entsprechend diesem Fehler an den Client gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-130">The HTTP response status code sent to the client corresponding to this error.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="1b75d-131">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-131">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-132">Initialisiert mit dem HTTP-Antwortstatuscode und einer Fehlermeldung eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-132">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code and an error message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="1b75d-133">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1b75d-134">Der <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit Kontextinformationen zu Quelle oder Ziel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-135">Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse mit serialisierten Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-135">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-136">Die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor wird während der Deserialisierung, das über einen Stream übertragene Ausnahmeobjekt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-136">The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span> <span data-ttu-id="1b75d-137">Weitere Informationen finden Sie unter [XML- und SOAP-Serialisierung](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="1b75d-137">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string * Exception -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1b75d-138">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-138">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="1b75d-139">Die ggf. vorhandene <see cref="P:System.Exception.InnerException" />, die die aktuelle Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-139">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-140">Initialisiert mit einer Fehlermeldung und der <see cref="T:System.Web.HttpException" />-Eigenschaft eine neue Instanz der <see cref="P:System.Exception.InnerException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-140">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-141">Bei der Behandlung von Ausnahmen kann es sinnvoll, eine Reihe von verwandten Ausnahmen mit der äußeren Ausnahme ausgelöst wird, als Antwort auf eine interne Ausnahme zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-141">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="1b75d-142">Ein Verweis auf die innere Ausnahme, die die äußeren Ausnahme verursacht hat steht über die <xref:System.Exception.InnerException%2A> -Eigenschaft der äußeren Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="1b75d-142">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="1b75d-143">Dieser Mechanismus behält die Fehlerinformationen, die von früheren Ausnahmen, z. B. die ursprünglichen Ausnahmen beim ermöglicht Ihnen die Erstellung von aussagekräftigere äußerer Ausnahmen übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="1b75d-143">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="1b75d-144">Weitere Informationen finden Sie unter <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="1b75d-144">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b75d-145">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-145">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-146">Die `CheckNumber` Methode akzeptiert einen vom Benutzer eingegebenen Wert über ein Textfeld, und überprüft, ob es sich um eine ganze Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-146">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="1b75d-147">Wenn der Wert keine ganze Zahl ist, wird eine Ausnahme ausgelöst, und klicken Sie dann im Catch-Block ein neues <xref:System.Web.HttpException> Objekt erstellt und ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1b75d-147">If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="1b75d-148">Dass die Ausnahme abgefangen wird, in der `Button_Click` -Ereignishandler und die Fehlermeldung wird im Browser angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b75d-148">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-149">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-149">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-150">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-150">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-151">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-151">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, int hr);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string * int -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (message, hr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1b75d-152">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-152">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="1b75d-153">Der Ausnahmecode, der den Fehler definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-153">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-154">Initialisiert mithilfe einer Fehlermeldung und einem Ausnahmecode eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-154">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b75d-155">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-155">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-156">Ein <xref:System.Web.HttpException> Ausnahme wird ausgelöst, wenn ein vom Benutzer eingegebenen Wert 0 ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-156">An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-157">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-157">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-158">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-158">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-159">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-159">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string * Exception -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="1b75d-160">Der HTTP-Antwortstatuscode, der auf dem Client angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-160">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="1b75d-161">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-161">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="1b75d-162">Die ggf. vorhandene <see cref="P:System.Exception.InnerException" />, die die aktuelle Ausnahme ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-162">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-163">Initialisiert mit dem HTTP-Antwortstatuscode, einer Fehlermeldung und der <see cref="T:System.Web.HttpException" />-Eigenschaft eine neue Instanz der <see cref="P:System.Exception.InnerException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-163">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-164">Bei der Behandlung von Ausnahmen kann es sinnvoll, eine Reihe von verwandten Ausnahmen mit der äußeren Ausnahme ausgelöst wird, als Antwort auf eine interne Ausnahme zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-164">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="1b75d-165">Ein Verweis auf die innere Ausnahme, die die äußeren Ausnahme verursacht hat steht über die <xref:System.Exception.InnerException%2A> -Eigenschaft der äußeren Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="1b75d-165">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="1b75d-166">Dieser Mechanismus behält die Fehlerinformationen, die von früheren Ausnahmen, z. B. die ursprünglichen Ausnahmen beim ermöglicht Ihnen die Erstellung von aussagekräftigere äußerer Ausnahmen übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="1b75d-166">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="1b75d-167">Weitere Informationen finden Sie unter <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="1b75d-167">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b75d-168">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-168">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-169">Die `CheckNumber` Methode akzeptiert einen vom Benutzer eingegebenen Wert und überprüft, ob es sich um eine ganze Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-169">The `CheckNumber` method accepts a user-entered value and checks whether it is an integer.</span></span> <span data-ttu-id="1b75d-170">Wenn der Wert keine ganze Zahl ist, wird eine Ausnahme ausgelöst, und klicken Sie dann eine neue <xref:System.Web.HttpException> Objekt mit den Statuscode der HTTP-Antwort, die Ausnahmemeldung und alle inneren Ausnahmen wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="1b75d-170">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created.</span></span> <span data-ttu-id="1b75d-171">Dass die Ausnahme abgefangen wird, in der `Button_Click` -Ereignishandler und die Fehlermeldung, Fehlercode und die innere Ausnahme werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b75d-171">That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-172">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-172">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-173">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-173">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-174">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-174">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, int hr);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string * int -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message, hr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="1b75d-175">Der HTTP-Antwortstatuscode, der auf dem Client angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-175">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="1b75d-176">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-176">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="1b75d-177">Der Ausnahmecode, der den Fehler definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-177">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-178">Initialisiert mit dem HTTP-Antwortstatuscode, einer Fehlermeldung und einem Ausnahmecode eine neue Instanz der <see cref="T:System.Web.HttpException" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-178">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b75d-179">Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpException.%23ctor%2A> Konstruktor, der die <xref:System.Web.HttpException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="1b75d-179">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="1b75d-180">Name und e-Mail-Benutzerinformationen sind vom Benutzer in die bereitgestellten Textfelder eingegeben.</span><span class="sxs-lookup"><span data-stu-id="1b75d-180">The user name and email information are entered by the user in the provided text boxes.</span></span> <span data-ttu-id="1b75d-181">Wenn keines der Textfelder leer bleibt, wird ein <xref:System.Web.HttpException> Objekt erstellt und ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1b75d-181">If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="1b75d-182">Der Fehlercode, der die <xref:System.Web.HttpException> erhalten, indem Sie die <xref:System.Web.HttpException.GetHttpCode%2A> Methode und auf der Webseite angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1b75d-182">The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b75d-183">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="1b75d-183">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1b75d-184">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="1b75d-184">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1b75d-185">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="1b75d-185">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromLastError">
      <MemberSignature Language="C#" Value="public static System.Web.HttpException CreateFromLastError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpException CreateFromLastError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.CreateFromLastError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLastError (message As String) As HttpException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpException ^ CreateFromLastError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member CreateFromLastError : string -&gt; System.Web.HttpException" Usage="System.Web.HttpException.CreateFromLastError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1b75d-186">Die Fehlermeldung, die dem Client beim Auslösen der Ausnahme angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-186">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-187">Erstellt eine neue <see cref="T:System.Web.HttpException" />-Ausnahme auf Grundlage des Fehlercodes, der von der <see langword="GetLastError()" />-Win32-API-Methode zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-187">Creates a new <see cref="T:System.Web.HttpException" /> exception based on the error code that is returned from the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b75d-188">Eine auf dem Fehlercode basierende <see cref="T:System.Web.HttpException" />, die bei einem Aufruf der <see langword="GetLastError()" />-Methode der Win32-API zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-188">An <see cref="T:System.Web.HttpException" /> based on the error code that is returned from a call to the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHtmlErrorMessage">
      <MemberSignature Language="C#" Value="public string GetHtmlErrorMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlErrorMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHtmlErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlErrorMessage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlErrorMessage();" />
      <MemberSignature Language="F#" Value="member this.GetHtmlErrorMessage : unit -&gt; string" Usage="httpException.GetHtmlErrorMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b75d-189">Ruft die HTML-Fehlermeldung ab, die an den Client zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-189">Gets the HTML error message to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b75d-190">Die HTML-Fehlermeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-190">The HTML error message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpCode">
      <MemberSignature Language="C#" Value="public int GetHttpCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHttpCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHttpCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHttpCode();" />
      <MemberSignature Language="F#" Value="member this.GetHttpCode : unit -&gt; int" Usage="httpException.GetHttpCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b75d-191">Ruft den HTTP-Antwortstatuscode ab, der an den Client zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-191">Gets the HTTP response status code to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b75d-192">Ein HTTP-Code ungleich 0 (null), der die Ausnahme darstellt oder der <see cref="P:System.Exception.InnerException" />-Code, andernfalls der HTTP-Antwortstatuscode 500.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-192">A non-zero HTTP code representing the exception or the <see cref="P:System.Exception.InnerException" /> code; otherwise, HTTP response status code 500.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-193">Wenn ein HTTP-Code ungleich 0 (null) vorhanden ist, wird es zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1b75d-193">If there is a non-zero HTTP code, it is returned.</span></span> <span data-ttu-id="1b75d-194">Andernfalls die <xref:System.Exception.InnerException%2A> Code wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1b75d-194">Otherwise, the <xref:System.Exception.InnerException%2A> code is returned.</span></span> <span data-ttu-id="1b75d-195">Wenn weder ein <xref:System.Exception.InnerException%2A> Code noch nicht 0 (null) HTTP-Code verfügbar ist, wird der HTTP-Antwort-Statuscode 500 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1b75d-195">If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned.</span></span> <span data-ttu-id="1b75d-196">Weitere Informationen zu HTTP-Antwortstatuscodes, finden Sie unter den Statuscodedefinitionen des Hypertext Transfer Protocol - HTTP/1.1 auf der ganzen Welt [Wide Web Consortium (W3C) Website](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="1b75d-196">For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="httpException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="1b75d-197">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-197">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1b75d-198">Der <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit Kontextinformationen zu Quelle oder Ziel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-198">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b75d-199">Ruft Informationen zu der Ausnahme ab und fügt sie dem <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-199">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b75d-200">Die <xref:System.Web.HttpException.GetObjectData%2A> Methode fügt Informationen über die Ausnahme, die <xref:System.Runtime.Serialization.SerializationInfo> -Objekt, das für die Serialisierung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="1b75d-200">The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="1b75d-201">Während der Deserialisierung wird die Ausnahme von übertragenen der <xref:System.Runtime.Serialization.SerializationInfo> , die über den Stream übertragen wird.</span><span class="sxs-lookup"><span data-stu-id="1b75d-201">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="WebEventCode">
      <MemberSignature Language="C#" Value="public int WebEventCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WebEventCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpException.WebEventCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebEventCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WebEventCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WebEventCode : int" Usage="System.Web.HttpException.WebEventCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b75d-202">Ruft die Ereigniscodes ab, die der HTTP-Ausnahme zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-202">Gets the event codes that are associated with the HTTP exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1b75d-203">Eine ganze Zahl, die einen Webereigniscode darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b75d-203">An integer representing a Web event code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>