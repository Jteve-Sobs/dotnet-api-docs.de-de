<Type Name="HttpBrowserCapabilitiesBase" FullName="System.Web.HttpBrowserCapabilitiesBase">
  <TypeSignature Language="C#" Value="public abstract class HttpBrowserCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpBrowserCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpBrowserCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpBrowserCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpBrowserCapabilitiesBase abstract : System::Web::UI::IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4b2cf-101">Dient als Basisklasse für Klassen, die dem Server das Sammeln von Informationen über die Funktionen des Browsers ermöglichen, von dem die aktuelle Anforderung stammt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-101">Serves as the base class for classes that enable the server to gather information about the capabilities of the browser that made the current request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b2cf-102">Die <xref:System.Web.HttpBrowserCapabilitiesBase> Klasse ist eine abstrakte Klasse, die dieselben Member wie enthält die <xref:System.Web.HttpBrowserCapabilities> Klasse.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-102">The <xref:System.Web.HttpBrowserCapabilitiesBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpBrowserCapabilities> class.</span></span> <span data-ttu-id="4b2cf-103">Die <xref:System.Web.HttpBrowserCapabilitiesBase> -Klasse können Sie abgeleitete Klassen erstellen, die auch die <xref:System.Web.HttpBrowserCapabilities> -Klasse jedoch, die Sie anpassen können und außerhalb der ASP.NET-Pipeline arbeiten.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-103">The <xref:System.Web.HttpBrowserCapabilitiesBase> class enables you to create derived classes that are like the <xref:System.Web.HttpBrowserCapabilities> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="4b2cf-104">Beim Ausführen von Komponententests verwenden Sie in der Regel eine abgeleitete Klasse auf um Member mit angepasstem Verhalten zu implementieren, die das Szenario erfüllt, das Sie testen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="4b2cf-105">Die <xref:System.Web.HttpBrowserCapabilitiesWrapper>-Klasse wird aus der <xref:System.Web.HttpBrowserCapabilitiesBase>-Klasse abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-105">The <xref:System.Web.HttpBrowserCapabilitiesWrapper> class derives from the <xref:System.Web.HttpBrowserCapabilitiesBase> class.</span></span> <span data-ttu-id="4b2cf-106">Die <xref:System.Web.HttpBrowserCapabilitiesWrapper> Klasse dient als Wrapper für die <xref:System.Web.HttpBrowserCapabilities> Klasse.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-106">The <xref:System.Web.HttpBrowserCapabilitiesWrapper> class serves as a wrapper for the <xref:System.Web.HttpBrowserCapabilities> class.</span></span> <span data-ttu-id="4b2cf-107">Zur Laufzeit verwenden Sie in der Regel eine Instanz von der <xref:System.Web.HttpBrowserCapabilitiesWrapper> zum Aufrufen von Membern der Klasse die <xref:System.Web.HttpBrowserCapabilities> Objekt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-107">At run time, you typically use an instance of the <xref:System.Web.HttpBrowserCapabilitiesWrapper> class to call members of the <xref:System.Web.HttpBrowserCapabilities> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpBrowserCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpBrowserCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b2cf-108">Initialisiert die Klasse zur Verwendung durch eine geerbte Klasseninstanz.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="4b2cf-109">Dieser Konstruktor kann nur von einer geerbten Klasse aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public virtual bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ActiveXControls { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-110">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser ActiveX-Steuerelemente unterstützen kann.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-110">When overridden in a derived class, gets a value that indicates whether the browser is capable of supporting ActiveX controls.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-111"><see langword="true" />, wenn der Browser ActiveX-Steuerelemente unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-111"><see langword="true" /> if the browser can support ActiveX controls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-112">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-112">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-113">Ruft beim Überschreiben in einer abgeleiteten Klasse die Auflistung verfügbarer Steuerelementadapter ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-113">When overridden in a derived class, gets the collection of available control adapters.</span></span></summary>
        <value><span data-ttu-id="4b2cf-114">Die registrierten Steuerelementadapter für den Browser.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-114">The registered control adapters for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-115">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-115">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public virtual void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="4b2cf-116">Der Name des hinzuzufügenden Browsers.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-116">The name of the browser to add.</span></span></param>
        <summary><span data-ttu-id="4b2cf-117">Wird beim Überschreiben in einer abgeleiteten Klasse intern zum Hinzufügen eines Eintrags zur internen Auflistung von Browsern verwendet, für die Funktionen erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-117">When overridden in a derived class, used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-118">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public virtual bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AOL { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-119">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Client ein AOL (America Online)-Browser ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-119">When overridden in a derived class, gets a value that indicates whether the client is an America Online (AOL) browser.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-120"><see langword="true" />, wenn der Browser ein AOL-Browser ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-120"><see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-121">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-121">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public virtual bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool BackgroundSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-122">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser die Wiedergabe von Hintergrundsound mithilfe des HTML-Elements <see langword="bgsounds" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-122">When overridden in a derived class, gets a value that indicates whether the browser supports playing background sounds by using the <see langword="bgsounds" /> HTML element.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-123"><see langword="true" />, wenn der Browser die Wiedergabe von Hintergrundsound unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-123"><see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-124">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-124">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public virtual bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Beta { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-125">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eine Betaversion ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-125">When overridden in a derived class, gets a value that indicates whether the browser is a beta version.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-126"><see langword="true" />, wenn es sich bei dem Browser um eine Betaversion handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-126"><see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-127">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-127">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public virtual string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Browser { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-128">Ruft beim Überschreiben in einer abgeleiteten Klasse ggf. die Browserzeichenfolge ab, die vom Browser im <see langword="User-Agent" />-Anforderungsheader gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-128">When overridden in a derived class, gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span></span></summary>
        <value><span data-ttu-id="4b2cf-129">Der Inhalt des vom Browser gesendeten <see langword="User-Agent" />-Anforderungsheaders.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-129">The contents of the <see langword="User-Agent" /> request header that was sent by the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-130">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-130">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-131">Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung von Browsern ab, für die Funktionen erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-131">When overridden in a derived class, gets a collection of browsers for which capabilities are recognized.</span></span></summary>
        <value><span data-ttu-id="4b2cf-132">Die Browser, für die Funktionen erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-132">The browsers for which capabilities are recognized.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-133">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-133">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-134">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Kartenstapel unterstützt, die mehrere Formulare, z. B. gesonderte Karten, enthalten.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-134">When overridden in a derived class, gets a value that indicates whether the browser supports decks that contain multiple forms, such as separate cards.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-135"><see langword="true" />, wenn der Browser Kartenstapel unterstützt, die mehrere Formulare enthalten, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-135"><see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-136">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-136">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-137">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob das Browsergerät einen Sprachanruf initiieren kann.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-137">When overridden in a derived class, gets a value that indicates whether the browser device is capable of initiating a voice call.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-138"><see langword="true" />, wenn das Browsergerät einen Sprachanruf initiieren kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-138"><see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-139">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-139">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-140">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Seiteninhalte unterstützt, die auf die WML-Elemente <see langword="select" /> oder <see langword="input" /> folgen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-140">When overridden in a derived class, gets a value that indicates whether the browser supports page content that follows WML <see langword="select" /> or <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-141"><see langword="true" /> Wenn der Browser Seiteninhalte unterstützt, die HTML <see langword="select" /> oder <see langword="input" /> Elemente ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-141"><see langword="true" /> if the browser supports page content that follows HTML <see langword="select" /> or <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-142">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-142">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-143">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser leere HTML-Elemente des Typs <see langword="select" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-143">When overridden in a derived class, gets a value that indicates whether the browser supports empty HTML <see langword="select" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-144"><see langword="true" />, wenn der Browser leere HTML-Elemente des Typs <see langword="select" /> unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-144"><see langword="true" /> if the browser supports empty HTML <see langword="select" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-145">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-145">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-146">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-Elemente des Typs <see langword="input" /> und <see langword="select" /> zusammen auf derselben Karte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-146">When overridden in a derived class, gets a value that indicates whether the browser supports WML <see langword="input" /> and <see langword="select" /> elements together in the same card.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-147"><see langword="true" />, wenn der Browser die WML-Elemente <see langword="input" /> und <see langword="select" /> zusammen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-147"><see langword="true" /> if the browser supports WML <see langword="input" /> and <see langword="select" /> elements together; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-148">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-148">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-149">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-<see langword="option" />-Elemente unterstützt, die sowohl <see langword="onpick" />- als auch <see langword="value" />-Attribute angeben.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-149">When overridden in a derived class, gets a value that indicates whether the browser supports WML <see langword="option" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-150"><see langword="true" />, wenn der Browser WML-<see langword="option" />-Elemente unterstützt, die sowohl <see langword="onpick" />- als auch <see langword="value" />-Attribute angeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-150"><see langword="true" /> if the browser supports WML <see langword="option" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-151">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-151">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-152">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-Elemente des Typs <see langword="onevent" /> und <see langword="prev" /> auf derselben Karte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-152">When overridden in a derived class, gets a value that indicates whether the browser supports WML <see langword="onevent" /> and <see langword="prev" /> elements in the same card.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-153"><see langword="true" />, wenn der Browser WML-Elemente des Typs <see langword="onevent" /> und <see langword="prev" /> auf derselben WML-Karte unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-153"><see langword="true" /> if the browser supports WML <see langword="onevent" /> and <see langword="prev" /> elements in the same WML card; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-154">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-154">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-155">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-Karten für Postback unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-155">When overridden in a derived class, gets a value that indicates whether the browser supports WML cards for postback.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-156"><see langword="true" />, wenn der Browser WML-Karten für Postback unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-156"><see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-157">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-157">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-158">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-Elemente des Typs <see langword="setvar" /> mit dem <see langword="value" />-Attribut 0 unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-158">When overridden in a derived class, gets a value that indicates whether the browser supports WML <see langword="setvar" /> elements that have a <see langword="value" /> attribute of 0.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-159"><see langword="true" />, wenn der Browser WML-Elemente des Typs <see langword="setvar" /> mit dem <see langword="value" />-Attribut 0 unterstützt , andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-159"><see langword="true" /> if the browser supports WML <see langword="setvar" /> elements that have a <see langword="value" /> attribute of 0; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-160">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-160">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-161">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das Senden von E-Mails mithilfe des HTML-Schemas <see langword="mailto" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-161">When overridden in a derived class, gets a value that indicates whether the browser supports sending email messages by using the HTML <see langword="mailto" /> scheme.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-162"><see langword="true" /> Wenn der Browser das Senden von e-Mail-Nachrichten unterstützt, mithilfe des HTML <see langword="mailto" /> scheme; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-162"><see langword="true" /> if the browser supports sending email message by using the HTML <see langword="mailto" /> scheme; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-163">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-163">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-164">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um die definierten Funktionen des Browsers abzurufen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-164">When overridden in a derived class, used internally to get the defined capabilities of the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-165">Die definierten Funktionen des Browsers.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-165">The defined capabilities of the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-166">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-166">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public virtual bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CDF { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-167">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser CDF (Channel Definition Format) für Webcasting unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-167">When overridden in a derived class, gets a value that indicates whether the browser supports Channel Definition Format (CDF) for webcasting.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-168"><see langword="true" />, wenn der Browser CDF unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-168"><see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-169">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-169">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public virtual Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-170">Ruft beim Überschreiben in einer abgeleiteten Klasse die Version von .NET Framework ab, die auf dem Client installiert ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-170">When overridden in a derived class, gets the version of the .NET Framework that is installed on the client.</span></span></summary>
        <value><span data-ttu-id="4b2cf-171">Die CLR-Version (Common Language Runtime).</span><span class="sxs-lookup"><span data-stu-id="4b2cf-171">The common language runtime (CLR) version.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-172">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-172">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareFilters">
      <MemberSignature Language="C#" Value="public virtual int CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompareFilters (filter1 As String, filter2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareFilters(System::String ^ filter1, System::String ^ filter2);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" />
        <Parameter Name="filter2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="4b2cf-173">Der erste zu vergleichende Filter.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-173">The first filter to compare.</span></span></param>
        <param name="filter2"><span data-ttu-id="4b2cf-174">Der zweite zu vergleichende Filter.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-174">The second filter to compare.</span></span></param>
        <summary><span data-ttu-id="4b2cf-175">Wird beim Überschreiben in einer abgeleiteten Klasse intern zum Vergleichen von Filtern verwendet.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-175">When overridden in a derived class, used internally to compare filters.</span></span></summary>
        <returns><span data-ttu-id="4b2cf-176">1, wenn <paramref name="filter1" /> ein übergeordnetes Element von <paramref name="filter2" /> ist, -1, wenn <paramref name="filter2" /> ein übergeordnetes Element von <paramref name="filter1" /> ist, oder 0, wenn keine hierarchische Beziehung zwischen <paramref name="filter1" /> und <paramref name="filter2" /> besteht.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-176">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; or 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-177">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-177">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Cookies { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-178">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Cookies unterstützen kann.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-178">When overridden in a derived class, gets a value that indicates whether the browser is capable of supporting cookies.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-179"><see langword="true" />, wenn der Browser Cookies unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-179"><see langword="true" /> if the browser can support cookies; otherwise, <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4b2cf-180">Mit dieser Eigenschaft wird nicht angegeben, ob derzeit Cookies im Browser aktiviert sind, sondern nur, ob der Browser Cookies unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-180">This property does not indicate whether cookies are currently enabled in the browser, only whether the browser can support cookies.</span></span>  
  
</para></block></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-181">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-181">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public virtual bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Crawler { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-182">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser ein Suchmaschinen-Webcrawler ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-182">When overridden in a derived class, gets a value that indicates whether the browser is a search-engine Web crawler.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-183"><see langword="true" />, wenn der Browser ein Suchmaschinen-Crawler ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-183"><see langword="true" /> if the browser is a search-engine crawler; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-184">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-184">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="4b2cf-185">Das zu erstellende Objekt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-185">The object to be created.</span></span></param>
        <summary><span data-ttu-id="4b2cf-186">Erstellt beim Überschreiben in einer abgeleiteten Klasse eine neue Instanz des <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekts, mit dem Markup im Browser gerendert werden soll.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-186">When overridden in a derived class, creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use to render markup to the browser.</span></span></summary>
        <returns><span data-ttu-id="4b2cf-187">Eine neue Instanz des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-187">A new instance of the object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-188">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-188">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-189">Ruft beim Überschreiben in einer abgeleiteten Klasse die Höchstzahl der „Absenden“-Schaltflächen ab, die für ein Formular zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-189">When overridden in a derived class, gets the maximum number of submit buttons that are allowed for a form.</span></span></summary>
        <value><span data-ttu-id="4b2cf-190">Die Höchstzahl der „Absenden“-Schaltflächen, die für ein Formular zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-190">The maximum number of submit buttons that are allowed for a form.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-191">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-191">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public virtual void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisableOptimizedCacheKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b2cf-192">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um die Verwendung eines optimierten Cacheschlüssels zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-192">When overridden in a derived class, used internally to disable use of an optimized cache key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-193">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-193">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public virtual Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-194">Ruft beim Überschreiben in einer abgeleiteten Klasse die Versionsnummer von ECMAScript (JavaScript) ab, die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-194">When overridden in a derived class, gets the version number of ECMAScript (JavaScript) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="4b2cf-195">Die Versionsnummer von ECMAScript (JavaScript), die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-195">The version number of ECMAScript (JavaScript) that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-196">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-196">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EvaluateFilter">
      <MemberSignature Language="C#" Value="public virtual bool EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateFilter (filterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateFilter(System::String ^ filterName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterName"><span data-ttu-id="4b2cf-197">Der Filter, der ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-197">The filter to evaluate.</span></span></param>
        <summary><span data-ttu-id="4b2cf-198">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um einen Filter auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-198">When overridden in a derived class, used internally to evaluate a filter.</span></span></summary>
        <returns>
          <span data-ttu-id="4b2cf-199"><see langword="true" />, wenn der Filter erfolgreich ausgewertet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-199"><see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-200">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-200">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public virtual bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-201">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser HTML-Frames unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-201">When overridden in a derived class, gets a value that indicates whether the browser supports HTML frames.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-202"><see langword="true" />, wenn der Browser Frames unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-202"><see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-203">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-203">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-204">Ruft beim Überschreiben in einer abgeleiteten Klasse die Hauptversionsnummer des drahtlosen Gateways ab, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-204">When overridden in a derived class, gets the major version number of the wireless gateway that is used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-205">Die Hauptversionsnummer des drahtlosen Gateways, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-205">The major version number of the wireless gateway that is used to access the server, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-206">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-206">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-207">Beim Überschreiben in einer abgeleiteten Klasse wird die Nebenversionsnummer des drahtlosen Gateways abgerufen, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-207">When overridden in a derived class, gets the minor version number of the wireless gateway that is used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-208">Die Nebenversionsnummer des drahtlosen Gateways, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-208">The minor version number of the wireless gateway that is used to access the server, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-209">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-209">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-210">Ruft beim Überschreiben in einer abgeleiteten Klasse die Version des drahtlosen Gateways ab, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-210">When overridden in a derived class, gets the version of the wireless gateway that is used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-211">Die Versionsnummer des drahtlosen Gateways, das für den Zugriff auf den Server verwendet wird, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-211">The version number of the wireless gateway that is used to access the server, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-212">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-212">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public virtual Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b2cf-213">Ruft beim Überschreiben in einer abgeleiteten Klasse alle Versionen der .NET Framework Common Language Runtime (CLR) ab, die auf dem Client installiert sind.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-213">When overridden in a derived class, gets all versions of the .NET Framework common language runtime (CLR) that are installed on the client.</span></span></summary>
        <returns><span data-ttu-id="4b2cf-214">Ein Array von <see cref="T:System.Version" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-214">An array of <see cref="T:System.Version" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-215">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-215">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-216">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser über eine dedizierte Schaltfläche „Zurück“ verfügt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-216">When overridden in a derived class, gets a value that indicates whether the browser has a dedicated Back button.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-217"><see langword="true" />, wenn der Browser über eine spezielle Zurück-Schaltfläche verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-217"><see langword="true" /> if the browser has a dedicated Back button; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-218">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-218">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-219">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der anzeigt, ob die Bildlaufleiste eines HTML-Elements des Typs <see langword="select multiple" /> mit dem Wert <see langword="right" /> des <see langword="align" />-Attributs beim Rendern verdeckt wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-219">When overridden in a derived class, gets a value that indicates whether the scrollbar of an HTML <see langword="select multiple" /> element that has an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-220"><see langword="true" />, wenn die Bildlaufleiste eines HTML-Element des Typs <see langword="select multiple" /> mit einem <see langword="align" />-Attributwert <see langword="right" /> beim Rendern verdeckt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-220"><see langword="true" /> if the scrollbar of an HTML <see langword="select multiple" /> element that has an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-221">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-221">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public virtual string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-222">Ruft beim Überschreiben in einer abgeleiteten Klasse den vollqualifizierten Namen des zum Schreiben von Markupzeichen und Text zu verwendenden <see cref="T:System.Web.UI.HtmlTextWriter" /> ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-222">When overridden in a derived class, gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</span></span></summary>
        <value><span data-ttu-id="4b2cf-223">Der vollqualifizierte Name des zum Schreiben von Markupzeichen und Text zu verwendende <see cref="T:System.Web.UI.HtmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-223">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use for writing markup characters and text.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-224">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-224">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-225">Ruft beim Überschreiben in einer abgeleiteten Klasse den internen Bezeichner des Browsers gemäß der Angabe in der Browserdefinitionsdatei ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-225">When overridden in a derived class, gets the internal identifier of the browser as specified in the browser definition file.</span></span></summary>
        <value><span data-ttu-id="4b2cf-226">Der interne Bezeichner des Browsers gemäß der Angabe in der Browserdefinitionsdatei ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-226">The internal identifier of the browser as specified in the browser definition file.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-227">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-227">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-228">Ruft beim Überschreiben in einer abgeleiteten Klasse den Eingabetyp ab, der vom Browser unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-228">When overridden in a derived class, gets the type of input that is supported by the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-229">Der vom Browser unterstützte Eingabetyp.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-229">The type of input supported by the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-230">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-230">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpBrowserCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBrowser(System::String ^ browserName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="4b2cf-231">Der angegebene Browser.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-231">The specified browser.</span></span></param>
        <summary><span data-ttu-id="4b2cf-232">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Clientbrowser mit dem angegebenen Browser identisch ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-232">When overridden in a derived class, gets a value that indicates whether the client browser is the same as the specified browser.</span></span></summary>
        <returns>
          <span data-ttu-id="4b2cf-233"><see langword="true" />, wenn der Clientbrowser mit dem angegebenen Browser identisch ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-233"><see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-234">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-234">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-235">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Farbwiedergabe unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-235">When overridden in a derived class, gets a value that indicates whether the browser has a color display.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-236"><see langword="true" />, wenn der Browser über eine Farbanzeige verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-236"><see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-237">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-237">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-238">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser ein erkanntes mobiles Gerät ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-238">When overridden in a derived class, gets a value that indicates whether the browser is a recognized mobile device.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-239"><see langword="true" />, wenn der Browser ein erkanntes mobiles Gerät ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-239"><see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-240">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-240">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4b2cf-241">Der Name der abzurufenden Browserfunktion.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-241">The name of the browser capability to retrieve.</span></span></param>
        <summary><span data-ttu-id="4b2cf-242">Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Browserfunktion ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-242">When overridden in a derived class, gets the value of the specified browser capability.</span></span> <span data-ttu-id="4b2cf-243">In C# ist diese Eigenschaft der Indexer für die Klasse.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-243">In C#, this property is the indexer for the class.</span></span></summary>
        <value><span data-ttu-id="4b2cf-244">Die Browserfunktion mit dem angegebenen Schlüsselnamen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-244">The browser capability with the specified key name.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-245">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-245">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public virtual bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool JavaApplets { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-246">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Java unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-246">When overridden in a derived class, gets a value that indicates whether the browser supports Java.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-247"><see langword="true" />, wenn der Browser Java unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-247"><see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4b2cf-248">Mit dieser Eigenschaft wird nicht angegeben, ob derzeit Java im Browser aktiviert ist, sondern nur, ob der Browser Java unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-248">This property does not indicate whether Java is currently enabled in the browser, only whether the browser can support Java.</span></span>  
  
</para></block></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-249">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-249">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public virtual Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-250">Ruft beim Überschreiben in einer abgeleiteten Klasse die JScript-Version ab, die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-250">When overridden in a derived class, gets the JScript version that the browser supports.</span></span></summary>
        <value><span data-ttu-id="4b2cf-251">Die JScript-Version, die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-251">The version of JScript that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b2cf-252">Die Versionsnummer von ECMAScript, die vom Browser unterstützt, finden Sie unter <xref:System.Web.HttpBrowserCapabilitiesBase.EcmaScriptVersion%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-252">For version number of ECMAScript supported by the browser, see <xref:System.Web.HttpBrowserCapabilitiesBase.EcmaScriptVersion%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-253">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-253">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public virtual int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MajorVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-254">Ruft beim Überschreiben in einer abgeleiteten Klasse die Hauptversionsnummer (Ganzzahlwert) des Browsers ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-254">When overridden in a derived class, gets the major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-255">Die Hauptversionsnummer des Browsers.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-255">The major version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-256">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-256">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-257">Ruft beim Überschreiben in einer abgeleiteten Klasse die maximale Länge in Zeichen für das <see langword="href" />-Attribut eines HTML-<see langword="a" />-Elements (Anker) ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-257">When overridden in a derived class, gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="a" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="4b2cf-258">Die maximale Länge in Zeichen für das <see langword="href" />-Attribut eines HTML-<see langword="a" />-Elements (Anker).</span><span class="sxs-lookup"><span data-stu-id="4b2cf-258">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="a" /> (anchor) element.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-259">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-259">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-260">Ruft beim Überschreiben in einer abgeleiteten Klasse die maximale Seitenlänge, die der Browser anzeigen kann, in Bytes ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-260">When overridden in a derived class, gets the maximum length of the page, in bytes, that the browser can display.</span></span></summary>
        <value><span data-ttu-id="4b2cf-261">Die maximale Seitenlänge, die der Browser anzeigen kann (in Bytes).</span><span class="sxs-lookup"><span data-stu-id="4b2cf-261">The maximum length of the page, in bytes, that the browser can display.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-262">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-262">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-263">Ruft beim Überschreiben in einer abgeleiteten Klasse die maximale Länge des Texts ab, der von der Beschriftung einer Bildschirmtaste angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-263">When overridden in a derived class, gets the maximum length of the text that a soft-key label can display.</span></span></summary>
        <value><span data-ttu-id="4b2cf-264">Die maximale Länge des Texts, der von der Beschriftung einer Bildschirmtaste angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-264">The maximum length of the text that a soft-key label can display.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-265">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-265">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public virtual double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double MinorVersion { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-266">Ruft beim Überschreiben in einer abgeleiteten Klasse die Nebenversionsnummer (Dezimalwert) des Browsers ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-266">When overridden in a derived class, gets the minor (decimal) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-267">Die Nebenversionsnummer des Browsers.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-267">The minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-268">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-268">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public virtual string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-269">Ruft beim Überschreiben in einer abgeleiteten Klasse die Nebenversionsnummer (Dezimalwert) des Browsers als eine Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-269">When overridden in a derived class, gets the minor (decimal) version number of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="4b2cf-270">Eine Zeichenfolge, die die Nebenversionsnummer des Browsers darstellt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-270">A string that represents the minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-271">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-271">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-272">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Herstellers eines mobilen Geräts (sofern bekannt) ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-272">When overridden in a derived class, gets the name of the manufacturer of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-273">Der Name des Herstellers eines mobilen Geräts (sofern bekannt).</span><span class="sxs-lookup"><span data-stu-id="4b2cf-273">The name of the manufacturer of a mobile device, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-274">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-274">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-275">Ruft beim Überschreiben in einer abgeleiteten Klasse den Modellnamen eines mobilen Geräts (sofern bekannt) ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-275">When overridden in a derived class, gets the model name of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-276">Der Modellname eines mobilen Geräts, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-276">The model name of a mobile device, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-277">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-277">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public virtual Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-278">Ruft beim Überschreiben in einer abgeleiteten Klasse die Version des vom MSHTML (Microsoft HTML)-DOM (Document Object Model) unterstützten Browsers ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-278">When overridden in a derived class, gets the version of the Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="4b2cf-279">Die MSHTML-DOM-Version, die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-279">The MSHTML DOM version that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-280">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-280">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-281">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl von Bildschirmtasten ab, die es auf einem mobilen Gerät gibt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-281">When overridden in a derived class, gets the number of softkeys on a mobile device.</span></span></summary>
        <value><span data-ttu-id="4b2cf-282">Die Anzahl von Bildschirmtasten, die auf einem mobilen Gerät unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-282">The number of softkeys supported on a mobile device.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-283">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-283">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public virtual string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Platform { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-284">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Betriebssystems des Clients ab, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-284">When overridden in a derived class, gets the name of the operating system that the client is using, if known.</span></span></summary>
        <value><span data-ttu-id="4b2cf-285">Das Betriebssystem des Clients, sofern bekannt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-285">The operating system that the client is using, if known.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-286">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-286">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-287">Ruft beim Überschreiben in einer abgeleiteten Klasse den MIME-Typ des Typs von Bildinhalt ab, den der Browser üblicherweise bevorzugt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-287">When overridden in a derived class, gets the MIME type of the type of image content that the browser typically prefers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-288">Der MIME-Typ des Typs von Bildinhalt, den der Browser üblicherweise bevorzugt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-288">The MIME type of the type of image content that the browser typically prefers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-289">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-289">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-290">Ruft beim Überschreiben in einer abgeleiteten Klasse den MIME-Typ des Typs von Inhalt ab, den der Browser üblicherweise bevorzugt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-290">When overridden in a derived class, gets the MIME type of the type of content that the browser typically prefers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-291">Der MIME-Typ des Typs von Inhalt, den der Browser üblicherweise bevorzugt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-291">The MIME type of the type of content that the browser typically prefers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-292">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-292">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-293">Ruft beim Überschreiben in einer abgeleiteten Klasse den allgemeinen Namen für den Typ von Inhalt ab, den der Browser bevorzugt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-293">When overridden in a derived class, gets the general name for the type of content that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-294">Dies sind die Werte „html32“ oder „chtml10“.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-294">The values "html32" or "chtml10".</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-295">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-295">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-296">Ruft beim Überschreiben in einer abgeleiteten Klasse die vom Browser bevorzugte Anforderungscodierung ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-296">When overridden in a derived class, gets the request encoding that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-297">Die vom Browser bevorzugte Anforderungscodierung.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-297">The request encoding that the browser prefers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-298">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-298">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-299">Ruft beim Überschreiben in einer abgeleiteten Klasse die vom Browser bevorzugte Antwortcodierung ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-299">When overridden in a derived class, gets the response encoding that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-300">Die vom Browser bevorzugte Antwortcodierung.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-300">The response encoding that the browser prefers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-301">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-301">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-302">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser vor <see langword="select" />-Elementen oder <see langword="input" />-Elementen einen Zeilenumbruch rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-302">When overridden in a derived class, gets a value that indicates whether the browser renders a line break before WML <see langword="select" /> or <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-303"><see langword="true" />, wenn der Browser vor <see langword="select" />-Elementen oder <see langword="input" />-Elementen einen Zeilenumbruch rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-303"><see langword="true" /> if the browser renders a line break before <see langword="select" /> or <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-304">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-304">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-305">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser nach Listenelementelementen einen Zeilenumbruch rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-305">When overridden in a derived class, gets a value that indicates whether the browser renders a line break after list-item elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-306"><see langword="true" />, wenn der Browser nach Listenelementen einen Zeilenumbruch rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-306"><see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-307">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-307">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-308">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser nach einem eigenständigen WML-<see langword="a" />-Element (Anker) einen Zeilenumbruch rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-308">When overridden in a derived class, gets a value that indicates whether the browser renders a line break after a standalone WML <see langword="a" /> (anchor) element.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-309"><see langword="true" />, wenn der Browser nach einem eigenständigen WML-<see langword="a" />-Element (Anker) einen Zeilenumbruch rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-309"><see langword="true" /> if the browser renders a line break after a standalone WML <see langword="a" /> (anchor) element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-310">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-310">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-311">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser nach einem WML-<see langword="input" />-Element einen Zeilenumbruch rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-311">When overridden in a derived class, gets a value that indicates whether the browser renders a line break after a WML <see langword="input" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-312"><see langword="true" />, wenn der Browser nach einem WML-<see langword="input" />-Element einen Zeilenumbruch rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-312"><see langword="true" /> if the browser renders a line break after a WML <see langword="input" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-313">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-313">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-314">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eines mobilen Geräts ein WML-<see langword="do" />-Konstrukt für das Übernehmen in Formularen als Inlineschaltfläche und nicht als Bildschirmtaste rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-314">When overridden in a derived class, gets a value that indicates whether the mobile-device browser renders a WML <see langword="do" /> form accept construct as an inline button instead of as a softkey.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-315"><see langword="true" />, wenn der Browser eines mobilen Geräts ein WML-<see langword="do" />-Konstrukt für das Übernehmen in Formularen als Inlineschaltfläche rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-315"><see langword="true" /> if the mobile-device browser renders a WML <see langword="do" /> form-accept construct as an inline button; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-316">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-316">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-317">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser WML-<see langword="select" />-Elemente als Menükarten und nicht als Kombinationsfeld rendert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-317">When overridden in a derived class, gets a value that indicates whether the browser renders WML <see langword="select" /> elements as menu cards, instead of as a combo box.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-318"><see langword="true" />, wenn der Browser WML-<see langword="select" />-Elemente als Menükarten rendert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-318"><see langword="true" /> if the browser renders WML <see langword="select" /> elements as menu cards; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-319">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-319">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-320">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um ein Metatag zu erzeugen, das von einigen Browsern benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-320">When overridden in a derived class, used internally to produce a meta-tag that is required by some browsers.</span></span></summary>
        <value><span data-ttu-id="4b2cf-321">Ein Metatag, das für einige Browser erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-321">A meta-tag that is required by some browsers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-322">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-322">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-323">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob für den Browser Doppelpunkte in Elementattributwerten durch ein anderes Zeichen ersetzt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-323">When overridden in a derived class, gets a value that indicates whether the browser requires colons in element attribute values to be replaced with a different character.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-324"><see langword="true" />, wenn für den Browser Doppelpunkte in Elementattributwerten durch ein anderes Zeichen ersetzt werden müssen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-324"><see langword="true" /> if the browser requires colons in element attribute values to be replaced with a different character; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-325">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-325">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-326">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser ein HTML-<see langword="meta" />-Element erfordert, für das das <see langword="content-type" />-Attribut angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-326">When overridden in a derived class, gets a value that indicates whether the browser requires an HTML <see langword="meta" /> element for which the <see langword="content-type" /> attribute is specified.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-327"><see langword="true" />, wenn der Browser ein HTML-<see langword="meta" />-Element erfordert, für das das <see langword="content-type" />-Attribut angegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-327"><see langword="true" /> if the browser requires an HTML <see langword="meta" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-328">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-328">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public virtual bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresControlStateInSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-329">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob für den Browser der Steuerelementzustand in Sitzungen beibehalten werden muss.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-329">When overridden in a derived class, gets a value that indicates whether the browser requires control state to be maintained in sessions.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-330"><see langword="true" />, wenn für den Browser der Steuerelementzustand in Sitzungen beibehalten werden muss, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-330"><see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-331">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-331">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-332">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser einen Doppelbyte-Zeichensatz erfordert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-332">When overridden in a derived class, gets a value that indicates whether the browser requires a double-byte character set.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-333"><see langword="true" />, wenn der Browser einen Doppelbyte-Zeichensatz erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-333"><see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-334">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-334">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-335">Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der anzeigt, ob der Browser nicht standardmäßige Fehlermeldungen erfordert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-335">When overridden in a derived class, gets a value that indicates whether the browser requires nonstandard error messages.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-336"><see langword="true" />, wenn der Browser nicht dem Standard entsprechende Fehlermeldungen erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-336"><see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-337">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-337">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-338">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob für den Browser das erste Element im body-Abschnitt einer Webseite ein HTML-<see langword="br" />-Element sein muss.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-338">When overridden in a derived class, gets a value that indicates whether the browser requires the first element in the body of a Web page to be an HTML <see langword="br" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-339"><see langword="true" />, wenn für den Browser das erste Element im body-Abschnitt einer Webseite ein HTML-<see langword="br" />-Element sein muss, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-339"><see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="br" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-340">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-340">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-341">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser keine HTML-<see langword="br" />-Elemente zum Formatieren von Zeilenumbrüchen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-341">When overridden in a derived class, gets a value that indicates whether the browser does not support HTML <see langword="br" /> elements to format line breaks.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-342"><see langword="true" />, wenn der Browser keine HTML-<see langword="br" />-Elemente unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-342"><see langword="true" /> if the browser does not support HTML <see langword="br" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-343">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-343">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-344">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser erfordert, dass Seiten ein größenoptimiertes Format von Markupsprachentags enthalten.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-344">When overridden in a derived class, gets a value that indicates whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-345"><see langword="true" />, wenn für den Browser Seiten ein größenoptimiertes Format von Markupsprachentags enthalten müssen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-345"><see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-346">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-346">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-347">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der anzeigt, ob der Browser das Wählen von Telefonnummern auf Grundlage von unformatiertem Text unterstützt, oder ob ein spezielles Markup erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-347">When overridden in a derived class, gets a value that indicates whether the browser supports telephone dialing based on plain text, or whether it requires special markup.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-348"><see langword="true" />, wenn der Browser das Wählen von Telefonnummern auf der Grundlage von unformatiertem Text unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-348"><see langword="true" /> if the browser supports telephone dialing based on plain text; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-349">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-349">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-350">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser erfordert, dass Ansichtszustandswerte speziell codiert werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-350">When overridden in a derived class, gets a value that indicates whether the browser requires view-state values to be specially encoded.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-351"><see langword="true" />, wenn für den Browser Ansichtszustandswerte eine besondere Codierung erfordern, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-351"><see langword="true" /> if the browser requires view-state values to be specially encoded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-352">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-352">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-353">Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eindeutige Formularaktions-URLs erfordert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-353">When overridden in a derived class, gets a value that indicates whether the browser requires unique form-action URLs.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-354"><see langword="true" />, wenn der Browser eindeutige form action-URLs erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-354"><see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-355">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-355">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-356">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eindeutige <see langword="name" />-Attributwerte für mehrere <see langword="input type=&quot;checkbox&quot;" />-Elemente erfordert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-356">When overridden in a derived class, gets a value that indicates whether the browser requires unique <see langword="name" /> attribute values for multiple HTML <see langword="input type=&quot;checkbox&quot;" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-357"><see langword="true" />, wenn der Browser eindeutige <see langword="name" />-Attributwerte für mehrere HTML-<see langword="input type=&quot;checkbox&quot;" />-Elemente erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-357"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values for multiple HTML <see langword="input type=&quot;checkbox&quot;" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-358">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-358">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-359">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eindeutige <see langword="name" />-Attributwerte für mehrere <see langword="input" />-Elemente erfordert.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-359">When overridden in a derived class, gets a value that indicates whether the browser requires unique <see langword="name" /> attribute values for multiple HTML <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-360"><see langword="true" />, wenn der Browser eindeutige <see langword="name" />-Attributwerte für mehrere HTML-<see langword="input" />-Elemente erfordert, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-360"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values for multiple HTML <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-361">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-361">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-362">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob vom Browser gesendete Postbackdaten URL-codiert werden.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-362">When overridden in a derived class, gets a value that indicates whether postback data that is sent by the browser will be URL-encoded.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-363"><see langword="true" />, wenn vom Browser gesendete Postbackdaten URL-codiert sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-363"><see langword="true" /> if postback data that is sent by the browser will be URL-encoded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-364">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-364">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-365">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzeigetiefe in Bits pro Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-365">When overridden in a derived class, gets the depth of the display, in bits per pixel.</span></span></summary>
        <value><span data-ttu-id="4b2cf-366">Die Anzeigetiefe in Bits pro Pixel.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-366">The depth of the display, in bits per pixel.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-367">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-367">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-368">Ruft beim Überschreiben in einer abgeleiteten Klasse die ungefähre Höhe der Anzeige in Zeilen ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-368">When overridden in a derived class, gets the approximate height of the display, in character lines.</span></span></summary>
        <value><span data-ttu-id="4b2cf-369">Die ungefähre Höhe der Anzeige in Zeilen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-369">The approximate height of the display, in character lines.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-370">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-370">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-371">Ruft beim Überschreiben in einer abgeleiteten Klasse die ungefähre Breite der Anzeige in Zeichen ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-371">When overridden in a derived class, gets the approximate width of the display, in characters.</span></span></summary>
        <value><span data-ttu-id="4b2cf-372">Die ungefähre Breite der Anzeige in Zeichen.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-372">The approximate width of the display, in characters.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-373">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-373">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-374">Ruft beim Überschreiben in einer abgeleiteten Klasse die ungefähre Höhe der Anzeige in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-374">When overridden in a derived class, gets the approximate height of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="4b2cf-375">Die ungefähre Höhe der Anzeige in Pixel.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-375">The approximate height of the display, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-376">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-376">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-377">Ruft beim Überschreiben in einer abgeleiteten Klasse die ungefähre Breite der Anzeige in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-377">When overridden in a derived class, gets the approximate width of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="4b2cf-378">Die ungefähre Breite der Anzeige in Pixel.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-378">The approximate width of the display, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-379">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-379">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-380">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="accesskey" />-Attribut von HTML-<see langword="a" />-Elementen (Anker) und HTML-<see langword="input" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-380">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="a" /> (anchor) and <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-381"><see langword="true" /> Wenn der Browser unterstützt die <see langword="accesskey" /> -Attribut von HTML- <see langword="a" /> (Anchor) und <see langword="input" /> Elemente ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-381"><see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="a" /> (anchor) and <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-382">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-382">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-383">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="bgcolor" />-Attribut des HTML-<see langword="body" />-Elements unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-383">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="body" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-384"><see langword="true" />, wenn der Browser das <see langword="bgcolor" />-Attribut des HTML-<see langword="body" />-Elements unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-384"><see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="body" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-385">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-385">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-386">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser HTML-<see langword="b" />-Elemente für die Fettformatierung von Text unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-386">When overridden in a derived class, gets a value that indicates whether the browser supports HTML <see langword="b" /> elements to format bold text.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-387"><see langword="true" /> Wenn der Browser HTML unterstützt <see langword="b" /> Elemente um Text fett zu formatieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-387"><see langword="true" /> if the browser supports HTML <see langword="b" /> elements to format bold text; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-388">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-388">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-389">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser den <see langword="cache-control" />-Wert für das <see langword="http-equiv" />-Attribut von HTML-<see langword="meta" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-389">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="meta" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-390"><see langword="true" />, wenn der Browser den <see langword="cache-control" />-Wert für das <see langword="http-equiv" />-Attribut von HTML-<see langword="meta" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-390"><see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="meta" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-391">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-391">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-392">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Rückrufskripts unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-392">When overridden in a derived class, gets a value that indicates whether the browser supports callback scripts.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-393"><see langword="true" />, wenn der Browser Rückrufskripts unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-393"><see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-394">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-394">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-395">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Cascading Stylesheets (CSS) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-395">When overridden in a derived class, gets a value that indicates whether the browser supports cascading style sheets (CSS).</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-396"><see langword="true" />, wenn der Browser CSS unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-396"><see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-397">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-397">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-398">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="align" />-Attribut von HTML-<see langword="div" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-398">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="align" /> attribute of HTML <see langword="div" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-399"><see langword="true" />, wenn der Browser das <see langword="align" />-Attribut von HTML-<see langword="div" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-399"><see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="div" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-400">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-400">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-401">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="nowrap" />-Attribut von HTML-<see langword="div" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-401">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="div" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-402"><see langword="true" />, wenn der Browser <see langword="nowrap" />-HTML-<see langword="div" />-Elemente unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-402"><see langword="true" /> if the browser supports the <see langword="nowrap" /> HTML <see langword="div" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-403">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-403">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-404">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser leere Zeichenfolgen in Cookiewerten unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-404">When overridden in a derived class, gets a value that indicates whether the browser supports empty strings in cookie values.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-405"><see langword="true" />, wenn der Browser leere Zeichenfolgen in Cookiewerten unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-405"><see langword="true" /> if the browser supports empty strings in cookie values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-406">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-406">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-407">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="color" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-407">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="color" /> attribute of HTML <see langword="font" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-408"><see langword="true" />, wenn der Browser das <see langword="color" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-408"><see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="font" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-409">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-409">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-410">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="name" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-410">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="name" /> attribute of HTML <see langword="font" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-411"><see langword="true" />, wenn der Browser das <see langword="name" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-411"><see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="font" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-412">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-412">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-413">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="size" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-413">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="size" /> attribute of HTML <see langword="font" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-414"><see langword="true" />, wenn der Browser das <see langword="size" />-Attribut von HTML-<see langword="font" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-414"><see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="font" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-415">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-415">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-416">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser die Verwendung eines benutzerdefinierten Bilds statt der standardmäßigen Formularschaltfläche „Senden“ unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-416">When overridden in a derived class, gets a value that indicates whether the browser supports the use of a custom image in place of a standard form submit button.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-417"><see langword="true" />, wenn der Browser die Verwendung eines benutzerdefinierten Bildes statt der Standardformularschaltfläche Senden unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-417"><see langword="true" /> if the browser supports the use of a custom image in place of a standard form submit button; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-418">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-418">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-419">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser i-mode-Symbole unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-419">When overridden in a derived class, gets a value that indicates whether the browser supports i-mode symbols.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-420"><see langword="true" />, wenn der Browser i-mode-Symbole unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-420"><see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-421">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-421">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-422">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="istyle" />-Attribut von HTML-<see langword="input" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-422">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-423"><see langword="true" />, wenn der Browser das <see langword="istyle" />-Attribut von HTML-<see langword="input" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-423"><see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-424">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-424">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-425">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="mode" />-Attribut von HTML-<see langword="input" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-425">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="input" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-426"><see langword="true" />, wenn der Browser das <see langword="mode" />-Attribut von HTML-<see langword="input" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-426"><see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="input" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-427">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-427">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-428">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser HTML-<see langword="i" />-Elemente für die Kursivformatierung von Text unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-428">When overridden in a derived class, gets a value that indicates whether the browser supports HTML <see langword="i" /> elements to format italic text.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-429"><see langword="true" />, wenn der Browser HTML-<see langword="i" />-Elemente für die Kursivformatierung von Text unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-429"><see langword="true" /> if the browser supports HTML <see langword="i" /> elements to format italic text; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-430">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-430">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-431">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser J-Phone-Multimediaattribute unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-431">When overridden in a derived class, gets a value that indicates whether the browser supports J-Phone multimedia attributes.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-432"><see langword="true" />, wenn der Browser J-Phone-Multimedia-Attribute unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-432"><see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-433">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-433">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-434">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser J-Phone-spezifische Bildsymbole unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-434">When overridden in a derived class, gets a value that indicates whether the browser supports J-Phone–specific picture symbols.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-435"><see langword="true" />, wenn der Browser J-Phone-Bildsymbole unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-435"><see langword="true" /> if the browser supports J-Phone–specific picture symbols; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-436">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-436">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-437">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser eine Abfragezeichenfolge im <see langword="action" />-Attributwert von HTML-<see langword="form" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-437">When overridden in a derived class, gets a value that indicates whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="form" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-438"><see langword="true" />, wenn der Browser eine Abfragezeichenfolge im <see langword="action" />-Attributwert von HTML-<see langword="form" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-438"><see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="form" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-439">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-439">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-440">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Cookies bei Umleitung unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-440">When overridden in a derived class, gets a value that indicates whether the browser supports cookies on redirection.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-441"><see langword="true" />, wenn der Browser Cookies bei der Umleitung unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-441"><see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-442">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-442">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-443">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser das <see langword="multiple" />-Attribut von HTML-<see langword="select" />-Elementen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-443">When overridden in a derived class, gets a value that indicates whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="select" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-444"><see langword="true" />, wenn der Browser das <see langword="multiple" />-Attribut von HTML-<see langword="select" />-Elementen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-444"><see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="select" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-445">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-445">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-446">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob das Deaktivieren eines aktivierten HTML-<see langword="input type=&quot;checkbox&quot;" />-Elements in den Postbackdaten wiedergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-446">When overridden in a derived class, gets a value that indicates whether clearing a checked HTML <see langword="input type=&quot;checkbox&quot;" /> element is reflected in postback data.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-447"><see langword="true" />, wenn das Deaktivieren eines aktivierten HTML-<see langword="input type=&quot;checkbox&quot;" />-Elements in den Postbackdaten wiedergegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-447"><see langword="true" /> if clearing a checked HTML <see langword="input type=&quot;checkbox&quot;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-448">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-448">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-449">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser den Empfang von XML über HTTP unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-449">When overridden in a derived class, gets a value that indicates whether the browser supports receiving XML over HTTP.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-450"><see langword="true" />, wenn der Browser das Empfangen von XML über HTTP unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-450"><see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-451">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-451">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public virtual bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Tables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-452">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser HTML-<see langword="table" />-Elemente unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-452">When overridden in a derived class, gets a value that indicates whether the browser supports HTML <see langword="table" /> elements.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-453"><see langword="true" />, wenn der Browser HTML-<see langword="table" />-Elemente unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-453"><see langword="true" /> if the browser supports HTML <see langword="table" /> elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-454">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-454">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public virtual Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TagWriter { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-455">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um den Typ des Objekts abzurufen, das zum Schreiben von Tags für den Browser verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-455">When overridden in a derived class, used internally to get the type of the object that is used to write tags for the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-456">Der Typ des Objekts, das zum Schreiben von Tags für den Browser verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-456">The type of the object that is used to write tags for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-457">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-457">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-458">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen und die Hauptversionsnummer (Ganzzahlwert) des Browsers ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-458">When overridden in a derived class, gets the name and major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="4b2cf-459">Der Name und die Hauptversionsnummer des Browsers.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-459">The name and major version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-460">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-460">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public virtual bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-461">Wird beim Überschreiben in einer abgeleiteten Klasse intern verwendet, um einen Wert abzurufen, der angibt, ob ein optimierter Cacheschlüssel verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-461">When overridden in a derived class, used internally to get a value that indicates whether to use an optimized cache key.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-462"><see langword="true" />, wenn ein optimierter Cacheschlüssel verwendet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-462"><see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-463">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-463">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public virtual bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VBScript { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-464">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Browser Visual Basic Scripting Edition (VBScript) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-464">When overridden in a derived class, gets a value that indicates whether the browser supports Visual Basic Scripting edition (VBScript).</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-465"><see langword="true" />, wenn der Browser VBScript unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-465"><see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4b2cf-466">Mit dieser Eigenschaft wird nicht angegeben, ob derzeit VBScript im Browser aktiviert ist, sondern nur, ob der Browser VBScript unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-466">This property does not indicate whether VBScript is currently enabled in the browser, only whether the browser can support VBScript.</span></span>  
  
</para></block></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-467">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-467">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public virtual string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-468">Ruft beim Überschreiben in einer abgeleiteten Klasse die vollständige Versionsnummer (ganze Zahl und Dezimalzahl) des Browsers als Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-468">When overridden in a derived class, gets the full version number (integer and decimal) of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="4b2cf-469">Die vollständige Versionsnummer des Browsers als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-469">The full version number of the browser as a string.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-470">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-470">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public virtual Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-471">Ruft beim Überschreiben in einer abgeleiteten Klasse die Version des vom XML-DOM (Document Object Model) des W3C (World Wide Web Consortium) unterstützten Browsers ab.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-471">When overridden in a derived class, gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="4b2cf-472">Die Versionsnummer des XML-DOM des W3C, die der Browser unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-472">The number of the W3C XML DOM version number that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-473">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-473">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public virtual bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Win16 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-474">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Client ein Win16-basierter Computer ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-474">When overridden in a derived class, gets a value that indicates whether the client is a Win16-based computer.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-475"><see langword="true" />, wenn der Browser auf einem Win16-Computer ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-475"><see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-476">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-476">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public virtual bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpBrowserCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Win32 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b2cf-477">Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Client ein Win32-basierter Computer ist.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-477">When overridden in a derived class, gets a value that indicates whether the client is a Win32-based computer.</span></span></summary>
        <value>
          <span data-ttu-id="4b2cf-478"><see langword="true" />, wenn es sich bei dem Client um einen Win32-Computer handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-478"><see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4b2cf-479">Immer.</span><span class="sxs-lookup"><span data-stu-id="4b2cf-479">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>