<Type Name="EventHandlerTaskAsyncHelper" FullName="System.Web.EventHandlerTaskAsyncHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3728bc992a6a9a6f95c3ce4140719cf264406238" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69386218" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerTaskAsyncHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerTaskAsyncHelper sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerTaskAsyncHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konvertiert das Aufgabe-Zurückgeben asynchroner Methoden in Methoden, die das asynchrone Programmiermodell verwenden, das in früheren Versionen von ASP.NET verwendet wird und das auf und Start- und Abschlussereignissen basiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Verarbeiten von asynchronen Aufgaben in ASP.NET 4,5 Implementieren Sie die Logik, um einen Task als <xref:System.Web.TaskEventHandler> Delegat zurückzugeben. Dieses Modell der asynchronen aufgabenbasierten Programmierung ersetzt das Modell, das in früheren Versionen von ASP.NET verwendet wurde, das die gesamte Ereignis Behandlung auf BEGIN-und End-Ereignissen basiert. Nachdem Sie einen <xref:System.Web.TaskEventHandler> Delegaten implementiert haben, können Sie ihn an den <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> -Konstruktor übergeben, der die von der Aufgabe zurückgegebene Logik umschließt und den Handler in das Modell konvertiert, das Begin-und End-Ereignisse verwendet. Die <xref:System.Web.EventHandlerTaskAsyncHelper> -Klasse <xref:System.Web.TaskEventHandler> ermöglicht es dem-Objekt, mit dem ASP.NET-Seiten Framework kompatibel zu sein. Wenn Sie die <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> -Methode zum Verarbeiten der Aufgabe für eine asynchrone Seite aufzurufen, können Sie die <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> -Eigenschaft und die-Eigenschaft verwenden, um die konvertierten BEGIN-und Ereignishandler an die-Methode zu übergeben.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.TaskEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As TaskEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerTaskAsyncHelper(System::Web::TaskEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.EventHandlerTaskAsyncHelper : System.Web.TaskEventHandler -&gt; System.Web.EventHandlerTaskAsyncHelper" Usage="new System.Web.EventHandlerTaskAsyncHelper handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.TaskEventHandler" />
      </Parameters>
      <Docs>
        <param name="handler">Die asynchrone Aufgabe.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.EventHandlerTaskAsyncHelper" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginEventHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginEventHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginEventHandler : System.Web.BeginEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt die <see cref="T:System.Web.BeginEventHandler" />-Methode für eine asynchrone Aufgabe dar.</summary>
        <value>Die Methode, die das Begin-Ereignis für die asynchrone Aufgabe behandelt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndEventHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndEventHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndEventHandler : System.Web.EndEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt die <see cref="T:System.Web.EndEventHandler" />-Methode für eine asynchrone Aufgabe dar.</summary>
        <value>Die Methode, die das End-Ereignis für die asynchrone Aufgabe behandelt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
