<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4fd1b200e33aef5b97849a4dd7401ae624ec4e5" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72847493" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Dienstprogrammmethoden für allgemeine Operationen mit virtuellen Pfaden bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.VirtualPathUtility>-Klasse stellt Hilfsprogrammmethoden für allgemeine Vorgänge bereit, die virtuelle Pfade betreffen. Für ASP.NET-Server Steuerelemente und Servercode werden virtuelle Pfade, die den Webanwendungs Stamm Operator verwenden, die Tilde (~) häufig anstelle von relativen und absoluten Pfaden verwendet. Weitere Informationen finden Sie unter [ASP.net Web Project Path](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
 Verwenden Sie die <xref:System.Web.VirtualPathUtility>-Klasse, wenn Sie Anwendungs relative Pfade zu absoluten virtuellen Pfaden konvertieren müssen, wie es bei der Entwicklung eines benutzerdefinierten Webdienst Handlers der Fall sein kann.  
  
 Ein absoluter virtueller Pfad beginnt mit dem literalen Schrägstrich (/). Ein relativer virtueller Pfad ist relativ zum Stammverzeichnis der Anwendung, wenn es sich nur um eine Tilde (\~) handelt oder mit der Tilde und einem doppelten umgekehrten Schrägstrich (\~\\\\) oder der Tilde und einem Schrägstrich (\~/) beginnt. Durch die relative Erstellung eines virtuellen Pfades wird der Pfad unabhängig von der Anwendung.  
  
 Das virtuelle Verzeichnis für die Anwendung kann aus den Eigenschaften <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> und <xref:System.Web.HttpRequest.ApplicationPath%2A> abgerufen werden.  
  
> [!NOTE]
>  Die <xref:System.Web.VirtualPathUtility>-Klasse ist nicht für Sicherheits-oder Kanonisierungszwecke gedacht. Weitere Informationen zur Webanwendungs Sicherheit finden Sie unter [Übersicht über Sicherheitsbedrohungen für Webanwendungen](https://docs.microsoft.com/previous-versions/f13d73y6(v=vs.140)). Informationen zur generischen URL-Verarbeitung finden Sie unter <xref:System.Uri>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.VirtualPathUtility>-Klasse und einige ihrer Methoden verwendet werden. Zuerst generiert die <xref:System.Web.HttpRequest.FilePath%2A>-Eigenschaft den virtuellen Pfad zur Webseite. Die Methoden <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>und <xref:System.Web.VirtualPathUtility.GetDirectory%2A> geben Informationen über den virtuellen Pfad zurück. Als nächstes generiert die <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>-Eigenschaft einen virtuellen Pfad der aktuellen Anforderung, der sich von der <xref:System.Web.HttpRequest.FilePath%2A>-Eigenschaft unterscheiden kann, wenn eine <xref:System.Web.HttpResponse.Redirect%2A>-Methode aufgerufen wurde. Die Methoden <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>und <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> geben Informationen über den virtuellen Pfad zurück.  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">ASP.NET Website Pfade</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, an den der Schrägstrich angefügt werden soll.</param>
        <summary>Fügt das Schrägstrichliteral (/) am Ende des virtuellen Pfads an, falls es nicht bereits vorhanden ist.</summary>
        <returns>Der geänderte virtuelle Pfad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Literale Schrägstrich (/) am Ende des virtuellen Pfads vorhanden ist, wird der virtuelle Pfad nicht geändert.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Der Basispfad.</param>
        <param name="relativePath">Der relative Pfad.</param>
        <summary>Kombiniert einen Basispfad und einen relativen Pfad.</summary>
        <returns>Der <paramref name="basePath" /> und der <paramref name="relativePath" /> in Kombination.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.VirtualPathUtility.Combine%2A>-Methode gibt den Wert der <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>-Eigenschaft zurück, wenn der relative Pfad genau eine Tilde (~) ist.  
  
 Die <xref:System.Web.VirtualPathUtility.Combine%2A>-Methode verwendet den <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>-Eigenschafts Wert anstelle des Basispfad, wenn der relative Pfad mit einer Tilde und einem Schrägstrich (~/) beginnt. Andernfalls verwendet die <xref:System.Web.VirtualPathUtility.Combine%2A>-Methode den Basispfad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der <paramref name="relativePath" /> ist ein physikalischer Pfad.  
  
- oder - 
 Der <paramref name="relativePath" /> enthält einen oder mehrere Doppelpunkte.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="relativePath" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder - 
 Der <paramref name="basePath" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad.</param>
        <summary>Gibt den Verzeichnisabschnitt eines virtuellen Pfads zurück.</summary>
        <returns>Das Verzeichnis, auf das im virtuellen Pfad verwiesen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 , Wenn `virtualPath` keinen Stamm hat. Dies bedeutet, dass der Stamm Operator (Tilde [\~]) nicht mit einer Tilde (\~) beginnt, wie z. b. eine Tilde, ein Schrägstrich (\~/) oder eine Tilde und ein doppelter umgekehrter Schrägstrich (\~//) oder nicht mit einem Schrägstrich (/). , wird eine <xref:System.ArgumentException> Ausnahme ausgelöst.  
  
 Wenn der virtuelle Pfad, der an die <xref:System.Web.VirtualPathUtility.GetDirectory%2A>-Methode übermittelt wird, `"/images/image1.gif"`ist, wird das zurückgegebene Verzeichnis `"/images"`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>und <xref:System.Web.VirtualPathUtility.GetDirectory%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> hat keinen Stamm.  
  
- oder - 
 Der <paramref name="virtualPath" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad.</param>
        <summary>Ruft die Erweiterung der Datei ab, auf die im virtuellen Pfad verwiesen wird.</summary>
        <returns>Das Zeichenfolgenliteral der Dateinamenerweiterung, einschließlich des Punkts (.), <see langword="null" /> oder einer leeren Zeichenfolge ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der virtuelle Pfad, der an die <xref:System.Web.VirtualPathUtility.GetExtension%2A>-Methode geleitet wird, `"/images/image1.gif"`ist, wird die zurückgegebene Erweiterung `".gif"`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>und <xref:System.Web.VirtualPathUtility.GetDirectory%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> enthält ein oder mehrere Zeichen, die gemäß der Definition in <see cref="F:System.IO.Path.InvalidPathChars" /> nicht gültig sind.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad.</param>
        <summary>Ruft den Namen der Datei ab, auf die im virtuellen Pfad verwiesen wird.</summary>
        <returns>Das Dateinamenliteral nach dem letzten Verzeichniszeichen in <paramref name="virtualPath" />, andernfalls der letzte Verzeichnisname, wenn das letzte Zeichen des <paramref name="virtualPath" /> ein Verzeichnis- bzw. Volumetrennzeichen ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der virtuelle Pfad, der an die <xref:System.Web.VirtualPathUtility.GetFileName%2A>-Methode übermittelt wird, `"/images/image1.gif"`ist, wird der zurückgegebene Dateiname `"image1.gif"`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>und <xref:System.Web.VirtualPathUtility.GetDirectory%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> enthält ein oder mehrere Zeichen, die gemäß der Definition in <see cref="F:System.IO.Path.InvalidPathChars" /> nicht gültig sind.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der zu prüfendende virtuelle Pfad.</param>
        <summary>Gibt einen booleschen Wert zurück, der anzeigt, ob der angegebene virtuelle Pfad absolut ist, d. h. mit einem Schrägstrichliteral (/) beginnt.</summary>
        <returns><see langword="true" />, wenn <paramref name="virtualPath" /> ein absoluter Pfad und nicht <see langword="null" /> oder eine leere Zeichenfolge ("") ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein virtueller Pfad ist absolut, wenn er mit einem literalen Schrägstrich (/) beginnt. Die <xref:System.Web.HttpRequest.Path%2A>-Eigenschaft gibt beispielsweise einen absoluten virtuellen Pfad zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>und <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der zu prüfendende virtuelle Pfad.</param>
        <summary>Gibt einen booleschen Wert zurück, der angibt, ob der angegebene virtuelle Pfad zur Anwendung relativ ist.</summary>
        <returns><see langword="true" />, wenn der <paramref name="virtualPath" /> zur Anwendung relativ ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der virtuelle Pfad kann nur der Root-Operator (Tilde [~]) sein, oder er kann mit dem Root-Operator beginnen. Wenn `virtualPath` `null`ist, wird eine <xref:System.ArgumentNullException> Ausnahme ausgelöst. Wenn `virtualPath` eine leere Zeichenfolge ("") ist, gibt die <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>-Methode `false`zurück.  
  
> [!NOTE]
>  `"~` `filename` `"` ist kein gültiger virtueller Pfad und gibt `false` für die <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>-Methode zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>und <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">Der virtuelle Startpfad, ab dem der relative virtuelle Pfad zurückgegeben werden soll.</param>
        <param name="toPath">Das Ende des virtuellen Pfads, bis zu dem der relative virtuelle Pfad zurückgegeben werden soll.</param>
        <summary>Gibt den relativen virtuellen Pfad von einem virtuellem Pfad mit Stammoperator (die Tilde [~]) zu einem anderen zurück.</summary>
        <returns>Der relative virtuelle Pfad von <paramref name="fromPath" /> zu <paramref name="toPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 , Wenn die `fromPath`-und `toPath` Parameter nicht Stamm sind; Das heißt, Sie entsprechen nicht dem Root-Operator (Tilde [\~]), beginnen nicht mit einer Tilde (\~), wie z. b. eine Tilde und ein Schrägstrich (\~/) oder eine Tilde und einen doppelten umgekehrten Schrägstrich (\~//) oder nicht mit einem Schrägstrich (/). , wird eine <xref:System.ArgumentException> Ausnahme ausgelöst.  
  
 Abfrage Zeichenfolgen-Parameter und HTML-Anker, die im URI verwendet werden, werden nicht zum Bestimmen des relativen Pfads verwendet.  
  
 Wenn `fromPath` `"/directory1/file1.aspx"` und `toPath` `"/directory2/file2.aspx"`ist, gibt die <xref:System.Web.VirtualPathUtility.MakeRelative%2A>-Methode `"../directory2/file2.aspx"`zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fromPath" /> hat keinen Stamm.  
  
- oder - 
 <paramref name="toPath" /> hat keinen Stamm.</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, aus dem alle nachgestellten Schrägstriche entfernt werden sollen.</param>
        <summary>Entfernt einen nachgestellten Schrägstrich (/) aus einem virtuellen Pfad.</summary>
        <returns>Ein virtueller Pfad ohne nachgestellten Schrägstrich, wenn der virtuelle Pfad nicht bereits das Stammverzeichnis ("/") ist, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>-Methode entfernt einen Schrägstrich (/) am Ende des virtuellen Pfads. Wenn der virtuelle Pfad bereits das Stammverzeichnis (`"/"`) ist, wird keine Aktion ausgeführt. Wenn der virtuelle Pfad `null` oder eine leere Zeichenfolge ("") ist, gibt die <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>-Methode `null`zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konvertiert einen virtuellen Pfad in den absoluten Pfad einer Anwendung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, der in einen zur Anwendung relativen Pfad konvertiert werden soll.</param>
        <summary>Konvertiert einen virtuellen Pfad in den absoluten Pfad einer Anwendung.</summary>
        <returns>Die absolute Pfaddarstellung des angegebenen virtuellen Pfads.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei einem absoluten Pfad der Anwendung handelt es sich um einen Pfad, bei dem anstelle des root-Operators (Tilde [~]) der Anwendungspfad verwendet wird.  
  
 Wenn `virtualPath` ist:  
  
-   Absolut, die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode gibt den virtuellen Pfad unverändert zurück.  
  
-   Relative Anwendung: die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode fügt den aktuellen virtuellen Verzeichnispfad der Anwendung an den Anfang des `virtualPath`an. Beispielsweise kann auf den aktuellen virtuellen Verzeichnispfad der Anwendung über die <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>-Eigenschaft zugegriffen werden.  
  
-   Die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode löst eine <xref:System.ArgumentOutOfRangeException>-Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="virtualPath" /> hat keinen Stamm.</exception>
        <exception cref="T:System.Web.HttpException">Mit einem führenden doppelten Punkt (..) wird zum übergeordneten Verzeichnis gewechselt.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, der in einen zur Anwendung relativen Pfad konvertiert werden soll.</param>
        <param name="applicationPath">Der Anwendungspfad, der zum Konvertieren eines <paramref name="virtualPath" /> in einen relativen Pfad verwendet werden soll.</param>
        <summary>Konvertiert mit dem angegebenen Anwendungspfad einen virtuellen Pfad in den absoluten Pfad einer Anwendung.</summary>
        <returns>Die absolute virtuelle Pfaddarstellung des <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> Überladung der <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode verwendet anstelle des aktuellen Anwendungs Pfads den bereitgestellten Anwendungspfad.  
  
 Wenn `virtualPath` ist:  
  
-   Absolut, die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode gibt den virtuellen Pfad ohne Änderungen zurück.  
  
-   Relative Anwendung: die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode fügt `applicationPath` am Anfang des virtuellen Pfads hinzu.  
  
-   Die <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>-Methode löst eine <xref:System.ArgumentOutOfRangeException>-Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="applicationPath" /> hat keinen Stamm.</exception>
        <exception cref="T:System.Web.HttpException">Mit einem führenden doppelten Punkt (..) im Anwendungspfad wird zum übergeordneten Verzeichnis gewechselt.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konvertiert einen virtuellen Pfad in einen zur Anwendung relativen Pfad.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, der in einen zur Anwendung relativen Pfad konvertiert werden soll.</param>
        <summary>Konvertiert einen virtuellen Pfad in einen zur Anwendung relativen Pfad mithilfe des virtuellen Pfads der Anwendung, der in der <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />-Eigenschaft enthalten ist.</summary>
        <returns>Die Darstellung des <paramref name="virtualPath" /> als ein zur Anwendung relativer Pfad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der virtuelle Pfad für die Anwendung `"myapp"` ist und der virtuelle Pfad `"/myApp/sub/default.asp"` an die <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>-Methode übermittelt wird, wird der resultierende Anwendungs relative Pfad `"~/sub/default.aspx"`.  
  
 Wenn `virtualPath` nicht mit dem aktuellen Anwendungspfad beginnt, gibt die <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>-Methode den virtuellen Pfad unverändert zurück.  
  
 Wenn `virtualPath` mit dem Anwendungspfad identisch ist, wird der Stamm Operator (Tilde [~]) zurückgegeben. Beispielsweise kann auf den aktuellen virtuellen Verzeichnispfad der Anwendung über die <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>-Eigenschaft zugegriffen werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Methoden <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>und <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> verwendet werden.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad, der in einen zur Anwendung relativen Pfad konvertiert werden soll.</param>
        <param name="applicationPath">Der Anwendungspfad, der zum Konvertieren eines <paramref name="virtualPath" /> in einen relativen Pfad verwendet werden soll.</param>
        <summary>Konvertiert mit dem angegebenen Anwendungspfad einen virtuellen Pfad in den zur Anwendung relativen Pfad.</summary>
        <returns>Die Darstellung des <paramref name="virtualPath" /> als ein zur Anwendung relativer Pfad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> Überladung der <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>-Methode verwendet anstelle des aktuellen Anwendungs Pfades `applicationPath`. Wenn `virtualPath` nicht mit `applicationPath`beginnt, gibt die <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>-Methode den virtuellen Pfad unverändert zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
