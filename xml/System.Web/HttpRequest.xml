<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c5463858a97e4fd47aa4b8477cc76c116a75f7c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86654734" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="10a48-101">Ermöglicht es ASP.NET, die von einem Client bei einer Webanforderung gesendeten HTTP-Werte zu lesen.</span><span class="sxs-lookup"><span data-stu-id="10a48-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-102">Die Methoden und Eigenschaften der <xref:System.Web.HttpRequest> -Klasse werden durch die `Request` Eigenschaften der <xref:System.Web.HttpApplication> <xref:System.Web.HttpContext> Klassen,, und <xref:System.Web.UI.Page> <xref:System.Web.UI.UserControl> verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="10a48-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>

 <span data-ttu-id="10a48-103">Für den Zugriff auf Daten aus den-,-,- <xref:System.Web.HttpRequest.QueryString%2A> <xref:System.Web.HttpRequest.Form%2A> oder- <xref:System.Web.HttpRequest.Cookies%2A> <xref:System.Web.HttpRequest.ServerVariables%2A> Auflistungen können Sie schreiben `Request["key"]` , wie im Beispiel für die- <xref:System.Web.HttpRequest.QueryString%2A> Eigenschaft gezeigt.</span><span class="sxs-lookup"><span data-stu-id="10a48-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>

> [!NOTE]
>  <span data-ttu-id="10a48-104">Die Unicode-Unterstützung für <xref:System.Web.HttpRequest> Klassenmember erfordert die IIS-Version 6,0 oder höher.</span><span class="sxs-lookup"><span data-stu-id="10a48-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>



## Examples
 <span data-ttu-id="10a48-105">In den folgenden Beispielen <xref:System.Web.HttpRequest> wird auf die-Instanz für die aktuelle Anforderung mithilfe der- <xref:System.Web.UI.Page.Request%2A> Eigenschaft der-Klasse zugegriffen <xref:System.Web.UI.Page> .</span><span class="sxs-lookup"><span data-stu-id="10a48-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>

 <span data-ttu-id="10a48-106">Sie können eine vereinfachte Syntax für den Zugriff auf Daten aus den Auflistungen <xref:System.Web.HttpRequest.QueryString%2A> , <xref:System.Web.HttpRequest.Form%2A> , <xref:System.Web.HttpRequest.Cookies%2A> oder verwenden <xref:System.Web.HttpRequest.ServerVariables%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="10a48-107">Sie können schreiben `Request["key"]` .</span><span class="sxs-lookup"><span data-stu-id="10a48-107">You can write `Request["key"]`.</span></span>

 <span data-ttu-id="10a48-108">Im ersten Beispiel wird gezeigt, wie ein Abfrage Zeichen folgen Wert beim Laden einer Seite abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-108">The first example shows how to retrieve a query string value when loading a page.</span></span>

```csharp
public partial class AddToCart : Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        string rawId = Request["ProductID"];
        int productId;
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))
        {
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())
            {
                usersShoppingCart.AddToCart(productId);
            }
        }
        else
        {
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");
        }
        Response.Redirect("ShoppingCart.aspx");
    }
}
```

```vb
Public Class AddToCart
    Inherits Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        Dim rawId = Request("ProductID")
        Dim productId As Integer
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then
            Using usersShoppingCart As New ShoppingCartActions()
                usersShoppingCart.AddToCart(productId)
            End Using

        Else
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")
        End If
        Response.Redirect("ShoppingCart.aspx")
    End Sub
End Class
```

 <span data-ttu-id="10a48-109">Im nächsten Beispiel wird gezeigt, wie Sie überprüfen, ob die Anforderung authentifiziert ist, und die unformatierte URL abrufen.</span><span class="sxs-lookup"><span data-stu-id="10a48-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>

```csharp
public partial class RestrictedPage : Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Request.IsAuthenticated)
        {
            var rawUrl = Request.RawUrl;
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));
        }
    }
}
```

```vb
Public Class RestrictedPage
    Inherits Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load
        If Not Request.IsAuthenticated Then
            Dim rawUrl = Request.RawUrl
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))
        End If
    End Sub
End Class
```

 <span data-ttu-id="10a48-110">Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="10a48-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkID=191455).</span></span>

 <span data-ttu-id="10a48-111">In diesem Beispiel wird die- <xref:System.IO.StreamWriter> Klasse verwendet, um die Werte mehrerer <xref:System.Web.HttpRequest> Klasseneigenschaften in eine Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="10a48-112">Bei Eigenschaften vom Typ "String" sind die Werte HTML-codiert, wenn Sie in die Datei geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="10a48-113">Eigenschaften, die eine Auflistung darstellen, werden durchlaufen, und jedes in ihr enthaltenen Schlüssel-Wert-Paar wird in die Datei geschrieben.</span><span class="sxs-lookup"><span data-stu-id="10a48-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="10a48-114">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="10a48-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="10a48-115">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="10a48-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="10a48-116">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="10a48-116">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="10a48-117">Der Name der Datei, die der Anforderung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="10a48-118">Informationen über die URL der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="10a48-119">Die gesamte mit der Anforderung gesendete Abfragezeichenfolge (alles nach dem <c>„?“</c>).</span><span class="sxs-lookup"><span data-stu-id="10a48-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="10a48-120">Initialisiert ein <see cref="T:System.Web.HttpRequest" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="10a48-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-121">Sie müssen keine eigene Instanz der- <xref:System.Web.HttpRequest> Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="10a48-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="10a48-122">Die Methoden und Eigenschaften der <xref:System.Web.HttpRequest> -Klasse werden über die `Request` -Eigenschaft der <xref:System.Web.HttpApplication> Klassen, <xref:System.Web.HttpContext> , <xref:System.Web.UI.Page> und <xref:System.Web.UI.UserControl> verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="10a48-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10a48-123">Erzwingt das Beenden der zugrunde liegenden TCP-Verbindung, woraufhin alle ausstehenden E/A-Vorgänge fehlschlagen.</span><span class="sxs-lookup"><span data-stu-id="10a48-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="10a48-124">Sie können diese Methode als Reaktion auf einen Angriff von einem böswilligen HTTP-Client verwenden.</span><span class="sxs-lookup"><span data-stu-id="10a48-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-125">Diese Methode ist Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="10a48-125">This method is thread-safe.</span></span> <span data-ttu-id="10a48-126">Jeder Thread kann ihn jederzeit aufruft.</span><span class="sxs-lookup"><span data-stu-id="10a48-126">Any thread may call it at any time.</span></span>

 <span data-ttu-id="10a48-127">Diese Methode kann nur im integrierten Modus verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="10a48-128">Wenn Sie Sie im klassischen Modus aufrufen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="10a48-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="10a48-129">Verwenden Sie, um den Pipeline Modus zu bestimmen <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-130">Ruft ein Zeichenfolgenarray der vom Client unterstützten MIME-Accept-Typen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="10a48-131">Ein Zeichenfolgenarray der vom Client unterstützten MIME-Accept-Typen.</span><span class="sxs-lookup"><span data-stu-id="10a48-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-132">Im folgenden Codebeispiel werden die von der-Eigenschaft zurückgegebenen verschiedenen Werte <xref:System.Web.HttpRequest.AcceptTypes%2A> in eine Objekt Variable erfasst und die Anzahl und der Name jedes Werts in eine separate Zeile der HTTP-Ausgabe geschrieben.</span><span class="sxs-lookup"><span data-stu-id="10a48-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each value to a separate line of HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-133">Ruft den anonymen Bezeichner für den Benutzer ab, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="10a48-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="10a48-134">Eine Zeichenfolge, die den Bezeichner für den aktuellen anonymen Benutzer darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-135">Die- <xref:System.Web.HttpRequest.AnonymousID%2A> Eigenschaft weist einem nicht authentifizierten Benutzer einen langfristigen eindeutigen Bezeichner zu, der zum Nachverfolgen des Benutzers oder Zuweisen von Profil Eigenschaften zu diesem Benutzer verwendet werden kann, ohne Daten in einem-Objekt zu speichern `Session` .</span><span class="sxs-lookup"><span data-stu-id="10a48-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="10a48-136">Standardmäßig wird die- <xref:System.Web.HttpRequest.AnonymousID%2A> Eigenschaft mithilfe eines Cookies nachverfolgt. Sie kann jedoch so festgelegt werden, dass Sie den URI verwendet, wenn das- <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> Attribut im Konfigurations Abschnitt für die anonyme Identifizierung entweder auf den <xref:System.Web.HttpCookieMode.UseUri> Wert, oder festgelegt ist <xref:System.Web.HttpCookieMode.UseDeviceProfile> <xref:System.Web.HttpCookieMode.AutoDetect> .</span><span class="sxs-lookup"><span data-stu-id="10a48-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="10a48-137">Sie müssen das Cookie explizit löschen, wenn Sie es nicht mehr zur Verfügung stellen möchten, z. b. Wenn ein anonymer Benutzer authentifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>

 <span data-ttu-id="10a48-138">Die anonyme Identifizierung wird verwendet, wenn es erforderlich ist, Entitäten zu identifizieren, die nicht authentifiziert sind, und wenn eine Autorisierung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="10a48-139">Weitere Informationen finden Sie unter [anonymousidentifi-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="10a48-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span></span>



## Examples
 <span data-ttu-id="10a48-140">Im folgenden Beispiel wird gezeigt, wie die- <xref:System.Web.HttpRequest.AnonymousID%2A> Eigenschaft verwendet wird, indem das- <xref:System.Web.Security.AnonymousIdentificationModule.Creating> Ereignis in der Datei "Global. asax" behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="10a48-141">Dieses Beispiel besteht aus zwei Teilen:</span><span class="sxs-lookup"><span data-stu-id="10a48-141">This example has two parts:</span></span>

-   <span data-ttu-id="10a48-142">Eine Methode in der Datei "Global. asax", die das- <xref:System.Web.Security.AnonymousIdentificationModule.Creating> Ereignis behandelt.</span><span class="sxs-lookup"><span data-stu-id="10a48-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>

-   <span data-ttu-id="10a48-143">Eine Web Forms Seite.</span><span class="sxs-lookup"><span data-stu-id="10a48-143">A Web Forms page.</span></span>

 <span data-ttu-id="10a48-144">Der erste Teil des Code Beispiels zeigt, wie die-Eigenschaft festgelegt <xref:System.Web.HttpRequest.AnonymousID%2A> wird, indem das- <xref:System.Web.Security.AnonymousIdentificationModule.Creating> Ereignis in der Datei "Global. asax" behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="10a48-145">Mit der Methode mit dem Namen wird `AnonymousIdentification_Creating` die-Eigenschaft festgelegt, <xref:System.Web.HttpRequest.AnonymousID%2A> Wenn eine anonyme ID erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>

 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]

 <span data-ttu-id="10a48-146">Der zweite Teil des Code Beispiels zeigt, wie die neue angezeigt <xref:System.Web.HttpRequest.AnonymousID%2A> wird, die vom `AnonymousIdentification_Creating` Ereignishandler im vorherigen Beispiel erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)"><span data-ttu-id="10a48-147">anonymousIdentification-Element (ASP.NET-Einstellungsschema)</span><span class="sxs-lookup"><span data-stu-id="10a48-147">anonymousIdentification Element (ASP.NET Settings Schema)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-148">Ruft den virtuellen Pfad des Anwendungsstamms der ASP.NET-Anwendung auf dem Server ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-148">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="10a48-149">Der virtuelle Pfad der aktuellen Anwendung.</span><span class="sxs-lookup"><span data-stu-id="10a48-149">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-150">Verwenden Sie diese Eigenschaft, um eine URL relativ zum Anwendungs Stamm von einem Seiten-oder Webbenutzer Steuerelement zu erstellen, das sich nicht im Stammverzeichnis befindet.</span><span class="sxs-lookup"><span data-stu-id="10a48-150">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="10a48-151">Dadurch können Seiten und freigegebene Steuerelemente, die auf unterschiedlichen Ebenen einer Verzeichnisstruktur vorhanden sind, denselben Code verwenden, um eine Verknüpfung mit Ressourcen an festgelegten Orten in der Anwendung zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="10a48-151">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>



## Examples
 <span data-ttu-id="10a48-152">Im folgenden Beispiel wird die <xref:System.IO.StreamWriter.Write%2A> -Methode verwendet, um HTML-codiert und dann den Wert der- <xref:System.Web.HttpRequest.ApplicationPath%2A> Eigenschaft in eine Textdatei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-152">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="10a48-153">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-153">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="10a48-154">Es wird davon ausgegangen, dass ein-Objekt mit dem Namen vorhanden ist <xref:System.IO.StreamWriter> `sw`</span><span class="sxs-lookup"><span data-stu-id="10a48-154">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 <span data-ttu-id="10a48-155">Im folgenden Beispiel wird die- <xref:System.Web.HttpRequest.ApplicationPath%2A> Eigenschaft verwendet, um einen Pfad zu einer Ressource Programm gesteuert zu erstellen, die sich an einem festgelegten Speicherort in der Anwendung befindet.</span><span class="sxs-lookup"><span data-stu-id="10a48-155">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="10a48-156">Die Seite, die auf die Ressource verweist, muss sich nicht im selben Verzeichnis wie die Ressource befinden.</span><span class="sxs-lookup"><span data-stu-id="10a48-156">The page that references the resource does not have to be located in the same directory as the resource.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]

 <span data-ttu-id="10a48-157">Wenn Sie dieses Beispiel in einer Webanwendung mit dem Namen website1 ausführen,  `/WebSite1` wird als Wert der <xref:System.Web.HttpRequest.ApplicationPath%2A> -Eigenschaft angezeigt und `/WebSite1/images/Image1.gif` als kompletter Pfad des Bilds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10a48-157">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-158">Ruft den virtuellen Pfad des Anwendungsstamms ab und wandelt diesen mithilfe der Tildennotation (\~) in einen relativen Pfad um (z. B. „\~/page.aspx“).</span><span class="sxs-lookup"><span data-stu-id="10a48-158">Gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="10a48-159">Der virtuelle Pfad des Anwendungsstamms für die aktuelle Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-159">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-160">Verwenden Sie diese Eigenschaft, um URL-Informationen bereitzustellen, die unverändert bleiben, auch wenn sich der Speicherort der Anwendung ändert.</span><span class="sxs-lookup"><span data-stu-id="10a48-160">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="10a48-161">Dadurch kann derselbe URL-Zuordnungscode in einer Testumgebung und in der endgültigen Bereitstellungs Umgebung verwendet werden, oder er kann von Kopien von Webanwendungen in verschiedenen Domänen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-161">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>



## Examples
 <span data-ttu-id="10a48-162">Im folgenden Beispiel wird die- <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> Eigenschaft verwendet, um die URL eines- <xref:System.Web.UI.WebControls.Image> Steuer Elements auf ein Bild im gleichen Verzeichnis wie die Seite festzulegen.</span><span class="sxs-lookup"><span data-stu-id="10a48-162">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="10a48-163">Führen Sie diese Seite auf unterschiedlichen Ebenen einer Verzeichnisstruktur aus, um die resultierenden <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> Eigenschaftswerte anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="10a48-163">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]

 <span data-ttu-id="10a48-164">Im folgenden Beispiel wird die-Eigenschaft verwendet, <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> um den Pfad basierend auf dem aktuellen Pfad der Seite Programm gesteuert auf eine Ressource festzulegen.</span><span class="sxs-lookup"><span data-stu-id="10a48-164">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="10a48-165">Die Anzahl der zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="10a48-165">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="10a48-166">Führt einen binären Lesevorgang einer angegebenen Anzahl von Bytes aus dem aktuellen Eingabestream durch.</span><span class="sxs-lookup"><span data-stu-id="10a48-166">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="10a48-167">Ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="10a48-167">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-168">Die- <xref:System.Web.HttpRequest.BinaryRead%2A> Methode wird aus Gründen der Kompatibilität mit ASP bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-168">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="10a48-169"><paramref name="count" /> ist 0.</span><span class="sxs-lookup"><span data-stu-id="10a48-169"><paramref name="count" /> is 0.</span></span>

<span data-ttu-id="10a48-170">- oder -</span><span class="sxs-lookup"><span data-stu-id="10a48-170">-or-</span></span>

 <span data-ttu-id="10a48-171"><paramref name="count" /> ist größer als die verfügbare Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="10a48-171"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-172">Ruft Informationen über die Browserfunktionen des Clients ab, der die Anforderung gesendet hat, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="10a48-172">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="10a48-173">Ein <see cref="T:System.Web.HttpBrowserCapabilities" />-Objekt, das die Funktionen des Clientbrowsers auflistet.</span><span class="sxs-lookup"><span data-stu-id="10a48-173">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-174">Im folgenden Codebeispiel wird eine Liste der Funktionen des Browsers zurück an den Client in einer HTML-Seite gesendet.</span><span class="sxs-lookup"><span data-stu-id="10a48-174">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>

 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)"><span data-ttu-id="10a48-175">ASP.NET-Server Steuerelemente und Browser Funktionen</span><span class="sxs-lookup"><span data-stu-id="10a48-175">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-176">Ruft das Clientsicherheitszertifikat der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-176">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="10a48-177">Ein <see cref="T:System.Web.HttpClientCertificate" />-Objekt mit Informationen über die Sicherheitszertifikateinstellungen auf dem Client.</span><span class="sxs-lookup"><span data-stu-id="10a48-177">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-178">Im folgenden Codebeispiel werden die Zertifikat Einstellungen des Clients auf einer HTML-Seite zurück an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="10a48-178">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>

 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-179">Ruft den Zeichensatz des Einheitstextkörpers ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="10a48-179">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="10a48-180">Ein <see cref="T:System.Text.Encoding" />-Objekt, das den Zeichensatz des Clients darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-180">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-181">Die Standard-Inhalts Codierung kann im [globalization-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) einer Konfigurationsdatei angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-181">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) of a configuration file.</span></span> <span data-ttu-id="10a48-182">Wenn die Inhalts Codierung auch vom Client angegeben wird, werden die Standard Konfigurationseinstellungen überschrieben.</span><span class="sxs-lookup"><span data-stu-id="10a48-182">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>



## Examples
 <span data-ttu-id="10a48-183">Im folgenden Codebeispiel wird einer Zeichen folgen Variablen ein Wert zugewiesen, der die Beschreibung der aktuellen HTTP-Codierung darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-183">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-184">Gibt die Länge des vom Client gesendeten Inhalts in Bytes an.</span><span class="sxs-lookup"><span data-stu-id="10a48-184">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="10a48-185">Die Länge des vom Client gesendeten Inhalts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="10a48-185">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-186">Im folgenden Codebeispiel wird der Wert, der die Inhalts Länge der eingehenden Anforderung darstellt, einer ganzzahligen Variablen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="10a48-186">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-187">Ruft den MIME-Inhaltstyp der eingehenden Anforderung ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="10a48-187">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="10a48-188">Eine Zeichenfolge, die den MIME-Inhaltstyp der eingehenden Anforderung darstellt, z. B. „text/html“.</span><span class="sxs-lookup"><span data-stu-id="10a48-188">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="10a48-189">Zusätzliche allgemeine MIME-Typen schließen „audio.wav“, „image/gif“ und „application/pdf“ ein.</span><span class="sxs-lookup"><span data-stu-id="10a48-189">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-190">Im folgenden Codebeispiel wird der Wert, der den Inhaltstyp der eingehenden Anforderung darstellt, einer Zeichen folgen Variablen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="10a48-190">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]

 <span data-ttu-id="10a48-191">Das folgende Beispiel zeigt die Ausgabe, die möglicherweise von diesem Code erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-191">The following example shows output that might be produced by this code.</span></span>

 `GET`

 `127.0.0.1`

 `127.0.0.1`

 `GET`

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-192">Ruft eine Auflistung der vom Client gesendeten Cookies ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-192">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="10a48-193">Ein <see cref="T:System.Web.HttpCookieCollection" />-Objekt, das die Cookievariablen des Clients darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-193">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-194">ASP.NET enthält zwei systeminterne Cookie-Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="10a48-194">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="10a48-195">Die Auflistung, auf die über die- <xref:System.Web.HttpRequest.Cookies%2A> <xref:System.Web.HttpRequest> Auflistung zugegriffen wird, enthält Cookies, die vom Client an den Server im-Header übertragen werden `Cookie` .</span><span class="sxs-lookup"><span data-stu-id="10a48-195">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="10a48-196">Die Auflistung, auf die über die-Auflistung zugegriffen wird <xref:System.Web.HttpResponse.Cookies%2A> <xref:System.Web.HttpResponse> , enthält neue Cookies, die auf dem Server erstellt und im-Header an den Client übermittelt werden `Set-Cookie` .</span><span class="sxs-lookup"><span data-stu-id="10a48-196">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>

> [!NOTE]
>  <span data-ttu-id="10a48-197">Nachdem Sie ein Cookie mithilfe der-Auflistung hinzugefügt <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> haben, ist das Cookie sofort in der Auflistung verfügbar <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> , auch wenn die Antwort nicht an den Client gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-197">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>



## Examples
 <span data-ttu-id="10a48-198">Im folgenden Codebeispiel werden alle vom Client gesendeten Cookies durchlaufen und der Name, das Ablaufdatum, der Sicherheitsparameter und die Werte der einzelnen Cookies an die HTTP-Ausgabe gesendet.</span><span class="sxs-lookup"><span data-stu-id="10a48-198">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-199">Ruft den virtuellen Pfad der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-199">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-200">Der virtuelle Pfad der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-200">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Gibt den Dateipfad zum aktuell ausgeführten Seiten Handler zurück.</span><span class="sxs-lookup"><span data-stu-id="10a48-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="10a48-202">Bei Umleitungs Szenarien mit <xref:System.Web.HttpServerUtility.Execute%2A> -und- <xref:System.Web.HttpServerUtility.Transfer%2A> Methoden bedeutet dies, dass die- <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Eigenschaft den Pfad zu der Seite zurückgibt, an die umgeleitet wird (untergeordnete Seite)</span><span class="sxs-lookup"><span data-stu-id="10a48-202">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="10a48-203">Wenn der Client jedoch zu einer anderen Seite umgeleitet wird, gibt die- <xref:System.Web.HttpRequest.FilePath%2A> Eigenschaft den Pfad zur ursprünglichen Seite zurück.</span><span class="sxs-lookup"><span data-stu-id="10a48-203">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>



## Examples
 <span data-ttu-id="10a48-204">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-204">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-205">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-205">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-206">Ruft die Erweiterung des Dateinamens ab, die in der <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />-Eigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-206">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="10a48-207">Die Erweiterung des Dateinamens, die in der <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />-Eigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-207">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-208">Ruft den virtuellen Pfad der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-208">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-209">Der virtuelle Pfad der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-209">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-210">Die- <xref:System.Web.HttpRequest.FilePath%2A> Eigenschaft enthält nicht den-Nachspann <xref:System.Web.HttpRequest.PathInfo%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-210">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="10a48-211">Für die URL `http://www.contoso.com/virdir/page.html/tail` lautet der Wert beispielsweise <xref:System.Web.HttpRequest.FilePath%2A> /virdir/page.html.</span><span class="sxs-lookup"><span data-stu-id="10a48-211">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>



## Examples
 <span data-ttu-id="10a48-212">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.FilePath%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-212">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-213">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-213">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-214">Ruft die Auflistung der vom Client hochgeladenen Dateien im MIME-Multipart-Format ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-214">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="10a48-215">Ein <see cref="T:System.Web.HttpFileCollection" />-Objekt, das eine Auflistung der vom Client hochgeladenen Dateien darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-215">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="10a48-216">Die Elemente des <see cref="T:System.Web.HttpFileCollection" />-Objekts sind vom Typ <see cref="T:System.Web.HttpPostedFile" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-216">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-217">Die Datei Sammlung wird nur aufgefüllt, wenn der HTTP `Content-Type` -Anforderungs Wert "Multipart/Form-Data" lautet.</span><span class="sxs-lookup"><span data-stu-id="10a48-217">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>



## Examples
 <span data-ttu-id="10a48-218">Im folgenden Codebeispiel werden die Namen aller Dateien in der-Auflistung angezeigt <xref:System.Web.HttpRequest.Files%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-218">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>

 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-219">Ruft den Filter ab, der beim Lesen des aktuellen Eingabestreams verwendet werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="10a48-219">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="10a48-220">Ein <see cref="T:System.IO.Stream" />-Objekt, das als Filter verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="10a48-220">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-221">Im folgenden Codebeispiel werden zwei neue Klassen erstellt `QQQ1` , `QQQ2` die die Filtern <xref:System.Web.HttpRequest.InputStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-221">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="10a48-222">Platzieren Sie die Klassen in der Datei Global. asax im Verzeichnis einer ASP.NET-Anwendung, sodass alle Eingaben für alle ASP.NET-Webseiten in der Anwendung gefiltert werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-222">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-223">Die angegebene <see cref="T:System.IO.Stream" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="10a48-223">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-224">Ruft eine Auflistung von Formularvariablen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-224">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="10a48-225">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" />, die eine Auflistung von Formularvariablen darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-225">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-226">Die- <xref:System.Web.HttpRequest.Form%2A> Eigenschaft wird aufgefüllt, wenn der HTTP `Content-Type` -Anforderungs Wert entweder "application/x-www-form-urlencoded" oder "Multipart/Form-Data" ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-226">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>



## Examples
 <span data-ttu-id="10a48-227">Das folgende Beispiel zeigt, wie die Werte in der Formular Auflistung gelesen werden, die von einem Browser gepostet wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-227">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="10a48-228">Jedes Name/Wert-Paar in der Auflistung stellt ein Steuerelement im Formular und seinen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="10a48-228">Each name/value pair in the collection represents a control in the form and its value.</span></span>

 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10a48-229">Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das zum Lesen des eingehenden HTTP-Entitätentexts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-229">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="10a48-230">Ein <see cref="T:System.IO.Stream" />-Objekt, das zum Lesen des eingehenden HTTP-Einheitstextkörpers verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-230">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-231">Diese Methode ist mit identisch, <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> mit der Ausnahme, dass Sie auch die gelesenen Bytes in den von ASP.NET verwendeten internen Speicher kopiert, um <xref:System.Web.HttpRequest.Form%2A> die <xref:System.Web.HttpRequest.Files%2A> Eigenschaften, und aufzufüllen <xref:System.Web.HttpRequest.InputStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-231">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="10a48-232">Da diese Informationen beibehalten werden, wird Downstreamer-Code wie ASP.NET Web Forms-Seiten (ASPX-Dateien) erfolgreich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="10a48-232">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="10a48-233">Dies ist bei der <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>-Methode nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="10a48-233">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-234">Der Entitätstext der Anforderung wurde bereits geladen und wurde analysiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-234">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="10a48-235">Beispiele für Eigenschaften, die das Laden und Analysieren des Entitätstexts verursachen, umfassen Folgende:</span><span class="sxs-lookup"><span data-stu-id="10a48-235">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

<span data-ttu-id="10a48-236">–   Die <see cref="P:System.Web.HttpRequest.Form" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-236">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>

<span data-ttu-id="10a48-237">–   Die <see cref="P:System.Web.HttpRequest.Files" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-237">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>

<span data-ttu-id="10a48-238">–   Die <see cref="P:System.Web.HttpRequest.InputStream" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-238">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>

<span data-ttu-id="10a48-239">–   Die <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-239">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>

<span data-ttu-id="10a48-240">Um diese Ausnahme zu vermeiden, rufen Sie die <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />-Methode zuerst auf.</span><span class="sxs-lookup"><span data-stu-id="10a48-240">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="10a48-241">Diese Ausnahme wird auch ausgelöst, wenn der Client getrennt wird, während der Entitätstext gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-241">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10a48-242">Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das zum Lesen des eingehenden HTTP-Entitätentexts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-242">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10a48-243">Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das zum Lesen des eingehenden HTTP-Entitätentexts verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-243">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="10a48-244">Ein <see cref="T:System.IO.Stream" />-Objekt, das zum Lesen des eingehenden HTTP-Einheitstextkörpers verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-244">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-245">Diese Methode bietet eine Alternative zur Verwendung der- <xref:System.Web.HttpRequest.InputStream%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-245">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="10a48-246">Die- <xref:System.Web.HttpRequest.InputStream%2A> Eigenschaft wartet, bis die gesamte Anforderung empfangen wurde, bevor Sie ein-Objekt zurückgibt <xref:System.IO.Stream> .</span><span class="sxs-lookup"><span data-stu-id="10a48-246">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="10a48-247">Im Gegensatz dazu gibt die- <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> Methode das- <xref:System.IO.Stream> Objekt sofort zurück.</span><span class="sxs-lookup"><span data-stu-id="10a48-247">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="10a48-248">Sie können die-Methode verwenden, um mit der Verarbeitung des Entitäts Texts zu beginnen, bevor der gesamte Inhalt des Texts empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-248">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>

 <span data-ttu-id="10a48-249">Der Entitäts Text (oder so viel, wie Sie anfordern und empfangen wurde) wird nur zurückgegeben, wenn Sie das Objekt, das von dieser Methode zurückgegeben wird, zum Lesen des Streams verwenden, indem Sie Methoden wie die- <xref:System.IO.Stream.Read%2A> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="10a48-249">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="10a48-250">Sie verwenden Parameter der- <xref:System.IO.Stream.Read%2A> Methode, um anzugeben, wie viel der zu lesenden Entitäts Text ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-250">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>

 <span data-ttu-id="10a48-251">Das von der <xref:System.IO.Stream> ASP.NET-Methode zurückgegebene-Objekt unterstützt synchrone und asynchrone Lesemethoden.</span><span class="sxs-lookup"><span data-stu-id="10a48-251">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="10a48-252">Das <xref:System.IO.Stream> -Objekt implementiert die <xref:System.IO.Stream.BeginRead%2A> -Methode und die- <xref:System.IO.Stream.EndRead%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-252">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="10a48-253">Mit den asynchronen Methoden können Sie die Anforderungs Entität asynchron in Blöcken lesen, während ASP.NET den aktuellen Thread zwischen den einzelnen Iterationen einer asynchronen Lese Schleife freigibt.</span><span class="sxs-lookup"><span data-stu-id="10a48-253">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>

 <span data-ttu-id="10a48-254">Diese Methode kann nützlich sein, wenn die Anforderung eine große Datei hochlädt und Sie auf den Dateiinhalt zugreifen möchten, bevor der Upload abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-254">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="10a48-255">Sie sollten diese Methode jedoch nur für Szenarien verwenden, in denen Sie die gesamte Verarbeitung des Entitäts Texts übernehmen möchten.</span><span class="sxs-lookup"><span data-stu-id="10a48-255">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="10a48-256">Dies bedeutet, dass Sie diese Methode nicht von einer ASPX-Seite aus verwenden können, da der Entitäts Text beim Ausführen einer ASPX-Seite bereits gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-256">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-257">Der Entitätstext der Anforderung wurde bereits geladen und wurde analysiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-257">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="10a48-258">Beispiele für Eigenschaften, die das Laden und Analysieren des Entitätstexts verursachen, umfassen Folgende:</span><span class="sxs-lookup"><span data-stu-id="10a48-258">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

-   <see cref="P:System.Web.HttpRequest.Form" />

-   <see cref="P:System.Web.HttpRequest.InputStream" />

-   <see cref="P:System.Web.HttpRequest.Files" />

-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />

<span data-ttu-id="10a48-259">Um diese Ausnahme zu vermeiden, rufen Sie die <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />-Methode zuerst auf.</span><span class="sxs-lookup"><span data-stu-id="10a48-259">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="10a48-260">Diese Ausnahme wird auch ausgelöst, wenn der Client getrennt wird, während der Entitätstext gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-260">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="10a48-261"><see langword="true" />, um die Längenbeschränkung der Anforderung zu deaktivieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-261"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="10a48-262">Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das verwendet werden kann, um den eingehenden HTTP-Einheitstextkörper zu lesen, wobei optional die Anforderungslängenbegrenzung deaktiviert wird, die in der <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />-Eigenschaft festgesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-262">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="10a48-263">Ein <see cref="T:System.IO.Stream" />-Objekt, das zum Lesen des eingehenden HTTP-Einheitstextkörpers verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-263">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-264">Weitere Informationen zu dieser Methode finden Sie unter Überladung <xref:System.Web.HttpRequest.GetBufferlessInputStream> .</span><span class="sxs-lookup"><span data-stu-id="10a48-264">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-265">Der Entitätstext der Anforderung wurde bereits geladen und wurde analysiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-265">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="10a48-266">Beispiele für Eigenschaften, die das Laden und Analysieren des Entitätstexts verursachen, umfassen Folgende:</span><span class="sxs-lookup"><span data-stu-id="10a48-266">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span>

<span data-ttu-id="10a48-267">–   Die <see cref="P:System.Web.HttpRequest.Form" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-267">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>

<span data-ttu-id="10a48-268">–   Die <see cref="P:System.Web.HttpRequest.Files" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-268">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>

<span data-ttu-id="10a48-269">–   Die <see cref="P:System.Web.HttpRequest.InputStream" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10a48-269">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>

<span data-ttu-id="10a48-270">–   Die <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-270">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>

<span data-ttu-id="10a48-271">Um diese Ausnahme zu vermeiden, rufen Sie die <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />-Methode zuerst auf.</span><span class="sxs-lookup"><span data-stu-id="10a48-271">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="10a48-272">Diese Ausnahme wird auch ausgelöst, wenn der Client getrennt wird, während der Entitätstext gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-272">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-273">Ruft eine Auflistung von HTTP-Headern ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-273">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="10a48-274">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" /> von Headern.</span><span class="sxs-lookup"><span data-stu-id="10a48-274">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-275">Eine Auflistung aller möglichen Header finden Sie unter [Anforderungs Header Felder](https://go.microsoft.com/fwlink/?LinkId=73147) auf der W3C-Website.</span><span class="sxs-lookup"><span data-stu-id="10a48-275">For a listing of all possible headers, see [Request Header Fields](https://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>



## Examples
 <span data-ttu-id="10a48-276">Im folgenden Codebeispiel werden die Namen und Werte aller Header in der HTTP-Anforderung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10a48-276">The following code example displays the names and values of all headers in the HTTP request.</span></span>

 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-277">Ruft das <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Objekt der aktuellen <see cref="T:System.Web.HttpWorkerRequest" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-277">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="10a48-278">Das <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />-Objekt der aktuellen <see cref="T:System.Web.HttpWorkerRequest" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="10a48-278">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="10a48-279">Das aktuelle <see cref="T:System.Web.HttpWorkerRequest" />-Objekt ist kein <see langword="System.Web.Hosting.IIS7WorkerRequest" />-Objekt oder kein <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="10a48-279">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-280">Ruft die vom Client verwendete HTTP-Datenübertragungsmethode ab, z. B. <see langword="GET" />, <see langword="POST" /> oder <see langword="HEAD" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-280">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="10a48-281">Die vom Client verwendete HTTP-Datenübertragungsmethode.</span><span class="sxs-lookup"><span data-stu-id="10a48-281">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-282">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.HttpMethod%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-282">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-283">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-283">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 <span data-ttu-id="10a48-284">Das folgende Beispiel zeigt die Ausgabe, die von diesem Code erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-284">The following example shows output that is produced by this code.</span></span>

 `GET`

 `127.0.0.1`

 `127.0.0.1`

 `GET`

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-285">Ruft den Inhalt des eingehenden HTTP-Einheitentexts ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-285">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="10a48-286">Ein <see cref="T:System.IO.Stream" />-Objekt, das den Inhalt des eingehenden HTTP-Inhaltstexts darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-286">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-287">Im folgenden Codebeispiel wird der Inhalt eines <xref:System.Web.HttpRequest.InputStream%2A> in eine Zeichenfolge kopiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-287">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>

 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10a48-288">Stellt einen verwalteten Wrapper für die IIS-Methode bereit, mit der ein HTTP-Anforderungs-Einheitstextkörper in den Arbeitsspeicher eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-288">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-289">Die <xref:System.Web.HttpRequest.InsertEntityBody%2A> Methoden Überladungen bieten verwalteten Zugriff auf die IIS 7- `IHttpRequest::InsertEntityBody` Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-289">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="10a48-290">Die IIS-Methode fügt einen HTTP-Anforderungs Entitäts Text (die Daten, die von einem Client gesendet werden) in den Arbeitsspeicher ein.</span><span class="sxs-lookup"><span data-stu-id="10a48-290">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="10a48-291">Dies ist hilfreich, da IIS eine Kopie der Anforderungs Entität nicht verwaltet, nachdem Sie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-291">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="10a48-292">Die <xref:System.Web.HttpRequest.InsertEntityBody%2A> -Methoden erstellen eine Kopie der HTTP-Anforderungs Entitäts Daten und stellen Sie für IIS zur weiteren benutzerdefinierten Behandlung zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="10a48-292">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>

> [!NOTE]
>  <span data-ttu-id="10a48-293">Die- <xref:System.Web.HttpRequest.InsertEntityBody%2A> Methoden Überladungen funktionieren nur unter IIS 7,0 oder höher, da die- `IHttpRequest::InsertEntityBody` Methode in IIS 7,0 hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-293">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10a48-294">Stellt für IIS eine Kopie des HTTP-Anforderungs-Einheitstextkörpers bereit.</span><span class="sxs-lookup"><span data-stu-id="10a48-294">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-295">IIS behält keine Kopie der Anforderung bei, nachdem Sie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-295">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="10a48-296">Daher wird empfohlen, dass nur der Handler für eine HTTP-Anforderung die Anforderungs Entität lesen soll.</span><span class="sxs-lookup"><span data-stu-id="10a48-296">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>

 <span data-ttu-id="10a48-297">Die- <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> Methoden Überladung bietet IIS eine Kopie der Anforderungs Entität, wenn Sie zuvor von ASP.net gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-297">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="10a48-298">Diese Methoden Überladung ist in Fällen nützlich, in denen ASP.net die Entitäts Anforderung gelesen hat und Sie die vorhandenen Anforderungs Daten wieder verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="10a48-298">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="10a48-299">Die Methode wurde für eine frühere Version von IIS als IIS 7.0 aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="10a48-299">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="10a48-300">Ein Array, das die Anforderungsentitätsdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="10a48-300">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="10a48-301">Die nullbasierte Position im <paramref name="buffer" />-Parameter, an der das Speichern der Anforderungsentitätsdaten beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="10a48-301">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="10a48-302">Die Anzahl der in das <paramref name="buffer" />-Array zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="10a48-302">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="10a48-303">Stellt für IIS eine Kopie des HTTP-Anforderungs-Einheitstextkörpers und Informationen zum Anforderungsentitätsobjekt bereit.</span><span class="sxs-lookup"><span data-stu-id="10a48-303">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-304">IIS behält keine Kopie der Anforderung bei, nachdem Sie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-304">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="10a48-305">Daher wird empfohlen, dass nur der Handler für eine HTTP-Anforderung die Anforderungs Entität lesen soll.</span><span class="sxs-lookup"><span data-stu-id="10a48-305">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>

 <span data-ttu-id="10a48-306">Die- <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> Methoden Überladung ist nützlich, wenn Sie eine benutzerdefinierte Verarbeitung durchführen möchten, z. b. einen anderen Entitäts Text in den Arbeitsspeicher einfügen</span><span class="sxs-lookup"><span data-stu-id="10a48-306">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="10a48-307">Die Methode wurde für eine frühere Version von IIS als IIS 7.0 aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="10a48-307">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="10a48-308"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-308"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="10a48-309"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="10a48-309"><paramref name="offset" /> or <paramref name="count" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="10a48-310">Die Elementzahl in <paramref name="count" /> ist größer als der verfügbare Platz in <paramref name="buffer" />, wenn der <paramref name="offset" />-Wert angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-310">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-311">Ruft einen Wert ab, der angibt, ob die Anforderung authentifiziert wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-311">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="10a48-312"><see langword="true" />, wenn die Anforderung authentifiziert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-312"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-313">Im folgenden Codebeispiel wird die- <xref:System.Web.HttpRequest.IsAuthenticated%2A> Eigenschaft verwendet, um zu bestimmen, ob die aktuelle Anforderung authentifiziert wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-313">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="10a48-314">Wenn Sie nicht authentifiziert wurde, wird die Anforderung an eine andere Seite umgeleitet, auf der Benutzer ihre Anmelde Informationen in die Webanwendung eingeben können.</span><span class="sxs-lookup"><span data-stu-id="10a48-314">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="10a48-315">Dies ist ein gängiges Verfahren, das auf der Standardseite für eine Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-315">This is a common technique used in the default page for an application.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-316">Ruft einen Wert ab, der angibt, ob die Anforderung vom lokalen Computer stammt.</span><span class="sxs-lookup"><span data-stu-id="10a48-316">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="10a48-317"><see langword="true" />, wenn die Anforderung vom lokalen Computer stammt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-317"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-318">Die <xref:System.Web.HttpRequest.IsLocal%2A> -Eigenschaft gibt zurück, `true` Wenn die IP-Adresse des Anforderungs Ursprungs 127.0.0.1 ist oder die IP-Adresse der Anforderung mit der IP-Adresse des Servers identisch ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-318">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-319">Ruft einen Wert ab, der angibt, ob bei der HTTP-Verbindung Secure Sockets, d. h. HTTPS, verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-319">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value><span data-ttu-id="10a48-320"><see langword="true" />, wenn die Verbindung eine SSL-Verbindung ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-320"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-321">Im folgenden Codebeispiel wird bestimmt, ob die- <xref:System.Web.HttpRequest.IsSecureConnection%2A> Eigenschaft auf false festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-321">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="10a48-322">Wenn dies der Fall ist, wird die- <xref:System.Web.HttpResponse.SuppressContent%2A> Eigenschaft auf true festgelegt, um zu verhindern, dass die Antwort gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-322">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>

 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="10a48-323">Der Name des abzurufenden Elements der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="10a48-323">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="10a48-324">Ruft das angegebene Objekt aus den <see cref="P:System.Web.HttpRequest.QueryString" />-, <see cref="P:System.Web.HttpRequest.Form" />-, <see cref="P:System.Web.HttpRequest.Cookies" />- oder <see cref="P:System.Web.HttpRequest.ServerVariables" />-Auflistungen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-324">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="10a48-325">Der im <paramref name="key" />-Parameter angegebene Member der <see cref="P:System.Web.HttpRequest.QueryString" />-, <see cref="P:System.Web.HttpRequest.Form" />-, <see cref="P:System.Web.HttpRequest.Cookies" />- oder <see cref="P:System.Web.HttpRequest.ServerVariables" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="10a48-325">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="10a48-326">Wenn der angegebene <paramref name="key" />-Parameter nicht gefunden wird, wird <see langword="null" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="10a48-326">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-327">Ruft den <see cref="T:System.Security.Principal.WindowsIdentity" />-Typ für den aktuellen Benutzer ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-327">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="10a48-328">Ein <see cref="T:System.Security.Principal.WindowsIdentity" />-Objekt für die aktuellen Authentifizierungseinstellungen von Microsoft-Internetinformationsdienste (IIS).</span><span class="sxs-lookup"><span data-stu-id="10a48-328">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-329">Die <xref:System.Web.HttpRequest.LogonUserIdentity%2A> -Eigenschaft macht die Eigenschaften und Methoden des- <xref:System.Security.Principal.WindowsIdentity> Objekts für den aktuell verbundenen Benutzer mit Microsoft Internetinformationsdienste (IIS) verfügbar.</span><span class="sxs-lookup"><span data-stu-id="10a48-329">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="10a48-330">Die Instanz der- <xref:System.Security.Principal.WindowsIdentity> Klasse, die von verfügbar gemacht wird, <xref:System.Web.HttpRequest.LogonUserIdentity%2A> verfolgt das IIS-Anforderungs Token und ermöglicht den einfachen Zugriff auf dieses Token für die aktuelle HTTP-Anforderung, die in ASP.NET verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-330">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="10a48-331">Eine Instanz der- <xref:System.Security.Principal.WindowsIdentity> Klasse wird automatisch erstellt, sodass Sie nicht erstellt werden muss, um Zugriff auf die Methoden und Eigenschaften zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="10a48-331">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>



## Examples
 <span data-ttu-id="10a48-332">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.HttpRequest.LogonUserIdentity%2A> -Eigenschaft für den aktuellen Benutzer abgerufen und die Werte der einzelnen Elemente in einer Textdatei geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-332">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="10a48-333">Platzieren Sie diesen Code auf der ASP.NET-Seite, auf die vom-Attribut des Formulars verwiesen wird `ACTION` .</span><span class="sxs-lookup"><span data-stu-id="10a48-333">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="10a48-334">Die Webanwendung wird im integrierten Modus von IIS 7 ausgeführt, und das <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignis wurde noch nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="10a48-334">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="10a48-335">Der Name der Formular-Imagemap.</span><span class="sxs-lookup"><span data-stu-id="10a48-335">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="10a48-336">Ordnet einen eingehenden Formularparameter für ein Bildfeld den entsprechenden x- und y-Koordinatenwerten zu.</span><span class="sxs-lookup"><span data-stu-id="10a48-336">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="10a48-337">Ein zweidimensionales Array von Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="10a48-337">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10a48-338">Ordnet dem physischen Pfad auf dem Server den virtuellen Pfad in der angeforderten URL für die aktuelle Anforderung zu.</span><span class="sxs-lookup"><span data-stu-id="10a48-338">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="10a48-339">Der absolute oder relative virtuelle Pfad für die aktuelle Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-339">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="10a48-340">Ordnet einem physischen Pfad den angegebenen virtuellen Pfad zu.</span><span class="sxs-lookup"><span data-stu-id="10a48-340">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="10a48-341">Der physische Pfad auf dem durch <paramref name="virtualPath" /> angegebenen Server.</span><span class="sxs-lookup"><span data-stu-id="10a48-341">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="10a48-342">Die- <xref:System.Web.HttpRequest.MapPath%2A> Eigenschaft enthält potenziell vertrauliche Informationen über die Host Umgebung.</span><span class="sxs-lookup"><span data-stu-id="10a48-342">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="10a48-343">Der Rückgabewert sollte Benutzern nicht angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-343">The return value should not be displayed to users.</span></span>



## Examples
 <span data-ttu-id="10a48-344">Im folgenden Codebeispiel wird die- <xref:System.Web.HttpRequest.MapPath%2A> Methode verwendet, um einen virtuellen Pfad in einen voll qualifizierten physischen Pfad auf dem Server zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="10a48-344">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="10a48-345">Dieses Beispiel besteht aus zwei Teilen:</span><span class="sxs-lookup"><span data-stu-id="10a48-345">This example has two parts:</span></span>

-   <span data-ttu-id="10a48-346">Eine ASPX-Seite ordnet den Pfad zu, liest die Datei und zeigt die Ergebnisse des Lesevorgangs an.</span><span class="sxs-lookup"><span data-stu-id="10a48-346">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>

-   <span data-ttu-id="10a48-347">Eine Klasse, `UpperCaseFilterStream` , die alle an Großbuchstaben übergebenen Zeichen ändert.</span><span class="sxs-lookup"><span data-stu-id="10a48-347">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>

 <span data-ttu-id="10a48-348">Der erste Teil des Beispiels zeigt, wie Sie mithilfe der-Methode einen virtuellen Pfad in einen voll qualifizierten physischen Pfad konvertieren <xref:System.Web.HttpRequest.MapPath%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-348">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="10a48-349">Dieser physische Pfad wird dann an ein- <xref:System.IO.StreamReader> Objekt weitergeleitet, das den Inhalt der Datei abruft.</span><span class="sxs-lookup"><span data-stu-id="10a48-349">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="10a48-350"><xref:System.Web.HttpResponse.Write%2A>Anschließend wird die-Methode aufgerufen, um den Inhalt der Datei auf der Seite anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="10a48-350">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="10a48-351">Die- <xref:System.Web.HttpResponse.Filter%2A> Eigenschaft wird verwendet, um einen Filter an den Antwortstream anzufügen, der den Text in Großbuchstaben der Seite angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-351">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]

 <span data-ttu-id="10a48-352">Der zweite Teil des Beispiels zeigt eine Klasse, die von erbt, <xref:System.IO.Stream> und konvertiert alle Zeichen in einem Stream in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="10a48-352">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="10a48-353">Fügen Sie diesen Code in den `App_Code` Ordner für Ihre Anwendung ein.</span><span class="sxs-lookup"><span data-stu-id="10a48-353">Put this code in the `App_Code` folder for your application.</span></span>

 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-354">Für die Anforderung ist kein <see cref="T:System.Web.HttpContext" />-Objekt definiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-354">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="10a48-355">Der absolute oder relative virtuelle Pfad für die aktuelle Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-355">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="10a48-356">Der virtuelle Pfad des Basisverzeichnisses, der für die Auflösung relativer Pfade verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-356">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="10a48-357"><see langword="true" /> gibt an, dass <paramref name="virtualPath" /> möglicherweise zu einer anderen Anwendung gehört, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="10a48-357"><see langword="true" /> to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="10a48-358">Ordnet einem physischen Pfad den angegebenen virtuellen Pfad zu.</span><span class="sxs-lookup"><span data-stu-id="10a48-358">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="10a48-359">Der physische Pfad auf dem Server.</span><span class="sxs-lookup"><span data-stu-id="10a48-359">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="10a48-360">Die- <xref:System.Web.HttpRequest.MapPath%2A> Eigenschaft enthält potenziell vertrauliche Informationen über die Host Umgebung.</span><span class="sxs-lookup"><span data-stu-id="10a48-360">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="10a48-361">Der Rückgabewert sollte Benutzern nicht angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-361">The return value should not be displayed to users.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-362"><paramref name="allowCrossMapping" /> ist gleich <see langword="false" /> und <paramref name="virtualPath" /> gehört zu einer anderen Anwendung.</span><span class="sxs-lookup"><span data-stu-id="10a48-362"><paramref name="allowCrossMapping" /> is <see langword="false" /> and <paramref name="virtualPath" /> belongs to another application.</span></span>

<span data-ttu-id="10a48-363">- oder -</span><span class="sxs-lookup"><span data-stu-id="10a48-363">-or-</span></span>

<span data-ttu-id="10a48-364">Für die Anforderung ist kein <see cref="T:System.Web.HttpContext" />-Objekt definiert.</span><span class="sxs-lookup"><span data-stu-id="10a48-364">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="10a48-365">Der Name des Bildfelds.</span><span class="sxs-lookup"><span data-stu-id="10a48-365">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="10a48-366">Ordnet einen eingehenden Formularparameter für ein Bildfeld den entsprechenden x- und y-Koordinatenwerten zu.</span><span class="sxs-lookup"><span data-stu-id="10a48-366">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="10a48-367">Die x- und y-Koordinatenwerte.</span><span class="sxs-lookup"><span data-stu-id="10a48-367">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-368">Ruft eine kombinierte Auflistung der Elemente <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> und <see cref="P:System.Web.HttpRequest.ServerVariables" /> ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-368">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="10a48-369">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="10a48-369">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-370">Der Auflistung werden Name-Wert-Paare in der folgenden Reihenfolge hinzugefügt:</span><span class="sxs-lookup"><span data-stu-id="10a48-370">Name-value pairs are added to the collection in the following order:</span></span>

1.  <span data-ttu-id="10a48-371">Abfrage Zeichen folgen Parameter.</span><span class="sxs-lookup"><span data-stu-id="10a48-371">Query-string parameters.</span></span>

2.  <span data-ttu-id="10a48-372">Formularfelder.</span><span class="sxs-lookup"><span data-stu-id="10a48-372">Form fields.</span></span>

3.  <span data-ttu-id="10a48-373">KS.</span><span class="sxs-lookup"><span data-stu-id="10a48-373">Cookies.</span></span>

4.  <span data-ttu-id="10a48-374">Server Variablen.</span><span class="sxs-lookup"><span data-stu-id="10a48-374">Server variables.</span></span>



## Examples
 <span data-ttu-id="10a48-375">Im folgenden Codebeispiel wird gezeigt, wie die <xref:System.Web.HttpRequest.Params%2A> -Eigenschaft für eine Seite durchlaufen und wie die einzelnen Schlüssel-Wert-Paare angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-375">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-376">Ruft den virtuellen Pfad der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-376">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-377">Der virtuelle Pfad der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-377">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-378">Der <xref:System.Web.HttpRequest.Path%2A> ist die Verkettung von <xref:System.Web.HttpRequest.FilePath%2A> und dem Nachspann <xref:System.Web.HttpRequest.PathInfo%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-378">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="10a48-379">Beispielsweise ist für die URL `http://www.contoso.com/virdir/page.html/tail` <xref:System.Web.HttpRequest.Path%2A> /virdir/page.html/Tail.</span><span class="sxs-lookup"><span data-stu-id="10a48-379">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>



## Examples
 <span data-ttu-id="10a48-380">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.Path%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-380">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-381">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-381">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-382">Ruft die zusätzlichen Pfadinformationen für eine Ressource mit einer URL-Erweiterung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-382">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="10a48-383">Die zusätzlichen Pfadinformationen für eine Ressource.</span><span class="sxs-lookup"><span data-stu-id="10a48-383">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-384">Für die URL `http://www.contoso.com/virdir/page.html/tail` lautet der <xref:System.Web.HttpRequest.PathInfo%2A> Wert/Tail.</span><span class="sxs-lookup"><span data-stu-id="10a48-384">For the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>



## Examples
 <span data-ttu-id="10a48-385">Im folgenden Codebeispiel wird bestimmt, ob die- <xref:System.Web.HttpRequest.PathInfo%2A> Eigenschaft eine leere Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="10a48-385">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="10a48-386">Wenn dies der Fall ist, schreibt die- <xref:System.IO.StreamWriter.Write%2A> Methode eine Zeichenfolge, die dies angibt, in eine Datei.</span><span class="sxs-lookup"><span data-stu-id="10a48-386">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="10a48-387">Wenn dies nicht der Fall ist, <xref:System.Web.HttpUtility.HtmlEncode%2A> codiert die Methode den Wert der- <xref:System.Web.HttpRequest.PathInfo%2A> Eigenschaft in HTML, und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode schreibt den codierten Wert in die Datei.</span><span class="sxs-lookup"><span data-stu-id="10a48-387">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="10a48-388">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-388">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-389">Ruft den physischen Dateisystempfad für das Stammverzeichnis der gegenwärtig ausgeführten Serveranwendung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-389">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="10a48-390">Der Dateisystempfad für das Stammverzeichnis der aktuellen Anwendung.</span><span class="sxs-lookup"><span data-stu-id="10a48-390">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-391">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-391">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-392">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-392">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-393">Ruft den physischen Dateisystempfad entsprechend der angeforderten URL ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-393">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="10a48-394">Der Dateisystempfad der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-394">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-395">In Umleitungs Szenarien mit <xref:System.Web.HttpServerUtility.Execute%2A> und <xref:System.Web.HttpServerUtility.Transfer%2A> gibt die- <xref:System.Web.HttpRequest.PhysicalPath%2A> Eigenschaft den Pfad zur ursprünglichen Seite zurück.</span><span class="sxs-lookup"><span data-stu-id="10a48-395">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="10a48-396">Zum Ermitteln des physischen Pfads der aktuell ausgeführten Seite verwenden Sie die- <xref:System.Web.HttpRequest.MapPath%2A> Methode, wobei das Eingabe Argument als-Eigenschaft festgelegt ist <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-396">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>



## Examples
 <span data-ttu-id="10a48-397">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.PhysicalPath%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-397">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-398">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-398">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-399">Ruft die Auflistung von Zeichenfolgenvariablen für HTTP-Abfragen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-399">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="10a48-400">Die Abfragezeichenfolgenvariablen, die vom Client gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-400">The query string variables sent by the client.</span></span> <span data-ttu-id="10a48-401">Schlüssel und Werte sind URL-entschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="10a48-401">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-402">Das folgende Codebeispiel zeigt zwei Möglichkeiten, den Wert einer Variablen der Abfrage Zeichenfolge mit dem Namen "FullName" zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="10a48-402">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="10a48-403">In jedem Fall, wenn die URL lautet `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri` , ist der zurückgegebene Wert "Fadi fakhoruri", weil der `%20` URL-decodiert in ein Leerzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-403">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="10a48-404">Wenn die URL nicht über eine `fullname` Abfrage Zeichenfolgen-ID verfügt, ist der zurückgegebene Wert `null` .</span><span class="sxs-lookup"><span data-stu-id="10a48-404">If the URL doesn't have a `fullname` query string ID, the returned value would be `null`.</span></span>

 <span data-ttu-id="10a48-405">Die erste Codezeile sucht nur in der Abfrage Zeichenfolge nach dem Schlüssel "FullName". die zweite Zeile sucht in allen HTTP-Anforderungs Auflistungen nach dem Schlüssel "FullName".</span><span class="sxs-lookup"><span data-stu-id="10a48-405">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="10a48-406">Weitere Informationen zur zweiten Zeile finden Sie unter <xref:System.Web.HttpRequest.Item%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-406">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>

```csharp
string fullname1 = Request.QueryString["fullname"];
string fullname2 = Request["fullname"];

```

```vb
Dim fullname1 As String = Request.QueryString("fullname")
Dim fullname2 As String = Request("fullname")
```

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-407">Ruft die Basis-URL der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-407">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-408">Die Basis-URL der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-408">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-409">Die RAW-URL wird als Teil der URL definiert, die den Domänen Informationen folgt.</span><span class="sxs-lookup"><span data-stu-id="10a48-409">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="10a48-410">In der URL-Zeichenfolge lautet die unformatierte `http://www.contoso.com/articles/recent.aspx` URL/articles/Recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="10a48-410">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="10a48-411">Die RAW-URL enthält die Abfrage Zeichenfolge, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="10a48-411">The raw URL includes the query string, if present.</span></span>



## Examples
 <span data-ttu-id="10a48-412">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.RawUrl%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-412">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-413">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-413">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-414">Ruft einen Wert ab, der angibt, ob der Text der Anforderungsentität gelesen wurde, und wenn ja, wie er gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-414">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="10a48-415">Der Wert, der angibt, wie der Anforderungsentitätstext gelesen wurde, oder dass er nicht gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-415">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-416">Diese Methode wird verwendet, um die Ausnahme zu vermeiden, die ausgelöst wird, wenn der Entitäts Text bereits gelesen wurde und versucht wird, ihn mit einer nicht kompatiblen Methode zu lesen.</span><span class="sxs-lookup"><span data-stu-id="10a48-416">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="10a48-417">Zu den Methoden und Eigenschaften, die den Entitäts Text lesen, zählen die folgenden:</span><span class="sxs-lookup"><span data-stu-id="10a48-417">Methods and properties that read the entity body include the following:</span></span>

-   <span data-ttu-id="10a48-418">Die <xref:System.Web.HttpRequest.Form%2A>-Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="10a48-418">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>

-   <span data-ttu-id="10a48-419">Die <xref:System.Web.HttpRequest.Files%2A>-Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="10a48-419">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>

-   <span data-ttu-id="10a48-420">Die <xref:System.Web.HttpRequest.InputStream%2A>-Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="10a48-420">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>

-   <span data-ttu-id="10a48-421">Die <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-421">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>

-   <span data-ttu-id="10a48-422">Die <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="10a48-422">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; }" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); };" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext" Usage="System.Web.HttpRequest.RequestContext" FrameworkAlternate="netframework-4.0" />
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-423">Ruft die <see cref="T:System.Web.Routing.RequestContext" />-Instanz der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-423">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-424">Die <see cref="T:System.Web.Routing.RequestContext" />-Instanz der aktuellen Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-424">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="10a48-425">Für nicht weitergeleitete Anforderungen ist das zurückgegebene <see cref="T:System.Web.Routing.RequestContext" />-Objekt leer.</span><span class="sxs-lookup"><span data-stu-id="10a48-425">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-426">Diese Eigenschaft ermöglicht den Zugriff auf das- <xref:System.Web.Routing.RouteData> Objekt für die aktuelle Anforderung.</span><span class="sxs-lookup"><span data-stu-id="10a48-426">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="10a48-427">Weitere Informationen zum Routing von ASP.net finden Sie unter. [ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="10a48-427">For more information about ASP.NET routing, see.[ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="10a48-428">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</span><span class="sxs-lookup"><span data-stu-id="10a48-428">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="10a48-429">Gewusst wie: Zugreifen auf URL-Parameter auf einer gerouteten Seite</span><span class="sxs-lookup"><span data-stu-id="10a48-429">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-430">Ruft die vom Client verwendete HTTP-Datenübertragungsmethode ab (<see langword="GET" /> oder <see langword="POST" />) oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="10a48-430">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="10a48-431">Eine Zeichenfolge, die den vom Client gesendeten HTTP-Aufruftyp darstellt.</span><span class="sxs-lookup"><span data-stu-id="10a48-431">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-432">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.RequestType%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-432">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-433">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-433">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="10a48-434">Der Pfad zum physischen Laufwerk.</span><span class="sxs-lookup"><span data-stu-id="10a48-434">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="10a48-435">Ein boolescher Wert, der angibt, ob ein HTTP-Header auf dem Datenträger gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="10a48-435">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="10a48-436">Speichert eine HTTP-Anforderung auf dem Datenträger.</span><span class="sxs-lookup"><span data-stu-id="10a48-436">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-437">Das Speichern des Anforderungs Kontexts auf einem Datenträger kann beim Debuggen hilfreich sein.</span><span class="sxs-lookup"><span data-stu-id="10a48-437">Saving the request context to disk can be useful in debugging.</span></span>



## Examples
 <span data-ttu-id="10a48-438">Im folgenden Codebeispiel wird die-Methode aufgerufen, <xref:System.Web.HttpRequest.SaveAs%2A> Wenn eine Seite geladen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-438">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="10a48-439">Der-Befehl gibt an, dass die Anforderung als Textdatei in einem Verzeichnis gespeichert werden soll, in dem die ASP.NET-Prozess Identität Schreibberechtigungen erteilt hat und dass alle in der Anforderung enthaltenen Header Informationen in der Datei enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="10a48-439">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="10a48-440">Die <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />-Eigenschaft des <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> wird auf <see langword="true" /> festgelegt, aber <paramref name="filename" /> ist kein absoluter Pfad.</span><span class="sxs-lookup"><span data-stu-id="10a48-440">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-441">Ruft eine Auflistung von Webservervariablen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-441">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="10a48-442">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" /> von Servervariablen.</span><span class="sxs-lookup"><span data-stu-id="10a48-442">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-443">Eine Liste der von IIS unterstützten Server Variablen finden Sie unter [IIS-Server Variablen](https://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="10a48-443">For a list of server variables supported by IIS, see [IIS Server Variables](https://go.microsoft.com/fwlink/?LinkId=52471).</span></span>



## Examples
 <span data-ttu-id="10a48-444">Das folgende Codebeispiel zeigt die Namen und Werte aller benannten Server Variablen an.</span><span class="sxs-lookup"><span data-stu-id="10a48-444">The following code example displays the names and values of all named server variables.</span></span>

 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-445">Ruft ein <see cref="T:System.Threading.CancellationToken" />-Objekt ab, das aktiviert wird, wenn eine Anforderung abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-445">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="10a48-446">Das Abbruchtoken.</span><span class="sxs-lookup"><span data-stu-id="10a48-446">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-447">Der Timeout Zeitraum kann in der Web.config-Datei (siehe <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType> ) oder Programm gesteuert angegeben werden (siehe <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> ).</span><span class="sxs-lookup"><span data-stu-id="10a48-447">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="10a48-448">Der Timeout Zeitraum wird ab dem Zeitpunkt gemessen, an dem die Anforderung ankommt.</span><span class="sxs-lookup"><span data-stu-id="10a48-448">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="10a48-449">Wenn das Standard Timeout von 110 Sekunden wirksam ist, wird das Abbruch Token nach Beginn der Anforderungs Verarbeitung nicht mehr als 110 Sekunden gekürzt.</span><span class="sxs-lookup"><span data-stu-id="10a48-449">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="10a48-450">Sie können den <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> Eigenschafts Wert ändern, und solange dieses Token noch nicht abgeschnitten wurde, wird der neue Timeout Wert berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="10a48-450">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>

 <span data-ttu-id="10a48-451">Derzeit bietet das Token nur eine Genauigkeit von 15 Sekunden, was bedeutet, dass das Token, wenn der Timeout Wert 110 Sekunden beträgt, zwischen 110 und 125 Sekunden nach Beginn der Anforderungs Verarbeitung gekürzt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-451">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="10a48-452">Die Granularität kann sich in Zukunft ändern.</span><span class="sxs-lookup"><span data-stu-id="10a48-452">The granularity may change in the future.</span></span>

 <span data-ttu-id="10a48-453">Obwohl diese Eigenschaft Thread sicher ist, gibt es Einschränkungen hinsichtlich ihrer Verwendung.</span><span class="sxs-lookup"><span data-stu-id="10a48-453">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="10a48-454">Weitere Informationen finden Sie unter <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="10a48-454">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="10a48-455">Diese Eigenschaft ist bedeutungslos, wenn die Verarbeitung von websockets-Anforderungen gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-455">This property is meaningless if WebSockets request processing has started.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-456">Ruft die TLS-Token-Bindungsinformationen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-456">Gets the TLS token binding information.</span></span> <span data-ttu-id="10a48-457">Die Eigenschaft ermöglicht Anwendungen das Abrufen von Tokeninformationen aus eingehenden HTTP-Anforderungen zur erweiterten Authentifizierung.</span><span class="sxs-lookup"><span data-stu-id="10a48-457">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="10a48-458">Das Bindungstoken für die aktuelle Verbindung.</span><span class="sxs-lookup"><span data-stu-id="10a48-458">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-459">Diese Eigenschaft gibt `null` auf nicht-Windows 10-Plattformen zurück.</span><span class="sxs-lookup"><span data-stu-id="10a48-459">This property returns `null` on non-windows10 platforms.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-460">Ruft die Anzahl der Bytes im aktuellen Eingabestream ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-460">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="10a48-461">Die Anzahl der Bytes im Eingabestream.</span><span class="sxs-lookup"><span data-stu-id="10a48-461">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-462">Im folgenden Codebeispiel wird festgelegt <xref:System.Web.HttpRequest.TotalBytes%2A> , ob der-Eigenschafts Wert größer als 1000 Byte ist und diese Informationen in eine Datei schreibt.</span><span class="sxs-lookup"><span data-stu-id="10a48-462">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-463">Ruft die HTTP-Anforderungswerte ab, ohne die Anforderungsvalidierung auszulösen.</span><span class="sxs-lookup"><span data-stu-id="10a48-463">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="10a48-464">Die HTTP-Anforderungswerte, die nicht mit der Anforderungsvalidierung überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="10a48-464">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-465">Anforderungs Überprüfung für HTML-Markup und-Skript, die möglicherweise auf einen potenziellen Website übergreifenden Scripting-Angriff hindeuten.</span><span class="sxs-lookup"><span data-stu-id="10a48-465">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="10a48-466">Standardmäßig werden alle Werte mithilfe der Anforderungs Validierung überprüft. Wenn Werte ein Markup oder Skript enthalten, löst ASP.net eine <xref:System.Web.HttpRequestValidationException> Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="10a48-466">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="10a48-467">Verwenden Sie diese Methode, wenn Sie davon ausgehen, dass die Anforderung Markup enthalten soll (z. b. Wenn Sie Benutzern das Bereitstellen von Inhalten ermöglichen, die Markup enthalten), und dass Sie den Rohwert einer Anforderung erhalten möchten.</span><span class="sxs-lookup"><span data-stu-id="10a48-467">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="10a48-468">Wenn Sie diese Eigenschaft verwenden, müssen Sie die Daten manuell auf mögliche Site übergreifende Skript Angriffe überprüfen.</span><span class="sxs-lookup"><span data-stu-id="10a48-468">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-469">Ruft Informationen über die URL der aktuellen Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-469">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="10a48-470">Ein <see cref="T:System.Uri" />-Objekt, das die URL der aktuelle Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="10a48-470">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-471">Im folgenden Codebeispiel wird das <xref:System.Uri> -Objekt der aktuellen Anforderung einer Objektvariablen zugewiesen, und der Wert von zwei Eigenschaften des URL-Objekts wird der HTTP-Ausgabe angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10a48-471">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>

 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-472">Ruft Informationen zur URL der vorhergehenden Anforderung des Clients ab, die mit der aktuellen URL verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-472">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="10a48-473">Ein <see cref="T:System.Uri" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="10a48-473">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-474">Im folgenden Codebeispiel wird der Wert von zwei Eigenschaften der URL angezeigt, die den Client an die aktuelle Anwendung verwiesen hat.</span><span class="sxs-lookup"><span data-stu-id="10a48-474">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>

 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="10a48-475">Der HTTP-<see langword="Referer" />-Anforderungsheader ist fehlerhaft und kann nicht in ein <see cref="T:System.Uri" />-Objekt konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-475">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-476">Ruft die unformatierte Benutzer-Agent-Zeichenfolge des Clientbrowsers ab, der angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="10a48-476">Gets the raw user agent string of the client browser that has been provided.</span></span> <span data-ttu-id="10a48-477">Beachten Sie, dass der Wert auch NULL sein kann.</span><span class="sxs-lookup"><span data-stu-id="10a48-477">Please note it may be null.</span></span></summary>
        <value><span data-ttu-id="10a48-478">Die unformatierte User-Agent-Zeichenfolge des Clientbrowsers.</span><span class="sxs-lookup"><span data-stu-id="10a48-478">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-479">Im folgenden Codebeispiel wird die Typidentifizierung des anfordernden Browsers einer Zeichen folgen Variablen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="10a48-479">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>

 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)"><span data-ttu-id="10a48-480">ASP.NET-Server Steuerelemente und Browser Funktionen</span><span class="sxs-lookup"><span data-stu-id="10a48-480">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-481">Ruft die IP-Hostadresse des Remoteclients ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-481">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="10a48-482">Die IP-Adresse des Remoteclients.</span><span class="sxs-lookup"><span data-stu-id="10a48-482">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-483">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.UserHostAddress%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-483">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-484">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-484">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-485">Ruft den DNS-Namen des Remoteclients ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-485">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="10a48-486">Der DNS-Name des Remoteclients.</span><span class="sxs-lookup"><span data-stu-id="10a48-486">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-487">Im folgenden Codebeispiel wird die <xref:System.Web.HttpUtility.HtmlEncode%2A> -Methode verwendet, um den Wert der-Eigenschaft in HTML zu codieren, <xref:System.Web.HttpRequest.UserHostName%2A> und die- <xref:System.IO.TextWriter.WriteLine%2A> Methode, um den codierten Wert in die Datei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="10a48-487">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="10a48-488">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.HttpRequest> .</span><span class="sxs-lookup"><span data-stu-id="10a48-488">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>

 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10a48-489">Ruft ein sortiertes Zeichenfolgenarray mit Clientspracheinstellungen ab.</span><span class="sxs-lookup"><span data-stu-id="10a48-489">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="10a48-490">Ein sortiertes Zeichenfolgenarray mit Clientspracheinstellungen oder <see langword="null" />, wenn dieses leer ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-490">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="10a48-491">Im folgenden Codebeispiel werden die von der-Eigenschaft zurückgegebenen verschiedenen Werte <xref:System.Web.HttpRequest.UserLanguages%2A> in ein Zeichen folgen Array erfasst und jeder sprach Name in eine separate Zeile der HTTP-Ausgabe geschrieben.</span><span class="sxs-lookup"><span data-stu-id="10a48-491">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>

 <span data-ttu-id="10a48-492">Die Sprachnamen werden vom Browser bereitgestellt, und es ist keine definitive Liste aller möglichen Codes vorhanden.</span><span class="sxs-lookup"><span data-stu-id="10a48-492">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="10a48-493">In der Regel bestehen diese aus zwei Zeichen Codes für die Sprache, einem Bindestrich und einem aus zwei Zeichen bestehende Code für die Kultur, z. b. "en-US" für US-Englisch und "fr-ca" für Französisch (Kanada).</span><span class="sxs-lookup"><span data-stu-id="10a48-493">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>

 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10a48-494">Bewirkt Validierung für die Auflistungen, auf die über die Eigenschaften <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> und <see cref="P:System.Web.HttpRequest.QueryString" /> zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-494">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10a48-495">Die- <xref:System.Web.HttpRequest> Klasse verwendet Eingabe Validierungs Flags, um zu überprüfen, ob die Anforderungs Auflistungen, auf die über die <xref:System.Web.HttpRequest.Cookies%2A> Eigenschaften, und zugegriffen wird, validiert werden <xref:System.Web.HttpRequest.Form%2A> <xref:System.Web.HttpRequest.QueryString%2A> .</span><span class="sxs-lookup"><span data-stu-id="10a48-495">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="10a48-496">Die- <xref:System.Web.HttpRequest.ValidateInput%2A> Methode legt diese Flags so fest, dass beim Aufrufen der Get-Accessoren für die- <xref:System.Web.HttpRequest.Cookies%2A> ,-oder-Eigenschaft eine <xref:System.Web.HttpRequest.Form%2A> <xref:System.Web.HttpRequest.QueryString%2A> Eingabevalidierung durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="10a48-496">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="10a48-497">Die Validierung funktioniert, indem alle Eingabedaten anhand einer hart codierten Liste potenziell gefährlicher Daten überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="10a48-497">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>

 <span data-ttu-id="10a48-498">Wenn das Validierungs Feature durch eine Seiten Direktive oder eine Konfiguration aktiviert ist, wird diese Methode während der `ProcessRequest` Verarbeitungsphase der Seite aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="10a48-498">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="10a48-499">Die- <xref:System.Web.HttpRequest.ValidateInput%2A> Methode kann von Ihrem Code aufgerufen werden, wenn das Validierungs Feature nicht aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10a48-499">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="10a48-500">Vom Client wurden Daten empfangen, die möglicherweise gefährlich sind.</span><span class="sxs-lookup"><span data-stu-id="10a48-500">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>
