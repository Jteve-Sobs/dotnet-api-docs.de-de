<Type Name="HttpCookieCollection" FullName="System.Web.HttpCookieCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4f45406ac911a1765ed8719559cd86f7c16bd30" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86654747" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCookieCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookieCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookieCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookieCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookieCollection sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpCookieCollection = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet eine typsichere Möglichkeit zum Verarbeiten von HTTP-Cookies.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Cookies mithilfe der <xref:System.Web.HttpRequest.Cookies%2A> -Eigenschaft des <xref:System.Web.HttpRequest> -Objekts gelesen und Cookies mithilfe der- <xref:System.Web.HttpResponse.Cookies%2A> Eigenschaft des-Objekts geschrieben werden <xref:System.Web.HttpResponse> . Beide Eigenschaften geben <xref:System.Web.HttpCookieCollection> Objekte zurück. Wenn keines der beiden Cookies `userName` `lastVisit` mit dem Namen und nicht in der HTTP-Anforderung ist, werden Sie in der HTTP-Antwort erstellt. Wenn die beiden Cookies vorhanden sind, werden die Eigenschaften der Cookies angezeigt.  
  
 [!code-aspx-csharp[System.Web.HttpCookieCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookieCollection/cs/HttpCookieCollection.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookieCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookieCollection/vb/HttpCookieCollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpCookie" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookieCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookieCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpCookieCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET enthält zwei systeminterne Cookie-Auflistungen. Die <xref:System.Web.HttpRequest.Cookies%2A> Auflistung, auf die über zugegriffen werden kann, enthält vom Client an den Server übertragene Cookies in der `Cookie` Kopfzeile. Die <xref:System.Web.HttpResponse.Cookies%2A> Auflistung, auf die über zugegriffen werden kann, enthält Cookies, die auf dem Server generiert und an den Client im Header übertragen werden `Set-Cookie`  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein neues cookiesammlungsobjekt erstellt und mit den vom Client empfangenen Cookies gefüllt.  
  
 [!code-csharp[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
        <altmember cref="T:System.Web.HttpCookie" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Add cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">Der der Auflistung hinzuzufügende <see cref="T:System.Web.HttpCookie" />.</param>
        <summary>Fügt der Cookieauflistung das angegebene Cookie hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer Anwendung können beliebig viele Cookie-Auflistungen vorhanden sein, aber nur die Auflistung, auf die vom systeminternen <xref:System.Web.HttpResponse.Cookies%2A> Objekt verwiesen wird, wird an den Client gesendet.  
  
 Die- <xref:System.Web.HttpCookieCollection.Add%2A> Methode lässt doppelte Cookies in der Cookieauflistung zu. Verwenden Sie die- <xref:System.Web.HttpCookieCollection.Set%2A> Methode, um die Eindeutigkeit von Cookies in der Cookieauflistung sicherzustellen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden eine neue Cookie-Auflistung und ein neues Cookie mit dem Namen "LastVisit" erstellt, der Wert des Cookies wird auf das aktuelle Datum und die aktuelle Uhrzeit festgelegt, und das Cookie wird der neuen Sammlung hinzugefügt.  
  
 [!code-csharp[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpCookieCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray ab, das alle Schlüssel (Cookienamen) in der Cookieauflistung enthält.</summary>
        <value>Ein Array von Cookienamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein Zeichen folgen Array erstellt, das die Namen der Cookies in der Cookieauflistung eines Clients enthält.  
  
 [!code-csharp[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Item" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpCookieCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht alle Cookies aus der Cookieauflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden alle Cookies aus einer Cookieauflistung gelöscht.  
  
 [!code-csharp[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpCookieCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das Ziel-<see cref="T:System.Array" />.</param>
        <param name="index">Der Index des Zielarrays, an dem mit dem Kopieren begonnen wird.</param>
        <summary>Kopiert die Member der Cookieauflistung beginnend am angegebenen Index in ein <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die gesamte Cookie-Auflistung in ein neues Array Objekt kopiert.  
  
 [!code-csharp[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt ein einzelnes <see cref="T:System.Web.HttpCookie" />-Objekt aus der Cookieauflistung zurück. Diese Eigenschaft ist überladen, damit Cookies über ihren Namen oder numerischen Index abgerufen werden können.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Cookies, das aus der Auflistung zurückgegeben werden soll.</param>
        <summary>Gibt das <see cref="T:System.Web.HttpCookie" />-Element mit dem angegebenen Index aus der Cookieauflistung zurück.</summary>
        <returns>Die von <see cref="T:System.Web.HttpCookie" /> angegebene <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden alle Cookies aus der Cookie-Auflistung zurückgegeben. es wird überprüft, ob der Name "LastVisit" heißt, und wenn "LastVisit" gefunden wird, aktualisiert seinen Wert auf das aktuelle Datum und die aktuelle Uhrzeit.  
  
 [!code-csharp[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Cookies, das aus der Auflistung abgerufen werden soll.</param>
        <summary>Gibt das Cookie mit dem angegebenen Namen aus der Cookieauflistung zurück.</summary>
        <returns>Die von <see cref="T:System.Web.HttpCookie" /> angegebene <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das benannte Cookie nicht vorhanden ist und die Cookie-Auflistung ist <xref:System.Web.HttpResponse.Cookies?displayProperty=nameWithType> , erstellt diese Methode ein neues Cookie mit diesem Namen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die vom Client gesendete Cookie-Auflistung in eine neue Cookie-Auflistung erfasst, das Cookie mit dem Namen "LastVisit" aus der neuen Auflistung abgerufen und der Wert des Cookies auf das aktuelle Datum und die aktuelle Uhrzeit aktualisiert.  
  
 [!code-csharp[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpCookieCollection.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Schlüssels, der aus der Auflistung abgerufen werden soll.</param>
        <summary>Gibt den Schlüssel (den Namen) des Cookies am angegebenen numerischen Index zurück.</summary>
        <returns>Der durch den <paramref name="index" /> angegebene Name des Cookies.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden alle Cookies aus der Cookie-Auflistung zurückgegeben. es wird überprüft, ob der Name "LastVisit" heißt, und wenn "LastVisit" gefunden wird, aktualisiert seinen Wert auf das aktuelle Datum und die aktuelle Uhrzeit.  
  
 [!code-csharp[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das Cookie mit dem angegebenen Namen aus der Cookieauflistung ab. Diese Eigenschaft ist überladen, damit Cookies über ihren Namen oder numerischen Index abgerufen werden können.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[int] { System::Web::HttpCookie ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Cookies, das aus der Auflistung abgerufen werden soll.</param>
        <summary>Ruft das Cookie mit dem angegebenen numerischen Index aus der Cookieauflistung ab.</summary>
        <value>Die von <see cref="T:System.Web.HttpCookie" /> angegebene <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Name des ersten Cookies als Zeichen folgen Variable (Index = 0) in einer Cookie-Auflistung gespeichert.  
  
 [!code-csharp[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[System::String ^] { System::Web::HttpCookie ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des abzurufenden Cookies.</param>
        <summary>Ruft das Cookie mit dem angegebenen Namen aus der Cookieauflistung ab.</summary>
        <value>Die von <see cref="T:System.Web.HttpCookie" /> angegebene <paramref name="name" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird das Cookie mit dem Namen "LastVisit" abgerufen und der zugehörige Wert extrahiert.  
  
 [!code-csharp[Classic HttpCookieCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpCookieCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Cookies, das aus der Auflistung entfernt werden soll.</param>
        <summary>Entfernt das Cookie mit dem angegebenen Namen aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Cookie mit dem angegebenen `name` nicht in der Auflistung vorhanden ist, wird keine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Cookie aus der Auflistung entfernt.  
  
 [!code-csharp[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Set : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Set cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">Das zu aktualisierende <see cref="T:System.Web.HttpCookie" />-Objekt.</param>
        <summary>Aktualisiert den Wert eines in einer Cookieauflistung vorhandenen Cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpCookieCollection.Set%2A> Methode überprüft zunächst, ob ein Cookie bereits in der Auflistung vorhanden ist, und wenn dies der Fall ist, wird es aktualisiert. Die- <xref:System.Web.HttpCookieCollection.Set%2A> Methode lässt keine doppelten Cookies in der Cookieauflistung zu. Um doppelte Cookies in der Cookieauflistung hinzuzufügen, verwenden Sie die- <xref:System.Web.HttpCookieCollection.Add%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert eines vorhandenen Cookies aktualisiert.  
  
 [!code-csharp[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
  </Members>
</Type>
