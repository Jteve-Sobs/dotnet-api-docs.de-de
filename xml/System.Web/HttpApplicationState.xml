<Type Name="HttpApplicationState" FullName="System.Web.HttpApplicationState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b749ac0a5c446faec08b528416faa4f646879e26" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64117815" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpApplicationState extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpApplicationState&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationState sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpApplicationState = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2ef83-101">Ermöglicht es, in einer ASP.NET-Anwendung globale Informationen über mehrere Sitzungen und Anforderungen hinweg freizugeben.</span><span class="sxs-lookup"><span data-stu-id="2ef83-101">Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-102">Eine ASP.NET-Anwendung ist die Summe aller Dateien, Seiten, Handler, Module und Code innerhalb des Bereichs ein virtuelles Verzeichnis und seinen Unterverzeichnissen auf einem einzelnen Webserver.</span><span class="sxs-lookup"><span data-stu-id="2ef83-102">An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</span></span>  
  
 <span data-ttu-id="2ef83-103">Eine einzelne Instanz einer <xref:System.Web.HttpApplicationState> Klasse wird zum ersten Mal ein Client, eine URL-Ressource aus einer bestimmten virtuellen Verzeichnis mit ASP.NET Anwendung anfordert erstellt.</span><span class="sxs-lookup"><span data-stu-id="2ef83-103">A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</span></span> <span data-ttu-id="2ef83-104">Eine separate Einzelinstanz wird für jede ASP.NET-Anwendung auf einem Webserver erstellt.</span><span class="sxs-lookup"><span data-stu-id="2ef83-104">A separate single instance is created for each ASP.NET application on a Web server.</span></span> <span data-ttu-id="2ef83-105">Ein Verweis auf jede Instanz wird dann über die systeminterne Funktion verfügbar gemacht. <xref:System.Web.HttpContext.Application%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="2ef83-105">A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.</span></span>  
  
 <span data-ttu-id="2ef83-106">Anwendungszustand wird nicht über eine Webfarm (in dem eine Anwendung auf mehreren Servern gehostet wird) oder einem Webgarten (in dem eine Anwendung für mehrere Prozesse auf demselben Computer gehostet wird) freigegeben.</span><span class="sxs-lookup"><span data-stu-id="2ef83-106">Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2ef83-107">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="2ef83-107">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.HttpApplication" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpApplicationState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ef83-108">Der Name des Objekts, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2ef83-108">The name of the object to be added to the collection.</span></span></param>
        <param name="value"><span data-ttu-id="2ef83-109">Der Wert des Objekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-109">The value of the object.</span></span></param>
        <summary><span data-ttu-id="2ef83-110">Fügt der <see cref="T:System.Web.HttpApplicationState" />-Auflistung ein neues Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ef83-110">Adds a new object to the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-111">Das folgende Beispiel fügt zwei Anwendungsvariablen MyAppVar1 und MyAppVar2 auf die Auflistung der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-111">The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpApplicationState.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef83-112">Ruft die Zugriffstasten in der <see cref="T:System.Web.HttpApplicationState" />-Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-112">Gets the access keys in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <value><span data-ttu-id="2ef83-113">Ein Zeichenfolgenarray von <see cref="T:System.Web.HttpApplicationState" />-Objektnamen.</span><span class="sxs-lookup"><span data-stu-id="2ef83-113">A string array of <see cref="T:System.Web.HttpApplicationState" /> object names.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-114">Das folgende Beispiel füllt ein Zeichenfolgenarray mit den Objektnamen in der zustandsauflistung für die Anwendung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-114">The following example fills a string array with all the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpApplicationState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef83-115">Entfernt alle Objekte aus einer <see cref="T:System.Web.HttpApplicationState" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-115">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-116">Im folgende Beispiel entfernt alle <xref:System.Web.HttpApplicationState> Variablen aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-116">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Contents { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.HttpApplicationState" Usage="System.Web.HttpApplicationState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef83-117">Ruft einen Verweis auf das <see cref="T:System.Web.HttpApplicationState" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-117">Gets a reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></summary>
        <value><span data-ttu-id="2ef83-118">Ruft einen Verweis auf das <see cref="T:System.Web.HttpApplicationState" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-118">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-119">Diese Eigenschaft bietet Kompatibilität mit früheren Versionen von ASP zu gewährleisten.</span><span class="sxs-lookup"><span data-stu-id="2ef83-119">This property provides compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef83-120">Das folgende Beispiel erstellt ein neues <xref:System.Web.HttpApplicationState> -Objekt, das verwendet wird, auf die zu verwendenden Objektnamen in der zustandsauflistung für die Anwendung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2ef83-120">The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.HttpApplicationState.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef83-121">Ruft die Anzahl der Objekte in der <see cref="T:System.Web.HttpApplicationState" />-Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-121">Gets the number of objects in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <value><span data-ttu-id="2ef83-122">Die Anzahl der Elementobjekte in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-122">The number of item objects in the collection.</span></span> <span data-ttu-id="2ef83-123">Der Standard ist 0.</span><span class="sxs-lookup"><span data-stu-id="2ef83-123">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-124">Im folgende Beispiel wird ausgeführt, wenn die Anzahl der Objekte in der Auflistung fünf überschreitet.</span><span class="sxs-lookup"><span data-stu-id="2ef83-124">The following example executes only if the number of objects in the collection exceeds five.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef83-125">Ruft ein <see cref="T:System.Web.HttpApplicationState" />-Objekt anhand des Namens oder Indexes ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-125">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; obj" Usage="httpApplicationState.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2ef83-126">Der Index des Anwendungszustandsobjekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-126">The index of the application state object.</span></span></param>
        <summary><span data-ttu-id="2ef83-127">Ruft ein <see cref="T:System.Web.HttpApplicationState" />-Objekt anhand des numerischen Indexes ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-127">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by numerical index.</span></span></summary>
        <returns><span data-ttu-id="2ef83-128">Das Objekt, auf das mit <paramref name="index" /> verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="2ef83-128">The object referenced by <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-129">Das folgende Beispiel gibt das erste Objekt (Index = 0) aus der <xref:System.Web.HttpApplicationState> Auflistung des systeminternen <xref:System.Web.HttpContext.Application%2A> -Objekt und kopiert ihn in eine neue Objektvariable.</span><span class="sxs-lookup"><span data-stu-id="2ef83-129">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="httpApplicationState.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ef83-130">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-130">The name of the object.</span></span></param>
        <summary><span data-ttu-id="2ef83-131">Ruft ein <see cref="T:System.Web.HttpApplicationState" />-Objekt anhand des Namens ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-131">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name.</span></span></summary>
        <returns><span data-ttu-id="2ef83-132">Das Objekt, auf das mit <paramref name="name" /> verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="2ef83-132">The object referenced by <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-133">Das folgende Beispiel gibt ein Objekt, das MyAppVar1 aus der <xref:System.Web.HttpApplicationState> Auflistung des systeminternen <xref:System.Web.HttpContext.Application%2A> -Objekt und kopiert ihn in eine neue Objektvariable.</span><span class="sxs-lookup"><span data-stu-id="2ef83-133">The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
```vb  
Dim MyObject As Object  
MyObject = Application.Get("MyAppVar1")  
```  
  
```csharp  
Object MyObject;  
MyObject = Application.Get("MyAppVar1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpApplicationState.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2ef83-134">Der Index des Anwendungszustandsobjekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-134">The index of the application state object.</span></span></param>
        <summary><span data-ttu-id="2ef83-135">Ruft einen <see cref="T:System.Web.HttpApplicationState" />-Objektnamen anhand des Indexes ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-135">Gets an <see cref="T:System.Web.HttpApplicationState" /> object name by index.</span></span></summary>
        <returns><span data-ttu-id="2ef83-136">Der Name, unter dem das Anwendungszustandsobjekt gespeichert wurde.</span><span class="sxs-lookup"><span data-stu-id="2ef83-136">The name under which the application state object was saved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-137">Im folgenden Beispiel gibt die Namen aller Objekte in der zustandsauflistung für die Anwendung zurück und speichert die Namen in ein Zeichenfolgenarray.</span><span class="sxs-lookup"><span data-stu-id="2ef83-137">The following example returns the names of all the objects in the application state collection and stores the names in a string array.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef83-138">Erhält den Zugriff auf ein Objekt in einer <see cref="T:System.Web.HttpApplicationState" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-138">Gets access to an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span> <span data-ttu-id="2ef83-139">Diese Eigenschaft ist überladen, um den Zugriff auf Objekte über ihren Namen oder numerischen Index zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="2ef83-139">This property is overloaded to allow access to an object by name or numerical index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2ef83-140">Der numerische Index des Objekts in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-140">The numerical index of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="2ef83-141">Ruft ein einzelnes <see cref="T:System.Web.HttpApplicationState" />-Objekt anhand des Indexes ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-141">Gets a single <see cref="T:System.Web.HttpApplicationState" /> object by index.</span></span></summary>
        <value><span data-ttu-id="2ef83-142">Das Objekt, auf das mit <paramref name="index" /> verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="2ef83-142">The object referenced by <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-143">Das folgende Beispiel gibt das erste Objekt (Index = 0) aus der <xref:System.Web.HttpApplicationState> Auflistung des systeminternen <xref:System.Web.HttpContext.Application%2A> -Objekt und kopiert ihn in eine neue Objektvariable.</span><span class="sxs-lookup"><span data-stu-id="2ef83-143">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ef83-144">Der Name des Objekts in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-144">The name of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="2ef83-145">Ruft den Wert eines einzelnen <see cref="T:System.Web.HttpApplicationState" />-Objekts anhand des Namens ab.</span><span class="sxs-lookup"><span data-stu-id="2ef83-145">Gets the value of a single <see cref="T:System.Web.HttpApplicationState" /> object by name.</span></span></summary>
        <value><span data-ttu-id="2ef83-146">Das Objekt, auf das mit <paramref name="name" /> verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="2ef83-146">The object referenced by <paramref name="name" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-147">Das folgende Beispiel gibt ein Objekt mit dem Namen `MyAppVar1` aus der <xref:System.Web.HttpApplicationState> Auflistung des systeminternen <xref:System.Web.HttpContext.Application%2A> -Objekt und kopiert ihn in eine neue Objektvariable.</span><span class="sxs-lookup"><span data-stu-id="2ef83-147">The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="httpApplicationState.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef83-148">Sperrt den Zugriff auf eine <see cref="T:System.Web.HttpApplicationState" />-Variable, um die Zugriffssynchronisierung zu erleichtern.</span><span class="sxs-lookup"><span data-stu-id="2ef83-148">Locks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-149">Die <xref:System.Web.HttpApplicationState> Klasse führt automatisch sperren und entsperren mit der <xref:System.Web.HttpApplicationState.AllKeys%2A> und <xref:System.Web.HttpApplicationState.Count%2A> Eigenschaften und die <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> und <xref:System.Web.HttpApplicationState.Set%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="2ef83-149">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="2ef83-150">Jedoch explizit mithilfe der <xref:System.Web.HttpApplicationState.Lock%2A> und <xref:System.Web.HttpApplicationState.UnLock%2A> Methoden ein, wenn Sie eine Reihe von Vorgängen haben möglicherweise effizienter.</span><span class="sxs-lookup"><span data-stu-id="2ef83-150">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef83-151">Im folgenden Beispiel wird die <xref:System.Web.HttpApplicationState.Lock%2A> Methode und <xref:System.Web.HttpApplicationState.UnLock%2A> Methode, um zu verhindern, dass die anderen Sitzungen den Wert der zwei Anwendungsvariablen erst ändern, nachdem die lokale Sitzung, die sie geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="2ef83-151">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.UnLock" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpApplicationState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ef83-152">Der Name des Objekts, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2ef83-152">The name of the object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="2ef83-153">Entfernt das benannte Objekt aus einer <see cref="T:System.Web.HttpApplicationState" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-153">Removes the named object from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-154">Im folgende Beispiel wird eine Anwendungszustandsvariable aus der Auflistung entfernt.</span><span class="sxs-lookup"><span data-stu-id="2ef83-154">The following example removes one application state variable from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpApplicationState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef83-155">Entfernt alle Objekte aus einer <see cref="T:System.Web.HttpApplicationState" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-155">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> ist ein interner Aufruf von <xref:System.Web.HttpApplicationState.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ef83-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef83-157">Im folgende Beispiel entfernt alle <xref:System.Web.HttpApplicationState> Variablen aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-157">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpApplicationState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2ef83-158">Die Position des zu entfernenden Elements in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-158">The position in the collection of the item to remove.</span></span></param>
        <summary><span data-ttu-id="2ef83-159">Entfernt ein <see cref="T:System.Web.HttpApplicationState" />-Objekt anhand des Indexes aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-159">Removes an <see cref="T:System.Web.HttpApplicationState" /> object from a collection by index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-160">Im folgenden Codebeispiel wird veranschaulicht, wie zwei Anwendungsvariablen in die Auflistung eingefügt, und verwenden Sie dann die <xref:System.Web.HttpApplicationState.RemoveAt%2A> Methode, um die erste Variable in einem benutzerdefinierten entfernen <xref:System.Web.HttpApplicationState> Objekt.</span><span class="sxs-lookup"><span data-stu-id="2ef83-160">The following code example demonstrates how to insert two application variables into the collection, and then use the <xref:System.Web.HttpApplicationState.RemoveAt%2A> method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 [!code-aspx-csharp[HttpApplicationStateRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/CS/httpapplicationstate_removeatcs.aspx#1)]
 [!code-aspx-vb[HttpApplicationStateRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/VB/httpapplicationstate_removeatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Set : string * obj -&gt; unit" Usage="httpApplicationState.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ef83-161">Der Name des zu aktualisierenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-161">The name of the object to be updated.</span></span></param>
        <param name="value"><span data-ttu-id="2ef83-162">Der aktualisierte Wert des Objekts.</span><span class="sxs-lookup"><span data-stu-id="2ef83-162">The updated value of the object.</span></span></param>
        <summary><span data-ttu-id="2ef83-163">Aktualisiert den Wert eines Objekts in einer <see cref="T:System.Web.HttpApplicationState" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ef83-163">Updates the value of an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ef83-164">Das folgende Beispiel aktualisiert den Wert einer vorhandenen Application-State-Variable.</span><span class="sxs-lookup"><span data-stu-id="2ef83-164">The following example updates the value of an existing application state variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.HttpApplicationState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef83-165">Ruft alle durch ein <see langword="&lt;object&gt;" />-Tag deklarierten Objekte ab, wobei der Gültigkeitsbereich innerhalb der ASP.NET-Anwendung auf "Application" festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="2ef83-165">Gets all objects declared by an <see langword="&lt;object&gt;" /> tag where the scope is set to "Application" within the ASP.NET application.</span></span></summary>
        <value><span data-ttu-id="2ef83-166">Eine Auflistung von Objekten auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="2ef83-166">A collection of objects on the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-167">Objekte werden definiert, in der Datei "Global.asax" innerhalb der `<object runat="server" scope="Application"> </object>` Tags.</span><span class="sxs-lookup"><span data-stu-id="2ef83-167">Application objects are defined in the Global.asax file inside the `<object runat="server" scope="Application"> </object>` tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef83-168">Im folgenden Beispiel wird die allen Anwendungsobjekten in einer <xref:System.Web.HttpStaticObjectsCollection> Variable und eine Routine nur ausgeführt, wenn die Anzahl der Objekte größer als 0 ist.</span><span class="sxs-lookup"><span data-stu-id="2ef83-168">The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnLock();" />
      <MemberSignature Language="F#" Value="member this.UnLock : unit -&gt; unit" Usage="httpApplicationState.UnLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef83-169">Hebt die Zugriffsperre einer <see cref="T:System.Web.HttpApplicationState" />-Variablen auf, um die Zugriffssynchronisierung zu erleichtern.</span><span class="sxs-lookup"><span data-stu-id="2ef83-169">Unlocks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef83-170">Die <xref:System.Web.HttpApplicationState> Klasse führt automatisch sperren und entsperren mit der <xref:System.Web.HttpApplicationState.AllKeys%2A> und <xref:System.Web.HttpApplicationState.Count%2A> Eigenschaften und die <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> und <xref:System.Web.HttpApplicationState.Set%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="2ef83-170">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="2ef83-171">Jedoch explizit mithilfe der <xref:System.Web.HttpApplicationState.Lock%2A> und <xref:System.Web.HttpApplicationState.UnLock%2A> Methoden ein, wenn Sie eine Reihe von Vorgängen haben möglicherweise effizienter.</span><span class="sxs-lookup"><span data-stu-id="2ef83-171">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef83-172">Im folgenden Beispiel wird die <xref:System.Web.HttpApplicationState.Lock%2A> Methode und <xref:System.Web.HttpApplicationState.UnLock%2A> Methode, um zu verhindern, dass die anderen Sitzungen den Wert der zwei Anwendungsvariablen erst ändern, nachdem die lokale Sitzung, die sie geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="2ef83-172">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.Lock" />
      </Docs>
    </Member>
  </Members>
</Type>