<Type Name="ParserErrorCollection" FullName="System.Web.ParserErrorCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="885a36a092e41a814d9e4213a7dd268c3aac1048" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39761666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParserErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserErrorCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type ParserErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet einen Satz von Parserfehlern, die während der Analyse erkannt wurden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ParserErrorCollection> -Klasse stellt Methoden und Eigenschaften, die Sie verwenden können, um die Verwaltung einer Auflistung von <xref:System.Web.ParserError> Objekte. Sie können beispielsweise einen Satz von Parserfehlern hinzufügen, auf eine Auflistung bei der Analyse bei der Verwendung eines benutzerdefiniertes <xref:System.Web.Compilation.BuildProvider> -Objekt, das alle Ausnahmen, die bei der Analyse zu analysieren.  
  
 Verwenden Sie zum Hinzufügen von Parserfehlern, zum Entfernen von oder suchen sie in einer Sammlung, Folgendes ein:  
  
-   Die <xref:System.Web.ParserErrorCollection.Add%2A> Methode, um ein einzelnes hinzuzufügen <xref:System.Web.ParserError> Objekt, das der Auflistung.  
  
-   Die <xref:System.Web.ParserErrorCollection.AddRange%2A> Methoden zum Hinzufügen von mehreren <xref:System.Web.ParserError> -Objekte der Auflistung.  
  
-   Sowohl die <xref:System.Web.ParserErrorCollection.Insert%2A> Methode und die <xref:System.Web.ParserErrorCollection.Item%2A> Eigenschaft, die die <xref:System.Web.ParserErrorCollection> Indexer, um ein einzelnes hinzuzufügen <xref:System.Web.ParserError> Objekt, das der Collection am angegebenen Index.  
  
 Darüber hinaus können Sie mithilfe der <xref:System.Web.ParserErrorCollection> Klasse, um die folgenden Aktionen ausführen:  
  
-   Entfernen Sie <xref:System.Web.ParserError> Objekte mit dem <xref:System.Web.ParserErrorCollection.Remove%2A> Methode.  
  
-   Überprüfen Sie, ob eine bestimmte <xref:System.Web.ParserError> ist in der Auflistung mithilfe der <xref:System.Web.ParserErrorCollection.Contains%2A> Methode.  
  
-   Herauszufinden, wo ein <xref:System.Web.ParserError> Objekt befindet sich in der Auflistung mithilfe der <xref:System.Web.ParserErrorCollection.IndexOf%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.ParserErrorCollection> Methoden.  
  
 [!code-csharp[System.Web.ParserErrorCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#1)]
 [!code-vb[System.Web.ParserErrorCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.HttpException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ParserErrorCollection" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ParserErrorCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Initialisieren einer Instanz von der <xref:System.Web.ParserErrorCollection> Klasse.  
  
 [!code-csharp[System.Web.ParserErrorCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#2)]
 [!code-vb[System.Web.ParserErrorCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserErrorCollection : System.Web.ParserError[] -&gt; System.Web.ParserErrorCollection" Usage="new System.Web.ParserErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.Web.ParserError" />, das die Fehler angibt, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ParserErrorCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ParserErrorCollection.%23ctor%2A?displayProperty=nameWithType> Konstruktor fügt ein Array von <xref:System.Web.ParserError> -Objekte der Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Add(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Web.ParserError" />-Wert.</param>
        <summary>Fügt der Auflistung einen Wert hinzu.</summary>
        <returns>Der Index des Werts innerhalb der Auflistung, -1, wenn der Wert bereits in der Auflistung enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.Add%2A> Methode zum Hinzufügen von einer vorhandenen <xref:System.Web.ParserError> Objekt, das der Auflistung. Kann nicht hinzugefügt werden, die gleiche <xref:System.Web.ParserError> Objekt der Auflistung mehr als einmal. Beim Aufruf der <xref:System.Web.ParserErrorCollection.Add%2A> Methode mit einem <xref:System.Web.ParserError> -Aggregatobjekt zurückgegeben, die bereits in der Auflistung, schlägt der Vorgang fehl, und-1 ist.  
  
 Um mehrere Objekte der Auflistung hinzuzufügen, verwenden die <xref:System.Web.ParserErrorCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Hinzufügen einer <xref:System.Web.ParserError> -Objekt an eine <xref:System.Web.ParserErrorCollection> Objekt.  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt einer Auflistung <see cref="T:System.Web.ParserError" />-Objekte hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserError[] -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.Web.ParserError" />, das die Werte angibt, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung ein Array von <see cref="T:System.Web.ParserError" />-Objekten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.AddRange%2A> Methode ein Array von hinzuzufügenden <xref:System.Web.ParserError> -Objekte der Auflistung. Die <xref:System.Web.ParserErrorCollection.AddRange%2A> Methode ist nützlich, wenn Sie mehrere erstellen <xref:System.Web.ParserError> Objekte und der Auflistung mit einem einzelnen Methodenaufruf hinzugefügt werden soll. Hinzufügen von einzelnen <xref:System.Web.ParserError> Objekte der Auflistung verwenden, die <xref:System.Web.ParserErrorCollection.Add%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Hinzufügen eines Bereichs von <xref:System.Web.ParserError> Objekte eine <xref:System.Web.ParserErrorCollection> Objekt.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Web::ParserErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserErrorCollection -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">Eine <see cref="T:System.Web.ParserErrorCollection" /> mit den <see cref="T:System.Web.ParserError" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung die Objekte in einer vorhandenen <see cref="T:System.Web.ParserErrorCollection" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu den <xref:System.Web.ParserErrorCollection.Add%2A> -Methode, die <xref:System.Web.ParserErrorCollection.AddRange%2A> Methode verfügt nicht über einen Rückgabewert, der verwendet werden kann, um zu bestimmen, ob eine <xref:System.Web.ParserError> hinzugefügte Objekt ist bereits in der Auflistung. Wenn Sie diese Informationen benötigen, verwenden Sie die <xref:System.Web.ParserErrorCollection.Contains%2A> Methode vor der Verwendung von <xref:System.Web.ParserErrorCollection.AddRange%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Hinzufügen eines Bereichs von <xref:System.Web.ParserError> Objekte eine <xref:System.Web.ParserErrorCollection> Objekt.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Web.ParserError" />-Wert ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Contains(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ParserError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.ParserError -&gt; bool" Usage="parserErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Web.ParserError" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das <see cref="T:System.Web.ParserError" />-Objekt in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn sich der <see cref="T:System.Web.ParserError" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kann nicht hinzugefügt werden, die gleiche <xref:System.Web.ParserError> Objekt der Auflistung mehr als einmal. Aber versucht wird, Hinzufügen einer <xref:System.Web.ParserError> Objekt mehr als einmal wird keine Ausnahme ausgelöst. Stattdessen wird das Hinzufügen fehl. In diesem Fall die <xref:System.Web.ParserErrorCollection.Add%2A> Methode gibt einen Wert von – 1 zurück. Allerdings die <xref:System.Web.ParserErrorCollection.AddRange%2A> und <xref:System.Web.ParserErrorCollection.Insert%2A> Methoden keine Werte zurückgeben. Beim Hinzufügen von <xref:System.Web.ParserError> Objekte mithilfe einer dieser Methoden verwenden die <xref:System.Web.ParserErrorCollection.Contains%2A> Methode, um zu bestimmen, ob eine bestimmte <xref:System.Web.ParserError> Objekt ist bereits in der Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie auf der Suche nach Instanzen eines angegebenen <xref:System.Web.ParserError> -Objekt in ein <xref:System.Web.ParserErrorCollection> Objekt.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.ParserError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.ParserError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.CopyTo(System.Web.ParserError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ParserError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::ParserError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.ParserError[] * int -&gt; unit" Usage="parserErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.ParserError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein Array vom Typ <see cref="T:System.Web.ParserError" />, in das die Parserfehler in der Auflistung kopiert werden.</param>
        <param name="index">Der erste Index innerhalb des Arrays, an den der <see cref="T:System.Web.ParserError" /> kopiert wird.</param>
        <summary>Kopiert die <see cref="T:System.Web.ParserError" />-Objekte in der Auflistung in ein kompatibles eindimensionales Array, beginnend ab dem angegebenen Index im Zielarray.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.CopyTo%2A> Methode zum Kopieren der <xref:System.Web.ParserError> Objekte in einer Auflistung (einschließlich der enthaltenen Elementverweise) in ein kompatibles Array, beginnend am angegebenen Index. Dies ist nützlich, wenn die Sortierung erfolgen soll die <xref:System.Web.ParserError> Objekte in der Auflistung mithilfe der <xref:System.Array.Sort%2A> Methode. Gehen Sie dazu wie folgt vor:  
  
1.  Kopieren der <xref:System.Web.ParserError> Objekte in ein kompatibles Array.  
  
2.  Das Array zu sortieren.  
  
3.  Verwenden der <xref:System.Web.ParserErrorCollection.Remove%2A> Methode, um alle Entfernen der <xref:System.Web.ParserError> Objekte aus der Auflistung.  
  
4.  Verwenden der <xref:System.Web.ParserErrorCollection.AddRange%2A> Methode, um das sortierte Array an die Sammlung hinzuzufügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Kopieren der Inhalte einer <xref:System.Web.ParserErrorCollection> Objekt mit dem angegebenen <xref:System.Web.ParserError> Array.  
  
 [!code-csharp[System.Web.ParserErrorCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#6)]
 [!code-vb[System.Web.ParserErrorCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.IndexOf(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Web.ParserError" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Ruft den Index des angegebenen <see cref="T:System.Web.ParserError" />-Objekts in der Auflistung ab.</summary>
        <returns>Der nullbasierte Index der <see cref="T:System.Web.ParserError" />-Objekte in der Auflistung, -1, wenn der <see cref="T:System.Web.ParserError" /> nicht in der Auflistung enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.IndexOf%2A> Methode, um den Index des bestimmen einer <xref:System.Web.ParserError> Objekts in der Auflistung. Dies ist nützlich, um zu bestimmen, den Index der einzelnen <xref:System.Web.ParserError> beim Durchlaufen der Auflistung mithilfe der <xref:System.Collections.IEnumerator> zurückgegebenes Objekt der <xref:System.Collections.CollectionBase.GetEnumerator%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Suchen des Index eine <xref:System.Web.ParserError> Objekt am angegebenen Index in einer <xref:System.Web.ParserErrorCollection> Auflistung.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Insert(System.Int32,System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="index">Der Index in der Auflistung, an dem der <see cref="T:System.Web.ParserError" /> eingefügt werden soll.</param>
        <param name="value">Das in die Auflistung einzufügende <see cref="T:System.Web.ParserError" />-Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.ParserError" />-Objekt am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.Insert%2A> Methode zum Einfügen einer vorhandenen <xref:System.Web.ParserError> Objekt an einem bestimmten Index in der Auflistung.  
  
 Kann nicht hinzugefügt werden, die gleiche <xref:System.Web.ParserError> Objekt der Auflistung mehr als einmal. Beim Aufrufen der <xref:System.Web.ParserErrorCollection.Insert%2A> -Methode mithilfe einer <xref:System.Web.ParserError> , die bereits in der Auflistung ist, schlägt der Vorgang fehl. Verwenden der <xref:System.Web.ParserErrorCollection.Contains%2A> Methode vor dem Einfügen, um festzustellen, ob eine bestimmte <xref:System.Web.ParserError> ist bereits in der Auflistung. Um neu zu positionieren einer <xref:System.Web.ParserError> in der Auflistung, müssen Sie zuerst entfernen sie mithilfe der <xref:System.Web.ParserErrorCollection.Remove%2A> Methode und fügen Sie es auf den gewünschten Index, indem <xref:System.Web.ParserErrorCollection.Insert%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Einfügen einer <xref:System.Web.ParserError> Objekt am angegebenen Index in einer <xref:System.Web.ParserErrorCollection> Auflistung.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.ParserError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ParserError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserError ^ default[int] { System::Web::ParserError ^ get(int index); void set(int index, System::Web::ParserError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.ParserError with get, set" Usage="System.Web.ParserErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des <see cref="T:System.Web.ParserError" />-Objekts innerhalb der Auflistung, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft das <see cref="T:System.Web.ParserError" />-Objekt am angegebenen Index in der Auflistung ab oder legt dieses fest.</summary>
        <value>Der <see cref="T:System.Web.ParserError" /> am angegebenen Index der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.Item%2A> Eigenschaft zum Abrufen der <xref:System.Web.ParserError> Objekt am angegebenen Index in der Auflistung. Wenn Sie haben einen Verweis auf die <xref:System.Web.ParserError> Objekt und den Index benötigen, verwenden die <xref:System.Web.ParserErrorCollection.IndexOf%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Remove(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.Web.ParserError" />.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.ParserError" />-Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.ParserErrorCollection.Remove%2A> -Methode zum Entfernen einer <xref:System.Web.ParserError> Objekt aus der Auflistung, wenn man einen Verweis auf die <xref:System.Web.ParserError>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Entfernen einer <xref:System.Web.ParserError> am angegebenen Index in einer <xref:System.Web.ParserErrorCollection> Objekt.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>