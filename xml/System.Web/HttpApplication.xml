<Type Name="HttpApplication" FullName="System.Web.HttpApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="763b66da8b1dceadda77652804c5bae9caa303a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpApplication extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplication" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpApplication&#xA;Implements IComponent, IDisposable, IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplication : IDisposable, System::ComponentModel::IComponent, System::Web::IHttpAsyncHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Methoden, Eigenschaften und Ereignisse, die alle Anwendungsobjekte in einer ASP.NET-Anwendung gemeinsam haben. Diese Klasse ist die Basisklasse für Anwendungen, die vom Benutzer in der Datei „Global.asax“ definiert sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instanzen der <xref:System.Web.HttpApplication> -Klasse werden in die ASP.NET-Infrastruktur nicht direkt vom Benutzer erstellt. Eine Instanz der <xref:System.Web.HttpApplication> Klasse wird verwendet, um viele Anforderungen während seiner Lebensdauer zu verarbeiten. Es kann jedoch nur eine Anforderung zu einem Zeitpunkt verarbeitet. Folglich können Membervariablen zum Speichern von Daten pro Anforderung verwendet werden.  
  
 Eine Anwendung löst Ereignisse aus, die von benutzerdefinierten Modulen behandelt werden können, die implementieren die <xref:System.Web.IHttpModule> -Schnittstelle oder die Datei vom Ereignishandlercode, die in der Datei Global.asax definiert ist. Benutzerdefinierte Module, implementieren die <xref:System.Web.IHttpModule> Schnittstelle im Ordner "App_Code" oder in einer DLL im Ordner "Bin" gesetzt werden kann.  
  
 <xref:System.Web.HttpApplication> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
> [!NOTE]
>  Bei der Ausführung von IIS 7.0 im integrierten Modus gelten benutzerdefinierte Module im Ordner "App_Code" oder der Ordner "Bin" für alle Anforderungen in der Anforderungspipeline. Ereignishandlercode in der Datei "Global.asax" gilt nur für Anforderungen, die an ein ASP.NET-Handler zugeordnet sind.  
  
 Die Anwendungsereignisse werden in der folgenden Reihenfolge ausgelöst:  
  
1.  <xref:System.Web.HttpApplication.BeginRequest>  
  
2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  
  
3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  
  
4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  
  
5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  
  
6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  
  
7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  
  
     Nach der <xref:System.Web.HttpApplication.PostResolveRequestCache> Ereignis und vor dem <xref:System.Web.HttpApplication.PostMapRequestHandler> -Ereignis ein Ereignishandler (also eine Seite, die der Anforderungs-URL entspricht) wird erstellt. Wenn ein Server ausgeführt wird IIS 7.0 im integrierten Modus sowie .NET Framework, Version 3.0, die <xref:System.Web.HttpApplication.MapRequestHandler> Ereignis wird ausgelöst. Wenn ein Server IIS 7.0 im klassischen Modus oder eine frühere Version von IIS ausgeführt wird, kann dieses Ereignis verarbeitet werden.  
  
8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  
  
9. <xref:System.Web.HttpApplication.AcquireRequestState>  
  
10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  
  
11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  
  
     Der Ereignishandler ausgeführt wird.  
  
12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  
  
13. <xref:System.Web.HttpApplication.ReleaseRequestState>  
  
14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  
  
     Nach der <xref:System.Web.HttpApplication.PostReleaseRequestState> Ereignis ausgelöst wird, alle vorhandenen Antwortfilter werden die Ausgabe zu filtern.  
  
15. <xref:System.Web.HttpApplication.UpdateRequestCache>  
  
16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  
  
17. <xref:System.Web.HttpApplication.LogRequest>  
  
     Dieses Ereignis wird in IIS 7.0 im integrierten Modus und unterstützt .NET Framework 3.0  
  
18. <xref:System.Web.HttpApplication.PostLogRequest>  
  
     Dieses Ereignis ist für unterstützte IIS 7.0 im integrierten Modus und mindestens .NET Framework 3.0  
  
19. <xref:System.Web.HttpApplication.EndRequest>  
  
   
  
## Examples  
 Die beiden folgenden Beispiele veranschaulichen, wie mithilfe der <xref:System.Web.HttpApplication> Klasse und ihre Ereignisse. Das erste Beispiel veranschaulicht die Vorgehensweise erstellen ein benutzerdefinierte HTTP-Modul und ein Ereignis herstellen. Im zweiten Beispiel wird veranschaulicht, wie die Datei "Web.config" ändern.  
  
 Im folgenden Beispiel wird veranschaulicht, wie ein benutzerdefinierte HTTP-Modul erstellen und verbinden die <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis, um das HTTP-Modul. HTTP-Modulen abfangen für jede Anforderung an Webanwendungsressourcen, wodurch Sie Clientanforderungen zu filtern. Alle HTTP-Module, die abonniert, eine <xref:System.Web.HttpApplication> Ereignis implementieren muss die <xref:System.Web.IHttpModule> Schnittstelle.  
  
 [!code-csharp[System.Web.HttpApplication1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpApplication1/cs/source.cs#1)]
 [!code-vb[System.Web.HttpApplication1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpApplication1/vb/source.vb#1)]  
  
 Bevor ein Ereignis in einem benutzerdefinierten HTTP-Modul ausgeführt werden kann, müssen Sie die Konfigurationseinstellungen in der Datei "Web.config", damit ASP.NET über das HTTP-Modul benachrichtigt ändern. Das folgende Beispiel zeigt die entsprechenden-Konfigurationseinstellung in der `httpModules` Abschnitt der Datei "Web.config". Die folgende Einstellung gilt für IIS 7.0 im klassischen Modus und mit früheren Versionen von IIS.  
  
```csharp  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
 Die folgende Einstellung gilt für IIS 7.0 im integrierten Modus.  
  
```csharp  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </modules>  
  </system.webServer>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      <modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpModule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpApplication" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler AcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcquireRequestState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET den aktuellen Zustand (z. B. den Sitzungszustand) erhält, der der aktuellen Anforderung zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis wird ausgelöst, nachdem der Ereignishandler erstellt wurde.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Ein Beispiel für die Behandlung der <xref:System.Web.HttpApplication.AcquireRequestState> -Ereignis finden Sie unter der <xref:System.Web.HttpApplication> Übersichtsthema.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAcquireRequestState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnBeginRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.BeginRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.BeginRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.BeginRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.BeginRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.BeginRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.BeginRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnEndRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.EndRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.EndRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.EndRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.EndRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.EndRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.LogRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.LogRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.LogRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.LogRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.LogRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.MapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />-Ereignishandlers für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostLogRequest" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostLogRequest" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostLogRequest" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostLogRequest" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostLogRequest" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostLogRequest" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der der asynchronen <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung des Ereignisses startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der der asynchronen <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt den angegebenen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandler der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> beendet.</param>
        <summary>Fügt den angegebenen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandler der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> hinzugefügt werden soll.</param>
        <summary>Fügt den angegebenen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandler der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> startet.</param>
        <param name="eh">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> beendet.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">Der <see cref="T:System.Web.BeginEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> startet.</param>
        <param name="endHandler">Der <see cref="T:System.Web.EndEventHandler" />, der die asynchrone Verarbeitung von <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> beendet.</param>
        <param name="state">Der zugeordnete Zustand, der dem asynchronen <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignis der Auflistung von asynchronen <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />-Ereignishandlern für die aktuelle Anforderung hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Zustand einer Anwendung ab.</summary>
        <value>Das <see cref="T:System.Web.HttpApplicationState" /> für die aktuelle Anforderung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der aktuelle Status einer Anwendung besteht ein Schlüssel/Wert-Wörterbuch anwendungsweite-Objekte, die Sie verwenden können, zum Speichern von .NET Framework-Objekte und skalaren Werten, die von mehreren Clients zu mehreren webanforderungen verknüpft sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthenticateRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Identität des Benutzers von einem Sicherheitsmodul eingerichtet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.AuthenticateRequest> -Ereignis signalisiert, dass die konfigurierten Authentifizierungsmechanismus auf die aktuelle Anforderung authentifiziert wurde. Abonnieren von der <xref:System.Web.HttpApplication.AuthenticateRequest> Ereignis wird sichergestellt, dass vor der Verarbeitung der angefügten Modul oder der ereignishandlers die Anforderung authentifiziert werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthorizeRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Benutzerautorisierung von einem Sicherheitsmodul überprüft wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.AuthorizeRequest> -Ereignis signalisiert, dass ASP.NET die aktuelle Anforderung autorisiert hat. Abonnieren von der <xref:System.Web.HttpApplication.AuthorizeRequest> Ereignis wird sichergestellt, dass die Anforderung authentifiziert und autorisiert vor der Verarbeitung des angefügten Modul oder Ereignis-Handlers werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public event EventHandler BeginRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.BeginRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BeginRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt als erstes Ereignis in der HTTP-Pipelinekette der Ausführung ein, wenn ASP.NET auf eine Anforderung antwortet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.BeginRequest> Ereignis signalisiert die Erstellung einer neuen Anforderung. Dieses Ereignis wird immer ausgelöst, und ist immer das erste Ereignis bei der Verarbeitung einer Anforderung auftritt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.EndRequest" />
      </Docs>
    </Member>
    <Member MemberName="CompleteRequest">
      <MemberSignature Language="C#" Value="public void CompleteRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.CompleteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteRequest();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass ASP.NET alle Ereignisse und das Filtern in der HTTP-Pipelineausführungskette umgeht und das <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis direkt ausführt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft HTTP-spezifische Informationen über die aktuelle Anforderung ab.</summary>
        <value>Das <see cref="T:System.Web.HttpContext" /> für die aktuelle Anforderung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die <see cref="T:System.Web.HttpApplication" />-Instanz frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, und <xref:System.Web.HttpApplication.Application%2A> Eigenschaften sind nicht verfügbar für verwenden in folgenden Fällen die <xref:System.Web.HttpApplication.Dispose%2A> Methode ausgeführt wird.  
  
 Die <xref:System.Web.HttpApplication.Dispose%2A> Methodenaufrufe der <xref:System.Web.IHttpModule.Dispose%2A> -Methode für jedes der registrierten <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in der Anwendungsinstanz und löst die <xref:System.Web.HttpApplication.Disposed> Ereignis.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.HttpApplication.Dispose" /> in einer abgeleiteten Klasse, stellen Sie sicher, dass der Basisklasse aufgerufen <see cref="M:System.Web.HttpApplication.Dispose" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Anwendung verworfen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen eines <xref:System.Web.HttpApplication.Disposed>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung. Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie eine Instanz des der <xref:System.Web.HttpApplication.Disposed> auf das Ereignis zu delegieren. Der Ereignishandler wird bei Eintreten des Ereignisses aufgerufen, es sei denn, Sie entfernen die <xref:System.Web.HttpApplication.Disposed> delegieren.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public event EventHandler EndRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.EndRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EndRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt als letztes Ereignis in der HTTP-Pipelinekette der Ausführung ein, wenn ASP.NET auf eine Anforderung antwortet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.EndRequest> Ereignis wird immer ausgelöst wird, wenn die <xref:System.Web.HttpApplication.CompleteRequest%2A> -Methode aufgerufen wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.BeginRequest" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Error;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt beim Auslösen einer nicht behandelten Ausnahme ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ausnahme, die löst die <xref:System.Web.HttpApplication.Error> Ereignis möglich, die durch einen Aufruf der <xref:System.Web.HttpServerUtility.GetLastError%2A> Methode. Unterdrückt werden die Standardfehlermeldung, die durch einen Aufruf von ASP.NET generiert wird, wenn die Anwendung benutzerdefinierte Fehlerausgabe erzeugt, die <xref:System.Web.HttpServerUtility.ClearError%2A> Methode.  
  
> [!NOTE]
>  Wenn Ihre Webanwendung XML-Webdienste enthält, können keine der <xref:System.Web.HttpApplication.Error> Ereignis für die globale Ausnahmebehandlung dieser Dienste. Der HTTP-Handler für XML-Webdienste verbraucht jede Ausnahme, die tritt in einem XML-Webdienst und konvertiert ihn in einen SOAP-Fehler vor der <xref:System.Web.HttpApplication.Error> aufgerufen werden. Erstellen Sie eine SOAP-Erweiterung zum Verarbeiten von Web Service-Ausnahmen in einem benutzerdefinierten globalen Ausnahmehandler zum Behandeln von Ausnahmen für XML-Webdienste-Dienst.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste der Ereignishandlerdelegaten ab, die alle Anwendungsereignisse verarbeiten.</summary>
        <value>Eine <see cref="T:System.ComponentModel.EventHandlerList" />, die die Namen der Ereignishandlerdelegaten enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputCacheProviderName">
      <MemberSignature Language="C#" Value="public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutputCacheProviderName(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutputCacheProviderName (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetOutputCacheProviderName(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />, mit dem Verweise auf systeminterne Serverobjekte für HTTP-Anforderungen bereitgestellt werden.</param>
        <summary>Ruft den Namen des standardmäßigen Ausgabecacheanbieters ab, der für eine Website konfiguriert ist.</summary>
        <returns>Der Name des Standardanbieters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode überschreiben und verwenden, um den Namen des alle Ausgabecacheanbieter zurückzugeben, die für eine Website konfiguriert ist. ASP.NET ruft einen Verweis auf den benannten Anbieter ab und verwendet, um die Ausgabe-Cache-Daten für die derzeit ausgeführte Anforderung zu speichern.  
  
 Wird standardmäßig in ASP.NET verwenden alle HTTP-Antworten, gerenderten Seiten und Steuerelemente den Ausgabecache im Arbeitsspeicher. Sie können ändern, den Ausgabecache-Standardanbieter, die für eine Webanwendung verwendet wird, unter Angabe eines anderen Anbieter Namens für `defaultProvider`.  
  
 Darüber hinaus können Sie verschiedene Ausgabecacheanbieter für einzelne Steuerelemente und Informationen zu einzelnen Anforderungen auswählen. Die einfachste Möglichkeit, einen anderen Ausgabecache-Anbieter für andere Web-Benutzersteuerelemente auswählen möchten dies deklarativ mit dem neuen ist `providerName` Attribut in einer Direktive Seite oder eines Steuerelements, wie im folgenden Beispiel gezeigt:  
  
```  
<%@ OutputCache Duration="60" VaryByParam="None"   
    providerName="DiskCache" %>  
```  
  
 Um einen anderen Ausgabecacheanbieter für eine HTTP-Anforderung anzugeben, überschreiben Sie diese Methode in der Datei "Global.asax", um programmgesteuert welcher Anbieter für eine bestimmte Anforderung anzugeben. Weitere Informationen finden Sie unter [Übersicht über die ASP.NET-Zwischenspeicherung](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie der Cacheanbieter mit dem Namen programmgesteuert an `DiskCache` für jede HTTP-Anforderung, die auf der Seite "Advanced.aspx" geht.  

```csharp  
public override string GetOutputCacheProviderName(HttpContext context)  
{  
    if (context.Request.Path.EndsWith("Advanced.aspx"))  
        return "DiskCache";  
    else  
        return base.GetOutputCacheProviderName(context);  
}  
```  

```vb  
Public Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  
        As HttpContext) As String   
    If context.Request.Path.EndsWith("Advanced.aspx") Then   
        Return "DiskCache"   
    Else   
        Return MyBase.GetOutputCacheProviderName(context)   
    End If   
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="context" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetVaryByCustomString(class System.Web.HttpContext context, string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVaryByCustomString (context As HttpContext, custom As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetVaryByCustomString(System::Web::HttpContext ^ context, System::String ^ custom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />-Objekt, das Informationen zu der aktuellen Webanforderung enthält.</param>
        <param name="custom">Die benutzerdefinierte Zeichenfolge, die angibt, welche zwischengespeicherte Antwort als Antwort auf die aktuelle Anforderung verwendet wird.</param>
        <summary>Stellt eine Implementierung der <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />-Eigenschaft für den Bereich der gesamten Anwendung bereit.</summary>
        <returns>Wenn der <paramref name="custom" />-Parameter den Wert <see langword="&quot;browser&quot;" /> aufweist, der <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /> des Browsers; andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können außer Kraft setzen <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> hinzufügen eine neue Methode zum Berechnen der benutzerdefinierten variieren-für-Werte, die für die aktuelle Anforderung basieren. Die Implementierung hat, rufen Sie die Basisklasse für benutzerdefinierte Werte, die er nicht erkennt. Weitere Informationen finden Sie unter [Vorgehensweise: Cache-Versionen von einer Seite mithilfe benutzerdefinierter Zeichenfolgen](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Init" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt benutzerdefinierten Initialisierungscode aus, nachdem alle Ereignishandlermodule hinzugefügt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können in einer abgeleiteten Klasse überschreiben die <xref:System.Web.HttpApplication.Init%2A> Methode, um Initialisierungscode hinzuzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler LogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.LogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LogRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor ASP.NET eine Protokollierung für die aktuelle Anforderung ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.LogRequest> Ereignis wird ausgelöst, auch wenn ein Fehler auftritt. Sie können angeben, einen Ereignishandler für die <xref:System.Web.HttpApplication.LogRequest> Ereignis, um benutzerdefinierte Protokollierung für die Anforderung bereitzustellen.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.LogRequest> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Geben Sie einen Ereignishandler für das <xref:System.Web.HttpApplication.LogRequest> Ereignis. Der Ereignishandler behandelt auch mehrere andere Ereignisse. Aus diesem Grund die <xref:System.Web.HttpContext.CurrentNotification%2A> und <xref:System.Web.HttpContext.IsPostNotification%2A> Eigenschaften werden verwendet, um zu bestimmen, um den auszuführenden code.  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostLogRequest" />
      </Docs>
    </Member>
    <Member MemberName="MapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler MapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.MapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MapRequestHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Handler ausgewählt wird, um auf die Anforderung zu reagieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.MapRequestHandler> Ereignis wird durch die Infrastruktur von ASP.NET verwendet, um zu bestimmen, der Ereignishandler für die aktuelle Anforderung. Weitere Informationen finden Sie unter [Vorgehensweise: Registrieren von HTTP-Handler](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.MapRequestHandler> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostMapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Web.HttpModuleCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpModuleCollection Modules" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As HttpModuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpModuleCollection ^ Modules { System::Web::HttpModuleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpModuleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Module für die aktuelle Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Web.HttpModuleCollection" /> mit den Namen der Module für die Anwendung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteRequestStep">
      <MemberSignature Language="C#" Value="public void OnExecuteRequestStep (Action&lt;System.Web.HttpContextBase,Action&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnExecuteRequestStep(class System.Action`2&lt;class System.Web.HttpContextBase, class System.Action&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnExecuteRequestStep (callback As Action(Of HttpContextBase, Action))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnExecuteRequestStep(Action&lt;System::Web::HttpContextBase ^, Action ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase,System.Action&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">Die Rückrufmethode.</param>
        <summary>Gibt einen Rückruf an, der abgerufen wird, wenn ein Anforderungsausführungsschritt ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Diese Methode sorgt für Erweiterbarkeit, zu der ASP.NET-Pipeline erleichtert Entwicklern das Implementieren von Funktionen im Kontext der ambient-Szenarien und Erstellen von Bibliotheken, die ASP.NET Ausführungsfluss (z. B. Ablaufverfolgung, die profilerstellung, Diagnose und Transaktionen) interessieren.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostAcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAcquireRequestState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Anforderungszustand (z. B. der Sitzungszustand) abgerufen wurde, der der aktuellen Anforderung zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.PostAcquireRequestState> Ereignis wird ausgelöst, nachdem die <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis ist aufgetreten. Funktionen, die abonniert die <xref:System.Web.HttpApplication.AcquireRequestState> Ereignis erreichen alle Daten, die Verarbeitung durch die <xref:System.Web.HttpApplication.PostAcquireRequestState>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AcquireRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthenticateRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Identität des Benutzers von einem Sicherheitsmodul eingerichtet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.PostAuthenticateRequest> Ereignis wird ausgelöst, nachdem die <xref:System.Web.HttpApplication.AuthenticateRequest> Ereignis ist aufgetreten. Funktionen, die abonniert die <xref:System.Web.HttpApplication.PostAuthenticateRequest> Ereignis erreichen alle Daten, die Verarbeitung durch die <xref:System.Web.HttpApplication.PostAuthenticateRequest>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthorizeRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer für die aktuelle Anforderung autorisiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.PostAuthorizeRequest> -Ereignis signalisiert, dass ASP.NET die aktuelle Anforderung autorisiert hat. Abonnieren von der <xref:System.Web.HttpApplication.PostAuthorizeRequest> Ereignis wird sichergestellt, Authentifizierung und Autorisierung der Anforderung vor der Verarbeitung der angefügten Modul oder der ereignishandlers.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostLogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostLogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostLogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostLogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostLogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostLogRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Verarbeitung aller Ereignishandler für das <see cref="E:System.Web.HttpApplication.LogRequest" />-Ereignis von ASP.NET  abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.PostLogRequest> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.LogRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostMapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler PostMapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostMapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostMapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostMapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostMapRequestHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET dem entsprechenden Ereignishandler die aktuelle Anforderung zugeordnet hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.MapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostReleaseRequestState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET das Ausführen aller Ereignishandler der Anforderung abgeschlossen hat und die Zustandsdaten der Anforderung gespeichert wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PostRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostRequestHandlerExecute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der ASP.NET-Ereignishandler (z. B. eine Seite oder ein XML-Webdienst) die Ausführung beendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PostResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostResolveRequestCache;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET die Ausführung des aktuellen Ereignishandlers umgeht und ermöglicht, dass ein Cachemodul eine Anforderung aus dem Zwischenspeicher behandelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PostUpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostUpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostUpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostUpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostUpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostUpdateRequestCache;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET die Aktualisierung von Cachemodulen und das Speichern von Antworten abschließt, mit denen nachfolgende Anforderungen aus dem Cache behandelt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.PostUpdateRequestCache> Ereignis wird ausgelöst, nachdem die <xref:System.Web.HttpApplication.UpdateRequestCache> Ereignis ist aufgetreten. Wenn die <xref:System.Web.HttpApplication.PostUpdateRequestCache> wird ausgelöst, ASP.NET Verarbeitungscode abgeschlossen ist und der Inhalt des Caches abgeschlossen ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.UpdateRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PreRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PreRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRequestHandlerExecute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt unmittelbar vor dem Moment ein, bevor ASP.NET einen Ereignishandler (z. B. eine Seite oder einen XML-Webdienst) ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestContent">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestContent" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestContent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestContent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestContent;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, kurz bevor ASP.NET Inhalt an den Client sendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.PreSendRequestContent> Ereignis möglicherweise mehrmals auftreten.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
 > [!WARNING]
 > Verwenden Sie keine `PreSendRequestContent` mit verwalteten Modulen, die implementieren `IHttpModule`. Das Festlegen dieser Eigenschaften kann dazu führen, dass Probleme bei asynchronen Anforderungen. Die Kombination der Anwendung angeforderte Routing (ARR) und Websockets kann zu Ausnahmen für den Verstoß führen, die zum Absturz w3wp verursachen kann. Z. B. Iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 in iiscore.dll verursacht eine Verletzung Zugriffsausnahme (0xC0000005).
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestHeaders">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestHeaders;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestHeaders" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestHeaders As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestHeaders;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, kurz bevor ASP.NET HTTP-Header an den Client sendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
 > [!WARNING]
 > Verwenden Sie keine `PreSendRequestHeaders` mit verwalteten Modulen, die implementieren `IHttpModule`. Das Festlegen dieser Eigenschaften kann dazu führen, dass Probleme bei asynchronen Anforderungen. Die Kombination der Anwendung angeforderte Routing (ARR) und Websockets kann zu Ausnahmen für den Verstoß führen, die zum Absturz w3wp verursachen kann. Z. B. Iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 in iiscore.dll verursacht eine Verletzung Zugriffsausnahme (0xC0000005).
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestContent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterModule">
      <MemberSignature Language="C#" Value="public static void RegisterModule (Type moduleType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterModule(class System.Type moduleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.RegisterModule(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterModule (moduleType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterModule(Type ^ moduleType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="moduleType">Der Typ des Moduls.</param>
        <summary>Registriert ein Anwendungsmodul.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler ReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReleaseRequestState;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ASP.NET die Ausführung aller Ereignishandler der Anforderung abgeschlossen hat. Dieses Ereignis veranlasst die Zustandsmodule, die aktuellen Zustandsdaten zu speichern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.HttpApplication.ReleaseRequestState> Ereignis wird ausgelöst, die Anwendung mit der Anforderung abgeschlossen ist und ASP.NET wird angegeben, dass die Anforderungszustand zu speichern.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das systeminterne Anforderungsobjekt für die aktuelle Anforderung ab.</summary>
        <value>Das <see cref="T:System.Web.HttpRequest" />-Objekt, das von der Anwendung verarbeitet wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Web.HttpRequest" />-Objekt ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler RequestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RequestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.RequestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RequestCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die verwalteten Objekte, die der Anforderung zugeordnet sind, freigegeben wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpApplication.RequestCompleted> Ereignis wird aufgerufen, nachdem alle verwalteten Module und Handler in der ASP.NET-Pipeline aufgerufen wurden. Sie können Module zum Bereinigen von Ressourcen, nachdem alle verwalteten Module und Handler ausgeführt haben. Verwenden Sie dieses Ereignis, wenn Sie einen bestimmten Zeitpunkt benötigen für die verwalteten Ressourcen explizit freigeben, die Sie während einer Anforderung erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler ResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResolveRequestCache;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET ein Autorisierungsereignis abschließt, damit die Cachemodule Anforderungen aus dem Cache behandeln können, wobei sie die Ausführung des Ereignishandlers (z. B. einer Seite oder eines XML-Webdiensts) umgehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das systeminterne Antwortobjekt für die aktuelle Anforderung ab.</summary>
        <value>Das <see cref="T:System.Web.HttpResponse" />-Objekt, das von der Anwendung verarbeitet wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Web.HttpResponse" />-Objekt ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das systeminterne Serverobjekt für die aktuelle Anforderung ab.</summary>
        <value>Das <see cref="T:System.Web.HttpServerUtility" />-Objekt, das von der Anwendung verarbeitet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das systeminterne Sitzungsobjekt ab, das den Zugriff auf die Sitzungsdaten bereitstellt.</summary>
        <value>Das <see cref="T:System.Web.SessionState.HttpSessionState" />-Objekt für die aktuelle Sitzung.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Web.SessionState.HttpSessionState" />-Objekt ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Siteschnittstelle für eine <see cref="T:System.ComponentModel.IComponent" />-Implementierung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.ComponentModel.ISite" />-Objekt, mit dem ein Container seine untergeordneten Komponenten verwalten und mit diesen kommunizieren kann.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult Implements IHttpAsyncHandler.BeginProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.Web.IHttpAsyncHandler.BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData) = System::Web::IHttpAsyncHandler::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />, mit dem Verweise auf systeminterne Serverobjekte für HTTP-Anforderungen bereitgestellt werden.</param>
        <param name="cb">Der aufzurufende <see cref="T:System.AsyncCallback" />, wenn der asynchrone Methodenaufruf abgeschlossen ist. Wenn der <c>cb</c>-Parameter nicht <see langword="null" /> ist, wird kein Delegat aufgerufen.</param>
        <param name="extraData">Zusätzliche Daten, die zur Verarbeitung der Anforderung benötigt werden.</param>
        <summary>Initialisiert einen asynchronen Aufruf an den HTTP-Ereignishandler.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das Informationen über den Status des Prozesses enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.EndProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpAsyncHandler.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessRequest (result As IAsyncResult) Implements IHttpAsyncHandler.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult ^ result) = System::Web::IHttpAsyncHandler::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Ein <see cref="T:System.IAsyncResult" />, das Informationen über den Status des Prozesses enthält.</param>
        <summary>Stellt bei Beendigung des Prozesses eine <see langword="End" />-Methode für asynchrone Prozesse bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> Methode zum Auslösen von Ausnahmen, die während des asynchronen Prozesses abgefangen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.IHttpHandler.IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see langword="Boolean" />-Wert ab, der angibt, ob eine weitere Anforderung das <see cref="T:System.Web.IHttpHandler" />-Objekt verwenden kann.</summary>
        <value>
          <see langword="true" /> wenn das <see cref="T:System.Web.IHttpHandler" />-Objekt wiederverwendet werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Explizit festlegen der `IsReusable` Eigenschaft `true` oder `false`, geben Sie Code, überschreibt die `IsReusable` Eigenschaftenaccessor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />, mit dem Verweise auf die systeminternen Serverobjekte für HTTP-Anforderungen bereitgestellt werden.</param>
        <summary>Ermöglicht die Verarbeitung von HTTP-Webanforderungen durch einen benutzerdefinierten HTTP-Handler, der die <see cref="T:System.Web.IHttpHandler" />-Schnittstelle implementiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, erben die <xref:System.Web.IHttpModule> und <xref:System.Web.IHttpHandler> Schnittstellen dienen als Verweis auf ein <xref:System.Web.HttpContext> Objekt für die aktuelle HTTP-Anforderung. Das Objekt bietet Zugriff auf die systeminterne Funktion `Request`, `Response`, und `Server` Objekte für die Anforderung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">In allen Fällen.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler UpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler UpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.UpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ UpdateRequestCache;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ASP.NET die Ausführung eines Ereignishandlers abschließt, damit Cachemodule Antworten speichern können, die für das Behandeln nachfolgender Anforderungen aus dem Cache verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das systeminterne Benutzerobjekt für die aktuelle Anforderung ab.</summary>
        <value>Das <see cref="T:System.Security.Principal.IPrincipal" />-Objekt, das den aktuellen authentifizierten oder anonymen Benutzer darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Das <see cref="T:System.Security.Principal.IPrincipal" />-Objekt ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>