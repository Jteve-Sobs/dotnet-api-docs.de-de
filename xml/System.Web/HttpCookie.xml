<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76050e09c2925efba8778f7010578b289bdf248e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70452426" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <TypeSignature Language="F#" Value="type HttpCookie = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein typsicheres Verfahren zum Erstellen und Bearbeiten einzelner HTTP-Cookies bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.HttpCookie> -Klasse ruft die Eigenschaften einzelner Cookies ab und legt Sie fest. Die <xref:System.Web.HttpCookieCollection> -Klasse stellt Methoden zum Speichern, abrufen und Verwalten mehrerer Cookies bereit.  
  
 ASP.NET enthält zwei systeminterne Cookie-Auflistungen. Die <xref:System.Web.HttpRequest.Cookies%2A> Auflistung `Cookie`  , auf die über die- <xref:System.Web.HttpRequest> Auflistung des-Objekts zugegriffen wird, enthält Cookies, die vom Client an den Server im-Header übertragen werden Die Auflistung <xref:System.Web.HttpResponse.Cookies%2A> , auf <xref:System.Web.HttpResponse>  die über die-Auflistung des-Objekts zugegriffen wird, enthält neue Cookies, die auf dem Server erstellt und im HTTP-Antwortheader an den Client übermittelt werden `Set-Cookie`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie `DateCookieExample` <xref:System.Web.HttpRequest> im-Objekt auf ein Cookie namens überprüft wird. Wenn das Cookie nicht gefunden wird, wird es erstellt und dem <xref:System.Web.HttpResponse> -Objekt hinzugefügt. Das Cookie wird in 10 Minuten abläuft.  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpCookie" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des neuen Cookies.</param>
        <summary>Erstellt und benennt ein neues Cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein neues Cookie erstellt und benannt.  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string * string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des neuen Cookies.</param>
        <param name="value">Der Wert des neuen Cookies.</param>
        <summary>Erstellt und benennt ein neues Cookie und weist diesem einen Wert zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird der Wert eines neuen Cookies erstellt, benannt und festgelegt.  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domäne ab, der das Cookie zugeordnet werden soll, oder legt diese fest.</summary>
        <value>Der Name der Domäne, der das Cookie zugeordnet werden soll. Der Standardwert ist die aktuelle Domäne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen `Domain` des-Attributs wird die Übertragung des Cookies auf Clients beschränkt, die eine Ressource von dieser Domäne anfordern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Domäne des Cookies festgelegt.  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : DateTime with get, set" Usage="System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ablaufdatum und die Ablaufzeit für das Cookie ab, oder legt diese fest.</summary>
        <value>Die Tageszeit (auf dem Client), zu der das Cookie abläuft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Ablaufzeit des Cookies auf 10 Minuten ab dem aktuellen Zeitpunkt festgelegt.  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeys : bool" Usage="System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Cookie über Unterschlüssel verfügt.</summary>
        <value><see langword="true" />, wenn das Cookie über Unterschlüssel verfügt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden die einzelnen Member einer Cookie-Auflistung für mehrere Werte untersucht. Wenn die- <xref:System.Web.HttpCookie.HasKeys%2A> Eigenschaft eines Cookies `true`ist, das angibt, dass mehrere Werte vorhanden sind, werden in diesem Beispiel die Wertnamen in ein Zeichen folgen Array und die entsprechenden Werte in ein anderes Zeichen folgen Array kopiert. Ein Beispiel für das Erstellen mehrerer Werte für ein Cookie finden <xref:System.Web.HttpCookie.Values%2A>Sie unter.  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpOnly : bool with get, set" Usage="System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein clientseitiges Skript auf ein Cookie zugreifen kann, oder liegt diesen fest.</summary>
        <value><see langword="true" />, wenn das Cookie das <see langword="HttpOnly" />-Attribut besitzt und ein clientseitiges Skript nicht auf das Cookie zugreifen kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Internet Explorer Version 6 Service Pack 1 und höher unterstützt die Cookieeigenschaft <xref:System.Web.HttpCookie.HttpOnly%2A>, die dazu beiträgt, Site übergreifende Skript Bedrohungen zu vermeiden, die zu gestohlenen Cookies führen. Gestohlene Cookies können vertrauliche Informationen enthalten, die den Benutzer für die Website identifizieren, z. b. die ASP.NET-Sitzungs-ID oder das Formular Authentifizierungs Ticket. Sie können vom Angreifer wiedergegeben werden, um Sie als Benutzer zu maskieren oder vertrauliche Informationen zu erhalten. Wenn ein `HttpOnly` Cookie von einem kompatiblen Browser empfangen wird, ist das Client seitige Skript nicht zugänglich.  
  
> [!CAUTION]
>  Wenn Sie <xref:System.Web.HttpCookie.HttpOnly%2A> die- `true` Eigenschaft auf festlegen, wird nicht verhindert, dass ein Angreifer mit Zugriff auf den Netzwerk Kanal direkt auf das Cookie zugreift. Verwenden Sie ggf. Secure Sockets Layer (SSL), um diesen Schutz zu ermöglichen. Die Arbeitsstations Sicherheit ist ebenfalls wichtig, da ein böswilliger Benutzer ein geöffnetes Browserfenster oder einen Computer mit permanenten Cookies verwenden könnte, um Zugriff auf eine Website mit einer legitimen Benutzeridentität zu erhalten.  
  
 Weitere Informationen zu möglichen Angriffen und dazu, wie diese Eigenschaft Ihnen helfen kann, diese zu mindern, finden Sie unter [mindern von Site übergreifendem Skripting mit HTTP-Cookies](https://go.microsoft.com/fwlink/?LinkId=41580).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie `HttpOnly` ein Cookie schreiben und anzeigen, wie es vom Client über ECMAScript nicht zugänglich ist.  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.HttpCookie.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel (Index) für den Wert des Cookies.</param>
        <summary>Ruft eine Verknüpfung mit der <see cref="P:System.Web.HttpCookie.Values" />-Eigenschaft ab. Diese Eigenschaft wird aus Gründen der Kompatibilität mit früheren Versionen von Active Server Pages (ASP) bereitgestellt.</summary>
        <value>Der Cookiewert.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Cookies ab oder legt diesen fest.</summary>
        <value>Wenn durch den Konstruktor nicht anders angegeben, ist der Standardwert ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird eine cookiehammlung vom `Cookie` Client in der Kopfzeile empfangen und durch die Auflistung durchlaufen, um nach einem Cookie mit dem spezifischen Namen zu suchen.  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Pfad ab, der mit dem aktuellen Cookie übertragen werden soll, oder legt diesen fest.</summary>
        <value>Der virtuelle Pfad, der mit dem aktuellen Cookie übertragen werden soll. Der Standard ist <see langword="/" />, was den Serverstamm darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Die <xref:System.Web.HttpCookie.Path%2A> -Eigenschaft erweitert <xref:System.Web.HttpCookie.Domain%2A> die-Eigenschaft, sodass Sie die jeweilige URL, auf die das Cookie angewendet wird, vollständig beschreiben In der URL `http:/www.microsoft.com/asp`lautet `www.microsoft.com` die Domäne z. b., und der Pfad lautet/ASP.
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.HttpCookie.Path%2A> -Eigenschaft eines neuen Cookies festgelegt.  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.SameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.HttpCookie.SameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Attributs „SameSite“ des Cookies ab oder legt ihn fest.</summary>
        <value>Einer der Enumerationswerte, der den Erzwingungsmodus des Cookies darstellt. Wenn die Anwendung für .NET Framework 4.7.2 oder höher ausgelegt ist, ist der Standardwert <see cref="F:System.Web.SameSiteMode.Lax" />. Andernfalls ist der Standardwert <see cref="F:System.Web.SameSiteMode.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Secure : bool with get, set" Usage="System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Cookie über Secure Sockets Layer (SSL) (d. h. ausschließlich über HTTPS) übertragen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Cookie über eine SSL-Verbindung (HTTPS) übertragen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Übertragung von Cookies mithilfe von SSL für eine gesamte Anwendung festzulegen, aktivieren Sie Sie in der Konfigurationsdatei der Anwendung (Web. config), die sich im Stammverzeichnis der Anwendung befindet. Weitere Informationen finden Sie unter [httpCookies-Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f). Werte, die Programm gesteuert mithilfe <xref:System.Web.HttpCookie.Secure%2A> der-Eigenschaft festgelegt werden, die in der Datei Web. config festgelegt wurde.  
  
 Beim Umgang mit vertraulichen Informationen wird dringend empfohlen, dass Sie das HTTPS-Protokoll mit SSL-Verschlüsselung verwenden. SSL schützt vor Daten, die geändert werden (Datenintegrität), schützt die Identität eines Benutzers (Vertraulichkeit) und stellt sicher, dass Daten aus dem erwarteten Client (Authentifizierung) stammen. Weitere Informationen zu den Vorteilen der Verschlüsselung finden Sie unter [Kryptografiedienste](~/docs/standard/security/cryptographic-services.md). Weitere Informationen zum Konfigurieren von SSL auf einem Internetinformationsdienste-Webserver (IIS) finden Sie unter [Konfigurieren von SSL auf einem Webserver oder einer](https://go.microsoft.com/fwlink/?LinkId=38553)Website.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet eine Aktion, wenn das Cookie für die Übertragung mit SSL festgelegt ist.  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e4289e6-d1b7-4e82-ab0d-e83e3b6063ed">Verwenden von Secure Sockets Layer</related>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Shareable : bool with get, set" Usage="System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob dem Cookie die Beteiligung an der Zwischenspeicherung der Ausgabe erlaubt wird.</summary>
        <value><see langword="true" />, um anzugeben, dass die Zwischenspeicherung der Ausgabe nicht unterbunden wird für eine angegebene <see cref="T:System.Web.HttpResponse" />, die ein oder mehr ausgehende Cookies enthält; sonst <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine angegebene <xref:System.Web.HttpResponse> mindestens eine ausgehende Cookies enthält, bei <xref:System.Web.HttpCookie.Shareable%2A> der auf `false` (Standardwert) festgelegt ist, wird die Ausgabe Zwischenspeicherung für die Antwort unterdrückt. Dadurch wird verhindert, dass Cookies, die potenziell vertrauliche Informationen enthalten, in der Antwort zwischengespeichert und an mehrere Clients gesendet werden.  Damit eine Antwort, die Cookies enthält, zwischengespeichert werden kann, konfigurieren Sie die Zwischenspeicherung für die Antwort `OutputCache` , z. b. die Verwendung der-Direktive oder des MVC [OutputCache] <xref:System.Web.HttpCookie.Shareable%2A> -Attributs, und legen Sie für alle ausgehenden Cookies auf fest `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Web.HttpCookie.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.Web.HttpCookie" RefType="out" Index="1" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">Die Zeichenfolgendarstellung des Cookies.</param>
        <param name="result">Wenn die Konvertierung erfolgreich durchgeführt wurde, enthält dies den <see cref="T:System.Web.HttpCookie" />-Wert, der dem in <paramref name="input" /> enthaltenen Cookie entspricht. Wenn bei der Konvertierung ein Fehler aufgetreten ist, ist <paramref name="result" /> <see langword="null" />. Die Konvertierung schlägt fehl, wenn der <paramref name="input" />-Parameter <see langword="null" /> oder leer ist, oder wenn kein Cookiename in <paramref name="input" /> bestimmt werden kann. Der Wert dieses Parameters wird von der Methode überschrieben. Der Parameter wird vom Verweis übergeben und auf NULL festgelegt, sobald die Methode eingegeben wird.</param>
        <summary>Konvertiert die angegebene Zeichenfolgendarstellung eines Cookies in deren <see cref="T:System.Web.HttpCookie" />-Entsprechung und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich ausgeführt wurde.</summary>
        <returns><see langword="true" />, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen einzelnen Cookiewert ab oder legt diesen fest.</summary>
        <value>Der Wert des Cookies. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird der Wert eines vorhandenen Cookies auf "abc123" festgelegt.  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Schlüssel-/Wert-Paaren ab, die in einem einzelnen Cookieobjekt enthalten sind.</summary>
        <value>Eine Auflistung von Cookiewerten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein neues Cookie erstellt, und es werden mehrere Werte hinzugefügt. Ein Beispiel zum Extrahieren mehrerer Werte aus einem Cookie finden <xref:System.Web.HttpCookie.HasKeys%2A>Sie unter.  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>
