<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0b8a19b6a199c554d52ce02b7384adc7a99b0d7" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f7c73-101">Stellt ein typsicheres Verfahren zum Erstellen und Bearbeiten einzelner HTTP-Cookies bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7c73-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-102">Die <xref:System.Web.HttpCookie> Klasse ruft ab und legt die Eigenschaften einzelner Cookies fest.</span><span class="sxs-lookup"><span data-stu-id="f7c73-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="f7c73-103">Die <xref:System.Web.HttpCookieCollection> -Klasse stellt Methoden zum Speichern, abrufen und Verwalten mehrerer Cookies bereit.</span><span class="sxs-lookup"><span data-stu-id="f7c73-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="f7c73-104">ASP.NET umfasst zwei systeminterne Cookie-Auflistungen.</span><span class="sxs-lookup"><span data-stu-id="f7c73-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="f7c73-105">Die bindungsauflistung erfolgt über die <xref:System.Web.HttpRequest.Cookies%2A> Auflistung von der <xref:System.Web.HttpRequest> Objekt enthält die Cookies, die vom Client an den Server übertragen der `Cookie` Header.</span><span class="sxs-lookup"><span data-stu-id="f7c73-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="f7c73-106">Die bindungsauflistung erfolgt über die <xref:System.Web.HttpResponse.Cookies%2A> Auflistung von der <xref:System.Web.HttpResponse> Objekt enthält neue Cookies auf dem Server erstellt und übermittelt an den Client in der `Set-Cookie` HTTP-Antwortheader.</span><span class="sxs-lookup"><span data-stu-id="f7c73-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7c73-107">Im folgenden Codebeispiel wird veranschaulicht, wie für ein Cookie mit dem Namen überprüfen `DateCookieExample` in die <xref:System.Web.HttpRequest> Objekt.</span><span class="sxs-lookup"><span data-stu-id="f7c73-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="f7c73-108">Wenn das Cookie nicht gefunden wird, wird es erstellt und hinzugefügt, die <xref:System.Web.HttpResponse> Objekt.</span><span class="sxs-lookup"><span data-stu-id="f7c73-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="f7c73-109">Das Cookie wird festgelegt, in 10 Minuten abläuft.</span><span class="sxs-lookup"><span data-stu-id="f7c73-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-110">Initialisiert eine neue Instanz der <see cref="T:System.Web.HttpCookie" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f7c73-111">Der Name des neuen Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-111">The name of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7c73-112">Erstellt und benennt ein neues Cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-112">Creates and names a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-113">Im folgenden Codebeispiel wird erstellt und benennt ein neues Cookie.</span><span class="sxs-lookup"><span data-stu-id="f7c73-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f7c73-114">Der Name des neuen Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-114">The name of the new cookie.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f7c73-115">Der Wert des neuen Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-115">The value of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7c73-116">Erstellt und benennt ein neues Cookie und weist diesem einen Wert zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-116">Creates, names, and assigns a value to a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-117">Im folgenden Codebeispiel wird erstellt, Namen, und legt den Wert für ein neues Cookie.</span><span class="sxs-lookup"><span data-stu-id="f7c73-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-118">Ruft die Domäne ab, der das Cookie zugeordnet werden soll, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-118">Gets or sets the domain to associate the cookie with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-119">Der Name der Domäne, der das Cookie zugeordnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-119">The name of the domain to associate the cookie with.</span>
          </span>
          <span data-ttu-id="f7c73-120">Der Standardwert ist die aktuelle Domäne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-120">The default value is the current domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-121">Festlegen der `Domain` Attribut beschränkt die Übertragung des Cookies an Clients, die eine Ressource aus dieser Domäne anfordern.</span><span class="sxs-lookup"><span data-stu-id="f7c73-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7c73-122">Im folgenden Codebeispiel wird die Domäne des Cookies.</span><span class="sxs-lookup"><span data-stu-id="f7c73-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-123">Ruft das Ablaufdatum und die Ablaufzeit für das Cookie ab, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-123">Gets or sets the expiration date and time for the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-124">Die Tageszeit (auf dem Client), zu der das Cookie abläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-124">The time of day (on the client) at which the cookie expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-125">Das folgende Codebeispiel legt die Ablaufzeit des Cookies auf 10 Minuten nach der aktuellen Uhrzeit fest.</span><span class="sxs-lookup"><span data-stu-id="f7c73-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-126">Ruft einen Wert ab, der angibt, ob ein Cookie über Unterschlüssel verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-126">Gets a value indicating whether a cookie has subkeys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-127">
            <see langword="true" />, wenn das Cookie über Unterschlüssel verfügt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-127">
              <see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f7c73-128">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-129">Das folgende Codebeispiel überprüft jedes Element einer Auflistung der Cookies für mehrere Werte.</span><span class="sxs-lookup"><span data-stu-id="f7c73-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="f7c73-130">Wenn ein Cookie <xref:System.Web.HttpCookie.HasKeys%2A> Eigenschaft `true`, gibt an, dass mehrere Werte vorhanden sind, in diesem Beispiel kopiert die Namen der Werte in ein Zeichenfolgenarray und die entsprechenden Werte in einem anderen Array von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="f7c73-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="f7c73-131">Ein Beispiel zum Erstellen mehrerer Werte für ein Cookie, finden Sie unter <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7c73-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-132">Ruft einen Wert ab, der angibt, ob ein clientseitiges Skript auf ein Cookie zugreifen kann, oder liegt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-133">
            <see langword="true" />, wenn das Cookie das <see langword="HttpOnly" />-Attribut besitzt und ein clientseitiges Skript nicht auf das Cookie zugreifen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-133">
              <see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f7c73-134">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-135">Microsoft Internet Explorer Version 6 Servicepack 1 und höher unterstützt eine Cookieeigenschaft <xref:System.Web.HttpCookie.HttpOnly%2A>, Cross-Site scripting Gefahren, die sich gestohlene Cookies ergeben unterstützen kann.</span><span class="sxs-lookup"><span data-stu-id="f7c73-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="f7c73-136">Gestohlene Cookies können enthalten vertrauliche Informationen, die den Benutzer an den Standort, z. B. die ASP.NET Session ID Formularauthentifizierungsticket, identifizieren und wiedergegeben werden können, von der Angreifer, um sich als Benutzer auszugeben oder vertraulichen Informationen zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="f7c73-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="f7c73-137">Wenn ein `HttpOnly` Cookie wird von einem kompatiblen Browser empfangen, es ist nicht auf clientseitiges Skript zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f7c73-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f7c73-138">Festlegen der <xref:System.Web.HttpCookie.HttpOnly%2A> Eigenschaft `true` wird nicht verhindert, könnte ein Angreifer Zugriff auf den Netzwerkkanal direkten Zugriff auf das Cookie.</span><span class="sxs-lookup"><span data-stu-id="f7c73-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="f7c73-139">Erwägen Sie, Secure Sockets Layer (SSL) um zu unterstützen, dies zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="f7c73-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="f7c73-140">Arbeitsstation Sicherheit ist außerdem wichtig, da ein böswilliger Benutzer ein Browserfenster öffnen oder ein Computer mit permanenten Cookies verwenden kann, um Zugriff auf eine Website mit einem legitimen Benutzer Identität zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="f7c73-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="f7c73-141">Weitere Informationen zu möglichen Angriffen und wie diese Eigenschaft kann minimiert werden können, finden Sie unter [abschwächen von Cross-Site Scripting mit nur für HTTP-Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="f7c73-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7c73-142">Im folgenden Codebeispiel wird veranschaulicht, wie zum Schreiben einer `HttpOnly` Cookie und gezeigt, wie sie nicht durch den Client über ECMAScript zugänglich ist.</span><span class="sxs-lookup"><span data-stu-id="f7c73-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f7c73-143">Der Schlüssel (Index) für den Wert des Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-143">The key (index) of the cookie value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7c73-144">Ruft eine Verknüpfung mit der <see cref="P:System.Web.HttpCookie.Values" />-Eigenschaft ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span>
          </span>
          <span data-ttu-id="f7c73-145">Diese Eigenschaft wird aus Gründen der Kompatibilität mit früheren Versionen von Active Server Pages (ASP) bereitgestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-146">Der Cookiewert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-146">The cookie value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-147">Ruft den Namen des Cookies ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-147">Gets or sets the name of a cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-148">Wenn durch den Konstruktor nicht anders angegeben, ist der Standardwert ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-149">Im folgenden Codebeispiel wird empfängt eine cookieauflistung vom Client in der `Cookie` Header und durchläuft die Auflistung, die ein Cookie mit dem angegebenen Namen gesucht.</span><span class="sxs-lookup"><span data-stu-id="f7c73-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-150">Ruft den virtuellen Pfad ab, der mit dem aktuellen Cookie übertragen werden soll, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-150">Gets or sets the virtual path to transmit with the current cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-151">Der virtuelle Pfad, der mit dem aktuellen Cookie übertragen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-151">The virtual path to transmit with the cookie.</span>
          </span>
          <span data-ttu-id="f7c73-152">Der Standard ist <see langword="/" />, was den Serverstamm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-152">The default is <see langword="/" />, which is the server root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-153">Die <xref:System.Web.HttpCookie.Path%2A> Eigenschaft erweitert die <xref:System.Web.HttpCookie.Domain%2A> Eigenschaft, um die bestimmte URL vollständig zu beschreiben, auf die das Cookie angewendet.</span><span class="sxs-lookup"><span data-stu-id="f7c73-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="f7c73-154">Beispielsweise in der URL http:/ www.microsoft.com/asp die Domäne www.microsoft.com und der Pfad/ASP dar.</span><span class="sxs-lookup"><span data-stu-id="f7c73-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7c73-155">Im folgenden Codebeispiel wird die <xref:System.Web.HttpCookie.Path%2A> Eigenschaft eines neuen Cookies.</span><span class="sxs-lookup"><span data-stu-id="f7c73-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-156">Ruft einen Wert ab, der angibt, ob das Cookie über Secure Sockets Layer (SSL) (d. h. ausschließlich über HTTPS) übertragen werden soll, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-156">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-157">
            <see langword="true" />, wenn das Cookie über eine SSL-Verbindung (HTTPS) übertragen werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-157">
              <see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f7c73-158">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-158">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-159">Um die Übertragung von Cookies mithilfe von SSL für eine gesamte Anwendung festzulegen, aktivieren Sie ihn in die Anwendung Konfigurationsdatei "Web.config", die sich im Stammverzeichnis der Anwendung befinden.</span><span class="sxs-lookup"><span data-stu-id="f7c73-159">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="f7c73-160">Weitere Informationen finden Sie unter [HttpCookies Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="f7c73-160">For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="f7c73-161">Zurückgeht programmgesteuert mithilfe der <xref:System.Web.HttpCookie.Secure%2A> Eigenschaftenüberschreibungswerte in der Datei "Web.config" festgelegt.</span><span class="sxs-lookup"><span data-stu-id="f7c73-161">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="f7c73-162">Beim Umgang mit vertraulichen Informationen ist es dringend empfohlen, dass Sie HTTPS-Protokoll mit SSL-Verschlüsselung verwenden.</span><span class="sxs-lookup"><span data-stu-id="f7c73-162">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="f7c73-163">SSL schützt vor Daten, die geändert wird (die Datenintegrität), schützt die Identität eines Benutzers (Vertraulichkeit) und stellt sicher, dass Daten vom erwarteten Client (Authentifizierung) stammen.</span><span class="sxs-lookup"><span data-stu-id="f7c73-163">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="f7c73-164">Weitere Informationen zu den Vorteilen der Verschlüsselung finden Sie unter [Kryptografiedienste](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="f7c73-164">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="f7c73-165">Weitere Informationen zum Konfigurieren von SSL auf einem Webserver (Internet Information Services, IIS) finden Sie unter [Konfigurieren von SSL auf einem Webserver oder eine Website](http://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="f7c73-165">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7c73-166">Das folgende Codebeispiel führt die Aktion, wenn das Cookie festgelegt ist, übertragen Sie die Verwendung von SSL.</span><span class="sxs-lookup"><span data-stu-id="f7c73-166">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-167">Bestimmt, ob dem Cookie die Beteiligung an der Zwischenspeicherung der Ausgabe erlaubt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-167">Determines whether the cookie is allowed to participate in output caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-168">
            <see langword="true" />, um anzugeben, dass die Zwischenspeicherung der Ausgabe nicht unterbunden wird für eine angegebene <see cref="T:System.Web.HttpResponse" />, die ein oder mehr ausgehende Cookies enthält; sonst <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-168">
              <see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7c73-169">Wenn eine bestimmte <xref:System.Web.HttpResponse> enthält eine oder mehrere ausgehende Cookies mit <xref:System.Web.HttpCookie.Shareable%2A> auf festgelegt ist `false` (Standardwert) Ausgabe Zwischenspeichern für die Antwort unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="f7c73-169">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="f7c73-170">Dies verhindert, dass Cookies, die potenziell vertrauliche Informationen nicht enthalten, in der Antwort zwischengespeichert und an mehrere Clients gesendet.</span><span class="sxs-lookup"><span data-stu-id="f7c73-170">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="f7c73-171">Damit wird eine Antwort mit Cookies zwischengespeichert werden soll, Konfigurieren von caching normalerweise für die Antwort, z. B. mit der `OutputCache` Direktive oder MVC [OutputCache]-Attribut an, und legen Sie alle ausgehenden Cookies haben <xref:System.Web.HttpCookie.Shareable%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="f7c73-171">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Web.HttpCookie&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="f7c73-172">Die Zeichenfolgendarstellung des Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-172">The string representation of a cookie.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f7c73-173">Wenn die Konvertierung erfolgreich durchgeführt wurde, enthält dies den <see cref="T:System.Web.HttpCookie" />-Wert, der dem in <paramref name="input" /> enthaltenen Cookie entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-173">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="f7c73-174">Wenn bei der Konvertierung ein Fehler aufgetreten ist, ist <paramref name="result" /><see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-174">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f7c73-175">Die Konvertierung schlägt fehl, wenn der <paramref name="input" />-Parameter <see langword="null" /> oder leer ist, oder wenn kein Cookiename in <paramref name="input" /> bestimmt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-175">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="f7c73-176">Der Wert dieses Parameters wird von der Methode überschrieben. Der Parameter wird vom Verweis übergeben und auf NULL festgelegt, sobald die Methode eingegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-176">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7c73-177">Konvertiert die angegebene Zeichenfolgendarstellung eines Cookies in deren <see cref="T:System.Web.HttpCookie" />-Entsprechung und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich ausgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-177">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7c73-178">
            <see langword="true" />, wenn <paramref name="input" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-178">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-179">Ruft einen einzelnen Cookiewert ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-179">Gets or sets an individual cookie value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-180">Der Wert des Cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-180">The value of the cookie.</span>
          </span>
          <span data-ttu-id="f7c73-181">Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-181">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-182">Das folgende Codebeispiel legt den Wert eines vorhandenen Cookies auf "abc123" fest.</span><span class="sxs-lookup"><span data-stu-id="f7c73-182">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7c73-183">Ruft eine Auflistung von Schlüssel-/Wert-Paaren ab, die in einem einzelnen Cookieobjekt enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-183">Gets a collection of key/value pairs that are contained within a single cookie object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7c73-184">Eine Auflistung von Cookiewerten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7c73-184">A collection of cookie values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7c73-185">Das folgende Codebeispiel erstellt ein neues Cookie und mehrere Werte hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="f7c73-185">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="f7c73-186">Ein Beispiel zum Extrahieren von mehreren Werten aus einem Cookie finden Sie unter <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="f7c73-186">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>