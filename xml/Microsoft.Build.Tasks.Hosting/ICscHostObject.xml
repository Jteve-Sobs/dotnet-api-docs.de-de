<Type Name="ICscHostObject" FullName="Microsoft.Build.Tasks.Hosting.ICscHostObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65f9462499d87bdf86967b98fe83a90c683bd44e" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910335" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICscHostObject : Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICscHostObject implements class Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICscHostObject&#xA;Implements ITaskHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICscHostObject : Microsoft::Build::Framework::ITaskHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8520CC4D-64DC-4855-BE3F-4C28CCE048EE")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="16443-101">Definiert eine Schnittstelle, die dem [Csc](http://msdn.microsoft.com/library/d8c19b36-f5ca-484b-afa6-8ff3b90e103a)-Task die Kommunikation mit der Host-IDE (Integrated Development Environment) ermöglicht.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16443-101">Defines an interface that allows the [Csc](http://msdn.microsoft.com/library/d8c19b36-f5ca-484b-afa6-8ff3b90e103a) task to communicate with the host integrated development environment (IDE).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16443-102">Diese Schnittstelle ermöglicht es dem `Csc` Aufgaben zum Kompilieren des Projekts die IDE statt Befehlszeilencompilern zuweisen.</span><span class="sxs-lookup"><span data-stu-id="16443-102">This interface allows the `Csc` task to delegate project compilation to the IDE rather than using command line compilers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginInitialization">
      <MemberSignature Language="C#" Value="public void BeginInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInitialization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16443-103">Startet die Initialisierung des <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-103">Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16443-104">Kompiliert das Projekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-104">Compiles the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-105">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-105">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitialization">
      <MemberSignature Language="C#" Value="public bool EndInitialization (out string errorMessage, out int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndInitialization([out] string&amp; errorMessage, [out] int32&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(System.String@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInitialization (ByRef errorMessage As String, ByRef errorCode As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndInitialization([Runtime::InteropServices::Out] System::String ^ % errorMessage, [Runtime::InteropServices::Out] int % errorCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String&amp;" RefType="out" />
        <Parameter Name="errorCode" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="errorMessage">
          <span data-ttu-id="16443-106">Die Fehlermeldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-106">The error message.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="16443-107">Der Fehlercode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-107">The error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-108">Beendet die Initialisierung des <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> mit der angegebenen Fehlermeldung und dem angegebenen Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-108">Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> with the specified error message and code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-109">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-109">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDesignTime">
      <MemberSignature Language="C#" Value="public bool IsDesignTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDesignTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDesignTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDesignTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16443-110">Gibt einen Wert zurück, der angibt, ob die integrierte Entwicklungsumgebung (IDE) sich derzeit im Entwurfszeitmodus befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-110">Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-111">
            <see langword="true" />, wenn sich die IDE derzeit im Entwurfsmodus befindet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-111">
              <see langword="true" /> if the IDE is currently in design time mode; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public bool IsUpToDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUpToDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpToDate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpToDate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16443-112">Gibt einen Wert zurück, der angibt, ob das kompilierte Projekt auf dem neuesten Stand ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-112">Returns a value indicating whether the compiled project is up-to-date.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-113">
            <see langword="true" />, wenn das kompilierte Projekt auf dem neuesten Stand ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-113">
              <see langword="true" /> if the compiled project is up-to-date; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAdditionalLibPaths">
      <MemberSignature Language="C#" Value="public bool SetAdditionalLibPaths (string[] additionalLibPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAdditionalLibPaths(string[] additionalLibPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAdditionalLibPaths (additionalLibPaths As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAdditionalLibPaths(cli::array &lt;System::String ^&gt; ^ additionalLibPaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalLibPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="additionalLibPaths">
          <span data-ttu-id="16443-114">Ein Array von Verzeichnissen, in denen nach Verweisen gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-114">An array of directories to search for references.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-115">Gibt zusätzliche Verzeichnisse an, in denen nach Verweisen gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-115">Specifies additional directories to search for references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-116">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-116">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAddModules">
      <MemberSignature Language="C#" Value="public bool SetAddModules (string[] addModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAddModules(string[] addModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAddModules (addModules As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAddModules(cli::array &lt;System::String ^&gt; ^ addModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addModules" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="addModules">
          <span data-ttu-id="16443-117">Ein Array von Modulen, die Bestandteil der Assembly sein sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-117">An array of modules to be part of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-118">Gibt mindestens Modul an, das Bestandteil dieser Assembly sein soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-118">Specifies one or more modules to be part of the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-119">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-119">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowUnsafeBlocks">
      <MemberSignature Language="C#" Value="public bool SetAllowUnsafeBlocks (bool allowUnsafeBlocks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAllowUnsafeBlocks(bool allowUnsafeBlocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAllowUnsafeBlocks (allowUnsafeBlocks As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAllowUnsafeBlocks(bool allowUnsafeBlocks);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowUnsafeBlocks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowUnsafeBlocks">
          <span data-ttu-id="16443-120">
            <see langword="true" />, um Code mit dem unsafe-Schlüsselwort zu kompilieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-120">
              <see langword="true" /> to allow code that uses the unsafe keyword to compile; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-121">Gibt einen Wert an, der angibt, ob Code mit dem <see langword="unsafe" />-Schlüsselwort kompiliert werden darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-121">Specifies a value indicating whether to allow code that uses the <see langword="unsafe" /> keyword to compile.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-122">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-122">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseAddress">
      <MemberSignature Language="C#" Value="public bool SetBaseAddress (string baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetBaseAddress(string baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBaseAddress (baseAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetBaseAddress(System::String ^ baseAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="16443-123">Die bevorzugte Basisadresse, unter der eine DLL geladen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-123">The preferred base address at which to load a DLL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-124">Gibt die bevorzugte Basisadresse an, unter der eine DLL geladen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-124">Specifies the preferred base address at which to load a DLL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-125">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-125">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCheckForOverflowUnderflow">
      <MemberSignature Language="C#" Value="public bool SetCheckForOverflowUnderflow (bool checkForOverflowUnderflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCheckForOverflowUnderflow (checkForOverflowUnderflow As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkForOverflowUnderflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="checkForOverflowUnderflow">
          <span data-ttu-id="16443-126">
            <see langword="true" />, um eine Ausnahme auszulösen, wenn Ganzzahlarithmetik zu einem Überlauf der Datentypgrenzen führt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-126">
              <see langword="true" /> to cause an exception when integer arithmetic overflows the bounds of the data type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-127">Gibt einen Wert an, der angibt, ob Ganzzahlarithmetik, die die Grenzen des Datentyps überschreitet, zur Laufzeit eine Ausnahme auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-127">Specifies a value indicating whether integer arithmetic that overflows the bounds of the data type causes an exception at run time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-128">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-128">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCodePage">
      <MemberSignature Language="C#" Value="public bool SetCodePage (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCodePage(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCodePage (codePage As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCodePage(int codePage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="16443-129">Die für alle Quellcodedateien in der Kompilierung zu verwendende Codepage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-129">The code page to use for all source code files in the compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-130">Gibt die für alle Quellcodedateien in der Kompilierung die zu verwendende Codepage an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-130">Specifies the code page to use for all source code files in the compilation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-131">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-131">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDebugType">
      <MemberSignature Language="C#" Value="public bool SetDebugType (string debugType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDebugType(string debugType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDebugType (debugType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDebugType(System::String ^ debugType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debugType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="debugType">
          <span data-ttu-id="16443-132">Der Debugtyp, der <see langword="full" /> oder <see langword="pdbonly" /> sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-132">The debug type, which can be <see langword="full" /> or <see langword="pdbonly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-133">Gibt den Debugtyp an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-133">Specifies the debug type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-134">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-134">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefineConstants">
      <MemberSignature Language="C#" Value="public bool SetDefineConstants (string defineConstants);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDefineConstants(string defineConstants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDefineConstants (defineConstants As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDefineConstants(System::String ^ defineConstants);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defineConstants" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defineConstants">
          <span data-ttu-id="16443-135">Die zu definierenden Präprozessorsymbole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-135">The preprocessor symbols to define.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-136">Gibt die zu definierenden Präprozessorsymbole an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-136">Specifies the preprocessor symbols to define.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-137">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-137">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelaySign">
      <MemberSignature Language="C#" Value="public bool SetDelaySign (bool delaySignExplicitlySet, bool delaySign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDelaySign(bool delaySignExplicitlySet, bool delaySign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDelaySign (delaySignExplicitlySet As Boolean, delaySign As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDelaySign(bool delaySignExplicitlySet, bool delaySign);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delaySignExplicitlySet" Type="System.Boolean" />
        <Parameter Name="delaySign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delaySignExplicitlySet">
          <span data-ttu-id="16443-138">
            <see langword="true" />, wenn der <see langword="DelaySign" />-Parameter ausdrücklich festgelegt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-138">
              <see langword="true" /> if the <see langword="DelaySign" /> parameter is explicitly set; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="delaySign">
          <span data-ttu-id="16443-139">
            <see langword="true" />, wenn eine vollständig signierte Assembly erstellt werden soll, <see langword="false" />, wenn nur der öffentliche Schlüssel in der Assembly abgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-139">
              <see langword="true" /> if you want to create a fully signed assembly; <see langword="false" /> if you only want to place the public key in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-140">Gibt einen Wert an, der festlegt, ob eine vollständig signierte Assembly erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-140">Specifies a value indicating whether to create a fully signed assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-141">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-141">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisabledWarnings">
      <MemberSignature Language="C#" Value="public bool SetDisabledWarnings (string disabledWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDisabledWarnings(string disabledWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisabledWarnings (disabledWarnings As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDisabledWarnings(System::String ^ disabledWarnings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disabledWarnings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="disabledWarnings">
          <span data-ttu-id="16443-142">Die Liste der zu deaktivierenden Warnungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-142">The list of warnings to disable.</span>
          </span>
          <span data-ttu-id="16443-143">Mehrere Warnungen werden durch Kommas getrennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-143">Multiple warnings are separated with a comma.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-144">Gibt die Liste der zu deaktivierenden Warnungen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-144">Specifies the list of warnings to disable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-145">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-145">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentationFile">
      <MemberSignature Language="C#" Value="public bool SetDocumentationFile (string documentationFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDocumentationFile(string documentationFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDocumentationFile (documentationFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDocumentationFile(System::String ^ documentationFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentationFile">
          <span data-ttu-id="16443-146">Eine Zeichenfolge, die den Namen der Datei enthält, in der die verarbeiteten Dokumentationskommentare gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-146">A string that contains the name of the file in which to save processed documentation comments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-147">Gibt die XML-Datei an, in der die verarbeiteten Dokumentationskommentare gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-147">Specifies the XML file in which to save processed documentation comments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-148">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-148">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEmitDebugInformation">
      <MemberSignature Language="C#" Value="public bool SetEmitDebugInformation (bool emitDebugInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEmitDebugInformation(bool emitDebugInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEmitDebugInformation (emitDebugInformation As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetEmitDebugInformation(bool emitDebugInformation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitDebugInformation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitDebugInformation">
          <span data-ttu-id="16443-149">
            <see langword="true" />, um Debuginformationen zu generieren und in einer PDB-Datei zu speichern, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-149">
              <see langword="true" /> to generate debugging information and place it in a .pdb file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-150">Gibt einen Wert an, der anzeigt, ob Debuginformationen generiert und in einer Programmdatenbankdatei (PDB-Datei) gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-150">Specifies a value indicating whether to generate debugging information and place it in a program database (.pdb) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-151">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-151">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorReport">
      <MemberSignature Language="C#" Value="public bool SetErrorReport (string errorReport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetErrorReport(string errorReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetErrorReport (errorReport As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetErrorReport(System::String ^ errorReport);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorReport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorReport">
          <span data-ttu-id="16443-152">Ein Wert, der bestimmt, wie Microsoft interne Compilerfehler gemeldet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-152">A value specifying how internal compiler errors are reported to Microsoft.</span>
          </span>
          <span data-ttu-id="16443-153">Dieser Wert kann <see langword="prompt" />, <see langword="send" /> oder <see langword="none" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-153">This value can be <see langword="prompt" />, <see langword="send" />, or <see langword="none" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-154">Gibt einen Wert an, der bestimmt, wie Microsoft interne Compilerfehler gemeldet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-154">Specifies a value that indicates how internal compiler errors are reported to Microsoft.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-155">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-155">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileAlignment">
      <MemberSignature Language="C#" Value="public bool SetFileAlignment (int fileAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetFileAlignment(int32 fileAlignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileAlignment (fileAlignment As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetFileAlignment(int fileAlignment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileAlignment" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileAlignment">
          <span data-ttu-id="16443-156">Die Größe der Abschnitte in der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-156">The size of sections in the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-157">Gibt die Größe der Abschnitte in der Ausgabedatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-157">Specifies the size of sections in the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-158">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-158">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGenerateFullPaths">
      <MemberSignature Language="C#" Value="public bool SetGenerateFullPaths (bool generateFullPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetGenerateFullPaths(bool generateFullPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGenerateFullPaths (generateFullPaths As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGenerateFullPaths(bool generateFullPaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateFullPaths" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generateFullPaths">
          <span data-ttu-id="16443-159">
            <see langword="true" />, um in der Compilerausgabe den absoluten Pfad zur Datei anzugeben. <see langword="false" />, um in der Compilerausgabe nur den Namen der Datei anzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-159">
              <see langword="true" /> specify the absolute path to the file in the compiler output; <see langword="false" /> to specify only the name of the file in the compiler output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-160">Gibt einen Wert an, der anzeigt, ob in der Compilerausgabe der absolute Pfad der Datei angegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-160">Specifies a value indicating whether to specify the absolute path to the file in the compiler output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-161">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-161">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyContainer">
      <MemberSignature Language="C#" Value="public bool SetKeyContainer (string keyContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyContainer(string keyContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyContainer (keyContainer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyContainer(System::String ^ keyContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyContainer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyContainer">
          <span data-ttu-id="16443-162">Der Name des kryptografischen Schlüsselcontainers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-162">The name of the cryptographic key container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-163">Gibt den Namen des kryptografischen Schlüsselcontainers an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-163">Specifies the name of the cryptographic key container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-164">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-164">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyFile">
      <MemberSignature Language="C#" Value="public bool SetKeyFile (string keyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyFile(string keyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyFile (keyFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyFile(System::String ^ keyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyFile">
          <span data-ttu-id="16443-165">Der Name der Datei mit dem kryptografischen Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-165">The name of the file containing the cryptographic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-166">Gibt den Dateinamen mit dem kryptografischen Schlüssel an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-166">Specifies the file name containing the cryptographic key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-167">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-167">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLangVersion">
      <MemberSignature Language="C#" Value="public bool SetLangVersion (string langVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLangVersion(string langVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLangVersion (langVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLangVersion(System::String ^ langVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="langVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="langVersion">
          <span data-ttu-id="16443-168">Die Version der zu verwendenden Sprache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-168">The version of the language to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-169">Gibt die Version der zu verwendenden Sprache an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-169">Specifies the version of the language to use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-170">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-170">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkResources">
      <MemberSignature Language="C#" Value="public bool SetLinkResources (Microsoft.Build.Framework.ITaskItem[] linkResources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLinkResources(class Microsoft.Build.Framework.ITaskItem[] linkResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLinkResources (linkResources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLinkResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ linkResources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkResources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="linkResources">
          <span data-ttu-id="16443-171">Die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Ressourcen, die mit der Ausgabedatei verknüpft werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-171">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to link to the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-172">Erstellt Links für die angegebenen [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Ressourcen in der Ausgabedatei. Die Ressourcendateien werden nicht in der Ausgabedatei gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-172">Creates links to the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources in the output file; the resource files are not placed in the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-173">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-173">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMainEntryPoint">
      <MemberSignature Language="C#" Value="public bool SetMainEntryPoint (string targetType, string mainEntryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMainEntryPoint(string targetType, string mainEntryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMainEntryPoint (targetType As String, mainEntryPoint As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetMainEntryPoint(System::String ^ targetType, System::String ^ mainEntryPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
        <Parameter Name="mainEntryPoint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="16443-174">Das Dateiformat der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-174">The file format of the output file.</span>
          </span>
          <span data-ttu-id="16443-175">Dieser Wert kann <see langword="library" />, <see langword="exe" />, <see langword="module" /> oder <see langword="winexe" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-175">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span>
          </span>
        </param>
        <param name="mainEntryPoint">
          <span data-ttu-id="16443-176">Der Speicherort der <see langword="Main" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-176">The location of the <see langword="Main" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-177">Gibt den Speicherort der <c>Main</c>-Methode an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-177">Specifies the location of the <c>Main</c> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-178">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-178">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModuleAssemblyName">
      <MemberSignature Language="C#" Value="public bool SetModuleAssemblyName (string moduleAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetModuleAssemblyName(string moduleAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetModuleAssemblyName (moduleAssemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetModuleAssemblyName(System::String ^ moduleAssemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleAssemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="moduleAssemblyName">
          <span data-ttu-id="16443-179">Eine Assembly, auf deren nicht öffentliche Typen ein .NET-Modul zugreifen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-179">An assembly whose non-public types a .netmodule can access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-180">Gibt eine Assembly an, auf deren nicht öffentliche Typen ein .NET-Modul zugreifen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-180">Specifies an assembly whose non-public types a .netmodule can access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-181">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-181">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoConfig">
      <MemberSignature Language="C#" Value="public bool SetNoConfig (bool noConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoConfig(bool noConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoConfig (noConfig As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoConfig(bool noConfig);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noConfig">
          <span data-ttu-id="16443-182">
            <see langword="true" />, um zu verhindern, dass der Compiler mit der Datei csc.rsp kompiliert, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-182">
              <see langword="true" /> to prevent the compiler from compiling with the csc.rsp file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-183">Gibt einen Wert an, der anzeigt, ob der Compiler an der Kompilierung mit der Datei „csc.rsp“ gehindert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-183">Specifies a value indicating whether to prevent the compiler from compiling with the csc.rsp file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-184">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-184">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStandardLib">
      <MemberSignature Language="C#" Value="public bool SetNoStandardLib (bool noStandardLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoStandardLib(bool noStandardLib) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoStandardLib (noStandardLib As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoStandardLib(bool noStandardLib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noStandardLib" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noStandardLib">
          <span data-ttu-id="16443-185">
            <see langword="true" />, um den Import von mscorlib.dll zu verhindern, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-185">
              <see langword="true" /> to prevent the import of mscorlib.dll; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-186">Legt einen Wert fest, der angibt, ob der Import von „mscorlib.dll“ verhindert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-186">Specifies a value indicating whether to prevent the import of mscorlib.dll.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-187">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-187">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptimize">
      <MemberSignature Language="C#" Value="public bool SetOptimize (bool optimize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptimize(bool optimize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptimize (optimize As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptimize(bool optimize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optimize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optimize">
          <span data-ttu-id="16443-188">
            <see langword="true" /> zum Aktivieren von Optimierungen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-188">
              <see langword="true" /> to enable optimizations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-189">Gibt einen Wert an, der angibt, ob Optimierungen aktiviert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-189">Specifies a value indicating whether to enable optimizations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-190">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-190">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputAssembly">
      <MemberSignature Language="C#" Value="public bool SetOutputAssembly (string outputAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOutputAssembly(string outputAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOutputAssembly (outputAssembly As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOutputAssembly(System::String ^ outputAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputAssembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputAssembly">
          <span data-ttu-id="16443-191">Der Name der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-191">The name of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-192">Gibt den Namen der Ausgabedatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-192">Specifies the name of the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-193">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-193">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPdbFile">
      <MemberSignature Language="C#" Value="public bool SetPdbFile (string pdbFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPdbFile(string pdbFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPdbFile (pdbFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPdbFile(System::String ^ pdbFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdbFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pdbFile">
          <span data-ttu-id="16443-194">Die PDB-Datei, in der generierte Debuginformationen gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-194">The .pdb file in which to place generated debugging information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-195">Gibt die Programmdatenbankdatei (PDB-Datei) an, in der generierte Debuginformationen gespeichert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-195">Specifies the program database (.pdb) file in which to place generated debugging information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-196">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-196">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatform">
      <MemberSignature Language="C#" Value="public bool SetPlatform (string platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatform(string platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatform (platform As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatform(System::String ^ platform);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platform">
          <span data-ttu-id="16443-197">Die Prozessorplattform, die das Ziel der Ausgabedatei darstellen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-197">The processor platform to be targeted by the output file.</span>
          </span>
          <span data-ttu-id="16443-198">Dieser Wert kann <see langword="x86" />, <see langword="x64" /> oder <see langword="anycpu" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-198">This value can be <see langword="x86" />, <see langword="x64" />, or <see langword="anycpu" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-199">Gibt die Prozessorplattform an, die das Ziel der Ausgabedatei darstellen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-199">Specifies the processor platform to be targeted by the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-200">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-200">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferences">
      <MemberSignature Language="C#" Value="public bool SetReferences (Microsoft.Build.Framework.ITaskItem[] references);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReferences(class Microsoft.Build.Framework.ITaskItem[] references) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetReferences (references As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetReferences(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ references);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="references" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="references">
          <span data-ttu-id="16443-201">Die Elemente, aus denen öffentliche Typinformationen in das aktuelle Projekt importiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-201">The items from which to import public type information into the current project.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-202">Gibt die Elemente an, aus denen öffentliche Typinformationen in das aktuelle Projekt importiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-202">Specifies the items from which to import public type information into the current project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-203">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-203">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResources">
      <MemberSignature Language="C#" Value="public bool SetResources (Microsoft.Build.Framework.ITaskItem[] resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResources(class Microsoft.Build.Framework.ITaskItem[] resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResources (resources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ resources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="resources">
          <span data-ttu-id="16443-204">Die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Ressourcen, die in die Ausgabedatei eingebettet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-204">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-205">Gibt die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Ressourcen an, die in die Ausgabedatei eingebettet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-205">Specifies the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-206">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-206">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResponseFiles">
      <MemberSignature Language="C#" Value="public bool SetResponseFiles (Microsoft.Build.Framework.ITaskItem[] responseFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResponseFiles(class Microsoft.Build.Framework.ITaskItem[] responseFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResponseFiles (responseFiles As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResponseFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ responseFiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="responseFiles">
          <span data-ttu-id="16443-207">Die Antwortdateien, die Befehle für den Compiler enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-207">The response files that contain commands for the compiler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-208">Gibt die Antwortdateien an, die Befehle für den Compiler enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-208">Specifies the response files that contain commands for the compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-209">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-209">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSources">
      <MemberSignature Language="C#" Value="public bool SetSources (Microsoft.Build.Framework.ITaskItem[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSources(class Microsoft.Build.Framework.ITaskItem[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSources (sources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="sources">
          <span data-ttu-id="16443-210">Mindestens eine Visual C#-Quelldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-210">One or more Visual C# source files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-211">Gibt mindestens eine Visual C#-Quelldatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-211">Specifies one or more Visual C# source files.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-212">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-212">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetType">
      <MemberSignature Language="C#" Value="public bool SetTargetType (string targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetType(string targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetType (targetType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetType(System::String ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType">
          <span data-ttu-id="16443-213">Das Dateiformat der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-213">The file format of the output file.</span>
          </span>
          <span data-ttu-id="16443-214">Dieser Wert kann <see langword="library" />, <see langword="exe" />, <see langword="module" /> oder <see langword="winexe" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-214">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-215">Gibt das Dateiformat der Ausgabedatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-215">Specifies the file format of the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-216">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-216">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetTreatWarningsAsErrors (bool treatWarningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTreatWarningsAsErrors (treatWarningsAsErrors As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="treatWarningsAsErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="treatWarningsAsErrors">
          <span data-ttu-id="16443-217">
            <see langword="true" />, um alle Warnungen als Fehler zu behandeln, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-217">
              <see langword="true" /> to treat all warnings as errors; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-218">Legt einen Wert fest, der angibt, ob alle Warnungen als Fehler behandelt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-218">Specifies a value indicating whether to treat all warnings as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-219">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-219">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningLevel">
      <MemberSignature Language="C#" Value="public bool SetWarningLevel (int warningLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningLevel(int32 warningLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningLevel (warningLevel As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningLevel(int warningLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="warningLevel">
          <span data-ttu-id="16443-220">Die Warnstufe von 0–4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-220">The warning level, from 0-4.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-221">Gibt die Warnstufe von 0–4 an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-221">Specifies the warning level, from 0-4.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-222">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-222">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsAsErrors (string warningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsAsErrors(string warningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsAsErrors (warningsAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsAsErrors(System::String ^ warningsAsErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsAsErrors">
          <span data-ttu-id="16443-223">Eine Liste mit Warnungen, die als Fehler behandelt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-223">A list of warnings to treat as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-224">Gibt eine Liste mit Warnungen an, die als Fehler behandelt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-224">Specifies a list of warnings to treat as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-225">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-225">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsNotAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsNotAsErrors (string warningsNotAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsNotAsErrors(string warningsNotAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsNotAsErrors (warningsNotAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsNotAsErrors(System::String ^ warningsNotAsErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsNotAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsNotAsErrors">
          <span data-ttu-id="16443-226">Eine Liste mit Warnungen, die nicht als Fehler behandelt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-226">A list of warnings that are not treated as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-227">Gibt eine Liste mit Warnungen an, die nicht als Fehler behandelt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-227">Specifies a list of warnings that are not treated as errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-228">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-228">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Icon">
      <MemberSignature Language="C#" Value="public bool SetWin32Icon (string win32Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Icon(string win32Icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Icon (win32Icon As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Icon(System::String ^ win32Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Icon" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Icon">
          <span data-ttu-id="16443-229">Die ICO-Datei, die in die Assembly eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-229">The .ico file to insert into the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-230">Gibt eine ICO-Datei an, die in die Assembly eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-230">Specifies an .ico file to insert into the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-231">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-231">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Resource">
      <MemberSignature Language="C#" Value="public bool SetWin32Resource (string win32Resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Resource(string win32Resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Resource (win32Resource As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Resource(System::String ^ win32Resource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Resource">
          <span data-ttu-id="16443-232">Eine Win32-Ressourcendatei (RES), die in die Ausgabedatei eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-232">A Win32 resource (.res) file to insert into the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16443-233">Gibt eine Win32-Ressourcendatei (RES) an, die in die Ausgabedatei eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-233">Specifies a Win32 resource (.res) file to insert into the output file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16443-234">
            <see langword="true" />, wenn die Methode erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16443-234">
              <see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>