<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af2078811c84a8b49a1ceb3a8f31ec5f35058b25" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32695074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2dc7c-101">Stellt Dienste zum Verwalten der Warteschlange von Arbeitsaufgaben für einen Thread bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2dc7c-101">Provides services for managing the queue of work items for a thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-102">Die <xref:System.Windows.Threading.Dispatcher> verwaltet eine priorisierte Warteschlange von Arbeitsaufgaben für einen bestimmten Thread.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="2dc7c-103">Wenn eine <xref:System.Windows.Threading.Dispatcher> wird erstellt in einem Thread wird nur <xref:System.Windows.Threading.Dispatcher> , dem Thread zugeordnet werden kann auch dann, wenn die <xref:System.Windows.Threading.Dispatcher> wird heruntergefahren.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="2dc7c-104">Wenn Sie versuchen, erhalten die <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> für den aktuellen Thread und einem <xref:System.Windows.Threading.Dispatcher> ist nicht mit dem Thread zugeordneten eine <xref:System.Windows.Threading.Dispatcher> erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="2dc7c-105">Ein <xref:System.Windows.Threading.Dispatcher> wird auch erstellt, bei der Erstellung einer <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="2dc7c-106">Wenn Sie erstellen eine <xref:System.Windows.Threading.Dispatcher> in einem Hintergrundthread werden sicher, dass der Verteiler Herunterfahren, bevor der Thread wird beendet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="2dc7c-107">Wenn eine <xref:System.Windows.Threading.Dispatcher> beendet wird, er kann nicht neu gestartet werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="2dc7c-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], <xref:System.Windows.Threading.DispatcherObject> kann nur zugegriffen werden, indem die <xref:System.Windows.Threading.Dispatcher> er zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="2dc7c-109">Beispielsweise kann kein Hintergrundthread aktualisiert den Inhalt des eine <xref:System.Windows.Controls.Button> zugeordneten der <xref:System.Windows.Threading.Dispatcher> auf die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Thread.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="2dc7c-110">In der Hintergrundthread, den Zugriff auf die <xref:System.Windows.Controls.ContentControl.Content%2A> Eigenschaft von der <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> zugeordnet der [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Thread.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="2dc7c-111">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-113">Der Vorgang wird hinzugefügt, in die Warteschlange des der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-114">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="2dc7c-115">Alle Methoden auf <xref:System.Windows.Threading.Dispatcher>, mit Ausnahme von <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, Freethread-sind.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="2dc7c-116">Objekte, die Ableitung <xref:System.Windows.Threading.DispatcherObject> Threadaffinität.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="2dc7c-117">Objekte, die Ableitung <xref:System.Windows.Freezable> sind Freethread-Wenn sie fixiert werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="2dc7c-118">Weitere Informationen finden Sie unter der [Übersicht über Freezable-Objekte](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2dc7c-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-119">Im folgende Beispiel wird gezeigt, wie an eine Operation auf eine <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="2dc7c-120">Der vollständige Quellcode dieses Beispiels, finden Sie unter [Singlethread-Anwendung mit der lang andauernde Berechnung Beispiel](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="2dc7c-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="2dc7c-121">Zuerst wird ein Delegat erstellt, die keine Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="2dc7c-122">Als Nächstes <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="2dc7c-123">Dieser Aufruf <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> akzeptiert zwei Parameter: die Priorität, die festgelegt wird, dass <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, und der Rückruf, der über eine Instanz des Delegaten übergeben wird `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-124">Führt eine Delegaten asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-124">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-126">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-126">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-127">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-127">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-128">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-128">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-130">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-130">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Gibt eine <xref:System.Windows.Threading.DispatcherOperation> -Objekt, das verwendet werden kann, um die Interaktion mit dem Delegaten, wenn der Delegat in der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="2dc7c-133">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-133">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-134">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-134">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-135">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-135">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-136">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-136">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-137">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-137">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-138">Wenn mehrere <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Aufrufe gleichzeitig <xref:System.Windows.Threading.DispatcherPriority>, werden sie in der Reihenfolge der Aufrufe wurden ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-138">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="2dc7c-139">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-139">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-140">Der Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-140">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-141">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-141">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-142">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-142">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-143">Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-143">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-144">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-144">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-145">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-145">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-146">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-146">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-147">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-147">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-148">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-148">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-149">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-149">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-152">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-152">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-153">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-153">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-154">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-154">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-156">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-156">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-157">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-157">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-158">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-158">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-159">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-159">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-160">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-160">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-161">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-161">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-162">Wenn mehrere <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Aufrufe gleichzeitig <xref:System.Windows.Threading.DispatcherPriority>, werden sie in der Reihenfolge der Aufrufe wurden ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-162">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="2dc7c-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Gibt eine <xref:System.Windows.Threading.DispatcherOperation> -Objekt, das verwendet werden kann, um die Interaktion mit dem Delegaten, wenn der Delegat in der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="2dc7c-164">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-164">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-165">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-165">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-166">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-166">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-167">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-167">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-168">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-168">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-171">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-171">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-172">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-172">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-173">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-173">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-175">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-175">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-176">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-176">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-177">Im folgende Beispiel wird gezeigt, wie an eine Operation auf eine <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-177">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="2dc7c-178">Der vollständige Quellcode dieses Beispiels, finden Sie unter [Singlethread-Anwendung mit der lang andauernde Berechnung Beispiel](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="2dc7c-178">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="2dc7c-179">Zuerst wird ein Delegat erstellt, die keine Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-179">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="2dc7c-180">Als Nächstes <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-180">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="2dc7c-181">Da jede <xref:System.Windows.Threading.DispatcherObject> verfügt über eine Eigenschaft, die zurückgibt der <xref:System.Windows.Threading.Dispatcher> zugeordnet ist, den gewünschten <xref:System.Windows.Threading.Dispatcher> erhalten, indem Sie Abfragen der <xref:System.Windows.Threading.DispatcherObject>, in diesem Fall eine <xref:System.Windows.Controls.Button> mit dem Namen `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-181">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="2dc7c-182">Der Aufruf von <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> akzeptiert zwei Parameter: die Priorität, die festgelegt wird, dass <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, und der Rückruf, der über eine Instanz des Delegaten übergeben wird `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-182">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-183">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-183">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-184">
            <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-184">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-185">Der Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-185">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-186">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-186">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-187">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-187">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-188">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-188">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-189">Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten und der angegebenen Priorität für den Thread aus, für den der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-189">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-190">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-190">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-191">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-191">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-192">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-192">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-193">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-193">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-194">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-194">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-195">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-195">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-198">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-198">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-199">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-199">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-200">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-200">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-202">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-202">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-203">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-203">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-204">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-204">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-205">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-205">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-206">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-206">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-207">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argument auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-207">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-208">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-208">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-209">`Arg` kann `null` Wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-209">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="2dc7c-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Gibt eine <xref:System.Windows.Threading.DispatcherOperation> -Objekt, das verwendet werden kann, um die Interaktion mit dem Delegaten, wenn der Delegat in der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="2dc7c-211">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-211">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-212">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-212">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-213">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-213">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-214">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-214">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-215">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-215">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-218">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-218">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-219">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-219">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-220">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-220">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-222">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-222">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-223">Wenn mehrere <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Aufrufe gleichzeitig <xref:System.Windows.Threading.DispatcherPriority>, werden sie in der Reihenfolge der Aufrufe wurden ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-223">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="2dc7c-224">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-224">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-225">Im folgende Beispiel wird gezeigt, wie an eine Operation auf eine <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-225">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="2dc7c-226">Zuerst wird ein Delegat erstellt, das ein Argument, in diesem Fall eine Zeichenfolge akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-226">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="2dc7c-227">Als Nächstes <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-227">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="2dc7c-228">Da jede <xref:System.Windows.Threading.DispatcherObject> verfügt über eine Eigenschaft, die zurückgibt der <xref:System.Windows.Threading.Dispatcher> zugeordnet ist, den gewünschten <xref:System.Windows.Threading.Dispatcher> erhalten, indem Sie Abfragen der <xref:System.Windows.Threading.DispatcherObject>, in diesem Fall eine <xref:System.Windows.Controls.Grid> mit dem Namen `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-228">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="2dc7c-229">Der Aufruf von <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> akzeptiert drei Parameter: die Priorität, die festgelegt wird, dass <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; der Rückruf, der über eine Instanz des Delegaten übergeben wird `OneArgDelegate`; und eine Zeichenfolge mit dem Namen `weather`, dies ist das Argument für den Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-229">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-230">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-230">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-231">
            <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-231">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-232">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-232">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-233">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-233">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-234">Das Objekt, das als Argument an die angegebene Methode übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-234">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-235">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-235">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-236">Führt den angegebenen Delegaten asynchron mit der angegebenen Priorität und dem angegebenen Argumentarray auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-236">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-237">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-237">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-238">Die `arg` Parameter möglich `null` Wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-238">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="2dc7c-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Gibt eine <xref:System.Windows.Threading.DispatcherOperation> -Objekt, das verwendet werden kann, um die Interaktion mit dem Delegaten, wenn der Delegat in der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="2dc7c-240">Die <xref:System.Windows.Threading.DispatcherOperation> zurückgegebenes Objekt <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> können auf verschiedene Weise für die Interaktion mit den angegebenen Delegaten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-240">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="2dc7c-241">Ändern der <xref:System.Windows.Threading.DispatcherPriority> des Delegaten entspricht ausstehende Ausführung im Ereignis in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-241">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-242">Entfernen den Delegaten aus der Ereigniswarteschlange.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-242">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="2dc7c-243">Es wird darauf gewartet, dass der Delegat zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-243">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="2dc7c-244">Abrufen des Werts, die der Delegat, nachdem er zurückgegeben ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-244">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="2dc7c-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> ist asynchron. aus diesem Grund gibt Steuerelement sofort an das aufrufende Objekt zurück, nachdem er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="2dc7c-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-247">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-247">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-248">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-248">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-249">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-249">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-251">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-251">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-252">Wenn mehrere <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Aufrufe gleichzeitig <xref:System.Windows.Threading.DispatcherPriority>, werden sie in der Reihenfolge der Aufrufe wurden ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-252">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="2dc7c-253">Wenn <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> aufgerufen wird, auf eine <xref:System.Windows.Threading.Dispatcher> , die heruntergefahren wurde, der Status-Eigenschaft des zurückgegebenen <xref:System.Windows.Threading.DispatcherOperation> festgelegt ist, um <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-253">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-254">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-254">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-255">
            <see cref="T:System.Windows.Threading.DispatcherPriority" /> ist keine gültige Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-255">
              <see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-256">Die Priorität, bei der mit dem Beenden des Verteilers begonnen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-256">The priority at which to begin shutting down the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-257">Initiiert ein asynchrones Beenden des <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-257">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> setzt uneingeschränkte Benutzeroberflächen-Berechtigungen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="2dc7c-259">Wenn die <xref:System.Windows.Threading.Dispatcher> zum Herunterfahren beginnt die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-259">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-260">Die <xref:System.Windows.Threading.Dispatcher> ist nicht vollständig heruntergefahren, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-260">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-261">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-261">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-262">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-262">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-263">für den Verteiler beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-263">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="2dc7c-264">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-264">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-265">Bestimmt, ob der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-265">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-266">
            <see langword="true" />, wenn der aufrufende Thread diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-266">
              <see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-267">Nur die <xref:System.Windows.Threading.Dispatcher> , die eine <xref:System.Windows.Threading.DispatcherObject> wird erstellt, auf auf das Objekt zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-267">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="2dc7c-268">Verwendung <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> auf das Objekt von einem anderen Thread zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-268">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="2dc7c-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> kann von jedem Thread aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="2dc7c-270">Der Unterschied zwischen <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> und <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> ist <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> gibt einen booleschen Wert, der angibt, ob der aufrufende Thread Zugriff auf die <xref:System.Windows.Threading.Dispatcher> und <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-270">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-271">Im folgenden Beispiel wird <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> zu bestimmen, ob ein Thread den Zugriff auf verfügt über eine <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-271">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="2dc7c-272">Der <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> Methode für die <xref:System.Windows.Threading.Dispatcher> zugeordneten der <xref:System.Windows.Controls.Button> wird aufgerufen, um den Zugriff auf den Thread zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-272">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="2dc7c-273">Verfügt der aufrufende Thread den Zugriff auf die <xref:System.Windows.Threading.Dispatcher>, die <xref:System.Windows.Controls.Button> wird aktualisiert, indem Sie den Zugriff auf die Mitglieder der der <xref:System.Windows.Controls.Button>ist, andernfalls ein Delegat, der akzeptiert eine <xref:System.Windows.Controls.Button> als Argument in platziert die <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-273">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="2dc7c-274">Die <xref:System.Windows.Threading.Dispatcher> delegiert die Arbeit aktualisieren die <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-274">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-275">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den derzeit ausgeführten Thread ab bzw. erstellt einen neuen, wenn dem Thread noch kein <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-275">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2dc7c-276">Der Verteiler, der dem aktuellen Thread zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-276">The dispatcher associated with the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-277">Wenn eine <xref:System.Windows.Threading.Dispatcher> ist nicht mit den aktuellen Thread verknüpft ein neues <xref:System.Windows.Threading.Dispatcher> erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-277">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="2dc7c-278">Dies ist bei der <xref:System.Windows.Threading.Dispatcher.FromThread%2A>-Methode nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-278">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="2dc7c-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> Gibt zurück, `null` besteht kein Verteiler den angegebenen Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-280">Deaktiviert Verarbeitung der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-280">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-281">Eine Struktur, mit der die Dispatcherverarbeitung wieder aktiviert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-281">A structure used to re-enable dispatcher processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-282">Deaktivieren von Verteiler, die Verarbeitung ist eine erweiterte Methode, die vorgesehen ist, um das Risiko von nicht verknüpfte Reentranz zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-282">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="2dc7c-283">Die Auswirkungen des Deaktivierens von Verarbeitung lauten wie folgt:</span><span class="sxs-lookup"><span data-stu-id="2dc7c-283">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="2dc7c-284">CLR-Sperren werden Nachrichten nicht intern Datapump.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-284">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="2dc7c-285"><xref:System.Windows.Threading.DispatcherFrame> Objekte dürfen nicht verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-285"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="2dc7c-286">Verarbeitung von Nachrichten ist nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-286">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="2dc7c-287">Die <xref:System.Windows.Threading.DispatcherProcessingDisabled> Datenstruktur, <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> zurückgegeben, wenn sie aufgerufen wird, können verwendet werden, um die Verarbeitung durch den Verteiler erneut zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-287">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="2dc7c-288">Aufrufen von <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> auf die <xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktur ermöglicht die Verarbeitung erneut.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-288">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="2dc7c-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> kann nur auf dem Thread aufgerufen werden der <xref:System.Windows.Threading.Dispatcher> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-290">Das folgende Beispiel veranschaulicht die Verarbeitung durch den Verteiler deaktivieren und erneutes Aktivieren Verarbeitung durch den Verteiler.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-290">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="2dc7c-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> wird aufgerufen, einem **mit** Anweisung.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="2dc7c-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Gibt eine <xref:System.Windows.Threading.DispatcherProcessingDisabled> -Struktur, die dem Objekt verwendet wird, um freigegeben sein, wenn die **mit** -block abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="2dc7c-293">Wenn <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> aufgerufen wird, auf die <xref:System.Windows.Threading.DispatcherProcessingDisabled> -Struktur, die Verarbeitung durch den Verteiler wird wieder aktiviert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-293">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-294">Anforderung zum Beenden aller Frames einschließlich geschachtelter Frames.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-294">Requests that all frames exit, including nested frames.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-295">für das Aufrufen dieser Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-295">for calling this method.</span>
          </span>
          <span data-ttu-id="2dc7c-296">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-296">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread">
          <span data-ttu-id="2dc7c-297">Der Thread, dessen <see cref="T:System.Windows.Threading.Dispatcher" /> abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-297">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-298">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> für den angegebenen Thread ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-298">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-299">Der Verteiler für <paramref name="thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-299">The dispatcher for <paramref name="thread" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-300">Wenn ein Verteiler nicht verfügbar für den angegebenen Thread ist `null` zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-300">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="2dc7c-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> erstellt keine <xref:System.Windows.Threading.Dispatcher> in einem Thread, der keinem <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="2dc7c-302">Ein neues <xref:System.Windows.Threading.Dispatcher> wird auf einen Thread, der noch nicht erstellt eine <xref:System.Windows.Threading.Dispatcher> beim Abrufen der <xref:System.Windows.Threading.Dispatcher> mithilfe der <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-302">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-303">Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abgeschlossen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-303">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2dc7c-304">
            <see langword="true" />, wenn der Verteiler die Beendigung abgeschlossen hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-304">
              <see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-305">Wenn die <xref:System.Windows.Threading.Dispatcher> zum Herunterfahren beginnt die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-305">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-306">Die <xref:System.Windows.Threading.Dispatcher> wird vollständig beendet, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-306">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-307">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-307">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-308">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-308">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-309">Bestimmt, ob der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-309">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2dc7c-310">
            <see langword="true" />, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> gerade beendet wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-310">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-311">Wenn die <xref:System.Windows.Threading.Dispatcher> zum Herunterfahren beginnt die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-311">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-312">Die <xref:System.Windows.Threading.Dispatcher> ist nicht vollständig heruntergefahren, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-312">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-313">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-313">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-314">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-314">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-315">Ruft die Auflistung von Hooks ab, die zusätzliche Ereignisinformationen zum <see cref="T:System.Windows.Threading.Dispatcher" /> bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-315">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2dc7c-316">Die Hooks, die diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-316">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-317">Die <xref:System.Windows.Threading.DispatcherHooks> Klasse enthält weitere Informationen über die <xref:System.Windows.Threading.Dispatcher>, z. B. wenn die <xref:System.Windows.Threading.Dispatcher> inaktiv ist oder wenn ein Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-317">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-318">zum Abrufen dieser Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-318">for getting this property.</span>
          </span>
          <span data-ttu-id="2dc7c-319">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-319">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-320">Führt den angegebenen Delegaten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-320">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-322">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-322">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-323">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-323">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-324">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-324">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-326">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-326">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-328">Im folgenden Beispiel wird ein Delegat auf eine <xref:System.Windows.Threading.Dispatcher> am <xref:System.Windows.Threading.DispatcherPriority.Normal> mit <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-328">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-329">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-329">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-330">Führt die angegebene <see cref="T:System.Action" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-330">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-331">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-331">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-332">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-332">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-333">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-333">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-334">Ein Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-334">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-335">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-335">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-336">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-336">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-337">Führt den angegebenen Delegaten synchron mit den angegebenen Argumenten für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-337">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-338">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-338">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-340">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-340">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-341">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-341">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-342">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-342">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-344">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-344">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-346">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-346">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-347">Ein Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-347">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-348">Führt den angegebenen Delegaten synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-348">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-349">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-349">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-351">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-351">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-352">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-352">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-353">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-353">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-355">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-355">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-357">Im folgenden Beispiel wird ein Delegat auf eine <xref:System.Windows.Threading.Dispatcher> am <xref:System.Windows.Threading.DispatcherPriority.Normal> mit <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-357">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dc7c-358">
            <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-358">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-359">
            <paramref name="priority" /> ist keine gültige Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-359">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-360">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-360">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-361">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-361">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-362">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-362">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-363">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-363">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-364">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-364">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-365">Ein Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-365">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-366">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-366">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-367">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-367">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-368">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-368">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-369">Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-369">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-370">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-370">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-372">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-372">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-373">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-373">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-374">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-374">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-376">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-376">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-378">Ein Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-378">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-379">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-379">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-380">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-380">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-381">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-381">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-382">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-382">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-383">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-383">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-385">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-385">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-386">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-386">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-387">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-387">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-389">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-389">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-391">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-391">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-392">Ein Delegat zu einer Methode, die ein Argument erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-392">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-393">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-393">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-394">Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-394">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-395">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-395">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-396">`Arg` kann `null` Wenn ein Argument nicht benötigt wird</span><span class="sxs-lookup"><span data-stu-id="2dc7c-396">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="2dc7c-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-398">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-398">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-399">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-399">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-400">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-400">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-402">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-402">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dc7c-404">
            <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-404">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-405">
            <paramref name="priority" /> ist keine gültige Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-405">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-406">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-406">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-407">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-407">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-408">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-408">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-409">Der Delegat zu einer Methode, die keine Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-409">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-410">Führt den angegebenen Delegaten synchron mit der angegebenen Priorität und dem angegebenen Timeoutwert auf dem Thread aus, in dem der <see cref="T:System.Windows.Threading.Dispatcher" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-410">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-411">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-411">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-413">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-413">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-414">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-414">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-415">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-415">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-417">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-417">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-419">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-419">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-420">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-420">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-421">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-421">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-422">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-422">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-423">Führt die angegebene <see cref="T:System.Action" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-423">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2dc7c-424">Ein Delegat für eine Methode, die in <c>args</c> angegebene Parameter akzeptiert und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-424">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-425">Die maximale Zeitspanne, die auf den Abschluss der Operation gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-425">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-426">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-426">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-427">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-427">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-428">Kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-428">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-429">Führt den angegebenen Delegaten in der angegebenen Zeitspanne mit der angegebenen Priorität und den angegebenen Argumenten synchron für den Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-429">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-430">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-430">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="2dc7c-432">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-432">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="2dc7c-433">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-433">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="2dc7c-434">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-434">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="2dc7c-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="2dc7c-436">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-436">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-438">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-438">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-439">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-439">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-440">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-440">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-441">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-441">An array of objects to pass as arguments to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-442">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-442">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-443">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-443">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-444">`Arg` kann `null` Wenn ein Argument nicht benötigt wird</span><span class="sxs-lookup"><span data-stu-id="2dc7c-444">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="2dc7c-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-446">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-446">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-447">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-447">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-448">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-448">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-450">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-450">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dc7c-452">
            <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-452">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-453">
            <paramref name="priority" /> ist keine gültige Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-453">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-454">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-454">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-455">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-455">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-456">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-456">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-457">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-457">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-458">Ein Objekt, das als Argument an die angegebene Methode übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-458">An object to pass as an argument to the given method.</span>
          </span>
          <span data-ttu-id="2dc7c-459">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-459">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-460">Führt den angegebenen Delegaten mit der angegebenen Priorität und dem angegebenen Argument synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-460">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-461">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-461">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-462">`Arg` kann `null` Wenn ein Argument nicht benötigt wird</span><span class="sxs-lookup"><span data-stu-id="2dc7c-462">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="2dc7c-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-464">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-464">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-465">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-465">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-466">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-466">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-468">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-468">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dc7c-470">
            <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-470">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-471">
            <paramref name="priority" /> ist keine gültige Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-471">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-472">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-472">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-473">Die Priorität, relativ zu den anderen anstehenden Operationen in der <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange, mit der die angegebene Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-473">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-474">Die maximale Zeit, die auf den Abschluss der Operation gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-474">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="2dc7c-475">Ein Delegat zu einer Methode, die mehrere Argumente erwartet und in die <see cref="T:System.Windows.Threading.Dispatcher" />-Ereigniswarteschlange gestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-475">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="2dc7c-476">Ein Objekt, das als Argument an die angegebene Methode übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-476">An object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2dc7c-477">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-477">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-478">Führt den angegebenen Delegaten mit der angegebenen Priorität und den angegebenen Argumenten synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-478">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-479">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-479">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-480">`Arg` kann `null` Wenn ein Argument nicht benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-480">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="2dc7c-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], Threads, der erstellt eine <xref:System.Windows.Threading.DispatcherObject> kann dieses Objekt zugreifen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="2dc7c-482">Z. B. ein Hintergrundthread, der aus dem Hauptbenutzeroberflächen-Thread eröffnet kann nicht den Inhalt des aktualisiert eine <xref:System.Windows.Controls.Button> , die im UI-Thread erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-482">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="2dc7c-483">In der Reihenfolge des Hintergrundthreads, die Content-Eigenschaft für den Zugriff auf die <xref:System.Windows.Controls.Button>, der Hintergrundthread die Verarbeitung zur delegieren muss die <xref:System.Windows.Threading.Dispatcher> im UI-Thread zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-483">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="2dc7c-484">Dies wird erreicht, indem Sie entweder <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-484">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="2dc7c-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist synchron und <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> asynchron ist.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="2dc7c-486">Der Vorgang wird hinzugefügt, auf die Ereigniswarteschlange von der <xref:System.Windows.Threading.Dispatcher> an der angegebenen <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-486">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="2dc7c-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> ist ein synchroner Vorgang. aus diesem Grund gibt Steuerelement nicht an das aufrufende Objekt erst zurück, nachdem der Rückruf zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2dc7c-488">
            <paramref name="priority" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-488">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-489">
            <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-489">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-490">
            <paramref name="method" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-490">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-491">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-491">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-492">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-492">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-493">Führt die angegebene <see cref="T:System.Func`1" /> synchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-493">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-494">Der Rückgabewert von `callback`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-494">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-495">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-495">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-496">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-496">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-497">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-497">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-498">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-498">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-499">Der Rückgabewert von `callback`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-499">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-500">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-500">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-501">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-501">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-502">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-502">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-503">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-503">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-504">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-504">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-505">Der Rückgabewert von `callback`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-505">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-506">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-506">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-507">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-507">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-508">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-508">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-509">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-509">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="2dc7c-510">Die minimale Zeitspanne, die auf den Start des Vorgangs gewartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-510">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-511">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-511">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-512">Der Rückgabewert von `callback`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-512">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-513">Führt den angegebenen Delegaten asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-513">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-514">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-514">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-515">Führt die angegebene <see cref="T:System.Action" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-515">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-516">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-516">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-517">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-517">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-518">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-518">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-519">Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-519">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-520">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2dc7c-521">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-521">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-522">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-523">Ein Objekt, das angibt, ob die Aktion abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-523">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-524">Führt die angegebene <see cref="T:System.Action" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-524">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-525">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-525">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-526">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-526">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-527">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-527">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-528">Führt die angegebene <see cref="T:System.Func`1" /> asynchron auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-528">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-529">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-530">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-530">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-531">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-531">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-532">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-532">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-533">Führt die angegebene <see cref="T:System.Func`1" /> asynchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-533">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-534">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-534">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2dc7c-535">Der Rückgabewerts des angegebenen Delegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-535">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="2dc7c-536">Ein Delegat, der über den Verteiler aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-536">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="2dc7c-537">Die Priorität, die bestimmt, in welcher Reihenfolge der angegebene Rückruf relativ zu den anderen ausstehenden Vorgängen in <see cref="T:System.Windows.Threading.Dispatcher" /> aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-537">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="2dc7c-538">Ein Objekt, das angibt, ob der Vorgang abgebrochen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-538">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-539">Führt die angegebene <see cref="T:System.Func`1" /> synchron mit der angegebenen Priorität auf dem Thread aus, dem der <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-539">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-540">Ein Objekt, das unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> zurückgegeben wird und für die Interaktion mit dem Delegaten verwendet werden kann, während im Delegaten die Ausführung einer Aufgabe in der Warteschlange steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-540">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-541">Initiiert die synchrone Beendigung des <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-541">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> setzt uneingeschränkte Benutzeroberflächen-Berechtigungen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="2dc7c-543">Wenn die <xref:System.Windows.Threading.Dispatcher> zum Herunterfahren beginnt die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-543">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-544">Die <xref:System.Windows.Threading.Dispatcher> ist nicht vollständig heruntergefahren, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-544">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-545">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-545">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-546">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-546">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-547">für den Verteiler beendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-547">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="2dc7c-548">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-548">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="2dc7c-549">Der Frame, den der Verteiler verarbeiten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-549">The frame for the dispatcher to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-550">Tritt in eine Ausführungsschleife ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-550">Enters an execute loop.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-551">Ein <xref:System.Windows.Threading.DispatcherFrame> stellt eine Schleife, die anstehende Arbeitsaufgaben verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-551">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="2dc7c-552">Der Verteiler verarbeitet die Warteschlange in einer Schleife.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-552">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="2dc7c-553">Die Schleife wird als Frame bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-553">The loop is referred to as a frame.</span></span>  <span data-ttu-id="2dc7c-554">Die ursprüngliche Schleife wird in der Regel durch Aufrufen von der Anwendung initiiert <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-554">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="2dc7c-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> Wechselt in einer Schleife, die vom Parameter dargestellten `frame`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="2dc7c-556">Bei jeder Iteration der Schleife die <xref:System.Windows.Threading.Dispatcher> prüft die <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> Eigenschaft auf die <xref:System.Windows.Threading.DispatcherFrame> Klasse, um zu bestimmen, ob die Schleife fortgesetzt werden soll oder ob er beendet werden sollte.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-556">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="2dc7c-557"><xref:System.Windows.Threading.DispatcherFrame> ermöglicht die <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> -Eigenschaft explizit festgelegt werden und berücksichtigt die <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> Eigenschaft auf die <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-557"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="2dc7c-558">Dies bedeutet, dass bei der <xref:System.Windows.Threading.Dispatcher> startet, beendet, Frames, die die standardmäßige <xref:System.Windows.Threading.DispatcherFrame> Implementierung wird beendet, wodurch alle geschachtelten Frames zu beenden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-558">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-559">Das folgende Beispiel zeigt, wie Sie eine <xref:System.Windows.Threading.DispatcherFrame> als ähnliche Ergebnisse erzielen die [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-559">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2dc7c-560">
            <paramref name="frame" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-560">
              <paramref name="frame" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2dc7c-561">
            <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> ist gleich <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-561">
              <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span>
          </span>
          <span data-ttu-id="2dc7c-562">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-562">-or-</span>
          </span>
          <span data-ttu-id="2dc7c-563">
            <paramref name="frame" /> wird auf einem anderen <see cref="T:System.Windows.Threading.Dispatcher" /> ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-563">
              <paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
          <span data-ttu-id="2dc7c-564">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-564">-or-</span>
          </span>
          <span data-ttu-id="2dc7c-565">Verteilerverarbeitung wurde deaktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-565">Dispatcher processing has been disabled.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-566">für betätigen einen Frame Ausführung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-566">for pushing an execution frame.</span>
          </span>
          <span data-ttu-id="2dc7c-567">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-567">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-568">Stellt den Hauptausführungsframe in die Ereigniswarteschlange von <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-568">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-569">Die <xref:System.Windows.Threading.Dispatcher> die Ereigniswarteschlange in einer Schleife verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-569">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="2dc7c-570">Die Schleife wird als Frame bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-570">The loop is referred to as a frame.</span></span>  <span data-ttu-id="2dc7c-571">Die ursprüngliche Schleife wird in der Regel durch Aufrufen von der Anwendung initiiert <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-571">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="2dc7c-572">Die Hauptausführungsframe wird fortgesetzt, bis die <xref:System.Windows.Threading.Dispatcher> heruntergefahren wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-572">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-573">Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung abschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-573">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-574">Wenn der Prozess des Herunterfahrens von einer <xref:System.Windows.Threading.Dispatcher> gestartet wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-574">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-575">Die <xref:System.Windows.Threading.Dispatcher> wird vollständig beendet, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-575">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-576">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-576">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-577">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-577">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-578">Tritt ein, wenn der <see cref="T:System.Windows.Threading.Dispatcher" /> die Beendigung beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-578">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-579">Wenn der Prozess des Herunterfahrens von einer <xref:System.Windows.Threading.Dispatcher> gestartet wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> Ereignis wird ausgelöst, und <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-579">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-580">Die <xref:System.Windows.Threading.Dispatcher> wird vollständig beendet, bis die Ereigniswarteschlange abgearbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-580">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="2dc7c-581">Nach Abschluss der Verteiler heruntergefahren wird, die <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> Ereignis wird ausgelöst, und die <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-581">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="2dc7c-582">Nachdem der Prozess des Herunterfahrens eingeleitet wurde, werden alle anstehenden Arbeitsaufgaben Elemente in der Warteschlange abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-582">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-583">Ruft den Thread ab, dem dieser <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-583">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2dc7c-584">Der Thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-584">The thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-585">Tritt ein, wenn eine Threadausnahme ausgelöst und während der Ausführung eines Delegaten mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> nicht abgefangen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-585">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-586">Dieses Ereignis wird ausgelöst, wenn eine Ausnahme, die ausgelöst wurde, während der Ausführung eines Delegaten von <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> nicht abgefangen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-586">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="2dc7c-587">Ein Handler kann die Ausnahme als behandelt markiert, die interne Ausnahmehandler hindert aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-587">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="2dc7c-588">Ereignishandler für dieses Ereignis müssen mit großer Sorgfalt zur Vermeidung der Erstellung der sekundären Ausnahmen und zum Abfangen, die auftreten, geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-588">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="2dc7c-589">Es wird empfohlen, um zu vermeiden, belegen von Speicher oder ressourcenintensiven Operationen im Handler durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-589">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="2dc7c-590">Die <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Ereignis bietet eine Möglichkeit zum Auslösen der <xref:System.Windows.Threading.Dispatcher.UnhandledException> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-590">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="2dc7c-591">Die <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Ereignis wird zuerst ausgelöst und, wenn <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> auf die <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> auf festgelegt ist `false`, die <xref:System.Windows.Threading.Dispatcher.UnhandledException> -Ereignis wird nicht ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-591">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-592">Tritt ein, wenn eine Threadausnahme ausgelöst und nicht abgefangen wird, während ein Delegat mit <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> oder <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> ausgeführt wird und sich in der Filterstufe befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-592">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-593">Dieses Ereignis wird ausgelöst, während der Phase Filter für eine Ausnahme, die ausgelöst wird, während der Ausführung eines Delegaten mithilfe von <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> und nicht abgefangen wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-593">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="2dc7c-594">Die Aufrufliste wird nicht entladen an dieser Stelle (erste Chance Ausnahme).</span><span class="sxs-lookup"><span data-stu-id="2dc7c-594">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="2dc7c-595">Ereignishandler für dieses Ereignis müssen mit großer Sorgfalt zur Vermeidung der Erstellung der sekundären Ausnahmen und zum Abfangen, die auftreten, geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-595">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="2dc7c-596">Es wird empfohlen, um zu vermeiden, belegen von Speicher oder ressourcenintensiven Operationen im Handler durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-596">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="2dc7c-597">Die <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Ereignis bietet eine Möglichkeit zum Auslösen der <xref:System.Windows.Threading.Dispatcher.UnhandledException> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-597">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="2dc7c-598">Die <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> Ereignis wird zuerst ausgelöst und, wenn <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> auf die <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> auf festgelegt ist `false`, die <xref:System.Windows.Threading.Dispatcher.UnhandledException> -Ereignis wird nicht ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-598">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2dc7c-599">für das Hinzufügen oder entfernen einen Handler für dieses Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-599">for adding or removing a handler for this event.</span>
          </span>
          <span data-ttu-id="2dc7c-600">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-600">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-601">Die zu überprüfende Priorität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-601">The priority to check.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="2dc7c-602">Eine Zeichenfolge, die von der Ausnahme zurückgegeben wird, die auftritt, wenn die Priorität ungültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-602">A string that will be returned by the exception that occurs if the priority is invalid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-603">Ermittelt, ob die angegebene <see cref="T:System.Windows.Threading.DispatcherPriority" /> eine gültige Priorität ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-603">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2dc7c-604">
            <paramref name="priority" /> ist kein gültiger <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-604">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-605">Bestimmt, ob der aufrufende Thread auf dieses <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-605">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-606">Nur der Thread den <xref:System.Windows.Threading.Dispatcher> wird erstellt, auf kann zugegriffen werden, die <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-606">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="2dc7c-607">Diese Methode ist öffentlich. Jeder Thread kann daher überprüfen, um festzustellen, ob sie Zugriff auf hat die <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-607">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="2dc7c-608">Der Unterschied zwischen <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> und <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> ist <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> gibt einen booleschen Wert zurück, wenn der aufrufende Thread keinen Zugriff auf die <xref:System.Windows.Threading.Dispatcher> und <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-608">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc7c-609">Im folgenden Beispiel wird <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> bestimmen, ob ein Thread den Zugriff auf den Thread verfügt, die eine <xref:System.Windows.Controls.Button> erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-609">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="2dc7c-610">Die Methode nimmt ein Objekt als Argument, das in umgewandelt wird eine <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-610">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="2dc7c-611">Die <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> Methode für die <xref:System.Windows.Threading.Dispatcher> von der <xref:System.Windows.Controls.Button> wird aufgerufen, um den Zugriff auf den Thread zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-611">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="2dc7c-612">Verfügt der aufrufende Thread den Zugriff auf die <xref:System.Windows.Threading.Dispatcher>, die <xref:System.Windows.Controls.Button> wird aktualisiert, indem Sie nur Zugriff auf die Mitglieder der <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-612">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="2dc7c-613">Wenn der aufrufende Thread nicht über Zugriff verfügt, wird eine <xref:System.InvalidOperationException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-613">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="2dc7c-614">In diesem Beispiel fängt die Ausnahme ab und legt einen Delegaten, die akzeptiert eine <xref:System.Windows.Controls.Button> als Argument, auf die <xref:System.Windows.Threading.Dispatcher> von der <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-614">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="2dc7c-615">Dies <xref:System.Windows.Threading.Dispatcher> kommt die Arbeit aktualisieren die <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-615">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2dc7c-616">Der aufrufende Thread kann nicht auf diesen <see cref="T:System.Windows.Threading.Dispatcher" /> zugreifen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-616">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-617">Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-617">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2dc7c-618">Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-618">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-619">Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-619">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-620">Diese Methode bietet eine Möglichkeit, ausführungssteuerung an den aktuellen Verteiler vorübergehend freigegeben, sodass es andere arbeiten, wie z. B. andere Ereignisse verarbeiten durchführen kann.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-620">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="2dc7c-621">Verwenden der `await`, oder `Await` in Visual Basic Operator für den Rückgabewert, um die Steuerung an den aktuellen Verteiler zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-621">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="2dc7c-622">Verwenden Sie diese Methode, wenn möchten, Ihre app zu ermöglichen, um Ereignisse zu verarbeiten, während Ihre app sehr viel Arbeit an der UI-Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-622">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="2dc7c-623">Beispielsweise können Sie diese Methode in einer Schleife langer verwenden, die ein Steuerelement aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-623">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="2dc7c-624">Diese Methode entspricht dem Aufrufen der <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> -Methode und übergeben <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-624">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="2dc7c-625">Die Priorität, mit der die Fortsetzung geplant werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-625">The priority at which to schedule the continuation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2dc7c-626">Erstellt ein Awaitable-Objekt, welches ansynchron das Steuerelement an den aktuellen Verteiler zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-626">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
          <span data-ttu-id="2dc7c-627">Die Arbeit, welche auftritt, wenn das Steuerelement an den Code zurückgibt, der auf das Ergebnis dieser Methode wartet, die mit der angegebenen Priorität geplant wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-627">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2dc7c-628">Ein awaitable-Objekt, das asynchron dem aktuellen Verteiler Steuerelemente zurückgibt und dem Verteiler die Gelegenheit gibt, andere Ereignisse zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2dc7c-628">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc7c-629">Diese Methode bietet eine Möglichkeit, ausführungssteuerung an den aktuellen Verteiler vorübergehend freigegeben, sodass es andere arbeiten, wie z. B. andere Ereignisse verarbeiten durchführen kann.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-629">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="2dc7c-630">Verwenden der `await`, oder `Await` in Visual Basic Operator für den Rückgabewert, um die Steuerung an den aktuellen Verteiler zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-630">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="2dc7c-631">Verwenden Sie diese Methode, wenn möchten, Ihre app zu ermöglichen, um Ereignisse zu verarbeiten, während Ihre app sehr viel Arbeit an der UI-Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-631">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="2dc7c-632">Beispielsweise können Sie diese Methode in einer Schleife langer verwenden, die ein Steuerelement aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="2dc7c-632">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>