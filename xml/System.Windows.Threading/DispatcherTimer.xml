<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b13df5930105e07658e1fd3307f878c7d81eb1a" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83446901" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <TypeSignature Language="F#" Value="type DispatcherTimer = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="00a7f-101">Ein Zeitgeber, der in die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange integriert ist, die in einem festgelegten Zeitintervall und mit einer festgelegten Priorität verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-102">Der <xref:System.Windows.Threading.DispatcherTimer> wird am Anfang jeder <xref:System.Windows.Threading.Dispatcher> Schleife erneut ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="00a7f-103">Es ist nicht garantiert, dass Timer genau ausgeführt werden, wenn das Zeitintervall eintritt, aber Sie werden garantiert nicht vor dem Auftreten des Zeitintervalls ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="00a7f-104">Dies liegt daran, dass <xref:System.Windows.Threading.DispatcherTimer> Vorgänge wie bei anderen Vorgängen in der <xref:System.Windows.Threading.Dispatcher> Warteschlange platziert werden.</span><span class="sxs-lookup"><span data-stu-id="00a7f-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="00a7f-105">Wenn der <xref:System.Windows.Threading.DispatcherTimer>-Vorgang ausgeführt wird, hängt von den anderen Aufträgen in der Warteschlange und ihren Prioritäten ab.</span><span class="sxs-lookup"><span data-stu-id="00a7f-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="00a7f-106">Wenn eine <xref:System.Timers.Timer?displayProperty=nameWithType> in einer [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Anwendung verwendet wird, sollten Sie beachten, dass die <xref:System.Timers.Timer?displayProperty=nameWithType> in einem anderen Thread ausgeführt wird als der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Thread.</span><span class="sxs-lookup"><span data-stu-id="00a7f-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread than the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="00a7f-107">Um auf Objekte im [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Thread zuzugreifen, ist es erforderlich, den Vorgang mit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>auf dem <xref:System.Windows.Threading.Dispatcher> des [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Threads zu veröffentlichen.</span><span class="sxs-lookup"><span data-stu-id="00a7f-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="00a7f-108">Gründe für die Verwendung einer <xref:System.Windows.Threading.DispatcherTimer> im Gegensatz zu einer <xref:System.Timers.Timer?displayProperty=nameWithType> sind, dass die <xref:System.Windows.Threading.DispatcherTimer> im gleichen Thread wie die <xref:System.Windows.Threading.Dispatcher> ausgeführt wird und ein <xref:System.Windows.Threading.DispatcherPriority> für den <xref:System.Windows.Threading.DispatcherTimer>festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="00a7f-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> as opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="00a7f-109">Ein <xref:System.Windows.Threading.DispatcherTimer> behält ein Objekt immer dann bei, wenn die Methoden des Objekts an den Timer gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="00a7f-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="00a7f-110">Im folgenden Beispiel wird eine <xref:System.Windows.Threading.DispatcherTimer> erstellt, die den Inhalt einer <xref:System.Windows.Controls.Label> aktualisiert und die <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>-Methode auf dem <xref:System.Windows.Input.CommandManager>aufruft.</span><span class="sxs-lookup"><span data-stu-id="00a7f-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="00a7f-111">Ein <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="00a7f-112">Der Ereignishandler `dispatcherTimer_Tick` dem <xref:System.Windows.Threading.DispatcherTimer.Tick>-Ereignis von `dispatcherTimer`hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="00a7f-113">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> wird mit einem <xref:System.Windows.Duration.TimeSpan%2A>-Objekt auf 1 Sekunde festgelegt, und der Timer wird gestartet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="00a7f-114">Der <xref:System.Windows.Threading.DispatcherTimer.Tick>-Ereignishandler aktualisiert eine <xref:System.Windows.Controls.Label>, die die aktuelle Sekunde anzeigt, und ruft <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> auf der <xref:System.Windows.Input.CommandManager>auf.</span><span class="sxs-lookup"><span data-stu-id="00a7f-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00a7f-115">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a7f-116">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-117"><xref:System.Windows.Threading.DispatcherTimer> wird auf der <xref:System.Windows.Threading.Dispatcher> des aktuellen Threads mit <xref:System.Windows.Threading.DispatcherPriority.Background> Priorität ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="00a7f-118">Um eine andere <xref:System.Windows.Threading.Dispatcher>anzugeben, verwenden Sie den folgenden Konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="00a7f-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer priority" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="00a7f-119">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="00a7f-119">The priority at which to invoke the timer.</span></span></param>
        <summary><span data-ttu-id="00a7f-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die Zeitgeberereignisse mit der angegebenen Priorität verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-121"><xref:System.Windows.Threading.DispatcherTimer> wird auf der <xref:System.Windows.Threading.Dispatcher> des aktuellen Threads ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="00a7f-122">Um eine andere <xref:System.Windows.Threading.Dispatcher>anzugeben, verwenden Sie den folgenden Konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span><span class="sxs-lookup"><span data-stu-id="00a7f-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority, dispatcher As Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (priority, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="00a7f-123">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="00a7f-123">The priority at which to invoke the timer.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="00a7f-124">Der Verteiler, dem der Zeitgeber zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="00a7f-124">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="00a7f-125">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die im angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> mit der angegebenen Priorität ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00a7f-126"><paramref name="dispatcher" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="00a7f-126"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As TimeSpan, priority As DispatcherPriority, callback As EventHandler, dispatcher As Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : TimeSpan * System.Windows.Threading.DispatcherPriority * EventHandler * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (interval, priority, callback, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="00a7f-127">Der Zeitraum zwischen Ticks.</span><span class="sxs-lookup"><span data-stu-id="00a7f-127">The period of time between ticks.</span></span></param>
        <param name="priority"><span data-ttu-id="00a7f-128">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="00a7f-128">The priority at which to invoke the timer.</span></span></param>
        <param name="callback"><span data-ttu-id="00a7f-129">Der Ereignishandler, der beim Eintreten des <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />-Ereignisses aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="00a7f-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="00a7f-130">Der Verteiler, dem der Zeitgeber zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="00a7f-130">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="00a7f-131">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die das angegebene Zeitintervall, die angegebene Priorität, den angegebenen Ereignishandler und den angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00a7f-132"><paramref name="callback" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="00a7f-132"><paramref name="callback" /> is <see langword="null" />.</span></span>

<span data-ttu-id="00a7f-133">Oder</span><span class="sxs-lookup"><span data-stu-id="00a7f-133">-or-</span></span>

<span data-ttu-id="00a7f-134"><paramref name="dispatcher" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="00a7f-134"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00a7f-135"><paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-135"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a7f-136">Ruft den diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordneten <see cref="T:System.Windows.Threading.DispatcherTimer" /> ab.</span><span class="sxs-lookup"><span data-stu-id="00a7f-136">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <value><span data-ttu-id="00a7f-137">Der Verteiler.</span><span class="sxs-lookup"><span data-stu-id="00a7f-137">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-138">Die <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A>-Eigenschaft wird bei der Erstellung des <xref:System.Windows.Threading.DispatcherTimer> Objekts bestimmt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-138">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="00a7f-139">Die <xref:System.Windows.Threading.Dispatcher>-Eigenschaft wird zum Zeitpunkt der Erstellung auf die aktuelle <xref:System.Windows.Threading.Dispatcher> festgelegt, es sei denn, es wird eine andere <xref:System.Windows.Threading.Dispatcher> angegeben.</span><span class="sxs-lookup"><span data-stu-id="00a7f-139">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : TimeSpan with get, set" Usage="System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a7f-140">Ruft den Zeitraum zwischen den Ticks des Zeitgebers ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="00a7f-140">Gets or sets the period of time between timer ticks.</span></span></summary>
        <value><span data-ttu-id="00a7f-141">Der Zeitraum zwischen Ticks.</span><span class="sxs-lookup"><span data-stu-id="00a7f-141">The period of time between ticks.</span></span> <span data-ttu-id="00a7f-142">Der Standardwert ist „00:00:00“.</span><span class="sxs-lookup"><span data-stu-id="00a7f-142">The default is 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-143">Es ist nicht garantiert, dass Timer genau ausgeführt werden, wenn das Zeitintervall eintritt, aber Sie werden garantiert nicht vor dem Auftreten des Zeitintervalls ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-143">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="00a7f-144">Dies liegt daran, dass <xref:System.Windows.Threading.DispatcherTimer> Vorgänge wie bei anderen Vorgängen in der <xref:System.Windows.Threading.Dispatcher> Warteschlange platziert werden.</span><span class="sxs-lookup"><span data-stu-id="00a7f-144">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="00a7f-145">Wenn der <xref:System.Windows.Threading.DispatcherTimer>-Vorgang ausgeführt wird, hängt von den anderen Aufträgen in der Warteschlange und ihren Prioritäten ab.</span><span class="sxs-lookup"><span data-stu-id="00a7f-145">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="00a7f-146">Im folgenden Beispiel wird eine <xref:System.Windows.Threading.DispatcherTimer>erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-146">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="00a7f-147">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-147">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="00a7f-148">Der Ereignishandler `dispatcherTimer_Tick` dem <xref:System.Windows.Threading.DispatcherTimer.Tick>-Ereignis hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-148">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="00a7f-149">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> wird mit einem <xref:System.TimeSpan>-Objekt auf 1 Sekunde festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-149">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="00a7f-150"><paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" /> Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="00a7f-150"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a7f-151">Ruft einen Wert ab, mit dem angegeben wird, ob der Zeitgeber ausgeführt wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="00a7f-151">Gets or sets a value that indicates whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="00a7f-152"><see langword="true" />, wenn der Zeitgeber aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-152"><see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="00a7f-153">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> muss auf `true` festgelegt werden, damit das <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="00a7f-155">Durch Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Start%2A> wird <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-155">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="00a7f-156">Durch Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> wird <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-156">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="00a7f-157">Im folgenden Beispiel wird eine <xref:System.Windows.Threading.DispatcherTimer>erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-157">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="00a7f-158">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-158">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="00a7f-159">Der Ereignishandler `dispatcherTimer_Tick` dem <xref:System.Windows.Threading.DispatcherTimer.Tick>-Ereignis hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-159">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="00a7f-160">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> wird mit einem <xref:System.TimeSpan>-Objekt auf 1 Sekunde festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-160">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="dispatcherTimer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a7f-161">Startet den <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-161">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-162">Wenn Sie <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false` festlegen, wenn der Timer gestartet wird, wird der Timer angehalten.</span><span class="sxs-lookup"><span data-stu-id="00a7f-162">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="00a7f-163">Wenn Sie <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true` festlegen, wenn der Timer beendet wird, wird der Zeitgeber gestartet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-163">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="00a7f-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> legt <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="00a7f-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="00a7f-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> setzt den Timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>zurück.</span><span class="sxs-lookup"><span data-stu-id="00a7f-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a7f-166">Im folgenden Beispiel wird eine <xref:System.Windows.Threading.DispatcherTimer>erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-166">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="00a7f-167">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-167">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="00a7f-168">Der Ereignishandler `dispatcherTimer_Tick` dem <xref:System.Windows.Threading.DispatcherTimer.Tick>-Ereignis hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="00a7f-168">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="00a7f-169">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> wird mit einem <xref:System.Windows.Duration.TimeSpan%2A>-Objekt auf 1 Sekunde festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-169">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="dispatcherTimer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a7f-170">Hält den <see cref="T:System.Windows.Threading.DispatcherTimer" /> an.</span><span class="sxs-lookup"><span data-stu-id="00a7f-170">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a7f-171">Wenn Sie <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false` festlegen, wenn der Timer gestartet wird, wird der Timer angehalten.</span><span class="sxs-lookup"><span data-stu-id="00a7f-171">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="00a7f-172">Wenn Sie <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true` festlegen, wenn der Timer beendet wird, wird der Zeitgeber gestartet.</span><span class="sxs-lookup"><span data-stu-id="00a7f-172">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="00a7f-173">Durch Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> wird <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-173">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a7f-174">Ruft ein benutzerdefiniertes Datenobjekt ab oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="00a7f-174">Gets or sets a user-defined data object.</span></span></summary>
        <value><span data-ttu-id="00a7f-175">Die benutzerdefinierten Daten.</span><span class="sxs-lookup"><span data-stu-id="00a7f-175">The user-defined data.</span></span>  <span data-ttu-id="00a7f-176">Der Standardwert lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="00a7f-176">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a7f-177">Tritt auf, wenn das Zeitgeberintervall verstrichen ist.</span><span class="sxs-lookup"><span data-stu-id="00a7f-177">Occurs when the timer interval has elapsed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00a7f-178">Im folgenden Beispiel wird ein <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignishandler erstellt.</span><span class="sxs-lookup"><span data-stu-id="00a7f-178">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="00a7f-179">Der-Ereignishandler aktualisiert eine <xref:System.Windows.Controls.Label>, die die aktuelle Sekunde anzeigt, und ruft <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> auf dem <xref:System.Windows.Input.CommandManager>auf.</span><span class="sxs-lookup"><span data-stu-id="00a7f-179">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
