<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bc5bd6e538ac42e034d4b00fcacb3cd0db5d822" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669204" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7060e-101">Ein Zeitgeber, der in die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange integriert ist, die in einem festgelegten Zeitintervall und mit einer festgelegten Priorität verarbeitet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7060e-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-102">Die <xref:System.Windows.Threading.DispatcherTimer> erneut ausgewertet, am oberen Rand jedes <xref:System.Windows.Threading.Dispatcher> Schleife.</span><span class="sxs-lookup"><span data-stu-id="7060e-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="7060e-103">Timer sind nicht immer genau, wenn das angegebene Zeitintervall tritt auf, jedoch nicht ausgeführt werden, bevor das angegebene Zeitintervall wird garantiert.</span><span class="sxs-lookup"><span data-stu-id="7060e-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="7060e-104">Grund hierfür ist, <xref:System.Windows.Threading.DispatcherTimer> Vorgänge werden platziert, über die <xref:System.Windows.Threading.Dispatcher> Warteschlange wie andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="7060e-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="7060e-105">Wenn die <xref:System.Windows.Threading.DispatcherTimer> Vorgang ausgeführt wird, ist abhängig von den anderen Aufträgen in der Warteschlange und deren Priorität.</span><span class="sxs-lookup"><span data-stu-id="7060e-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="7060e-106">Wenn eine <xref:System.Timers.Timer?displayProperty=nameWithType> werden in eine [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Anwendung, ist anzumerken, die die <xref:System.Timers.Timer?displayProperty=nameWithType> in einem anderen Thread ausgeführt wird und dann die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Thread.</span><span class="sxs-lookup"><span data-stu-id="7060e-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="7060e-107">Um den Zugriff auf Objekte in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Thread, es ist notwendig, den Vorgang auf post der <xref:System.Windows.Threading.Dispatcher> von der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread mit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> oder <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="7060e-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="7060e-108">Gründe für die Verwendung einer <xref:System.Windows.Threading.DispatcherTimer> dagegen spricht, eine <xref:System.Timers.Timer?displayProperty=nameWithType> sind, die die <xref:System.Windows.Threading.DispatcherTimer> ausgeführt wird, auf dem gleichen Thread wie der <xref:System.Windows.Threading.Dispatcher> und ein <xref:System.Windows.Threading.DispatcherPriority> kann festgelegt werden, auf die <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="7060e-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="7060e-109">Ein <xref:System.Windows.Threading.DispatcherTimer> hält ein Objekt aktiv, wenn die Methoden des Objekts an den Zeitgeber gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="7060e-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="7060e-110">Das folgende Beispiel erstellt eine <xref:System.Windows.Threading.DispatcherTimer> , aktualisiert den Inhalt des eine <xref:System.Windows.Controls.Label> und ruft die <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> Methode für die <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="7060e-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="7060e-111">Ein <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="7060e-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="7060e-112">Der Ereignishandler `dispatcherTimer_Tick` wird hinzugefügt, um die <xref:System.Windows.Threading.DispatcherTimer.Tick> -Ereignis `dispatcherTimer`.</span><span class="sxs-lookup"><span data-stu-id="7060e-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="7060e-113">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> festgelegt ist, auf 1 Sekunde, die mit einer <xref:System.Windows.Duration.TimeSpan%2A> -Objekt, und der Zeitgeber gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="7060e-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="7060e-114">Die <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignishandler aktualisiert eine <xref:System.Windows.Controls.Label> , die die aktuelle Sekunde anzeigt, und er ruft <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> auf die <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="7060e-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-115">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7060e-116">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-117"><xref:System.Windows.Threading.DispatcherTimer> ausgeführt wird, auf die <xref:System.Windows.Threading.Dispatcher> des aktuellen Threads an <xref:System.Windows.Threading.DispatcherPriority.Background> Priorität.</span><span class="sxs-lookup"><span data-stu-id="7060e-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="7060e-118">An einem anderen <xref:System.Windows.Threading.Dispatcher>, verwenden Sie den folgenden Konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7060e-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="7060e-119">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-119">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7060e-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die Zeitgeberereignisse mit der angegebenen Priorität verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-121"><xref:System.Windows.Threading.DispatcherTimer> ausgeführt wird, auf die <xref:System.Windows.Threading.Dispatcher> des aktuellen Threads.</span><span class="sxs-lookup"><span data-stu-id="7060e-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="7060e-122">An einem anderen <xref:System.Windows.Threading.Dispatcher>, verwenden Sie den folgenden Konstruktor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span><span class="sxs-lookup"><span data-stu-id="7060e-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="7060e-123">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-123">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="7060e-124">Der Verteiler, dem der Zeitgeber zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-124">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7060e-125">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die im angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> mit der angegebenen Priorität ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7060e-126">
            <paramref name="dispatcher" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-126">
              <paramref name="dispatcher" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval">
          <span data-ttu-id="7060e-127">Der Zeitraum zwischen Ticks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-127">The period of time between ticks.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="7060e-128">Die Priorität, mit der der Zeitgeber aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-128">The priority at which to invoke the timer.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7060e-129">Der Ereignishandler, der beim Eintreten des <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />-Ereignisses aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span>
          </span>
        </param>
        <param name="dispatcher">
          <span data-ttu-id="7060e-130">Der Verteiler, dem der Zeitgeber zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-130">The dispatcher the timer is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7060e-131">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherTimer" />-Klasse, die das angegebene Zeitintervall, die angegebene Priorität, den angegebenen Ereignishandler und den angegebenen <see cref="T:System.Windows.Threading.Dispatcher" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7060e-132">
            <paramref name="callback" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-132">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7060e-133">
            <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-133">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-134">Ruft den diesem <see cref="T:System.Windows.Threading.Dispatcher" /> zugeordneten <see cref="T:System.Windows.Threading.DispatcherTimer" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-134">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7060e-135">Der Verteiler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-135">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-136">Die <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> Eigenschaft wird bei der Erstellung des bestimmt die <xref:System.Windows.Threading.DispatcherTimer> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7060e-136">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="7060e-137">Die <xref:System.Windows.Threading.Dispatcher> Eigenschaft festgelegt ist, mit dem aktuellen <xref:System.Windows.Threading.Dispatcher> zum Zeitpunkt der Erstellung, wenn ein anderes <xref:System.Windows.Threading.Dispatcher> angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="7060e-137">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-138">Ruft den Zeitraum zwischen den Ticks des Zeitgebers ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-138">Gets or sets the period of time between timer ticks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7060e-139">Der Zeitraum zwischen Ticks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-139">The period of time between ticks.</span>
          </span>
          <span data-ttu-id="7060e-140">Der Standardwert ist „00:00:00“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-140">The default is 00:00:00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-141">Timer sind nicht immer genau, wenn das angegebene Zeitintervall tritt auf, jedoch nicht ausgeführt werden, bevor das angegebene Zeitintervall wird garantiert.</span><span class="sxs-lookup"><span data-stu-id="7060e-141">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="7060e-142">Grund hierfür ist, <xref:System.Windows.Threading.DispatcherTimer> Vorgänge werden platziert, über die <xref:System.Windows.Threading.Dispatcher> Warteschlange wie andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="7060e-142">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="7060e-143">Wenn die <xref:System.Windows.Threading.DispatcherTimer> Vorgang ausgeführt wird, ist abhängig von den anderen Aufträgen in der Warteschlange und deren Priorität.</span><span class="sxs-lookup"><span data-stu-id="7060e-143">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="7060e-144">Das folgende Beispiel erstellt eine <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="7060e-144">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="7060e-145">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="7060e-145">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="7060e-146">Der Ereignishandler `dispatcherTimer_Tick` wird hinzugefügt, um die <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="7060e-146">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="7060e-147">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> festgelegt ist, auf 1 Sekunde, die mit einem <xref:System.TimeSpan> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7060e-147">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7060e-148">
            <paramref name="interval" /> ist kleiner als 0 oder größer als <see cref="F:System.Int32.MaxValue" /> Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-148">
              <paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-149">Ruft einen Wert ab, mit dem angegeben wird, ob der Zeitgeber ausgeführt wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-149">Gets or sets a value that indicates whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7060e-150">
            <see langword="true" />, wenn der Zeitgeber aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-150">
              <see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7060e-151">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> muss festgelegt werden, um `true` für die <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignis ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="7060e-152"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="7060e-153">Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Start%2A> legt <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="7060e-153">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="7060e-154">Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> legt <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false`.</span><span class="sxs-lookup"><span data-stu-id="7060e-154">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="7060e-155">Das folgende Beispiel erstellt eine <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="7060e-155">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="7060e-156">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="7060e-156">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="7060e-157">Der Ereignishandler `dispatcherTimer_Tick` wird hinzugefügt, um die <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="7060e-157">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="7060e-158">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> festgelegt ist, auf 1 Sekunde, die mit einem <xref:System.TimeSpan> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7060e-158">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7060e-159">Startet den <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-159">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-160">Festlegen von <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false` beendet den Zeitgeber, wenn der Zeitgeber gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="7060e-160">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="7060e-161">Festlegen von <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true` Wenn der Zeitgeber angehalten wird, startet den Timer.</span><span class="sxs-lookup"><span data-stu-id="7060e-161">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="7060e-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> Legt <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="7060e-162"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="7060e-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> Setzt den Zeitgeber <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="7060e-163"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7060e-164">Das folgende Beispiel erstellt eine <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="7060e-164">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="7060e-165">Ein neues <xref:System.Windows.Threading.DispatcherTimer> Objekt mit dem Namen `dispatcherTimer` wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="7060e-165">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="7060e-166">Der Ereignishandler `dispatcherTimer_Tick` wird hinzugefügt, um die <xref:System.Windows.Threading.DispatcherTimer.Tick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="7060e-166">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="7060e-167">Die <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> festgelegt ist, auf 1 Sekunde, die mit einem <xref:System.Windows.Duration.TimeSpan%2A> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7060e-167">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7060e-168">Hält den <see cref="T:System.Windows.Threading.DispatcherTimer" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-168">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7060e-169">Festlegen von <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false` beendet den Zeitgeber, wenn der Zeitgeber gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="7060e-169">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="7060e-170">Festlegen von <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `true` Wenn der Zeitgeber angehalten wird, startet den Timer.</span><span class="sxs-lookup"><span data-stu-id="7060e-170">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="7060e-171">Aufrufen von <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> legt <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> auf `false`.</span><span class="sxs-lookup"><span data-stu-id="7060e-171">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-172">Ruft ein benutzerdefiniertes Datenobjekt ab oder legt es fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-172">Gets or sets a user-defined data object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7060e-173">Die benutzerdefinierten Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-173">The user-defined data.</span>
          </span>
          <span data-ttu-id="7060e-174">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-174">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7060e-175">Tritt auf, wenn das Zeitgeberintervall verstrichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7060e-175">Occurs when the timer interval has elapsed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7060e-176">Das folgende Beispiel erstellt eine <xref:System.Windows.Threading.DispatcherTimer.Tick> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="7060e-176">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="7060e-177">Der Ereignishandler aktualisiert eine <xref:System.Windows.Controls.Label> , die die aktuelle Sekunde anzeigt, und er ruft <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> auf die <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="7060e-177">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>