<Type Name="DispatcherProcessingDisabled" FullName="System.Windows.Threading.DispatcherProcessingDisabled">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ed00b2cb8b31a8df90f78faaddbcef2ad6317fd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DispatcherProcessingDisabled : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DispatcherProcessingDisabled extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherProcessingDisabled" />
  <TypeSignature Language="VB.NET" Value="Public Structure DispatcherProcessingDisabled&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class DispatcherProcessingDisabled : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5f9de-101">Stellt den Verteiler im deaktivierten Zustand dar und stellt ein Verfahren zum erneuten Aktivieren der Verarbeitung durch den Verteiler bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f9de-101">Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9de-102"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Gibt eine <xref:System.Windows.Threading.DispatcherProcessingDisabled> Objekt, wenn sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="5f9de-102"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> object when it is called.</span></span>  
  
 <span data-ttu-id="5f9de-103">Deaktivieren von Verteiler, die Verarbeitung ist eine erweiterte Methode, die vorgesehen ist, um das Risiko von nicht verknüpfte Reentranz zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="5f9de-103">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="5f9de-104">Die Auswirkungen des Deaktivierens von Verarbeitung lauten wie folgt:</span><span class="sxs-lookup"><span data-stu-id="5f9de-104">The effects of disabling processing are as follows:</span></span>  
  
-   [!INCLUDE[TLA2#tla_clr#initcap](~/includes/tla2sharptla-clrsharpinitcap-md.md)]<span data-ttu-id="5f9de-105"> Sperren werden intern nicht Nachrichten weiterleiten.</span><span class="sxs-lookup"><span data-stu-id="5f9de-105"> locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="5f9de-106"><xref:System.Windows.Threading.DispatcherFrame> Objekte dürfen nicht verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="5f9de-106"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="5f9de-107">Verarbeitung von Nachrichten ist nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="5f9de-107">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="5f9de-108">Aufrufen von <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> auf die <xref:System.Windows.Threading.DispatcherProcessingDisabled> Objekt wird die Verarbeitung durch den Verteiler erneut aktiviert.</span><span class="sxs-lookup"><span data-stu-id="5f9de-108">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> object will re-enable dispatcher processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f9de-109">Das folgende Beispiel veranschaulicht die Verarbeitung durch den Verteiler deaktivieren und erneutes Aktivieren Verarbeitung durch den Verteiler.</span><span class="sxs-lookup"><span data-stu-id="5f9de-109">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="5f9de-110"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> wird aufgerufen, einem **mit** Anweisung.</span><span class="sxs-lookup"><span data-stu-id="5f9de-110"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="5f9de-111"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Gibt eine <xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktur wie das Objekt dient zum freigegeben sein, wenn die **mit** -block abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="5f9de-111"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure which is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="5f9de-112">Aufrufen von <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> auf die <xref:System.Windows.Threading.DispatcherProcessingDisabled> Struktur reaktiviert Verarbeitung durch den Verteiler.</span><span class="sxs-lookup"><span data-stu-id="5f9de-112">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables dispatcher processing.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f9de-113">Aktiviert die Verarbeitung durch den Verteiler erneut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-113">Re-enables dispatcher processing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f9de-114">Deaktivieren von Verteiler, die Verarbeitung ist eine erweiterte Methode, die vorgesehen ist, um das Risiko von nicht verknüpfte Reentranz zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="5f9de-114">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="5f9de-115">Die Auswirkungen des Deaktivierens von Verarbeitung lauten wie folgt:</span><span class="sxs-lookup"><span data-stu-id="5f9de-115">The effects of disabling processing are as follows:</span></span>  
  
-   [!INCLUDE[TLA2#tla_clr#initcap](~/includes/tla2sharptla-clrsharpinitcap-md.md)]<span data-ttu-id="5f9de-116"> Sperren werden intern nicht Nachrichten weiterleiten.</span><span class="sxs-lookup"><span data-stu-id="5f9de-116"> locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="5f9de-117"><xref:System.Windows.Threading.DispatcherFrame> Objekte dürfen nicht verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="5f9de-117"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="5f9de-118">Verarbeitung von Nachrichten ist nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="5f9de-118">Message processing is not permitted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5f9de-119">Das auf Gleichheit zu prüfende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-119">The object to evaluate for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f9de-120">Bestimmt, ob das angegebene <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-120">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> object is equal to this <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f9de-121">
            <see langword="true" />, wenn das angegebene Objekt und das <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekt gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-121">
              <see langword="true" /> if the specified object is equal to this <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f9de-122">Ruft einen Hashcode für diese Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-122">Gets a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f9de-123">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-123">A signed 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Threading.DispatcherProcessingDisabled left, valuetype System.Windows.Threading.DispatcherProcessingDisabled right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DispatcherProcessingDisabled, right As DispatcherProcessingDisabled) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Threading::DispatcherProcessingDisabled left, System::Windows::Threading::DispatcherProcessingDisabled right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Threading.DispatcherProcessingDisabled" />
        <Parameter Name="right" Type="System.Windows.Threading.DispatcherProcessingDisabled" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5f9de-124">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-124">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5f9de-125">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-125">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f9de-126">Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-126">Determines whether two <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f9de-127">
            <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-127">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Threading.DispatcherProcessingDisabled left, System.Windows.Threading.DispatcherProcessingDisabled right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Threading.DispatcherProcessingDisabled left, valuetype System.Windows.Threading.DispatcherProcessingDisabled right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DispatcherProcessingDisabled, right As DispatcherProcessingDisabled) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Threading::DispatcherProcessingDisabled left, System::Windows::Threading::DispatcherProcessingDisabled right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Threading.DispatcherProcessingDisabled" />
        <Parameter Name="right" Type="System.Windows.Threading.DispatcherProcessingDisabled" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5f9de-128">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-128">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5f9de-129">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-129">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f9de-130">Bestimmt, ob zwei <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-130">Determines whether two <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f9de-131">
            <see langword="true" />, wenn die <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />-Objekte ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f9de-131">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)" />
        <altmember cref="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>