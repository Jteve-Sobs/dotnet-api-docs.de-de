<Type Name="DispatcherOperation" FullName="System.Windows.Threading.DispatcherOperation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da09fe06a99494c768fa4d0cfb5330fbf23ba697" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48660848" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherOperation" />
  <TypeSignature Language="F#" Value="type DispatcherOperation = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5c824-101">Stellt ein Objekt dar, mit dem die Interaktion mit einem Vorgang erfolgt, der an die <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="5c824-101">Represents an object that is used to interact with an operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c824-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Gibt eine <xref:System.Windows.Threading.DispatcherOperation> Objekt, wenn sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="5c824-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object when it is called.</span></span>  
  
 <span data-ttu-id="5c824-103">Die <xref:System.Windows.Threading.DispatcherOperation> Objekt kann verwendet werden, um die Interaktion mit dem Delegaten auf dem <xref:System.Windows.Threading.Dispatcher> Warteschlange, wie z. B. Ändern der Priorität des Vorgangs oder der Vorgang wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="5c824-103">The <xref:System.Windows.Threading.DispatcherOperation> object can be used to interact with the delegate on the <xref:System.Windows.Threading.Dispatcher> queue, such as changing the priority of the operation or aborting the operation.</span></span>  
  
 <span data-ttu-id="5c824-104">Verwenden Sie zum Abrufen des Rückgabewerts des aufgerufenen Delegaten die <xref:System.Windows.Threading.DispatcherOperation.Result%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5c824-104">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 <span data-ttu-id="5c824-105">Die <xref:System.Windows.Threading.DispatcherOperation> ist keine Begrenzung für die Behandlung von Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="5c824-105">The <xref:System.Windows.Threading.DispatcherOperation> is not an exception handling boundary.</span></span> <span data-ttu-id="5c824-106">Dies bedeutet, dass Ausnahmen, indem behandelt werden die <xref:System.Windows.Threading.Dispatcher> und werden nicht beibehalten, indem Sie den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="5c824-106">This means that exceptions are handled by the <xref:System.Windows.Threading.Dispatcher> and are not preserved by the operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public bool Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Function Abort () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; bool" Usage="dispatcherOperation.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c824-107">Bricht den Vorgang ab.</span><span class="sxs-lookup"><span data-stu-id="5c824-107">Aborts the operation.</span></span></summary>
        <returns><span data-ttu-id="5c824-108"><see langword="true" />, wenn der Vorgang abgebrochen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c824-108"><see langword="true" /> if the operation was aborted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c824-109">Diese Methode gibt zurück, wenn ein Vorgang bereits ausgeführt wird, `false`.</span><span class="sxs-lookup"><span data-stu-id="5c824-109">If an operation is already in progress, this method will return `false`.</span></span>  
  
 <span data-ttu-id="5c824-110">Beim Abbrechen eines Vorgangs, der <xref:System.Windows.Threading.DispatcherOperation.Status%2A> von der <xref:System.Windows.Threading.DispatcherOperation> nastaven NA hodnotu <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> und die <xref:System.Windows.Threading.DispatcherOperation.Aborted> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5c824-110">When an operation is aborted, the <xref:System.Windows.Threading.DispatcherOperation.Status%2A> of the <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> and the <xref:System.Windows.Threading.DispatcherOperation.Aborted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public event EventHandler Aborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Aborted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Aborted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Aborted;" />
      <MemberSignature Language="F#" Value="member this.Aborted : EventHandler " Usage="member this.Aborted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-111">Tritt nach dem Abbrechen des Vorgangs ein.</span><span class="sxs-lookup"><span data-stu-id="5c824-111">Occurs when the operation is aborted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-112">Tritt ein, wenn der Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="5c824-112">Occurs when the operation has completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-113">Ruft den <see cref="T:System.Windows.Threading.Dispatcher" /> ab, an den der Vorgang gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="5c824-113">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> that the operation was posted to.</span></span></summary>
        <value><span data-ttu-id="5c824-114">Der Verteiler.</span><span class="sxs-lookup"><span data-stu-id="5c824-114">The dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="dispatcherOperation.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c824-115">Gibt ein Objekt zurück, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="5c824-115">Returns an object that is notified when the asynchronous operation is finished.</span></span></summary>
        <returns><span data-ttu-id="5c824-116">Ein Objekt, das benachrichtigt wird, wenn der asynchrone Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="5c824-116">An object that is notified when the asynchronous operation is finished.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeDelegateCore">
      <MemberSignature Language="C#" Value="protected virtual object InvokeDelegateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object InvokeDelegateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeDelegateCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ InvokeDelegateCore();" />
      <MemberSignature Language="F#" Value="abstract member InvokeDelegateCore : unit -&gt; obj&#xA;override this.InvokeDelegateCore : unit -&gt; obj" Usage="dispatcherOperation.InvokeDelegateCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c824-117">Startet den Vorgang, der diesem <see cref="T:System.Windows.Threading.DispatcherOperation" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="5c824-117">Begins the operation that is associated with this <see cref="T:System.Windows.Threading.DispatcherOperation" />.</span></span></summary>
        <returns><span data-ttu-id="5c824-118"><see langword="null" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="5c824-118"><see langword="null" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As DispatcherPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherPriority Priority { System::Windows::Threading::DispatcherPriority get(); void set(System::Windows::Threading::DispatcherPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Windows.Threading.DispatcherPriority with get, set" Usage="System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-119">Ruft die Priorität des Vorgangs in der <see cref="T:System.Windows.Threading.Dispatcher" />-Warteschlange ab oder legt diese Priorität fest.</span><span class="sxs-lookup"><span data-stu-id="5c824-119">Gets or sets the priority of the operation in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <value><span data-ttu-id="5c824-120">Die Priorität des Delegaten in der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="5c824-120">The priority of the delegate on the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Windows.Threading.DispatcherOperation.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-121">Ruft das Ergebnis des Vorgangs nach dessen Abschluss ab.</span><span class="sxs-lookup"><span data-stu-id="5c824-121">Gets the result of the operation after it has completed.</span></span></summary>
        <value><span data-ttu-id="5c824-122">Das Ergebnis des Vorgangs oder <see langword="null" />, wenn der Vorgang nicht abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="5c824-122">The result of the operation -or- <see langword="null" /> if the operation has not completed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherOperationStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherOperationStatus Status { System::Windows::Threading::DispatcherOperationStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Windows.Threading.DispatcherOperationStatus" Usage="System.Windows.Threading.DispatcherOperation.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-123">Ruft den aktuellen Status des Vorgangs ab.</span><span class="sxs-lookup"><span data-stu-id="5c824-123">Gets the current status of the operation..</span></span></summary>
        <value><span data-ttu-id="5c824-124">Der Status des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-124">The status of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c824-125">Die Phasen einer <xref:System.Windows.Threading.DispatcherOperation> sind <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>, und <xref:System.Windows.Threading.DispatcherOperationStatus.Completed>.</span><span class="sxs-lookup"><span data-stu-id="5c824-125">The stages of a <xref:System.Windows.Threading.DispatcherOperation> are <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>, and <xref:System.Windows.Threading.DispatcherOperationStatus.Completed>.</span></span>  <span data-ttu-id="5c824-126">Zu einem beliebigen Zeitpunkt vor dem Abschluss des Vorgangs der Status kann festgelegt werden <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="5c824-126">At any point before the operation has completed, the status can be set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Windows.Threading.DispatcherOperation.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c824-127">Ruft einen <see cref="T:System.Threading.Tasks.Task`1" /> ab, der den aktuellen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="5c824-127">Gets a <see cref="T:System.Threading.Tasks.Task`1" /> that represents the current operation.</span></span></summary>
        <value><span data-ttu-id="5c824-128">Ein Objekt, das den aktuellen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="5c824-128">An object that represents the current operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c824-129">Wartet bis zum Abschluss des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-129">Waits for the operation to finish.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait () As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c824-130">Wartet bis zum Abschluss des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-130">Waits for the operation to complete</span></span></summary>
        <returns><span data-ttu-id="5c824-131">Der Status des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-131">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c824-132">Verwenden Sie zum Abrufen des Rückgabewerts des aufgerufenen Delegaten die <xref:System.Windows.Threading.DispatcherOperation.Result%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5c824-132">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5c824-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="5c824-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="5c824-134">Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="5c824-134">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5c824-135">Die maximale Wartezeit.</span><span class="sxs-lookup"><span data-stu-id="5c824-135">The maximum period of time to wait.</span></span></param>
        <summary><span data-ttu-id="5c824-136">Wartet für den angegebenen Zeitraum bis zum Abschluss des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-136">Waits for the operation to complete in the specified period of time.</span></span></summary>
        <returns><span data-ttu-id="5c824-137">Der Status des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="5c824-137">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c824-138">Verwenden Sie zum Abrufen des Rückgabewerts des aufgerufenen Delegaten die <xref:System.Windows.Threading.DispatcherOperation.Result%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5c824-138">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5c824-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> ist gleich <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="5c824-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="5c824-140">Dies kann beim Warten auf einen Vorgang auftreten, der bereits im gleichen Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="5c824-140">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>