<Type Name="DynamicField" FullName="System.Web.DynamicData.DynamicField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4da0ed5b5597a1a47fbb241213d23305c45faf56" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77100881" /></Metadata><TypeSignature Language="C#" Value="public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicField extends System.Web.UI.WebControls.DataControlField implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicField" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicField&#xA;Inherits DataControlField&#xA;Implements IAttributeAccessor, IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicField : System::Web::UI::WebControls::DataControlField, System::Web::DynamicData::IFieldFormattingOptions, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicField = class&#xA;    inherit DataControlField&#xA;    interface IAttributeAccessor&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Datenfeld dar, das in einem datengebundenen Steuerelement angezeigt wird, das Funktionen von ASP.NET Dynamic Data verwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Einführung](#introduction)

-   [Deklarative Syntax](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>Einführung
 Die <xref:System.Web.DynamicData.DynamicField>-Klasse wird von Daten gebundenen Steuerelementen, z. b. den <xref:System.Web.UI.WebControls.GridView>-und <xref:System.Web.UI.WebControls.DetailsView>-Steuerelementen, verwendet, um einen Feldwert anzuzeigen, der dynamische Daten ASP.NET-Funktionen in benutzerdefinierten Seiten verwendet.

 Die <xref:System.Web.DynamicData.DynamicField>-Klasse stellt Funktionen bereit, die der <xref:System.Web.UI.WebControls.BoundField>-Klasse ähneln. Da jedoch ein <xref:System.Web.DynamicData.DynamicField> Objekt in dynamische Daten Anwendungen verwendet wird, können Sie die folgenden dynamische Daten Features nutzen:

-   Automatisches Rendern des richtigen Steuer Elements für ein Feld mithilfe von Feld Vorlagen, basierend auf dem Datentyp. Die Feld Vorlagen können für die gesamte Anwendung Global geändert werden.

-   Bereitstellen integrierter Datenvalidierung auf Grundlage des Datenbankschemas. Sie können auch Validierungs Typen hinzufügen, indem Sie das Datenmodell anpassen.

-   Anpassen des Daten Renderings für einzelne Felder mithilfe von Attributen im Datenmodell oder mithilfe der <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft.

 Das <xref:System.Web.DynamicData.DynamicField>-Objekt rendert jedes Feld mithilfe eines `DynamicControl` Steuer Elements. Um das Datenfeld anzugeben, das in einem <xref:System.Web.DynamicData.DynamicField> Objekt angezeigt werden soll, legen Sie die Eigenschaft <xref:System.Web.DynamicData.DynamicField.DataField%2A> auf den Feldnamen fest. Sie können eine benutzerdefinierte Formatierungs Zeichenfolge auf den Feldwert anwenden, indem Sie die <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft festlegen. Standardmäßig wird die Formatierungs Zeichenfolge nur dann auf Feldwerte angewendet, wenn sich das Daten gebundene Steuerelement im schreibgeschützten Modus befindet. Um die Formatierungs Zeichenfolge auf die angezeigten Werte anzuwenden, während sich das Daten gebundene Steuerelement im Bearbeitungsmodus befindet, legen Sie die <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest. Wenn ein Feldwert `null`ist, können Sie eine benutzerdefinierte Beschriftung anzeigen, indem Sie die <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>-Eigenschaft festlegen. Das <xref:System.Web.DynamicData.DynamicField>-Objekt kann auch leere Zeichen folgen ("")-Feldwerte automatisch in NULL-Werte konvertieren, indem die <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>-Eigenschaft auf `true`festgelegt wird.

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:DynamicField
    AccessibleHeaderText="string"
    ApplyFormatInEditMode="true|false"
    ControlStyle-BackColor="color name|#dddddd"
    ControlStyle-BorderColor="color name|#dddddd"
    ControlStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    ControlStyle-BorderWidth="size"
    ControlStyle-CssClass="string"
    ControlStyle-Font-Bold="true|false"
    ControlStyle-Font-Italic="true|false"
    ControlStyle-Font-Names="string"
    ControlStyle-Font-Overline="true|false"
    ControlStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    ControlStyle-Font-Strikeout="true|false"
    ControlStyle-Font-Underline="true|false"
    ControlStyle-ForeColor="color name|#dddddd"
    ControlStyle-Height="size"
    ControlStyle-Width="size"
    ConvertEmptyStringToNull="true|false"
    DataField="string"
    DataFormatString="string"
    FooterStyle-BackColor="color name|#dddddd"
    FooterStyle-BorderColor="color name|#dddddd"
    FooterStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    FooterStyle-BorderWidth="size"
    FooterStyle-CssClass="string"
    FooterStyle-Font-Bold="true|false"
    FooterStyle-Font-Italic="true|false"
    FooterStyle-Font-Names="string"
    FooterStyle-Font-Overline="true|false"
    FooterStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    FooterStyle-Font-Strikeout="true|false"
    FooterStyle-Font-Underline="true|false"
    FooterStyle-ForeColor="color name|#dddddd"
    FooterStyle-Height="size"
    FooterStyle-Width="size"
    FooterStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    FooterStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    FooterStyle-Wrap="true|false"
    HeaderImageUrl="uri"
    HeaderStyle-BackColor="color name|#dddddd"
    HeaderStyle-BorderColor="color name|#dddddd"
    HeaderStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    HeaderStyle-BorderWidth="size"
    HeaderStyle-CssClass="string"
    HeaderStyle-Font-Bold="true|false"
    HeaderStyle-Font-Italic="true|false"
    HeaderStyle-Font-Names="string"
    HeaderStyle-Font-Overline="true|false"
    HeaderStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    HeaderStyle-Font-Strikeout="true|false"
    HeaderStyle-Font-Underline="true|false"
    HeaderStyle-ForeColor="color name|#dddddd"
    HeaderStyle-Height="size"
    HeaderStyle-Width="size"
    HeaderStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    HeaderStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    HeaderStyle-Wrap="true|false"
    HeaderText="string"
    InsertVisible="true|false"
    ItemStyle-BackColor="color name|#dddddd"
    ItemStyle-BorderColor="color name|#dddddd"
    ItemStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    ItemStyle-BorderWidth="size"
    ItemStyle-CssClass="string"
    ItemStyle-Font-Bold="true|false"
    ItemStyle-Font-Italic="true|false"
    ItemStyle-Font-Names="string"
    ItemStyle-Font-Overline="true|false"
    ItemStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    ItemStyle-Font-Strikeout="true|false"
    ItemStyle-Font-Underline="true|false"
    ItemStyle-ForeColor="color name|#dddddd"
    ItemStyle-Height="size"
    ItemStyle-Width="size"
    ItemStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    ItemStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    ItemStyle-Wrap="true|false"
    NullDisplayText="string"
    ReadOnly="true|false"
    ShowHeader="true|false"
    SortExpression="string"
    UIHint="string"
    ValidationGroup="string"
    Visible="true|false"
    />
<asp:DynamicField />
```



## Examples
 Sehen Sie sich ein Lauf Zeit Codebeispiel für dieses Feature an: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).

 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.DynamicData.DynamicField>-Objekt in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement verwendet wird, um Werte aus einer Datenbanktabelle anzuzeigen und zu bearbeiten.

 [!code-aspx-csharp[System.Web.DynamicData.DynamicField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/VB/Default.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.DynamicData.DynamicControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512">Übersicht über ASP.net dynamische Daten</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=286117">Modell Bindung und Web Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.DynamicData.DynamicField>-Klasse zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn einem dynamisch erstellten Daten gebundenen Steuerelement Felder hinzugefügt werden.

 Wenn Sie einem Daten gebundenen Steuerelement dynamisch ein <xref:System.Web.DynamicData.DynamicField> Objekt hinzufügen möchten, erstellen Sie ein neues <xref:System.Web.DynamicData.DynamicField> Objekt, legen Sie seine Eigenschaften fest, und fügen Sie es dann der Feld Auflistung des Daten gebundenen Steuer Elements hinzu. Wenn Sie z. b. das <xref:System.Web.UI.WebControls.GridView>-Steuerelement verwenden, fügen Sie das <xref:System.Web.DynamicData.DynamicField>-Objekt der <xref:System.Web.UI.WebControls.GridView.Columns%2A>-Auflistung hinzu.

> [!NOTE]
>  Obwohl Sie Felder einem Daten gebundenen Steuerelement dynamisch hinzufügen können, wird dringend empfohlen, dass Felder statisch deklariert und dann nach Bedarf angezeigt oder ausgeblendet werden. Wenn Sie alle Felder statisch deklarieren, verringert sich die Größe des Ansichts Zustands für das übergeordnete Daten gebundene Steuerelement.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die von der <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />-Eigenschaft angegebene formatierte Zeichenfolge auf einen Feldwert angewendet wird, wenn sich das Datenfeld im Bearbeitungsmodus befindet, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Web.DynamicData.DynamicField" /> im Bearbeitungsmodus Formatierung anwendet, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Daten gebundene Steuerelemente (z. b. <xref:System.Web.UI.WebControls.DetailsView>und <xref:System.Web.UI.WebControls.GridView>) haben unterschiedliche Anzeigemodi, die es dem Benutzer ermöglichen, Datensätze zu lesen, zu bearbeiten oder einzufügen. Standardmäßig wird die durch die <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft angegebene Formatierungs Zeichenfolge nur dann auf Feldwerte angewendet, wenn sich das Daten gebundene Steuerelement im schreibgeschützten Modus befindet. Um die Formatierungs Zeichenfolge auf die angezeigten Werte anzuwenden, während sich das Daten gebundene Steuerelement im Bearbeitungsmodus befindet, legen Sie die <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest.

> [!NOTE]
>  Ein <xref:System.Web.DynamicData.DynamicField>-Objekt entfernt die Formatierung nicht automatisch, wenn das Feld in der Datenquelle aktualisiert wird. Wenn Sie nicht möchten, dass die Formatierung als Teil des gespeicherten Werts verwendet wird, müssen Sie die Formatierung Programm gesteuert entfernen.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.Column" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicField.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.DynamicData.MetaColumn" />-Objekt ab, dem dieses <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt zugeordnet ist.</summary>
        <value>Die Metaspalte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureDynamicControl(class System.Web.DynamicData.DynamicControl control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureDynamicControl (control As DynamicControl)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConfigureDynamicControl(System::Web::DynamicData::DynamicControl ^ control);" />
      <MemberSignature Language="F#" Value="abstract member ConfigureDynamicControl : System.Web.DynamicData.DynamicControl -&gt; unit&#xA;override this.ConfigureDynamicControl : System.Web.DynamicData.DynamicControl -&gt; unit" Usage="dynamicField.ConfigureDynamicControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.DynamicData.DynamicControl" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control">Das zu ändernde Steuerelement.</param>
        <summary>Stellt einen Mechanismus zum Ändern eines <see cref="T:System.Web.DynamicData.DynamicControl" />-Objekts bereit, das von der <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />-Methode erstellt wurde.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob bei der Aktualisierung des Datenfelds in der Datenquelle Werte, die leere Zeichenfolgen ("") darstellen, in NULL-Werte konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, um leere Zeichenfolgenwerte automatisch in NULL-Werte zu konvertieren, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Manchmal kann der Benutzer beim Aktualisieren oder Einfügen von Datensätzen eine leere Zeichenfolge für einen Feldwert eingeben. Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>-Eigenschaft, um anzugeben, ob ein leerer Zeichen folgen Wert automatisch in NULL konvertiert wird, wenn das Datenfeld in der Datenquelle aktualisiert wird.

 Standardmäßig zeigt ein <xref:System.Web.DynamicData.DynamicField> Objekt NULL-Werte als leere Zeichen folgen an. Um einen anderen Wert anzuzeigen, legen Sie die <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>-Eigenschaft fest.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.Parameter> Objekt des Datenquellen-Steuer Elements, an das das übergeordnete Steuerelement <xref:System.Web.DynamicData.DynamicField> Objekts gebunden ist, verfügt auch über eine Eigenschaft mit dem Namen <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>. Diese Eigenschaft führt die gleiche Funktion aus. Stellen Sie sicher, dass beide Eigenschaften entsprechend festgelegt sind.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="dynamicField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Das <see cref="T:System.Web.UI.WebControls.DataControlField" />, in das die Eigenschaften des aktuellen <see cref="T:System.Web.DynamicData.DynamicField" /> kopiert werden sollen.</param>
        <summary>Kopiert die Eigenschaften des aktuellen <see cref="T:System.Web.DynamicData.DynamicField" />-Objekts in das angegebene <see cref="T:System.Web.UI.WebControls.DataControlField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.DynamicData.DynamicField.CopyProperties%2A>-Methode ist eine Hilfsmethode. Sie wird von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>-Methode verwendet, um die Eigenschaften des aktuellen <xref:System.Web.DynamicData.DynamicField> Objekts in das <xref:System.Web.DynamicData.DynamicField>-Objekt zu kopieren, das im `newField`-Parameter übergeben wird.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie die <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />-Methode, um die neuen Eigenschaften zu kopieren, die in der abgeleiteten Klasse erstellt wurden. Ruft die <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />-Methode der Basisklasse auf, sodass die Eigenschaften der <see cref="T:System.Web.DynamicData.DynamicField" /> Klasse ebenfalls kopiert werden.</para></block>
        <altmember cref="M:System.Web.DynamicData.DynamicField.CreateField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.DynamicControl CreateDynamicControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateDynamicControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicControl () As DynamicControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::DynamicControl ^ CreateDynamicControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicControl : unit -&gt; System.Web.DynamicData.DynamicControl&#xA;override this.CreateDynamicControl : unit -&gt; System.Web.DynamicData.DynamicControl" Usage="dynamicField.CreateDynamicControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt einen Mechanismus für von <see cref="T:System.Web.DynamicData.DynamicField" /> abgeleitete Klassen bereit, um zu überschreiben, wie <see cref="T:System.Web.DynamicData.DynamicControl" />-Objekte erstellt werden.</summary>
        <returns>Ein neues dynamisches Steuerelement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="dynamicField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt und gibt eine neue Instanz der <see cref="T:System.Web.DynamicData.DynamicField" />-Klasse zurück.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Web.DynamicData.DynamicField" />-Klasse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.DynamicData.DynamicField.CreateField%2A>-Methode ist eine Hilfsmethode. Sie wird von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>-Methode verwendet, um ein leeres <xref:System.Web.DynamicData.DynamicField>-Objekt zu erstellen.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie die <see cref="M:System.Web.DynamicData.DynamicField.CreateField" />-Methode, um eine neue Instanz der abgeleiteten Klasse zurückzugeben. Nennen Sie die <see cref="M:System.Web.DynamicData.DynamicField.CreateField" />-Methode der Basisklasse nicht.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenfelds ab, an das das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt gebunden werden soll, oder legt diesen fest.</summary>
        <value>Der Name des Datenfelds, an das das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt gebunden wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.DataField%2A>-Eigenschaft, um das Datenfeld anzugeben, das an das <xref:System.Web.DynamicData.DynamicField> Objekt gebunden werden soll. Beim Datenfeld kann es sich um den Spaltennamen oder für Fremdschlüssel Spalten um den Beziehungs Namen handeln.

 Standardmäßig wird das angegebene Datenfeld vom <xref:System.Web.DynamicData.DynamicField> Objekt mithilfe der Feld Vorlage angezeigt, die dem Feld Datentyp zugeordnet ist. Sie können die Feld Vorlage ändern, die für das Datenfeld gerendert wird, indem Sie die <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft festlegen. Sie können auch den angezeigten Text formatieren, indem Sie die <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft festlegen. Wenn ein Feldwert `null`ist, wird standardmäßig eine leere Zeichenfolge ("") für den Wert angezeigt. Um eine alternative Beschriftung anzugeben, legen Sie die <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>-Eigenschaft fest.

 **Hinweis** Wenn Sie die Anzeige und das Verhalten eines Daten Felds Global ändern möchten, müssen Sie Attribute auf das Datenmodell anwenden, anstatt dies in einer bestimmten Instanz des <xref:System.Web.DynamicData.DynamicField> Objekts festzulegen. Weitere Informationen finden Sie unter [ASP.net dynamische Daten](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).

 Die <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>-Methode wird aufgerufen, um ein Zustands Änderungs Ereignis aufzurufen, wenn die <xref:System.Web.DynamicData.DynamicField.DataField%2A>-Eigenschaft festgelegt ist.

 Der Wert der <xref:System.Web.DynamicData.DynamicField.DataField%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.UIHint" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die das Anzeigeformat für den Wert des Datenfelds angibt, oder legt diese fest.</summary>
        <value>Eine Formatierungszeichenfolge, die das Anzeigeformat für den Wert des Datenfelds angibt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass keine besondere Formatierung auf den Wert angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft, um ein benutzerdefiniertes Anzeige Format für die Werte anzugeben, die im <xref:System.Web.DynamicData.DynamicField>-Objekt angezeigt werden. Wenn die <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft nicht festgelegt ist, wird der Feldwert ohne spezielle Formatierung angezeigt.

 Standardmäßig wird die Formatierungs Zeichenfolge nur dann auf den Feldwert angewendet, wenn sich das Daten gebundene Steuerelement, das das <xref:System.Web.DynamicData.DynamicField> Objekt enthält, im schreibgeschützten Modus befindet. Wenn Sie die Formatierungs Zeichenfolge im Bearbeitungsmodus auf den Feldwert anwenden möchten, legen Sie die <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest.

 Das Anzeige Format, das Sie mithilfe der <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>-Eigenschaft angeben, ist spezifisch für diese Instanz der <xref:System.Web.DynamicData.DynamicField>-Klasse. Sie können auch das Anzeige Format für ein Datenfeld in der gesamten Anwendung ändern, indem Sie die <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> auf das Datenmodell anwenden und den <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> benannten Parameter im Konstruktor festlegen. Weitere Informationen finden Sie unter [ASP.net dynamische Daten](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="dynamicField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Das Wörterbuch, das die Zellenwerte hält.</param>
        <param name="cell">Die Zelle, die den Text oder die Steuerelemente des <see cref="T:System.Web.DynamicData.DynamicField" />-Objekts enthält.</param>
        <param name="rowState">Einer der Enumerationswerte, der den Zeilenzustand angibt.</param>
        <param name="includeReadOnly"><see langword="true" />, um die Werte schreibgeschützter Felder in das <paramref name="dictionary" /> einzuschließen, andernfalls <see langword="false" />.</param>
        <summary>Extrahiert den Wert des Datenfelds aus der aktuellen Tabellenzelle und fügt dem angegebenen Wörterbuch den Wert hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="dynamicField.GetAttribute key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des abzurufenden Attributs.</param>
        <summary>Ruft den angegebenen Attributwert ab.</summary>
        <returns>Der Wert des Attributs.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im Header des datengebundenen Steuerelements, das das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt enthält, angezeigten Text ab, oder legt diesen fest.</summary>
        <value>Der im Header des datengebundenen Steuerelements, das das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt enthält, angezeigte Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.HeaderText%2A>-Eigenschaft, um ein Feld in einem Daten gebundenen Steuerelement mit einem anzeigen Amen zu identifizieren. Die häufigste Anwendung der <xref:System.Web.DynamicData.DynamicField.HeaderText%2A>-Eigenschaft ist das Bereitstellen aussagekräftiger Spaltennamen für Datenfelder in einem <xref:System.Web.UI.WebControls.GridView>-oder <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement.

 Standardmäßig verwendet die <xref:System.Web.DynamicData.DynamicField.HeaderText%2A>-Eigenschaft den für das Datenfeld festgelegten anzeigen Amen, indem das <xref:System.ComponentModel.DisplayNameAttribute>-Attribut verwendet wird. Wenn der Anzeige Name nicht festgelegt ist, verwendet die <xref:System.Web.DynamicData.DynamicField.HeaderText%2A>-Eigenschaft den Wert der <xref:System.Web.DynamicData.DynamicField.DataField%2A>-Eigenschaft.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt befindet sich in einem datengebundenen Steuerelement, das an kein Datenquellen-Steuerelement gebunden ist, von dem die <see cref="T:System.Web.DynamicData.IDynamicDataSource" />-Schnittstelle implementiert wird.</exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DisplayName" />
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Datenfeldwerte vor dem Anzeigen in einem <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt HTML-codiert werden.</summary>
        <value><see langword="true" />, wenn die Feldwerte vor dem Anzeigen HTML-codiert werden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A>-Eigenschaft, um anzugeben, ob Feldwerte in ihren jeweiligen Zeichen folgen Darstellungen HTML-codiert werden, bevor Sie angezeigt werden.

> [!NOTE]
>  HTML-Codierungs Feldwerte helfen, Site übergreifende Skript Angriffe und böswillige Inhalte zu verhindern. Diese Eigenschaft sollte nach Möglichkeit aktiviert werden. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">Übersicht über Skript Exploits</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="dynamicField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Das Objekt, das den Text oder die Steuerelemente des <see cref="T:System.Web.DynamicData.DynamicField" />-Objekts enthält.</param>
        <param name="cellType">Einer der Enumerationswerte, der die Funktion des <paramref name="cell" />-Objekts angibt.</param>
        <param name="rowState">Einer der Enumerationswerte, der den Zeilenzustand angibt.</param>
        <param name="rowIndex">Der Index der Zeile, in dem das <paramref name="cell" />-Objekt enthalten ist.</param>
        <summary>Fügt der angegebenen Zelle Text oder Steuerelemente hinzu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschriftung ab, die für ein Datenfeld angezeigt wird, wenn der Wert des Felds <see langword="null" /> ist, oder legt diese fest.</summary>
        <value>Die Beschriftung, die für ein Datenfeld angezeigt wird, wenn der Wert des Felds <see langword="null" /> ist. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Manchmal wird ein Feldwert als NULL in der Datenquelle gespeichert. Sie können eine benutzerdefinierte Beschriftung angeben, die für Datenfelder mit einem NULL-Wert angezeigt werden soll, indem Sie die <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>-Eigenschaft festlegen. Wenn diese Eigenschaft nicht festgelegt ist, werden NULL-Feldwerte als leere Zeichen folgen ("") angezeigt.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den schreibgeschützten Zustand des dynamischen Felds ab.</summary>
        <value>Der schreibgeschützte Zustand des dynamischen Felds.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn die <xref:System.Web.DynamicData.DynamicField.ReadOnly%2A>-Eigenschaft `true`ist, lädt das <xref:System.Web.DynamicData.DynamicField>-Steuerelement eine schreibgeschützte Vorlage. Diese Eigenschaft erfordert, dass der Ansichts Zustand aktiviert ist.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="dynamicField.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des festzulegenden Attributs.</param>
        <param name="value">Der Attributwert.</param>
        <summary>Legt ein Attribut fest, das dem <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt zugeordnet ist.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public override string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string with get, set" Usage="System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sortierausdruck ab, der verwendet wird, wenn die Datenquelle nach dem Datenfeld sortiert wird, oder legt diesen fest.</summary>
        <value>Der Sortierausdruck ab, der verwendet wird, wenn die Datenquelle nach dem Datenfeld sortiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.DynamicData.DynamicField.SortExpression%2A>-Eigenschaft versucht, den Wert der <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType>-Eigenschaft des Spalten Objekts zu verwenden, das dem <xref:System.Web.DynamicData.DynamicField>-Objekt zugeordnet ist, indem die <xref:System.Web.DynamicData.DynamicField.DataField%2A>-Eigenschaft festgelegt wird.

 Die <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>-Methode wird aufgerufen, um ein Zustands Änderungs Ereignis aufzurufen, wenn die <xref:System.Web.DynamicData.DynamicField.SortExpression%2A>-Eigenschaft festgelegt ist.

 Der Wert der <xref:System.Web.DynamicData.DynamicField.SortExpression%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt befindet sich in einem datengebundenen Steuerelement, das an kein Datenquellen-Steuerelement gebunden ist, von dem die <see cref="T:System.Web.DynamicData.IDynamicDataSource" />-Schnittstelle implementiert wird.</exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string with get, set" Usage="System.Web.DynamicData.DynamicField.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Feldvorlage ab, die zum Anzeigen des Datenfelds verwendet werden soll, oder legt diese fest.</summary>
        <value>Der Name der Feldvorlage, die zum Anzeigen des Datenfelds verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft, um die Feld Vorlage anzugeben, mit der die Benutzeroberfläche für ein Datenfeld angezeigt werden soll. Standardmäßig sind Feld Vorlagen Benutzer Steuerelemente und ihre Namen enthalten ein Suffix zum Identifizieren von Feld Vorlagen, die für Bearbeitungsvorgänge und Einfügevorgänge verwendet werden. Die Suffixe sind _edit bzw. _insert. Wenn Sie einen Wert für die <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft festlegen, legen Sie den Namen ohne die Suffixe fest. Dynamische Daten identifiziert den aktuellen Modus des Daten Felds und renderdie richtige Feld Vorlage.

 Wenn die <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft nicht festgelegt ist, wird dynamische Daten standardmäßig die Feld Vorlage basierend auf dem Feldtyp Rendering. Weitere Informationen finden Sie unter [ASP.net dynamische Daten Gerüstbau](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).

 Die Feld Vorlage, die Sie mithilfe der <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft angeben, ist spezifisch für diese Instanz der <xref:System.Web.DynamicData.DynamicField>-Klasse. Sie können auch die von einem Datenfeld verwendete Feld Vorlage in der gesamten Anwendung ändern, indem Sie die <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> auf das Datenmodell anwenden. Durch Festlegen der <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft werden die auf das Datenmodell angewendeten Metadaten überschrieben. Weitere Informationen zu Metadatenattributen finden Sie unter [ASP.net dynamische Daten](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).

 Die <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>-Methode wird aufgerufen, um ein Zustands Änderungs Ereignis aufzurufen, wenn die <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft festgelegt ist.

 Der Wert der <xref:System.Web.DynamicData.DynamicField.UIHint%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512">Übersicht über ASP.net dynamische Daten</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Steuerelement Clienteingaben überprüft.</summary>
        <value><see langword="true" />, wenn das Steuerelement Client-Eingaben überprüft; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" />-Objekt ab, dem dieses <see cref="T:System.Web.DynamicData.DynamicField" />-Objekt zugeordnet ist.</summary>
        <value>Der Name der Validierungsgruppe, zu der dieses Validierungssteuerelement gehört. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
