<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23211ec4cd15a2e474a377b387ce573f980a7091" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37606422" /></Metadata><TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Schnittstelle, die von Objekten implementiert wird, die Feldvorlagen erstellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse muss implementiert werden, indem die <xref:System.Web.DynamicData.FieldTemplateFactory> Klasse, um eine Feldvorlage erstellt. Diese Schnittstelle bietet Methoden, die initialisiert die <xref:System.Web.DynamicData.FieldTemplateFactory> und Feldvorlagen erstellt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Gibt die Datenspalte an, die zum Anzeigen der Feldvorlage verwendet werden soll.</param>
        <param name="mode">Gibt den Anzeigemodus der Feldvorlage an.</param>
        <param name="uiHint">Gibt die Feldvorlage an, die verwendet werden soll.</param>
        <summary>Erstellt eine Instanz einer Feldvorlage mithilfe der <see cref="T:System.Web.DynamicData.MetaColumn" />-Klasse, der <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" />-Klasse und der <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />-Eigenschaft.</summary>
        <returns>Eine Instanz eines <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />-Objekts bei Implementierung in einer Klasse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data-Feld-Vorlagen sind ASP.NET-Benutzersteuerelemente, Datensteuerelemente die Datentypen in einem Datenmodell zugeordnet. Generell Feldvorlagen leiten Sie von <xref:System.Web.DynamicData.FieldTemplateUserControl>, die Klasse, die Zugriff auf die Datenfelder, Datenspalten und Metadaten in Datenmodellen ermöglicht. Dynamic Data-Projekte bereitstellen Feldvorlagen, aber Sie können diese ändern oder Erstellen von benutzerdefinierten Vorlagen. Wenn Sie implementiert wird, diese Methode eine Feldvorlage, die basierend auf den Modus der Datenspalte, die Datenspalte erstellt und die <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> Eigenschaft. Sie geben die `uiHint` -Parameters, wenn Sie Daten mit der eine benutzerdefinierte Feldvorlage rendern möchten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Gibt das Datenmodell an, das die Feldvorlage verwendet.</param>
        <summary>Initialisiert eine <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> mit dem angegebenen Datenmodell.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data verwendet Feldvorlagen, um einzelne Felder anzuzeigen. Feldvorlagen werden in der Regel als Benutzersteuerelemente implementiert, die Datentypen in einem Datenmodell einzelne Felder in das Steuerelement zuordnen. Diese Methode initialisiert die <xref:System.Web.DynamicData.FieldTemplateFactory> -Klasse, die zum Erstellen von Feldvorlagen, die mit dem Datenmodell der Feldvorlage verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>