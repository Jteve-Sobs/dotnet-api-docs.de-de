<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59d7d0466dfc2da220d7afc79a06df5efc2b59b8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139625" /></Metadata><TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Schnittstelle, die von Objekten implementiert wird, die Feldvorlagen erstellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse muss von der <xref:System.Web.DynamicData.FieldTemplateFactory> -Klasse implementiert werden, um eine Feld Vorlage zu erstellen. Diese Schnittstelle stellt Methoden bereit, die <xref:System.Web.DynamicData.FieldTemplateFactory> initialisieren und Feld Vorlagen erstellen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Gibt die Datenspalte an, die zum Anzeigen der Feldvorlage verwendet werden soll.</param>
        <param name="mode">Gibt den Anzeigemodus der Feldvorlage an.</param>
        <param name="uiHint">Gibt die Feldvorlage an, die verwendet werden soll.</param>
        <summary>Erstellt eine Instanz einer Feldvorlage mithilfe der <see cref="T:System.Web.DynamicData.MetaColumn" />-Klasse, der <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" />-Klasse und der <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />-Eigenschaft.</summary>
        <returns>Eine Instanz eines <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />-Objekts bei Implementierung in einer Klasse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net dynamische Daten Feld Vorlagen sind ASP.NET-Benutzer Steuerelemente, die Daten Steuerelemente Datentypen in einem Datenmodell zuordnen. Feld Vorlagen werden im allgemeinen <xref:System.Web.DynamicData.FieldTemplateUserControl>von abgeleitet, der-Klasse, die den Zugriff auf Datenfelder, Datenspalten und Metadaten in Datenmodellen ermöglicht. Dynamische Daten Projekte stellen Standardfeld Vorlagen bereit. Sie können Sie jedoch ändern oder benutzerdefinierte Feld Vorlagen erstellen. Bei der Implementierung erstellt diese Methode eine Feld Vorlage basierend auf der Datenspalte, dem Modus der Datenspalte und der <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> -Eigenschaft. Sie geben den `uiHint` -Parameter an, wenn Sie Daten mithilfe einer benutzerdefinierten Feld Vorlage erstellen möchten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Gibt das Datenmodell an, das die Feldvorlage verwendet.</param>
        <summary>Initialisiert eine <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> mit dem angegebenen Datenmodell.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net dynamische Daten verwendet Feld Vorlagen, um einzelne Datenfelder anzuzeigen. Feld Vorlagen werden in der Regel als Benutzer Steuerelemente implementiert, mit denen Datentypen in einem Datenmodell einzelnen Feldern im Daten Steuerelement zugeordnet werden. Diese Methode initialisiert die <xref:System.Web.DynamicData.FieldTemplateFactory> -Klasse, die verwendet wird, um Feld Vorlagen mithilfe des Datenmodells zu erstellen, das von der Feld Vorlage verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
