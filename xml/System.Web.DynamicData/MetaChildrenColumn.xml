<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8aabd320cc131fe76383e672e8d6b7e97988ef78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538974" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b28c0-101">Stellt ein Datenbankfeld dar, das eine 1:n-Beziehung angibt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b28c0-101">Represents a database field that indicates a one-to-many relationship.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-102">In ASP.NET Dynamic Data-Anwendungen die <xref:System.Web.DynamicData.MetaChildrenColumn> Klasse stellt ein Datenbankfeld aus, die eine 1: n-Beziehung oder eine über-/ unterordnungsbeziehung angibt.</span><span class="sxs-lookup"><span data-stu-id="b28c0-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="b28c0-103">Die <xref:System.Web.DynamicData.MetaChildrenColumn> Klasse Feld in der übergeordneten Tabelle der 1: n-Beziehung darstellt.</span><span class="sxs-lookup"><span data-stu-id="b28c0-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="b28c0-104">Sie können jedoch die untergeordnete Tabellenobjekt zugreifen, mithilfe der <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b28c0-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="b28c0-105">Sie können auch die foreign Key-Feld in der untergeordneten Tabelle abrufen, mithilfe der <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b28c0-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="b28c0-106">Die Metatabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-106">The meta table.</span>
          </span>
        </param>
        <param name="entityMember">
          <span data-ttu-id="b28c0-107">Der Spaltenanbieter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28c0-108">Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28c0-109">Ruft ein Objekt ab, das die untergeordnete Tabelle in der 1:n-Beziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-109">Gets an object that represents the child table of the one-to-many relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b28c0-110">Ein Objekt, das die untergeordnete Tabelle in der 1:n-Beziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-110">An object that represents the child table of the one-to-many relationship.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-111">Verwenden der <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> Eigenschaft, um ein Objekt abzurufen, die untergeordnete Tabelle der 1: n-Beziehung darstellt.</span><span class="sxs-lookup"><span data-stu-id="b28c0-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="b28c0-112">Sie erreichen die übergeordnete Tabelle mithilfe der <xref:System.Web.DynamicData.MetaColumn.Table%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b28c0-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28c0-113">Ruft ein Objekt ab, das das Fremdschlüsselfeld in der untergeordneten Tabelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-113">Gets an object that represents the foreign-key field in the child table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b28c0-114">Ein Objekt, das das Fremdschlüsselfeld in der untergeordneten Tabelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-114">An object that represents the foreign-key field in the child table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-115">Die <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> Eigenschaft ermöglicht Ihnen, einen Verweis auf das Feld in der untergeordneten Tabelle abrufen.</span><span class="sxs-lookup"><span data-stu-id="b28c0-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="b28c0-116">Die Zeile, die das Fremdschlüsselfeld enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-116">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28c0-117">Ruft den Pfad der Listenaktionsseite für die untergeordnete Tabelle ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-117">Gets the path of the list-action page for the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b28c0-118">Der Pfad der Listenaktionsseite für die untergeordnete Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-118">The path of the list-action page for the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-119">Verwenden der <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> Methode, wenn Sie die Seite Liste-Aktion für die untergeordnete Tabelle mit der angegebenen Zeile als übergeordnetes Element abrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="b28c0-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="b28c0-120">Der Pfad wird abgerufen, indem ein Abfragezeichenfolgen-Wert an die URL, die im angegebenen Feld foreign Key-Wert enthält Anfügen der `row` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="b28c0-121">Mithilfe der <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> Methode entspricht dem Aufrufen der <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> -Methode und übergeben der <xref:System.Web.DynamicData.PageAction.List%2A> Aktion als erster Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b28c0-122">Ruft den Pfad für die angegebene Aktionsseite der untergeordneten Tabelle ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-122">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b28c0-123">Die Zielaktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-123">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="b28c0-124">Die Zeile, die das Fremdschlüsselfeld enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-124">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28c0-125">Ruft den Pfad der angegebenen Aktionsseite der untergeordneten Tabelle ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-125">Gets the path of the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b28c0-126">Der Pfad der angegebenen Aktionsseite der untergeordneten Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-126">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-127">Die <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> -Methode den Pfad der angegebenen Aktionsseite für die untergeordnete Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="b28c0-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="b28c0-128">Der zurückgegebene Pfad basiert auf die Routen, die für die ASP.NET Dynamic Data-Anwendung definiert sind und die angegebene Zeile als übergeordnetes Element verfügt.</span><span class="sxs-lookup"><span data-stu-id="b28c0-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="b28c0-129">Der Pfad wird abgerufen, indem ein Abfragezeichenfolgen-Wert an die URL, die im angegebenen Feld foreign Key-Wert enthält Anfügen der `row` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="b28c0-130">Wenn `row` ist `null`, Rückkehr dieser Methode eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="b28c0-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="b28c0-131">Können Sie die Werte gemäß der <xref:System.Web.DynamicData.PageAction> -Klasse für die `action` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b28c0-132">Die Zielaktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-132">The target action.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="b28c0-133">Die Zeile, die das Fremdschlüsselfeld enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-133">The row that contains the foreign-key field.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="b28c0-134">Die Zielseite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-134">The target page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28c0-135">Ruft den Pfad für die angegebene Aktionsseite der untergeordneten Tabelle ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-135">Gets the path for the specified action page of the child table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b28c0-136">Der Pfad der angegebenen Aktionsseite der untergeordneten Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-136">The path of the specified action page of the child table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-137">Die <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> -Methode den Pfad der angegebenen Aktionsseite für die untergeordnete Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="b28c0-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="b28c0-138">Der Pfad basiert auf dem angegebenen Pfad mit der angegebenen Zeile als übergeordnetes Element.</span><span class="sxs-lookup"><span data-stu-id="b28c0-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="b28c0-139">Der Pfad wird abgerufen, indem ein Abfragezeichenfolgen-Wert an die URL, die im angegebenen Feld foreign Key-Wert enthält Anfügen der `row` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="b28c0-140">Wenn `row` ist `null`, diese Methode eine leere Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b28c0-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="b28c0-141">Wenn `path` ist `null`die <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> -Methode den Pfad, basierend auf der für die ASP.NET Dynamic Data-Anwendung definierten Routen zurück.</span><span class="sxs-lookup"><span data-stu-id="b28c0-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="b28c0-142">Können Sie die Werte gemäß der <xref:System.Web.DynamicData.PageAction> -Klasse für die `action` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b28c0-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b28c0-143">Initialisiert Daten, die beim Aufrufen des Konstruktors möglicherweise nicht verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-143">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28c0-144">Diese Methode kann nicht direkt aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="b28c0-144">This method cannot be called directly.</span></span> <span data-ttu-id="b28c0-145">Um die Initialisierung anzupassen, können von dieser Klasse ableiten und überschreiben die `Initialize` Methode.</span><span class="sxs-lookup"><span data-stu-id="b28c0-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="b28c0-146">Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement `Initialize` Methode.</span><span class="sxs-lookup"><span data-stu-id="b28c0-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28c0-147">Ruft einen Wert ab, der den n:n-Beziehungsstatus der Spalte angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-147">Gets a value that indicates the many-to-many relationship status of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b28c0-148">
            <see langword="true" />, wenn die Spaltenbeziehung auf n:n festgelegt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28c0-148">
              <see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>