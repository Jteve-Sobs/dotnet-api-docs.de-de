<Type Name="DynamicHyperLink" FullName="System.Web.DynamicData.DynamicHyperLink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70bfe1145caffdf0582e37247607aca040f8dfb6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55392362" /></Metadata><TypeSignature Language="C#" Value="public class DynamicHyperLink : System.Web.UI.WebControls.HyperLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicHyperLink extends System.Web.UI.WebControls.HyperLink implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicHyperLink" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicHyperLink&#xA;Inherits HyperLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicHyperLink : System::Web::UI::WebControls::HyperLink" />
  <TypeSignature Language="F#" Value="type DynamicHyperLink = class&#xA;    inherit HyperLink&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HyperLink</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Action")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicHyperLink), "DynamicHyperLink.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt Links zu Tabellenaktionen wie Bearbeiten, Löschen und Einfügen an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.DynamicData.DynamicHyperLink> Steuerelement erstellt, Links, die auf der Grundlage sind, die von Dynamic Data aktiviert sind. Diese Aktionen werden in der Datei "Global.asax" als Standardroutingregeln definiert. Die Regeln sind standardmäßig Seitenvorlagen, z. B. List.aspx, Edit.aspx und So weiter zugeordnet. Wenn der Benutzer auf den Link klickt, wird eine Seite angezeigt, mit dem Benutzer zum Ausführen der Aktion, die von der Verbindung angegeben wird.  
  
 Die <xref:System.Web.DynamicData.DynamicHyperLink> -Steuerelement ermöglicht Ihnen, erstellen Sie die folgenden Links:  
  
-   Tabelle Zeile datengebundenen Links, die für bestimmte Aktionslinks Datenelements, wie z. B. "Bearbeiten" und "Details" sind. Dynamische Daten leitet der Tabelle und den Primärschlüssel aus der aktuellen Zeile ab. Ein Beispiel für diese Links wird auf der Seite Edit.aspx ein Dynamic Data-Website.  
  
-   Enthält Links zu <xref:System.Web.DynamicData.MetaTable> Objekte, die Links für bestimmte Aktionen wie "List" und "Einfügen" sind, die wiederum auf Objekte wie Tabellen verweisen. Ein Beispiel für diese Links wird auf der Seite "default.aspx" ein Dynamic Data-Website.  
  
-   Ungebundene Links, die Tabellenaktionslinks außerhalb eines datengebundenen Steuerelements zu erstellen. Ein Beispiel dieser Links ist in der Insert-Link in der Seitenvorlage List.aspx eine dynamische Website für die Daten. Da diese Links nicht Teil eines datengebundenen Steuerelements, die über einen definierten Datenkontext verfügt sind, müssen Sie die Tabelle, um den Zugriff und die auszuführende Aktion angeben. Wenn Sie "Bearbeiten" oder "Details" als Aktion angeben, müssen Sie auch den primären Schlüssel bereitstellen.  
  
 Die <xref:System.Web.DynamicData.DynamicHyperLink> steuern zusätzliche Markupattribute unterstützt, und klicken Sie dann an das Routingmodul weitergeleitet werden können, wenn der Link aktiviert ist. Dies kann nützlich sein, wenn Sie einen elementspezifischen-Link aus einem nicht-datengebundenen Kontext benötigen.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:DynamicHyperlink  
    ID="string"  
    Action="Details|Edit|Insert|List"  
    ContextTypeName="string"  
    DataField="string"  
    TableName="string"  
    OnDataBinding="DataBinding event handler"  
    OnPreRender="PreRender event handler"/>  
```  
  
   
  
## Examples  
 Visual Studio-Projekt mit Quellcode ist zur Ergänzung dieses Themas verfügbar: [Gerüstbau für dynamische Daten](https://go.microsoft.com/fwlink/?LinkId=168914).  
  
 Die folgenden Beispiele zeigen, wie Sie erstellen <xref:System.Web.DynamicData.DynamicHyperLink> Steuerelemente für die Datenzeilen, die für eine Sammlung, und klicken Sie auf die angegebene Aktion auszuführen.  
  
 [!code-aspx-csharp[DynamicData.DynamicHyperlinks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/cs/dynamicdatadynamichyperlink.aspx#1)]
 [!code-aspx-vb[DynamicData.DynamicHyperlinks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/vb/dynamicdatadynamichyperlink.aspx#1)]  
  
 [!code-csharp[DynamicData.DynamicHyperlinks#2](~/samples/snippets/csharp/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/cs/dynamicdatadynamichyperlink.aspx.cs#2)]
 [!code-vb[DynamicData.DynamicHyperlinks#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/dynamicdata.dynamichyperlinks/vb/dynamicdatadynamichyperlink.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/7ac9e397-2538-4b72-9534-3ca65d5255d6">Vorgehensweise: Link zu den Aktionen für die Tabelle über Hyperlinks in dynamische Daten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicHyperLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicHyperLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.DynamicHyperLink" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.DynamicData.ActionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die diesem Link zugeordnete Aktion ab oder legt diese fest.</summary>
        <value>Die diesem Link zugeordnete Aktion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vordefinierte Werte, die Sie für diese Eigenschaft zuweisen können, sind "Bearbeiten", "Insert", "List" und "Details". Jeder dieser Werte ist eine Seitenvorlage zugeordnet. Sie können auch benutzerdefinierte Werte zuweisen. Benutzerdefinierte Werte müssen durch benutzerdefinierte Seitenvorlagen unterstützt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicHyperLink.TableName" />
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenkontext für das Datenmodell ab, das für den Link gilt, oder legt diesen fest.</summary>
        <value>Der für den Link geltende Datenkontext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.DynamicData.DynamicHyperLink> Steuerelement in einem datengebundenen Steuerelement verwendet wird, der Standardwert ist identisch mit der, die vom datengebundenen Steuerelement verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anzeigetext des Links ab oder legt diesen fest.</summary>
        <value>Der Anzeigetext des Links.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Text des links Anzeige leer ist, wird die Standardanzeige `string` verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="dynamicHyperLink.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.DataBinding" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode benachrichtigt ein <xref:System.Web.DynamicData.DynamicHyperLink> steuern Sie, dass keine Logik zum Binden von Daten ausgeführt werden muss.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde versucht, während der Datenbindung die Tabelle und den Datenkontext festzulegen.  
  
- oder - 
Es wurde versucht, an ein <see langword="null" />-Datenfeld zu binden.</exception>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="dynamicHyperLink.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode benachrichtigt ein <xref:System.Web.DynamicData.DynamicHyperLink> Schritte Steuerelement, dass alle erforderlichen vor dem eigentlichen Rendern ausgeführt werden muss, bevor das Steuerelement Ansichtszustand speichert und rendert Inhalt so.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Web.DynamicData.DynamicHyperLink" />-Objekt kann die Datentabelle nicht bestimmen, mit der eine Verknüpfung hergestellt werden soll.</exception>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des abzurufenden Attributs.</param>
        <summary>Ruft den Wert des angegebenen Attributs ab, das auf das <see cref="T:System.Web.DynamicData.DynamicHyperLink" />-Steuerelement angewendet wird.</summary>
        <returns>Das angegebene Attribut, das auf den Link angewendet wird.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Attributs.</param>
        <param name="value">Der dem Attribut zugewiesene Wert.</param>
        <summary>Definiert ein Attribut und dessen Wert, die auf das <see cref="T:System.Web.DynamicData.DynamicHyperLink" />-Steuerelement angewendet werden sollen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicHyperLink.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.DynamicData.DynamicHyperLink.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Navigation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Tabelle für die Linkaktion ab oder legt diese fest.</summary>
        <value>Der Name der Tabelle für die Linkaktion.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicHyperLink.Action" />
      </Docs>
    </Member>
  </Members>
</Type>