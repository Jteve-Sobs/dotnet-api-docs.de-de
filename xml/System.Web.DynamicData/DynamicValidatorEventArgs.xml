<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="207229b329edade5d3551b759bebbc3e1d30120f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DynamicValidatorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Basisklasse für <see cref="T:System.Web.DynamicData.DynamicValidator" />-Klassen, die Ereignisdaten enthalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.DynamicValidator> Klasse fängt Ausnahmen, die von LINQ to SQL-Klassen oder Entity Framework-Methoden in einem Datenmodell ausgelöst. Diese Klasse enthält keine Ereignisdaten. Es wird von Ereignissen, die nicht bestehen, Zustandsinformationen an einen Ereignishandler, wenn ein Ereignis ausgelöst wird. Wenn der Ereignishandler Zustandsinformationen erforderlich ist, müssen Sie eine abgeleitete Klasse von dieser Klasse zum Speichern der Daten erstellen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicValidatorEventArgs : Exception * System.Web.DynamicData.DynamicDataSourceOperation -&gt; System.Web.DynamicData.DynamicValidatorEventArgs" Usage="new System.Web.DynamicData.DynamicValidatorEventArgs (exception, operation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">Die aufgetretene Ausnahme.</param>
        <param name="operation">Der Datenquellenvorgang, der die Ausnahme verursacht hat.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" />-Klasse mit der aufgetretenen Ausnahme und dem Datenquellenvorgang, der die Ausnahme verursacht hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data stellt Data Source-Vorgänge, die von einem Datenquellenobjekt ausgeführt werden können. Zu diesen Vorgängen gehören `Delete`, `Insert`, `Select` und `Update` und `ContextCreate`. Wenn eine Ausnahme während einer Datenquellenvorgang auftritt, werden der Datenquellenvorgang, der die Ausnahme und die aufgetretene Ausnahme verursacht durch dargestellt <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> und <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> bzw.  
  
 Dieser Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.DynamicData.DynamicValidatorEventArgs> -Klasse unter Verwendung dieser Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausnahme ab, die während eines Datenquellenvorgangsereignisses auftritt.</summary>
        <value>Die Ausnahme, die während des Datenquellenvorgangsereignisses aufgetreten ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data stellt Data Source-Vorgänge, die von einem Datenquellenobjekt ausgeführt werden können. Zu diesen Vorgängen gehören `Delete`, `Insert`, `Select` und `Update` und `ContextCreate`. Wenn eine Ausnahme auftritt, die <xref:System.Web.DynamicData.DynamicValidator> Klasse verwendet diese Eigenschaft, um den Typ der Ausnahme abzurufen, die während eines Data Source-Vorgangs ausgelöst wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.DynamicData.DynamicDataSourceOperation" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenquellenvorgang ab, der eine Ausnahme in der <see cref="T:System.Web.DynamicData.DynamicValidator" />-Klasse verursacht hat.</summary>
        <value>Der Datenquellenvorgang, der die Ausnahme verursacht hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data stellt Datenquellenvorgang, die durch das Datenquellenobjekt ausgeführt werden können. Zu diesen Vorgängen gehören `Delete`, `Insert`, `Select` und `Update` und `ContextCreate`. Wenn eine Ausnahme auftritt, die <xref:System.Web.DynamicData.DynamicValidator> Klasse verwendet diese Eigenschaft, um den Vorgang abzurufen, die diese Ausnahme ausgelöst hat.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>