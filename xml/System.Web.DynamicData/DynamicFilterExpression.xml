<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36d105b57df179e9c81003243c20b397d05b6029" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139849" /></Metadata><TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicFilterExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ändert eine Datenbankabfrage mithilfe eines Werts aus dem angegebenen Filtersteuerelement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Web.DynamicData.DynamicFilterExpression> der-Klasse können Sie eine Datenbankabfrage mithilfe der Werte ändern, die in <xref:System.Web.DynamicData.DynamicFilter> einem-Steuerelement zugewiesen sind. Dieses Steuerelement delegiert die Aufgabe zum Aufbau der <xref:System.Linq.IQueryable> Abfrage an ein spezielles Steuerelement, <xref:System.Web.DynamicData.QueryableFilterRepeater> z. <xref:System.Web.DynamicData.DynamicFilter> b. Steuerelement oder Steuerelement.  
  
 Die Filter Steuerelemente wiederum delegieren das Erstellen der Abfrage an die Filter Vorlage, auf die Sie verweisen. Die Abfrage wird dann von dem Datenquellen-Steuerelement ausgeführt, auf das <xref:System.Web.UI.WebControls.QueryExtender> vom-Steuerelement verwiesen wird.  
  
 Um die- <xref:System.Web.DynamicData.DynamicFilterExpression> Klasse auf einer Seite zu verwenden, führen Sie die folgenden Schritte aus:  
  
-   Fügen Sie <xref:System.Web.UI.WebControls.QueryExtender> der Seite ein-Steuerelement hinzu.  
  
-   Legen Sie `TargetControlID` die-Eigenschaft <xref:System.Web.UI.WebControls.QueryExtender> des-Steuer Elements auf das Datenquellen-Steuerelement fest.  
  
-   Fügen Sie <xref:System.Web.DynamicData.DynamicFilterExpression> ein-Objekt als unter <xref:System.Web.UI.WebControls.QueryExtender> geordnetes Element des-Steuer Elements hinzu.  
  
-   Legen Sie `ControlID` die-Eigenschaft <xref:System.Web.DynamicData.DynamicFilterExpression> des-Objekts auf das Filter Steuerelement fest.  
  
 In den vorherigen Schritten wird davon ausgegangen, dass die zugehörigen Filter Steuerelemente, Daten gebundene Steuerelemente und das Datenquellen-Steuerelement auf der Seite definiert sind.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Web.DynamicData.DynamicFilterExpression> -Steuerelement verwendet wird, um eine Filter Vorlage auf einer Seite auszuwählen. Die Filter Vorlage wird von dem Steuer <xref:System.Web.DynamicData.DynamicFilter> Element ausgewählt, das durch <xref:System.Web.DynamicData.DynamicFilterExpression> die- `ControlID` Eigenschaft des Steuer Elements identifiziert wird.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner des Filtersteuerelements ab oder legt ihn fest.</summary>
        <value>Der Bezeichner des Filtersteuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Steuerelement Bezeichner wird von <xref:System.Web.DynamicData.DynamicFilterExpression> der-Klasse verwendet, um das Filter Steuerelement auszuwählen, an das der Task zum Aufbau der Abfrage delegiert wird, das wiederum vom Datenquellen-Steuerelement ausgeführt wird.  
  
 Das Filter Steuerelement delegiert die Aufgabe zum Erstellen der Abfrage an die Filter Vorlage, auf die verwiesen wird. Die Abfrage wird dann von dem Datenquellen-Steuerelement ausgeführt, auf das <xref:System.Web.UI.WebControls.QueryExtender> vom-Steuerelement verwiesen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.DynamicData.DynamicFilterExpression> -Klasse verwendet wird, um ein Filter Steuerelement auf einer Seite auszuwählen.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicFilterExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Die zu ändernde Datenquellenabfrage.</param>
        <summary>Ruft die geänderte Abfrage mithilfe des aktuellen Filterwerts ab.</summary>
        <returns>Die Datenquellenabfrage, die mit dem aktuellen Wert geändert wird, der in der <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />-Instanz enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A> -Methode delegiert die Aufgabe zum Erstellen der Abfrage an die Filter Vorlage, auf die vom Filter Steuerelement verwiesen wird, <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> das durch die-Eigenschaft angegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicFilterExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Das Steuerelement, das die <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />-Instanz enthält, beispielsweise das <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement.</param>
        <param name="context">Das aktuelle <see cref="T:System.Web.HttpContext" />-Objekt.</param>
        <param name="dataSource">Die Zieldatenquelle für die <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />-Instanz.</param>
        <summary>Initialisiert den Ausdruck mit Datenquelleninformationen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
