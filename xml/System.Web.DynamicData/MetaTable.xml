<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="65887-101">Stellt die Metadaten dar, die eine von Dynamic Data-Seiten zu verwendende Tabelle beschreiben.</span><span class="sxs-lookup"><span data-stu-id="65887-101">Represents the metadata that describes a table for use by Dynamic Data pages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65887-102">Im folgende Beispiel ist Teil der Code-Behind-Datei für die Seitenvorlage Insert.aspx.</span><span class="sxs-lookup"><span data-stu-id="65887-102">The following example is part of the code-behind file for the Insert.aspx page template.</span></span> <span data-ttu-id="65887-103">Die <xref:System.Web.DynamicData.MetaTable> -Instanz wird initialisiert, der `Page_Load` Methode.</span><span class="sxs-lookup"><span data-stu-id="65887-103">The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method.</span></span> <span data-ttu-id="65887-104">Der Titel für die Seite wird festgelegt, auf die Tabelle `DisplayName` Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="65887-104">The title for the page is set to the table `DisplayName` property.</span></span>  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="metaModel"><span data-ttu-id="65887-105">Das Metamodell für Entitäten.</span><span class="sxs-lookup"><span data-stu-id="65887-105">The entity meta model.</span></span></param>
        <param name="tableProvider"><span data-ttu-id="65887-106">Der Entitätsmodellanbieter.</span><span class="sxs-lookup"><span data-stu-id="65887-106">The entity model provider.</span></span></param>
        <summary><span data-ttu-id="65887-107">Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.MetaTable" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="65887-107">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-108">Die `tableProvider` Parameter zur Initialisierung der <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="65887-108">The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-109">Ruft die Attribute ab, die der Tabelle zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="65887-109">Gets the attributes that are associated with the table.</span></span></summary>
        <value><span data-ttu-id="65887-110">Eine Auflistung, die die Attribute der Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-110">A collection that contains the attributes of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-111">Erstellt die Attributauflistung.</span><span class="sxs-lookup"><span data-stu-id="65887-111">Creates the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="65887-112">Die Attributauflistung.</span><span class="sxs-lookup"><span data-stu-id="65887-112">The attribute collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="65887-113">Der Sicherheitskontext des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="65887-113">The user's security context.</span></span></param>
        <summary><span data-ttu-id="65887-114">Ruft einen Wert ab, der angibt, ob der angegebene Benutzer Löschvorgänge ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="65887-114">Gets a value that indicates whether the specified user is allowed to perform delete operations.</span></span></summary>
        <returns>
          <span data-ttu-id="65887-115"><see langword="true" />, wenn der Benutzer Löschvorgänge ausführen darf, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-115"><see langword="true" /> if the user is allowed to perform delete operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-116">Ein Prinzipalobjekt stellt den Sicherheitskontext des Benutzers, dessen Auftrag der Code ausgeführt wird, einschließlich der Identität des Benutzers, und keine Rollen, zu denen sie gehören.</span><span class="sxs-lookup"><span data-stu-id="65887-116">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="65887-117">Der Sicherheitskontext des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="65887-117">The user's security context.</span></span></param>
        <summary><span data-ttu-id="65887-118">Ruft einen Wert ab, der angibt, ob der angegebene Benutzer Einfügevorgänge ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="65887-118">Gets a value that indicates whether the specified user is allowed to perform insert operations.</span></span></summary>
        <returns>
          <span data-ttu-id="65887-119"><see langword="true" />, wenn der Benutzer Einfügevorgänge ausführen darf, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-119"><see langword="true" /> if the user is allowed to perform insert operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-120">Ein Prinzipalobjekt stellt den Sicherheitskontext des Benutzers, dessen Auftrag der Code ausgeführt wird, einschließlich der Identität des Benutzers, und keine Rollen, zu denen sie gehören.</span><span class="sxs-lookup"><span data-stu-id="65887-120">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="65887-121">Der Sicherheitskontext des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="65887-121">The user's security context.</span></span></param>
        <summary><span data-ttu-id="65887-122">Ruft einen Wert ab, der angibt, ob der angegebene Benutzer Lesevorgänge ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="65887-122">Gets a value that indicates whether the specified user is allowed to perform read operations.</span></span></summary>
        <returns>
          <span data-ttu-id="65887-123"><see langword="true" />, wenn der Benutzer Lesevorgänge ausführen darf, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-123"><see langword="true" /> if the user is allowed to perform read operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-124">Ein Prinzipalobjekt stellt den Sicherheitskontext des Benutzers, dessen Auftrag der Code ausgeführt wird, einschließlich der Identität des Benutzers, und keine Rollen, zu denen sie gehören.</span><span class="sxs-lookup"><span data-stu-id="65887-124">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="65887-125">Der Sicherheitskontext des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="65887-125">The user's security context.</span></span></param>
        <summary><span data-ttu-id="65887-126">Ruft einen Wert ab, der angibt, ob der angegebene Benutzer Updatevorgänge ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="65887-126">Gets a value that indicates whether the specified user is allowed to perform update operations.</span></span></summary>
        <returns>
          <span data-ttu-id="65887-127"><see langword="true" />, wenn der Benutzer Updatevorgänge ausführen darf, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-127"><see langword="true" /> if the user is allowed to perform update operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-128">Ein Prinzipalobjekt stellt den Sicherheitskontext des Benutzers, dessen Auftrag der Code ausgeführt wird, einschließlich der Identität des Benutzers, und keine Rollen, zu denen sie gehören.</span><span class="sxs-lookup"><span data-stu-id="65887-128">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-129">Ruft die Spaltenauflistung für die Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="65887-129">Gets the column collection for the table.</span></span></summary>
        <value><span data-ttu-id="65887-130">Eine Auflistung, die die Spalten für die Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-130">A collection that contains the columns for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65887-131">Im folgenden Beispiel wird die Verwendung der <xref:System.Web.DynamicData.MetaTable.Columns%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="65887-131">The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property.</span></span> <span data-ttu-id="65887-132">Im Beispiel wurden die Dynamic Data-Vorlagen in den Ordner \DynamicData\CustomPages\ProductDescriptions, geben Sie einen benutzerdefinierten Anzeigenamen für die ProductDescription-Tabelle der AdventureWorksLT-Datenbank kopiert.</span><span class="sxs-lookup"><span data-stu-id="65887-132">In the example, the Dynamic Data page templates have been copied to the \DynamicData\CustomPages\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database.</span></span> <span data-ttu-id="65887-133">Das Markup der Datei Insert.aspx wird geändert, um eine `OnDataBound` Ereignishandler mit dem Namen `DetailsView1_DataBound`.</span><span class="sxs-lookup"><span data-stu-id="65887-133">The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`.</span></span> <span data-ttu-id="65887-134">Im Ereignishandler die <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> Methode wird verwendet, um das Meta-Tabelle zu suchen.</span><span class="sxs-lookup"><span data-stu-id="65887-134">In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table.</span></span> <span data-ttu-id="65887-135">Die <xref:System.Web.DynamicData.MetaTable.Columns%2A> Eigenschaft wird verwendet, um die Anzahl der Spalten in der Tabelle anzeigen.</span><span class="sxs-lookup"><span data-stu-id="65887-135">The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="65887-136">Der Spaltenanbieter.</span><span class="sxs-lookup"><span data-stu-id="65887-136">The column provider.</span></span></param>
        <summary><span data-ttu-id="65887-137">Erstellt ein neues <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="65887-137">Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="65887-138">Das neue untergeordnete Metaspaltenobjekt.</span><span class="sxs-lookup"><span data-stu-id="65887-138">The new child metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-139">Diese Methode kann überschrieben werden, um einen abgeleiteten Typ zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-139">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="65887-140">Der Spaltenanbieter.</span><span class="sxs-lookup"><span data-stu-id="65887-140">The column provider.</span></span></param>
        <summary><span data-ttu-id="65887-141">Erstellt ein <see cref="T:System.Web.DynamicData.MetaColumn" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="65887-141">Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="65887-142">Das neue Metaspaltenobjekt.</span><span class="sxs-lookup"><span data-stu-id="65887-142">The new metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-143">Diese Methode kann überschrieben werden, um einen abgeleiteten Typ zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-143">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-144">Gibt den Datenkontext für die Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-144">Returns the data context for the table.</span></span></summary>
        <returns><span data-ttu-id="65887-145">Der Datenkontext für die Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-145">The data context for the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-146">Der Datenkontext wird abgerufen, aus einem neuen Kontext, der durch den Aufruf instanziiert wird die <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="65887-146">The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="65887-147">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-147">For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="65887-148">Der Spaltenanbieter.</span><span class="sxs-lookup"><span data-stu-id="65887-148">The column provider.</span></span></param>
        <summary><span data-ttu-id="65887-149">Erstellt ein Objekt, das Fremdschlüsselmetadaten enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-149">Creates an object that contains foreign-key metadata.</span></span></summary>
        <returns><span data-ttu-id="65887-150">Ein Objekt, das Fremdschlüsselmetadaten enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-150">An object that contains foreign-key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-151">Diese Methode kann überschrieben werden, um einen abgeleiteten Typ zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-151">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65887-152">Erstellt ein <see cref="T:System.Web.DynamicData.MetaTable" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="65887-152">Creates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor"><span data-ttu-id="65887-153">Informationen zum Tabellentyp.</span><span class="sxs-lookup"><span data-stu-id="65887-153">Information about the table type.</span></span></param>
        <summary><span data-ttu-id="65887-154">Erstellt die Metadaten für die angegebene Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-154">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="65887-155">Ein Objekt, das die Tabellenmetadaten enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-155">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="65887-156">Der Tabellentyp, für den Metadaten generiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65887-156">The table type for which to generate metadata.</span></span></param>
        <summary><span data-ttu-id="65887-157">Erstellt die Metadaten für die angegebene Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-157">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="65887-158">Ein Objekt, das die Tabellenmetadaten enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-158">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-159">Ruft den Namen der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="65887-159">Gets the name of the table.</span></span></summary>
        <value><span data-ttu-id="65887-160">Der Name der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-160">The name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-161">Der Name wird von der <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> -Objekt, das die Tabelle gehört.</span><span class="sxs-lookup"><span data-stu-id="65887-161">The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-162">Ruft den Typ des Datenkontexts ab, der der Tabelle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65887-162">Gets the type of the data context that is associated with the table.</span></span></summary>
        <value><span data-ttu-id="65887-163">Der Typ des Datenkontexts.</span><span class="sxs-lookup"><span data-stu-id="65887-163">The type of the data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-164">Weitere Informationen finden Sie unter der <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-164">For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-165">Ruft die Spalte ab, in der Werte angezeigt werden, wenn Einträge in dieser Tabelle als übergeordnete Elemente in Fremdschlüsselbeziehungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="65887-165">Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></summary>
        <value><span data-ttu-id="65887-166">Die Spalte, in der Werte angezeigt werden, wenn Einträge in dieser Tabelle als übergeordnete Elemente in Fremdschlüsselbeziehungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="65887-166">The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-167">Die Spalte, die zurückgegeben wird, die in dieser Reihenfolge ausgewählt ist:</span><span class="sxs-lookup"><span data-stu-id="65887-167">The column that is returned is selected in this order:</span></span>  
  
1.  <span data-ttu-id="65887-168">Die Spalte, die mithilfe des Parameters der <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="65887-168">The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.</span></span>  
  
2.  <span data-ttu-id="65887-169">Das erste string-Spalte, die nicht in den Primärschlüssel enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="65887-169">The first string column that is not in the primary key.</span></span>  
  
3.  <span data-ttu-id="65887-170">Das erste string-Spalte, die in den primären Schlüssel ist.</span><span class="sxs-lookup"><span data-stu-id="65887-170">The first string column that is in the primary key.</span></span>  
  
4.  <span data-ttu-id="65887-171">Die erste keine Zeichenfolgenmethoden-Spalte, die in den primären Schlüssel ist.</span><span class="sxs-lookup"><span data-stu-id="65887-171">The first non-string column that is in the primary key.</span></span>  
  
5.  <span data-ttu-id="65887-172">Die erste Spalte.</span><span class="sxs-lookup"><span data-stu-id="65887-172">The first column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-173">Ruft den Namen der Tabelle in einem benutzerfreundlichen Format ab.</span><span class="sxs-lookup"><span data-stu-id="65887-173">Gets the name of the table in a user-friendly format.</span></span></summary>
        <value><span data-ttu-id="65887-174">Die Zeichenfolge, die den benutzerfreundlichen Namen der Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-174">The string that represents the user-friendly name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-175">Der Standardwert dieser Eigenschaft auf den Wert des der <xref:System.Web.DynamicData.MetaTable.Name%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="65887-175">The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property.</span></span> <span data-ttu-id="65887-176">Sie können den Wert dieser Eigenschaft anpassen, indem Sie mit der <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> Attribut.</span><span class="sxs-lookup"><span data-stu-id="65887-176">You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-177">Ruft den Entitätstyp ab, der die Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-177">Gets the entity type that represents the table.</span></span></summary>
        <value><span data-ttu-id="65887-178">Der Typ, der die Entität darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-178">The type that represents the entity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-179">Ruft eine durch Trennzeichen getrennte Liste von Fremdschlüsselnamen ab.</span><span class="sxs-lookup"><span data-stu-id="65887-179">Gets a comma-separated list of foreign-key names.</span></span></summary>
        <value><span data-ttu-id="65887-180">Eine durch Trennzeichen getrennte Liste von Fremdschlüsselnamen.</span><span class="sxs-lookup"><span data-stu-id="65887-180">A comma-separated list of foreign-key names.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65887-181">Ruft den Aktionspfad für die angegebene Zeile ab.</span><span class="sxs-lookup"><span data-stu-id="65887-181">Gets the action path for the specified row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-182">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-182">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-183">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-183">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-184">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-184">The name of the action.</span></span></param>
        <summary><span data-ttu-id="65887-185">Gibt den Aktionspfad für die aktuelle Tabelle und die angegebene Aktion zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-185">Returns the action path for the current table and the specified action.</span></span></summary>
        <returns><span data-ttu-id="65887-186">Der Aktionspfad für die angegebene Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-186">The action path for the specified action.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65887-187">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-187">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-188">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-188">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-189">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-189">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="65887-190">Die Liste der Spaltenwerte, aus denen der Primärschlüssel besteht.</span><span class="sxs-lookup"><span data-stu-id="65887-190">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="65887-191">Gibt den Aktionspfad für die aktuelle Tabelle, die angegebene Aktion und den angegebenen Primärschlüssel zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-191">Returns the action path for the current table, specified action, and specified primary key.</span></span></summary>
        <returns><span data-ttu-id="65887-192">Der Aktionspfad für die angegebene Aktion und den angegebenen Primärschlüssel.</span><span class="sxs-lookup"><span data-stu-id="65887-192">The action path for the specified action and primary key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-193">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-193">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-194">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-194">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-195">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-195">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="65887-196">Die Zeile, deren Aktionspfad abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="65887-196">The row to get the action path for.</span></span></param>
        <summary><span data-ttu-id="65887-197">Gibt den Aktionspfad für die angegebene Zeile unter Verwendung des Namens der Aktion zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-197">Returns the action path for the specified row by using the name of the action.</span></span></summary>
        <returns><span data-ttu-id="65887-198">Der Aktionspfad für die angegebene Zeile.</span><span class="sxs-lookup"><span data-stu-id="65887-198">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-199">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-199">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-200">Der Aktionspfad enthält die Namen Primary Key-Spalte, die für Abfragezeichenfolgen-Filter verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="65887-200">The action path contains the primary-key column names, which can be used for query-string filters.</span></span>  
  
 <span data-ttu-id="65887-201">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-201">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-202">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-202">The name of the action.</span></span></param>
        <param name="routeValues"><span data-ttu-id="65887-203">Die Liste der Routen für die Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-203">The list of routes for the action.</span></span></param>
        <summary><span data-ttu-id="65887-204">Gibt den Aktionspfad für die aktuelle Tabelle, für die angegebene Aktion und für die angegebenen Routen zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-204">Returns the action path for the current table and for the specified action and routes.</span></span></summary>
        <returns><span data-ttu-id="65887-205">Der Aktionspfad für die angegebene Aktion und die angegebenen Routen.</span><span class="sxs-lookup"><span data-stu-id="65887-205">The action path for the specified action and routes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-206">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-206">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-207">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-207">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-208">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-208">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="65887-209">Die Liste der Spaltenwerte, aus denen der Primärschlüssel besteht.</span><span class="sxs-lookup"><span data-stu-id="65887-209">The list of column values that make up the primary key.</span></span></param>
        <param name="path"><span data-ttu-id="65887-210">Der virtuelle Pfad der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-210">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="65887-211">Fügt Abfragezeichenfolgen auf der Grundlage des angegebenen Primärschlüssels und des angegebenen virtuellen Pfads an den Aktionspfad an.</span><span class="sxs-lookup"><span data-stu-id="65887-211">Appends query strings to the action path, based on the specified primary key and virtual path.</span></span></summary>
        <returns><span data-ttu-id="65887-212">Der Aktionspfad für den angegebenen Primärschlüssel und den angegebenen virtuellen Pfad, an den Abfragezeichenfolgenwerte angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="65887-212">The action path for the specified primary key and virtual path, with query-string values appended to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-213">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-213">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-214">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-214">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="65887-215">Der Name der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-215">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="65887-216">Ein Objekt, das die Zeile für den Aktionspfad enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-216">An object that contains the row for the action path.</span></span></param>
        <param name="path"><span data-ttu-id="65887-217">Der virtuelle Pfad der Aktion.</span><span class="sxs-lookup"><span data-stu-id="65887-217">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="65887-218">Gibt den Aktionspfad für die angegebene Zeile unter Verwendung des Namens und virtuellen Pfads der Aktion zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-218">Returns the action path for the specified row by using the name of the action and the virtual path of the action.</span></span></summary>
        <returns><span data-ttu-id="65887-219">Der Aktionspfad für die angegebene Zeile.</span><span class="sxs-lookup"><span data-stu-id="65887-219">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-220">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-220">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-221">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-221">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="65887-222">Der Name der Spalte, deren Metadaten abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65887-222">The name of the column to get metadata for.</span></span></param>
        <summary><span data-ttu-id="65887-223">Gibt die Metadaten für die angegebene Spalte zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-223">Returns the metadata for the specified column.</span></span></summary>
        <returns><span data-ttu-id="65887-224">Die Spaltenmetadaten.</span><span class="sxs-lookup"><span data-stu-id="65887-224">The column metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="65887-225">Der Kontext für die angegebene Webanforderung.</span><span class="sxs-lookup"><span data-stu-id="65887-225">The context for the specified Web request.</span></span></param>
        <summary><span data-ttu-id="65887-226">Ruft die Auflistung der Spaltenwerte ab.</span><span class="sxs-lookup"><span data-stu-id="65887-226">Gets the collection of column values.</span></span></summary>
        <returns><span data-ttu-id="65887-227">Die Auflistung der Spaltenwerte.</span><span class="sxs-lookup"><span data-stu-id="65887-227">The collection of column values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-228">Ruft den Primärschlüssel der Entität von den Routenwerten ab.</span><span class="sxs-lookup"><span data-stu-id="65887-228">Retrieves the primary key of the entity from the route values.</span></span></summary>
        <returns><span data-ttu-id="65887-229">Die Primärschlüsselwerte der Entitäten, falls sie gefunden werden, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65887-229">The primary-key values of the entities, if they are found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-230">Die Routenwerte stammen normalerweise aus der Anforderung URL-Abfragezeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="65887-230">The route values typically come from the request URL query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="65887-231">Die Zeile, deren Anzeigezeichenfolge abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="65887-231">The row to get the display string for.</span></span></param>
        <summary><span data-ttu-id="65887-232">Gibt den Wert zurück, der als Anzeigezeichenfolge für eine Instanz einer Zeile verwendet werden soll, wenn die Zeile in Fremdschlüsselbeziehungen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="65887-232">Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</span></span></summary>
        <returns><span data-ttu-id="65887-233">Der Anzeigename für eine Instanz einer Zeile.</span><span class="sxs-lookup"><span data-stu-id="65887-233">The display name for an instance of a row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-234">Wenn die Zeile `null`, wird eine leere Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="65887-234">If the row is `null`, an empty string is returned.</span></span> <span data-ttu-id="65887-235">Wenn die Entitätsklasse eine Überschreibung der enthält die <xref:System.Web.DynamicData.MetaTable.ToString%2A> -Methode, die außer Kraft gesetzte <xref:System.Web.DynamicData.MetaTable.ToString%2A> zurückgegebene Wert.</span><span class="sxs-lookup"><span data-stu-id="65887-235">If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned.</span></span> <span data-ttu-id="65887-236">Andernfalls Methodenrückgabe der `ToString` Darstellung des Werts der <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> -Eigenschaft für die angegebene Zeile.</span><span class="sxs-lookup"><span data-stu-id="65887-236">Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-237">Ruft eine Liste von Spalten ab, die gefiltert werden können.</span><span class="sxs-lookup"><span data-stu-id="65887-237">Retrieves a list of columns that are filterable.</span></span></summary>
        <returns><span data-ttu-id="65887-238">Eine Liste der Spalten, die gefiltert werden können.</span><span class="sxs-lookup"><span data-stu-id="65887-238">A list of columns that are filterable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-239">Eine Spalte ist filterbar, wenn er mit Anmerkung versehen ist die <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> Attribut und der `Enabled` Eigenschaft von der <xref:System.Web.Mvc.FilterAttribute> -Attribut der Spalte auf festgelegt ist `true`.</span><span class="sxs-lookup"><span data-stu-id="65887-239">A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="65887-240">Eine Zeile.</span><span class="sxs-lookup"><span data-stu-id="65887-240">A row.</span></span></param>
        <summary><span data-ttu-id="65887-241">Ruft ein Wörterbuch von Primärschlüsselnamen und Werte für die angegebene Zeile ab.</span><span class="sxs-lookup"><span data-stu-id="65887-241">Retrieves a dictionary of primary-key names and values for the specified row.</span></span></summary>
        <returns><span data-ttu-id="65887-242">Ein Wörterbuch von Primärschlüsselnamen und -werten.</span><span class="sxs-lookup"><span data-stu-id="65887-242">A dictionary of primary-key names and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65887-243">Im folgende Beispiel wird gezeigt, wie ein Primärschlüssel Wörterbuch erstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-243">The following example shows how to create a primary-key dictionary.</span></span>  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65887-244">Ruft eine Liste von Werten ab, die den Primärschlüssel für die angegebene Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-244">Gets a list of values that represent the primary key for the specified row.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues"><span data-ttu-id="65887-245">Die Liste der Spaltenwerte, aus denen der Primärschlüssel besteht.</span><span class="sxs-lookup"><span data-stu-id="65887-245">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="65887-246">Gibt eine durch Trennzeichen getrennte Liste von Spaltenwerten zurück, die den Primärschlüssel für die angegebene Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-246">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="65887-247">Eine durch Trennzeichen getrennte Liste von Spaltenwerten.</span><span class="sxs-lookup"><span data-stu-id="65887-247">A comma-separated list of column values.</span></span> <span data-ttu-id="65887-248">Wenn die Liste leer ist, wird eine leere Zeichenfolge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="65887-248">If the list is empty, an empty string is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="65887-249">Die Zeile, deren Primärschlüssel abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="65887-249">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="65887-250">Gibt eine durch Trennzeichen getrennte Liste von Spaltenwerten zurück, die den Primärschlüssel für die angegebene Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-250">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="65887-251">Eine durch Trennzeichen getrennte Liste von Spaltenwerten, die den Primärschlüssel für die Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-251">A comma-separated list of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="65887-252">Die Zeile, deren Primärschlüssel abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="65887-252">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="65887-253">Gibt eine Auflistung von Spaltenwerten zurück, die den Primärschlüssel für die angegebene Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-253">Returns a collection of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="65887-254">Eine Auflistung von Spaltenwerten, die den Primärschlüssel für die Zeile darstellen.</span><span class="sxs-lookup"><span data-stu-id="65887-254">A collection of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65887-255">Ruft die <see cref="T:System.Linq.IQueryable" />-Instanz für den Entitätstyp ab, der die Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-255">Gets the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-256">Gibt die <see cref="T:System.Linq.IQueryable" />-Instanz für den Entitätstyp zurück, der die Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-256">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
        <returns><span data-ttu-id="65887-257">Die <see cref="T:System.Linq.IQueryable" />-Instanz für den Entitätstyp.</span><span class="sxs-lookup"><span data-stu-id="65887-257">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="65887-258">Der Kontext des <see cref="T:System.Web.DynamicData.MetaTable" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="65887-258">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></param>
        <summary><span data-ttu-id="65887-259">Gibt mithilfe des Datenkontexts die <see cref="T:System.Linq.IQueryable" />-Instanz für den Entitätstyp zurück, der die Tabelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-259">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</span></span></summary>
        <returns><span data-ttu-id="65887-260">Die <see cref="T:System.Linq.IQueryable" />-Instanz für den Entitätstyp, der die Tabelle im Datenkontext darstellt.</span><span class="sxs-lookup"><span data-stu-id="65887-260">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-261">Wenn die `context` Parameter ist `null`, diese Methode erstellt einen neuen Kontext durch Aufrufen der <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="65887-261">If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="65887-262">Der Modus für datengebundene Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="65887-262">The data-bound control mode.</span></span></param>
        <param name="containerType"><span data-ttu-id="65887-263">Ein Wert, der angibt, ob die Tabelle als einzelne Entität oder als Teil einer Liste von Entitäten angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="65887-263">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</span></span></param>
        <summary><span data-ttu-id="65887-264">Gibt eine Liste anzuzeigender Spalten mithilfe von Gerüstbau zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-264">Returns a list of columns to display by using scaffolding.</span></span></summary>
        <returns><span data-ttu-id="65887-265">Eine Liste mit Spalten, die mithilfe von Gerüstbau angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="65887-265">A list of columns to display by using scaffolding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-266">Diese Methode gibt alle Spalten zurück, deren <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> -Eigenschaftensatz auf `true` mit Ausnahme der folgenden:</span><span class="sxs-lookup"><span data-stu-id="65887-266">This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:</span></span>  
  
-   <span data-ttu-id="65887-267">Lange Zeichenfolgenspalten, diese Spalten, deren <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> -Eigenschaftensatz auf `true` und dessen `containerType` Parameter ist `true`.</span><span class="sxs-lookup"><span data-stu-id="65887-267">Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.</span></span>  
  
-   <span data-ttu-id="65887-268">Untergeordnete Spalten, deren <xref:System.Web.UI.WebControls.DataBoundControlMode> Wert wird festgelegt, um <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span><span class="sxs-lookup"><span data-stu-id="65887-268">Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="65887-269">Der Typ der Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-269">The type of the entity.</span></span></param>
        <summary><span data-ttu-id="65887-270">Ruft die Metatabelle ab, die dem angegebenen Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65887-270">Retrieves the metatable that is associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="65887-271">Die dem angegebenen Typ zugeordnete Metatabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-271">The metatable that is associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-272">Diese Methode ruft <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> auf.</span><span class="sxs-lookup"><span data-stu-id="65887-272">This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span></span> <span data-ttu-id="65887-273">Wenn <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> gibt `false`, wird eine <xref:System.InvalidOperationException> Ausnahme wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="65887-273">If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="65887-274">Die <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />-Methode, die von dieser Methode aufgerufen wurde, hat <see langword="false" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="65887-274">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-275">Ruft einen Wert ab, der angibt, ob die Tabelle über einen Primärschlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="65887-275">Gets a value that indicates whether the table has a primary key.</span></span></summary>
        <value>
          <span data-ttu-id="65887-276"><see langword="true" />, wenn die Tabelle über einen Primärschlüssel verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-276"><see langword="true" /> if the table has a primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-277">Initialisiert Daten, die beim Aufrufen des Konstruktors möglicherweise nicht verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="65887-277">Initializes data that may not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-278">Diese Methode ruft die <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Methode für jede Spalte in der <xref:System.Web.DynamicData.MetaTable> Instanz.</span><span class="sxs-lookup"><span data-stu-id="65887-278">This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance.</span></span> <span data-ttu-id="65887-279">Diese Methode kann nicht direkt aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="65887-279">This method cannot be called directly.</span></span> <span data-ttu-id="65887-280">Um die Initialisierung anzupassen, können von dieser Klasse ableiten und überschreiben die <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="65887-280">To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method.</span></span> <span data-ttu-id="65887-281">Wenn Sie diese Methode überschreiben, rufen Sie die Basissteuerelement `Initialize` Methode.</span><span class="sxs-lookup"><span data-stu-id="65887-281">If you override this method, call the base control's `Initialize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65887-282">Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> Methode, um den Initialisierungsprozess anzupassen.</span><span class="sxs-lookup"><span data-stu-id="65887-282">The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.</span></span>  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverridenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverridenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-283">Ruft einen Wert ab, der angibt, ob die Tabelle schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="65887-283">Gets a value that indicates whether the table is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="65887-284">Gibt <see langword="true" />, wenn die Tabelle schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-284"><see langword="true" /> if the table is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-285">Ruft den Aktionspfad der Listenaktion für die Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="65887-285">Gets the action path of the list action for the table.</span></span></summary>
        <value><span data-ttu-id="65887-286">Der Aktionspfad der Listenaktion für die Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-286">The action path of the list action for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-287">Der Aktionspfad ist eine URL für eine Aktion für eine bestimmte Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-287">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="65887-288">Weitere Informationen finden Sie unter der <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-288">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-289">Ruft das Metamodell ab, zu dem die Tabelle gehört.</span><span class="sxs-lookup"><span data-stu-id="65887-289">Gets the meta model that the table belongs to.</span></span></summary>
        <value><span data-ttu-id="65887-290">Das Metamodell, zu dem die Tabelle gehört.</span><span class="sxs-lookup"><span data-stu-id="65887-290">The meta model that the table belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-291">Weitere Informationen finden Sie unter der <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="65887-291">For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-292">Ruft den eindeutigen Namen der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="65887-292">Gets the unique name of the table.</span></span></summary>
        <value><span data-ttu-id="65887-293">Der eindeutige Name der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-293">The unique name of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-294">Ruft die Auflistung von Spalten ab, die den Primärschlüssel definieren.</span><span class="sxs-lookup"><span data-stu-id="65887-294">Gets the collection of columns that define the primary key.</span></span></summary>
        <value><span data-ttu-id="65887-295">Eine Auflistung, die die Primärschlüsselspalten enthält.</span><span class="sxs-lookup"><span data-stu-id="65887-295">A collection that contains the primary-key columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-296">Ruft den Anbieter für die Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="65887-296">Gets the provider for the table.</span></span></summary>
        <value><span data-ttu-id="65887-297">Der Anbieter für die Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-297">The provider for the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-298">Setzt die zwischengespeicherten Metadaten für die Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-298">Resets the cached metadata for the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-299">Die zwischengespeicherten Tabellenmetadaten besteht aus den Informationen, der aus dem Datenmodell Attribute und Metadaten über systeminterne Spalten abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="65887-299">The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.</span></span> <span data-ttu-id="65887-300">Der Metadatencache wird das nächste Mal neu erstellt, wenn, das keine Metadaten angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="65887-300">The metadata cache is rebuilt the next time any metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-301">Ruft den Stammtyp der Vererbungshierarchie der Entität ab.</span><span class="sxs-lookup"><span data-stu-id="65887-301">Gets the root type of the entity's inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="65887-302">Der Stammtyp der Vererbungshierarchie der Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-302">The root type of the entity's inheritance hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-303">Wenn der Typ am oberen Rand der Vererbungshierarchie wird oder verfügt nicht über einen übergeordneten Typ, wird der Entitätstyp zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="65887-303">If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-304">Ruft einen Wert ab, der angibt, ob die Tabelle angezeigt werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="65887-304">Gets or sets a value that indicates whether the table should be displayed.</span></span></summary>
        <value>
          <span data-ttu-id="65887-305"><see langword="true" />, wenn die Tabelle angezeigt werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-305"><see langword="true" /> if the table should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-306">Ruft den <see cref="T:System.Web.DynamicData.MetaColumn" />-Wert ab, nach dem die Tabelle sortiert wird.</span><span class="sxs-lookup"><span data-stu-id="65887-306">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</span></span></summary>
        <value><span data-ttu-id="65887-307">Die Spalte, nach der die Tabelle sortiert wird.</span><span class="sxs-lookup"><span data-stu-id="65887-307">The column that the table is sorted by.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65887-308">Ruft einen Wert ab, der angibt, ob Einträge in absteigender Reihenfolge sortiert werden, wenn sie in einer Fremdschlüsselbeziehung als übergeordnete Elemente verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="65887-308">Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</span></span></summary>
        <value>
          <span data-ttu-id="65887-309"><see langword="true" />, wenn Einträge in absteigender Reihenfolge sortiert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-309"><see langword="true" /> if entries are sorted in descending order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-310">Sie können die Sortierreihenfolge angeben, mit der <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> Attribut.</span><span class="sxs-lookup"><span data-stu-id="65887-310">You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65887-311">Gibt den Namen der Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="65887-311">Returns the name of the table.</span></span></summary>
        <returns><span data-ttu-id="65887-312">Der Name der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="65887-312">The name of the table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="65887-313">Der Name der zu suchenden Spalte.</span><span class="sxs-lookup"><span data-stu-id="65887-313">The name of the column to find.</span></span></param>
        <param name="column"><span data-ttu-id="65887-314">Die Rückgabe dieser Methode enthält das <see langword="MetaColumn" />-Objekt für <c>columnName</c>.</span><span class="sxs-lookup"><span data-stu-id="65887-314">When this method returns, contains the <see langword="MetaColumn" /> object for <c>columnName</c>.</span></span> <span data-ttu-id="65887-315">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="65887-315">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="65887-316">Gibt einen Wert zurück, der angibt, ob eine angegebene Spalte gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="65887-316">Returns a value that indicates whether a specified column can be found.</span></span></summary>
        <returns>
          <span data-ttu-id="65887-317"><see langword="true" />, wenn die angegebene Spalte gefunden werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="65887-317"><see langword="true" /> if the specified column can be found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65887-318">Wenn die `columnName` -Parameter ist null, ein <xref:System.InvalidOperationException> Ausnahme wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="65887-318">If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="65887-319">Der Typ der Entität.</span><span class="sxs-lookup"><span data-stu-id="65887-319">The type of the entity.</span></span></param>
        <param name="table"><span data-ttu-id="65887-320">Enthält nach dem Beenden dieser Methode die Metatabelle, die dem angegebenen Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65887-320">When this method returns, contains the metatable that is associated with the specified type.</span></span> <span data-ttu-id="65887-321">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="65887-321">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="65887-322">Ruft die Metatabelle ab, die dem angegebenen Typ und der Tabelle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65887-322">Retrieves the metatable that is associated with the specified type and table.</span></span></summary>
        <returns><span data-ttu-id="65887-323">Die Metatabelle, die dem angegebenen Typ und der Tabelle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65887-323">The metatable that is associated with the given specified and table.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65887-324"><paramref name="entityType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="65887-324"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>