<Type Name="ControlFilterExpression" FullName="System.Web.DynamicData.ControlFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ceb0e49d85ef20fa6b93daab2d8df3513e74e084" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39961931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ControlFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type ControlFilterExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ändert eine Datenbankabfrage mithilfe des Datenschlüssels des Elements, das in einem datengebundenen Steuerelement ausgewählt ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.ControlFilterExpression> Klasse, die entwickelt wurde, verwendet werden, wenn eine Seite zwei von datengebundenen Steuerelementen wie z. B. enthält eine <xref:System.Web.UI.WebControls.GridView> Steuerelement und ein <xref:System.Web.UI.WebControls.ListView> Steuerelement. Ein Steuerelement ist die Quelle, einem Datenschlüssel (Zeile) aktiviert ist. Das andere Steuerelement ist das Ziel, in denen die Daten angezeigt werden, auf Grundlage des Schlüssels für die ausgewählten Daten. Die Zieldaten werden abgerufen, indem ein Datenquellen-Steuerelement, das die Abfrage ausgeführt wird, die in definiert ist die <xref:System.Web.UI.WebControls.QueryExtender> darstellt und mit dem Schlüssel für die ausgewählten Daten basiert.  
  
 Verwenden der <xref:System.Web.DynamicData.ControlFilterExpression> Klasse auf einer Seite, Sie gehen Sie folgendermaßen vor:  
  
-   Hinzufügen der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement auf der Seite.  
  
-   Legen Sie die `TargetControlID` Eigenschaft der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement auf die ID des Datenquellensteuerelements Ziel.  
  
-   Hinzufügen einer <xref:System.Web.DynamicData.ControlFilterExpression> -Instanz, auf die <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement.  
  
-   Legen Sie die `ControlID` Eigenschaft der <xref:System.Web.DynamicData.ControlFilterExpression> Element an der Quelle vom datengebundenen Steuerelement.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.DynamicData.ControlFilterExpression> Klasse, um eine Quelle vom datengebundenen Steuerelement, verweisen, in dem der Schlüssel "Data" ausgewählt ist. Die <xref:System.Web.UI.WebControls.QueryExtender> verweist auf ein Ziel-Datenquellen-Steuerelement, die Daten, die gefiltert wird abruft, mit dem Schlüssel für die ausgewählten Daten zu steuern. Im Beispiel ist die Quelle vom datengebundenen Steuerelement verweist eine übergeordnete Tabelle, und die Ziel vom datengebundenen Steuerelement verweist auf eine untergeordnete Tabelle.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="SourceGridViewID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <altmember cref="P:System.Web.DynamicData.ControlFilterExpression.Column" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.DynamicData.ControlFilterExpression" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public string Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Column { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Column : string with get, set" Usage="System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Spalte ab, auf der die Abfrage basiert, oder legt diesen fest.</summary>
        <value>Der Name der Spalte, auf der die Abfrage basiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft leer ist, ist die <xref:System.Web.DynamicData.ControlFilterExpression> Steuerelement behandelt den ausgewählten Daten-Schlüssel als primären Schlüssel der aktuellen Tabelle. Dies ist nützlich, in einem Listendetails-Szenario, in dem Quelle und Ziel von datengebundenen Steuerelementen auf Daten aus der gleichen Tabelle ausgeführt werden.  
  
 Wenn Sie einen Wert der Eigenschaft zuweisen der <xref:System.Web.DynamicData.ControlFilterExpression> Steuerelement behandelt den Datenschlüssel als Fremdschlüssel. Der Wert dieser Eigenschaft zugewiesen wird, den Namen der Spalte, die in das Ziel vom datengebundenen Steuerelement angezeigt wird. Dies ist nützlich, in einem Szenario mit über-und untergeordneten, in dem das Ziel des datengebundenen Steuerelements verarbeitet Daten aus der untergeordneten Tabelle und die Quelle des datengebundenen Steuerelements verarbeitet Daten aus der übergeordneten Tabelle.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.DynamicData.ControlFilterExpression> Klasse, um die Spalte festlegen, die der Filter gilt.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des datengebundenen Steuerelements der Quelle ab oder legt diese fest.</summary>
        <value>Die ID des datengebundenen Steuerelements der Quelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.ControlFilterExpression.ControlID%2A> identifiziert die Quelle vom datengebundenen Steuerelement, von dem der Schlüssel "Data" ausgewählt ist. Die ausgewählten Daten-Schlüssel wird dann verwendet, durch die <xref:System.Web.DynamicData.ControlFilterExpression> Steuerelement zum Erstellen der Abfrage.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.DynamicData.ControlFilterExpression> Klasse, um die ID des datengebundenen Datenquellen-Steuerelements festzulegen.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="controlFilterExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Die zu ändernde Datenquellenabfrage.</param>
        <summary>Ruft die zu ändernde Datenquellenabfrage ab.</summary>
        <returns>Das Objekt, das die Datenquellenabfrage darstellt, die von dieser <see cref="T:System.Web.DynamicData.ControlFilterExpression" />-Instanz geändert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.ControlFilterExpression.GetQueryable%28System.Linq.IQueryable%29> -Methode ändert die Abfrage, die basierend auf dem ausgewählten Daten von der Quelle vom datengebundenen Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="controlFilterExpression.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Der wiederherzustellende Zustand.</param>
        <summary>Stellt den zuvor gespeicherten Ansichtszustand wieder her.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="controlFilterExpression.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand ab dem Zeitpunkt, zu dem die Seite an den Server gesendet wurde.</summary>
        <returns>Das Objekt, das die Änderungen am Ansichtszustand enthält. Wenn kein dem Objekt zugeordneter Ansichtszustand vorhanden ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="controlFilterExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Das Steuerelement, in dem die <see cref="T:System.Web.DynamicData.ControlFilterExpression" />-Instanz enthalten ist, beispielsweise das <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement.</param>
        <param name="context">Das aktuelle <see cref="T:System.Web.HttpContext" />-Objekt der Anwendung.</param>
        <param name="dataSource">Die Zieldatenquelle für die <see cref="T:System.Web.DynamicData.ControlFilterExpression" />-Instanz. Wenn die <see cref="T:System.Web.DynamicData.DynamicFilterExpression" />-Instanz im <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement enthalten ist, ist dieser Parameter die Datenquelle, auf die das <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement verweist</param>
        <summary>Initialisiert den Filterausdruck mit Datenquelleninformationen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="controlFilterExpression.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass das <see cref="T:System.Web.DynamicData.ControlFilterExpression" />-Objekt Änderungen an seinem Ansichtszustand nachverfolgt, damit diese im Ansichtszustandobjekt des Steuerelements gespeichert und über Anforderungen der gleichen Seite hinweg beibehalten werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>