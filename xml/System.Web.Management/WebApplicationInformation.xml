<Type Name="WebApplicationInformation" FullName="System.Web.Management.WebApplicationInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1aeaa62e56d0b8502d057d351bb8c0b9e939f1a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36400557" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebApplicationInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebApplicationInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebApplicationInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationInformation sealed" />
  <TypeSignature Language="F#" Value="type WebApplicationInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Systemereignissen zugeordnete Informationen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung kann Produktions- und Vorgänge Mitarbeiter bereitgestellte Webanwendungen verwalten. Die <xref:System.Web.Management?displayProperty=nameWithType> Namespace enthält die integritätsereignis Typen, die verantwortlich für das Verpacken Integritätsstatus Anwendungsdaten und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus wird die unterstützende Typen, mit denen bei der Verwaltung von integritätsereignisse enthält.  
  
 Instanzen der <xref:System.Web.Management.WebApplicationInformation> -Klasse enthalten Informationen, die mithilfe von abgeleiteten Typen abgerufen wird die <xref:System.Web.Management.WebManagementEvent> Typ.  
  
 Ihre Anwendung benötigt die entsprechenden Berechtigungen Zugriff auf geschützte Informationen, die von diesem Typ bereitgestellt.  
  
 Im folgenden ist ein Auszug aus einer Konfigurationsdatei, die Sie verwenden können, um ASP.NET Fehlerereignisse protokollieren zu aktivieren, die Anwendungsinformationen enthalten.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <rules>  
     <add   
       name="All Errors Default"  
       eventName="All Errors"  
       provider="EventLogProvider"  
       profile="Default"  
       minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
> [!NOTE]
>  In den meisten Fällen werden Sie die ASP.NET Systemüberwachung Typen verwenden, wie implementiert, und Sie werden das System Systemüberwachung steuern, durch Angeben von Werten in der `healthMonitoring` Konfigurationsabschnitt. Sie können auch aus den Typen Systemüberwachung, erstellen Sie eine eigene benutzerdefinierte Ereignisse und Anbieter ableiten. Ein Beispiel zum Erstellen einer benutzerdefinierten Ereignisklasse finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Das folgende Codebeispiel besteht aus zwei Teilen. Der erste Teil ist ein Auszug aus der Konfigurationsdatei, die ASP.NET für die Verwendung eines benutzerdefinierten Ereignisses ermöglicht. Das zweite Beispiel zeigt, wie das benutzerdefinierte Ereignis erstellen, mithilfe der <xref:System.Web.Management.WebApplicationInformation> Klasse.  
  
 Stellen Sie sicher, dass das benutzerdefinierte Ereignis zum richtigen Zeitpunkt, d. h. ausgelöst wird, wenn das entsprechende System Health-Ereignis, das es ersetzt ausgelöst werden würde.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <eventMappings>   
    <add name="SampleApplicationInformation"   
        type="SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>   
  </eventMappings>  
  
  <rules>   
    <add name="Custom Application Information"  
      eventName="SampleApplicationInformation"   
      provider="EventLogProvider"    
      profile="Default"/>   
</rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
  </Docs>
  <Members>
    <Member MemberName="ApplicationDomain">
      <MemberSignature Language="C#" Value="public string ApplicationDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationDomain : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Anwendungsdomänennamen ab.</summary>
        <value>Ruft den Anwendungsdomänennamen ab.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen des Namens der Anwendungsdomäne.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#4)]
 [!code-vb[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den physischen Pfad der Anwendung ab.</summary>
        <value>Der physische Pfad der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist erforderlich, entsprechende Berechtigungen auf die zugegriffen werden. Finden Sie in den Abschnitt "Berechtigungen".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie den physische Pfad der Anwendung abrufen.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#5)]
 [!code-vb[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Management.WebApplicationInformation.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den logischen Pfad der Anwendung ab.</summary>
        <value>Der logische Pfad der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie auf den logischen Pfad der Anwendung abzurufen.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#6)]
 [!code-vb[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="member this.FormatToString : System.Web.Management.WebEventFormatter -&gt; unit" Usage="webApplicationInformation.FormatToString formatter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">Der <see cref="T:System.Web.Management.WebEventFormatter" />, der die Tabstopp- und Einzugseinstellungen enthält, die zum Formatieren der Informationen über Websystemereignisse verwendet werden.</param>
        <summary>Formatiert die Anwendungsinformationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> -Methode stellt ein einheitliches Format für Ereignisinformationen, die die Ereignisdaten an dem Benutzer hilfreich ist. Sie wird intern aufgerufen, wenn der Anbieter einen der Ruft die <xref:System.Web.Management.WebBaseEvent.ToString%2A> Methoden.  
  
> [!NOTE]
>  Überschreiben Sie beim Formatieren der benutzerdefinierten Ereignisinformationen für die Anzeige der <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> Methode statt über das <xref:System.Web.Management.WebApplicationInformation.ToString%2A> Methode. Dadurch wird vermieden, überschreiben oder Manipulation von vertraulichen Informationen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Formatieren von benutzerdefinierten Informationen veranschaulicht.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#9)]
 [!code-vb[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.Management.WebApplicationInformation.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Computernamen der Anwendung ab.</summary>
        <value>Der Name des Computers, auf dem die Anwendung ausgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Abrufen des Computernamens veranschaulicht.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#7)]
 [!code-vb[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationInformation.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webApplicationInformation.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Formatiert Ereignisinformationen für die Anzeige.</summary>
        <returns>Die Ereignisinformationen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebBaseEvent.ToString%2A> -Methode formatiert Ereignisinformationen durch Aufrufen der <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> Methode.  
  
> [!NOTE]
>  Überschreiben Sie beim Formatieren der benutzerdefinierten Ereignisinformationen für die Anzeige der <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> Methode anstelle dieses <xref:System.Web.Management.WebApplicationInformation.ToString%2A> Methode. Dadurch wird vermieden, überschreiben oder Manipulation von vertraulichen Informationen.  
  
   
  
## Examples  
 Ein Beispiel der Verwendung der <xref:System.Web.Management.WebApplicationInformation.ToString%2A> -Methode finden Sie unter <xref:System.Web.Management.WebEventProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustLevel">
      <MemberSignature Language="C#" Value="public string TrustLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TrustLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebApplicationInformation.TrustLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrustLevel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TrustLevel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TrustLevel : string" Usage="System.Web.Management.WebApplicationInformation.TrustLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vertrauensebene der Anwendung ab.</summary>
        <value>Die Vertrauensebene der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist erforderlich, entsprechende Berechtigungen auf die zugegriffen werden. Finden Sie in den Abschnitt "Berechtigungen".  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie die Anwendung der Vertrauensebene Informationen abgerufen.  
  
 [!code-csharp[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#8)]
 [!code-vb[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>