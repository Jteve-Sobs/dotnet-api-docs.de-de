<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e62215d3100cc70aaa6c4a722e5f66914f0d4ab7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138342" /></Metadata><TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebFailureAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über Sicherheitsfehler bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der ASP.net-Integritäts Überwachung können Produktions-und Betriebspersonal bereitgestellte Webanwendungen verwalten. Der <xref:System.Web.Management?displayProperty=nameWithType> -Namespace enthält die Integritäts Ereignis Typen, die für das Verpacken von Anwendungs Integritäts Statusdaten und die für die Verarbeitung dieser Daten verantwortlichen Anbieter Typen verantwortlich sind. Sie enthält auch unterstützende Typen, die bei der Verwaltung von Integritäts Ereignissen helfen.  
  
 Die <xref:System.Web.Management.WebFailureAuditEvent> -Klasse wird verwendet, wenn ein Sicherheits Vorgang fehlschlägt. Ein Beispiel hierfür ist eine fehlgeschlagene URL-Autorisierung für eine Webanforderung.  
  
 Standardmäßig ist ASP.net so konfiguriert, dass das <xref:System.Web.Management.WebFailureAuditEvent> -Ereignis für die folgenden Features erhoben wird:  
  
-   Datei Autorisierung. ASP.net versucht nur die Datei Autorisierung, wenn der Anforderung eine Windows-Identität zugeordnet ist. Der zugehörige Ereignis Überwachungs Code <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>ist.  
  
-   URL-Autorisierung. Dies steuert nicht autorisierte Versuche, auf eine URL-Ressource zuzugreifen. Fehlgeschlagene Versuche eines anonymen Benutzers werden nicht überwacht, da der anonyme Authentifizierungsfehler in den meisten Fällen zulässig ist. Der zugehörige Ereignis Überwachungs Code <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>ist.  
  
-   Generische unbehandelte oder nicht behandelte Sicherheitsbedingungen. Im folgenden finden Sie eine Liste der Ereignis Codes im Zusammenhang mit diesen Bedingungen:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 Wenn ein <xref:System.Web.Management.WebFailureAuditEvent> -Ereignis ausgelöst wird, wird durch die ASP.net-Integritäts Überwachung der Leistungs Leistungs Monitor "zugehörige Überwachungs `healthMonitoring` Fehlerereignisse" erhöht und dann der Konfigurations Abschnitt überprüft, um zu bestimmen, ob Anbieter das Ereignis abonnieren. Wenn Anbieter das Ereignis abonnieren, sendet ASP.NET das Ereignis zur Verarbeitung an Sie.  
  
> [!NOTE]
>  Um den Leistungsindikator "Überwachungs Fehlerereignisse" im System Monitor (Perfmon) anzuzeigen, wählen Sie im Fenster " **Leistungsindikatoren** **Hinzufügen** " in der Dropdown Liste Leistungs Objekt die Option **ASP.net** aus, und wählen Sie die Option Überwachungs **Fehlerereignisse ausgelöst** aus. und klicken Sie auf die Schaltfläche **Hinzufügen** . Weitere Informationen finden Sie unter [Verwenden des System Monitors (Perfmon) mit ASP.NET-Anwendungen](https://go.microsoft.com/fwlink/?linkid=36882) in der IIS-Dokumentation auf MSDN.  
  
> [!NOTE]
>  In den meisten Fällen können Sie die ASP.net-Integritäts Überwachungs Typen als implementiert verwenden, und Sie steuern das System Überwachungssystem durch Angabe von Werten im `healthMonitoring` Konfigurations Abschnitt. Sie können auch von den Typen der Integritäts Überwachung ableiten, um eigene benutzerdefinierte Ereignisse und Anbieter zu erstellen. Ein Beispiel für die Ableitung von der <xref:System.Web.Management.WebFailureAuditEvent> -Klasse finden Sie im Beispiel Abschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie von der <xref:System.Web.Management.WebFailureAuditEvent> -Klasse abgeleitet wird, um ein benutzerdefiniertes Überwachungs Ereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 Der folgende Konfigurations Auszug zeigt, wie ASP.net für die Verwendung des <xref:System.Web.Management.WebFailureAuditEvent> -Ereignisses aktiviert wird.  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie die benutzerdefinierten Ereignis Informationen für die Anzeige formatieren, überschreiben <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> Sie die <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> -Methode anstelle der-Methode. Dadurch wird das Überschreiben oder manipulieren von sensiblen Systeminformationen vermieden.</para></block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie verwenden Sie niemals, um eine Instanz von zu <xref:System.Web.Management.WebFailureAuditEvent>erstellen, aber Sie können diesen Konstruktor auch bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor in der `SampleWebFailureAuditEvent` -Klasse aufgerufen wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Management.WebFailureAuditEvent> Klassen Übersicht bereitgestellt wird.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie verwenden Sie niemals, um eine Instanz von zu <xref:System.Web.Management.WebFailureAuditEvent>erstellen, aber Sie können diesen Konstruktor auch bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor in der `SampleWebFailureAuditEvent` -Klasse aufgerufen wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Management.WebFailureAuditEvent> Klassen Übersicht bereitgestellt wird.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webFailureAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erhöht den Leistungsindikator Bei Überwachungsfehlern ausgelöste Ereignisse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Leistungsdaten-Leistungs Monitor "Überwachungs Fehlerereignisse" verfolgt die Anzahl der fehlerhaften Überwachungs Ereignisse seit dem Start der Anwendung. Mit dieser Methode wird auch die <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> übergeordnete-Methode aufgerufen, die den Wert des Zählers für Ereignisse erhöht. Mit diesem Wert wird die Gesamtanzahl der Ereignisse nachverfolgt.  
  
 Um diese Leistungsindikatoren im System Monitor (Perfmon) anzuzeigen, wählen Sie im Fenster Leistungsindikatoren **Hinzufügen** in der Dropdown Liste **Leistungs Objekt** die Option **ASP.net** aus, wählen Sie den Leistungsindikator aus, den Sie anzeigen möchten, und klicken Sie auf die Schaltfläche **Hinzufügen** . . Weitere Informationen finden Sie unter [Verwenden des System Monitors (Perfmon) mit ASP.NET-Anwendungen](https://go.microsoft.com/fwlink/?linkid=36882) in der IIS-Dokumentation auf MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
