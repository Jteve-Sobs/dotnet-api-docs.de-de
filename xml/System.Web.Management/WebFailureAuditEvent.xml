<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcefe2c77b36c45aa04a4880a157bf914314b61e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über Sicherheitsfehler bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung kann Produktions- und Vorgänge Mitarbeiter bereitgestellte Webanwendungen verwalten. Die <xref:System.Web.Management?displayProperty=nameWithType> -Namespace enthält die Integrität-Ereignistypen, die verantwortlich für das Verpacken Integritätsstatus Anwendungsdaten und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus wird die unterstützende Typen, mit denen bei der Verwaltung von integritätsereignisse enthält.  
  
 Die <xref:System.Web.Management.WebFailureAuditEvent> Klasse wird verwendet, wenn Sie ein Vorgang ein Fehler auftritt. Ein Beispiel hierfür ist eine fehlerhafte URL-Autorisierung für eine webanforderung.  
  
 Standardmäßig ASP.NET konfiguriert ist, zum Auslösen der <xref:System.Web.Management.WebFailureAuditEvent> -Ereignis für die folgenden Funktionen:  
  
-   Autorisierung. ASP.NET versucht Autorisierung nur auf, wenn eine Windows-Identität der Anforderung zugeordnet ist. Verwandtes Ereignis Audit Code ist <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.  
  
-   URL-Autorisierung. Dieser bestimmt nicht autorisierten Versuche zum Zugriff auf eine URL-Ressource. Fehlgeschlagener Anmeldeversuche durch einen anonymen Benutzer werden nicht überwacht, da die anonyme Authentifizierung in den meisten Fällen akzeptabel ist. Verwandtes Ereignis Audit Code ist <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.  
  
-   Nicht behandelte generische oder nicht behandelte Bedingungen. Im folgenden finden eine Liste der Ereigniscodes, die im Zusammenhang mit der folgenden Bedingungen:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 Wenn eine <xref:System.Web.Management.WebFailureAuditEvent> Ereignis wird ausgelöst, ASP.NET-Systemüberwachung inkrementiert den Leistungsindikator für verwandte Überwachungsfehlern ausgelöste Ereignisse und überprüft anschließend die `healthMonitoring` Konfigurationsabschnitt, um zu bestimmen, ob der Anbieter das Ereignis abonniert haben. Wenn der Anbieter das Ereignis abonniert haben, sendet ASP.NET das Ereignis werden zur Verarbeitung an.  
  
> [!NOTE]
>  So zeigen Sie in den Überwachungsfehlern ausgelöste Ereignisse Leistungsindikator des Systemmonitors (PerfMon) an der **Leistungsindikatoren hinzufügen** wählen **ASP.NET** aus der **Leistungsobjekt ""** Dropdown-Liste der **Überwachungsfehlern ausgelöste Ereignisse** Leistungsindikator, und klicken Sie auf die **hinzufügen** Schaltfläche. Weitere Informationen finden Sie unter [mithilfe des Systemmonitors (PerfMon) mit ASP.NET-Anwendungen](http://go.microsoft.com/fwlink/?linkid=36882) in der IIS-Dokumentation auf MSDN.  
  
> [!NOTE]
>  In den meisten Fällen werden Sie die ASP.NET Systemüberwachung Typen verwenden, wie implementiert, und Sie werden das System Systemüberwachung steuern, durch Angeben von Werten in der `healthMonitoring` Konfigurationsabschnitt. Sie können auch aus den Typen Systemüberwachung, erstellen Sie eine eigene benutzerdefinierte Ereignisse und Anbieter ableiten. Ein Beispiel für das Ableiten von der <xref:System.Web.Management.WebFailureAuditEvent> Klasse, finden Sie im Beispielabschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Ableitung der <xref:System.Web.Management.WebFailureAuditEvent> -Klasse zum Erstellen eines benutzerdefinierten Überwachungsereignisses.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 Der folgende Auszug aus der Konfiguration wird gezeigt, wie ASP.NET verwenden, ermöglicht die <xref:System.Web.Management.WebFailureAuditEvent> Ereignis.  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Überschreiben Sie beim Formatieren der benutzerdefinierten Ereignisinformationen für die Anzeige der <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> Methode statt über das <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> Methode. Dadurch wird vermieden, überschreiben oder Manipulation von vertraulichen Informationen.</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Sie werden nie verwendet, um eine Instanz erstellen <xref:System.Web.Management.WebFailureAuditEvent>, aber Sie können diesen Konstruktor aufrufen, wenn es sich bei Ihren eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor aufgerufen wird, der `SampleWebFailureAuditEvent` Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebFailureAuditEvent> -Klassenübersicht.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebFailureAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Sie werden nie verwendet, um eine Instanz erstellen <xref:System.Web.Management.WebFailureAuditEvent>, aber Sie können diesen Konstruktor aufrufen, wenn es sich bei Ihren eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor aufgerufen wird, der `SampleWebFailureAuditEvent` Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebFailureAuditEvent> -Klassenübersicht.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erhöht den Leistungsindikator Bei Überwachungsfehlern ausgelöste Ereignisse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Leistungsindikator Überwachungsfehlern ausgelöste Ereignisse verfolgt die Anzahl der fehlgeschlagenen Überwachungsereignisse, die seit dem Start der Anwendung ausgelöst. Diese Methode ruft auch die übergeordnete <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> -Methode, die den Indikator ausgelöste Ereignisse erhöht. Dieser Leistungsindikator verfolgt die Gesamtanzahl der Ereignisse, die ausgelöst wird.  
  
 An diese Leistungsindikatoren im Systemmonitor ("PerfMon"), in der **Leistungsindikatoren hinzufügen** aus **ASP.NET** aus der **Leistungsobjekt** Dropdown-Liste der Leistungsindikator, die Sie anzeigen möchten, und klicken Sie auf die **hinzufügen** Schaltfläche. Weitere Informationen finden Sie unter [mithilfe des Systemmonitors (PerfMon) mit ASP.NET-Anwendungen](http://go.microsoft.com/fwlink/?linkid=36882) in der IIS-Dokumentation auf MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>