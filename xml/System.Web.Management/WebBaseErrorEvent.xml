<Type Name="WebBaseErrorEvent" FullName="System.Web.Management.WebBaseErrorEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21fa922c558f18f232cdd3206df11bc87c568df8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69053854" /></Metadata><TypeSignature Language="C#" Value="public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBaseErrorEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBaseErrorEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBaseErrorEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebBaseErrorEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als Basisklasse für alle Fehlerereignisse der Systemüberwachung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der ASP.net-Integritäts Überwachung können Produktions-und Betriebspersonal bereitgestellte Webanwendungen verwalten. Der <xref:System.Web.Management> -Namespace enthält die Integritäts Ereignis Typen, die für das Verpacken von Anwendungs Integritäts Statusdaten und die für die Verarbeitung dieser Daten verantwortlichen Anbieter Typen verantwortlich sind. Sie enthält auch unterstützende Typen, die bei der Verwaltung von Integritäts Ereignissen helfen.  
  
 Die <xref:System.Web.Management.WebBaseErrorEvent> -Klasse ist die Basisklasse für die Integritäts Überwachungs Ereignisse, die Fehlerbedingungen darstellen. ASP.NET verwendet <xref:System.Web.Management.WebBaseErrorEvent> und seine abgeleiteten Typen, um Fehlerbedingungen während der Lebensdauer einer Webanwendung anzugeben.  
  
> [!NOTE]
>  In den meisten Fällen können Sie die ASP.net-Integritäts Überwachungs Typen als implementiert verwenden und das System Überwachungssystem steuern, indem Sie Werte im `healthMonitoring` Konfigurations Abschnitt angeben. Sie können auch von den Typen der Integritäts Überwachung ableiten, um eigene benutzerdefinierte Ereignisse und Anbieter zu erstellen. Ein Beispiel für die Ableitung von der <xref:System.Web.Management.WebBaseErrorEvent> -Klasse finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Das folgende Codebeispiel besteht aus zwei Teilen. Der erste ist ein Auszug aus einer Konfigurationsdatei, die es der ASP.net-Integritäts Überwachung ermöglicht, ein <xref:System.Web.Management.WebBaseErrorEvent> von der-Klasse abgeleitetes Ereignis zu verwenden. Im zweiten Beispiel wird gezeigt, wie von <xref:System.Web.Management.WebBaseErrorEvent> der-Klasse abgeleitet wird, um das benutzerdefinierte Ereignis zu erstellen.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <providers>  
    <!-- Define the custom provider that   
         processes custom Web request events. -->  
    <add name="SampleWebEventProvider"   
      type="SamplesAspNet.SampleEventProvider,  
      webeventprovider,Version=1.0.1573.18094,   
      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   
      processorArchitecture=MSIL"/>  
  </providers>  
  
  <eventMappings>  
  
    <!--  Define the event source that issues custom events.   -->  
    <add  name="SampleWebBaseErrorEvent"      
      type="SamplesAspNet.SampleWebBaseErrorEvent,  
      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     
      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <!-- Associate custom event with related   
      custom provider -->  
    <add   
       name="Custom Web Base Errors"  
       eventName="SampleWebBaseErrorEvent"   
       provider="SampleWebEventProvider"   
       profile="Custom"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 Der folgende Code zeigt, wie von der <xref:System.Web.Management.WebBaseErrorEvent> -Klasse abgeleitet wird, um ein benutzerdefiniertes Ereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebBaseErrorEvent" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebBaseErrorEvent : string * obj * int * Exception -&gt; System.Web.Management.WebBaseErrorEvent" Usage="new System.Web.Management.WebBaseErrorEvent (message, eventSource, eventCode, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="e">Die dem Fehler zugeordnete <see cref="T:System.Exception" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebBaseErrorEvent" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie können diesen Konstruktor bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor von einem Konstruktor für die `SampleWebBaseErrorEvent` -Klasse aufgerufen wird, einer Klasse, <xref:System.Web.Management.WebBaseErrorEvent> die von der-Klasse abgeleitet wird.  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebBaseErrorEvent : string * obj * int * int * Exception -&gt; System.Web.Management.WebBaseErrorEvent" Usage="new System.Web.Management.WebBaseErrorEvent (message, eventSource, eventCode, eventDetailCode, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der ausführliche Bezeichner für das Ereignis.</param>
        <param name="e">Die dem Fehler zugeordnete <see cref="T:System.Exception" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebBaseErrorEvent" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie können diesen Konstruktor bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor von einem Konstruktor für die `SampleWebBaseErrorEvent` -Klasse aufgerufen wird, einer Klasse, <xref:System.Web.Management.WebBaseErrorEvent> die von der-Klasse abgeleitet wird.  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="ErrorException">
      <MemberSignature Language="C#" Value="public Exception ErrorException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorException : Exception" Usage="System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dem Fehler zugeordnete <see cref="T:System.Exception" /> ab.</summary>
        <value>Die dem Fehler zugeordnete <see cref="T:System.Exception" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein benutzerdefiniertes <xref:System.Web.Management.WebBaseErrorEvent>implementieren, müssen Sie sicherstellen, dass das benutzerdefinierte Fehler Ereignis diese Ausnahme behandelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webBaseErrorEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erhöht die Leistungsindikatoren für Fehlerereignisse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erhöht die folgenden Leistungsindikatoren:  
  
-   Infrastruktur Fehlerereignisse ausgelöst. Dies ist ein globaler Counter, der die Fehlerereignisse nachverfolgt.  
  
-   Fehlerereignisse wurden ausgelöst. Dies ist ein anwendungsspezifischer Counter, der die Anzahl der Fehlerereignisse nachverfolgt, die seit dem Start der Anwendung ausgelöst wurden.  
  
 Diese Methode ruft auch das über <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>geordnete-Element auf, das den Wert für die Ereignis Aufzählungen erhöht. Mit diesem Wert wird die Gesamtanzahl der Ereignisse nachverfolgt.  
  
 Um diese Leistungsindikatoren im System Monitor (Perfmon) anzuzeigen, wählen Sie im Fenster Leistungsindikatoren **Hinzufügen** **ASP.net** in der Dropdown Liste **Leistungs Objekt** aus, wählen Sie den Leistungsindikator aus, den Sie anzeigen möchten, und klicken Sie auf die Schaltfläche **Hinzufügen** . Weitere Informationen finden Sie unter [Verwenden des System Monitors (Perfmon) mit ASP.NET-Anwendungen](https://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) in der IIS-Dokumentation auf MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
