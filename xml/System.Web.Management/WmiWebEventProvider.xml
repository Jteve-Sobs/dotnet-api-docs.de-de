<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bea7106eb88e1fdf8975ac0eb6d2edc4afc4591c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39734435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementiert einen Ereignisanbieter, der WMI (Windows Management Instrumentation)-Ereignissen ASP.NET-Systemüberwachungsereignisse zuordnet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung ermöglicht die Produktion und operatives Personal bereitgestellte Webanwendungen zu verwalten. Die <xref:System.Web.Management> Namespace enthält die integritätsereignis Typen, die verantwortlich für das Verpacken von Anwendungsdaten für Integritätsstatus und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus werden die unterstützende Typen, mit denen bei der Verwaltung der Health-Ereignisse enthält.  
  
 ASP.NET verwendet diese Klasse zum Zuordnen von Systemüberwachungsereignisse von WMI-Ereignissen. Um die Übermittlung von ASP.NET Systemüberwachungsereignisse an das WMI-Subsystem zu aktivieren, müssen Sie konfigurieren die <xref:System.Web.Management.WmiWebEventProvider> -Klasse durch das Hinzufügen der entsprechenden Einstellungen in der `<healthMonitoring>` Abschnitt der Konfigurationsdatei.  
  
 Die Informationen in die Datei Aspnet.mof beschreibt die Parameter der WMI-Ereignisse ausgelöst, wenn ASP.NET Systemüberwachungsereignisse an weitergeleitet werden, die <xref:System.Web.Management.WmiWebEventProvider> Klasse und in WMI-Ereignisse zugeordnet. Die Datei Aspnet.mof befindet sich in der .NET Framework-Build-Verzeichnis, z. B. %windir%\Microsoft.NET\Framework\\*BuildNumber*. Weitere Informationen zur Berichterstattung Systemüberwachungsereignisse als WMI-Ereignisse finden Sie unter [NIB: Verwenden von WMI zu übermitteln. von ASP.NET-Systemüberwachungsereignissen](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  
  
> [!NOTE]
>  In den meisten Fällen werden Sie können die ASP.NET Systemüberwachung Typen zu verwenden, wie Sie implementiert, und Sie werden die Systemüberwachung steuern, durch Angeben von Werten in der `<healthMonitoring>` Konfigurationsabschnitt. Sie können auch von Systemüberwachung Typen, die Ihre eigenen benutzerdefinierten Ereignisse und die Anbieter erstellt ableiten. Ein Beispiel für einen benutzerdefinierten Anbieter erstellen, finden Sie unter [Vorgehensweise: Implementieren der Health Monitoring benutzerdefinierte Provider Example](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie ein Consumer von WMI-Ereignissen von ASP.NET-Systemüberwachung, die als Ergebnis der Web Application-Health-Ereignisse zu erstellen.  
  
> [!NOTE]
>  Die <xref:System.Web.Management.WmiWebEventProvider> -Klasse und die Integrität Ereignistypen überwachen, werden standardmäßig bereits konfiguriert. Alles, was Sie tun müssen, besteht darin, die Regel für den Health-Ereignisse zu definieren. Denken Sie daran, dass die integritätsereignisse nicht, um gesendet werden die <xref:System.Web.Management.WmiWebEventProvider> Anbieter standardmäßig.  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 Im folgende Beispiel wird ein Auszug aus der Konfigurationsdatei, die zeigt eine `<healthMonitoring>` Konfigurationsabschnitt, der mit ASP.NET verwenden kann die <xref:System.Web.Management.WmiWebEventProvider> Anbieter, um alle Systemüberwachungsereignisse zu verarbeiten.  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WmiWebEventProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Sie nie verwenden sie zum Erstellen einer Instanz von der <xref:System.Web.Management.TraceWebEventProvider> -Klasse, aber Sie können diesen Konstruktor aufrufen, wenn Sie einen eigenen Anbietertyp implementieren, die von dieser Klasse erbt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Ereignisse aus dem Puffer des Anbieters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode, alle aufgerufen wird, die die Ereignisse im Puffer des Anbieters sofort entfernt werden, unabhängig davon, wie viel Zeit, seit der letzten verstrichen ist sind Schreib- oder wie viele Ereignisse im Puffer. Der Zeitpunkt des letzten Schreibzugriffs wird zum Zeitpunkt der Leerung zurückgesetzt. Wenn Puffermechanismus nicht aktiviert ist, wird durch das Aufrufen dieser Methode hat keine Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der in der Konfigurationsdatei zum Bezeichnen dieses Anbieters verwendete Name.</param>
        <param name="config">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt, das die Attribute angibt, die diesem Anbieter in der Konfigurationsdatei zugewiesen sind.</param>
        <summary>Legt die Anfangswerte für dieses Objekt fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft die <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> Methode nach dem Aufruf der <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> Konstruktor. Diese Methode wird aufgerufen, um das Initialisieren der <xref:System.Web.Management.WmiWebEventProvider> -Klasse mit den Konfigurationseinstellungen und in der Konfigurationsdatei angegebenen Namen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">Das zu verarbeitende <see cref="T:System.Web.Management.WebBaseEvent" />-Objekt.</param>
        <summary>Verarbeitet das an den Anbieter übergebene Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die Methode, die ASP.NET-Systemüberwachung aufgerufen, um die Verarbeitung des Ereignisses zu starten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Ereignis konnte nicht ausgelöst werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt mit dem Beenden des Anbieters verbundene Aufgaben aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft die <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> Methode, wenn die Anwendungsdomäne, die die Webanwendung hostet beendet wird. Die Methode wird aufgerufen, um Aufgaben auszuführen, die die Anwendung kontrolliert beendet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>