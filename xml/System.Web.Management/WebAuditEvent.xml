<Type Name="WebAuditEvent" FullName="System.Web.Management.WebAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcdf80f4e187ad84451c97be5ced072c4dd6601f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51891190" /></Metadata><TypeSignature Language="C#" Value="public class WebAuditEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuditEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuditEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuditEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebAuditEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als die Basisklasse für alle Überwachungsereignisse der ASP.NET-Systemüberwachung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung ermöglicht die Produktion und operatives Personal bereitgestellte Webanwendungen zu verwalten. Die <xref:System.Web.Management> Namespace enthält die integritätsereignis Typen, die verantwortlich für das Verpacken von Anwendungsdaten für Integritätsstatus und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus werden die unterstützende Typen, mit denen bei der Verwaltung der Health-Ereignisse enthält.  
  
 Die <xref:System.Web.Management.WebAuditEvent> Klasse ist die Basisklasse, die von der die ASP.NET Systemüberwachung-Ereignisklassen der sicherheitsüberwachung abgeleitet werden. Überwachungsereignisse Generieren von Informationen zu sicherheitsbezogenen Vorgängen in einer Webanwendung, und geben eine Erfolgs- und -Ereignis für jeden überwachten Vorgang.  
  
 Die Systemüberwachung kann sowohl erfolgreiche als auch fehlgeschlagene Ereignisse überwachen, was bedeutet, dass eine Anwendung, die für normale als auch Bedingungen überwacht werden kann. Standardmäßig werden nur die Fehler-Überwachungsereignisse aufgezeichnet.  
  
 Die folgenden Vorgänge werden von ASP.NET überwacht, und ggf. Erfolg oder Fehler Systemüberwachung überprüfbare Überwachungsereignisse generieren:  
  
-   Anmeldeversuche von Benutzern einer ASP.NET-Anwendung. Weitere Informationen zu dieser Überwachungsfunktion, finden Sie unter <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> und <xref:System.Web.Management.WebSuccessAuditEvent>.  
  
-   Sicherheitsereignisse, z. B. Authentifizierungsfehler, fehlgeschlagenen Zugriffsversuchen und andere sicherheitsrelevante Ereignisse. Das Protokoll dieser Ereignisse kann nützlich sein, wenn Sie einen Eindringversuch oder einen Angriff auf die Anwendung zu untersuchen. Standardmäßig wird keine überwachungsunterstützung für Autorisierungsfehler von anonymen Benutzern bereitgestellt. Weitere Informationen zu Ereignis Fehlerüberwachungen, finden Sie unter <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> und <xref:System.Web.Management.WebFailureAuditEvent>.  
  
-   Benutzerdefinierte Ereignisse, die von einer ASP.NET-Anwendung ausgelöst werden. Sie können benutzerdefinierte Ereignisse überwachen, durch das Erweitern der Funktionalität der <xref:System.Web.Management.WebAuditEvent> Klasse und abgeleitete Klassen  
  
> [!NOTE]
>  In den meisten Fällen werden Sie können die ASP.NET Systemüberwachung Typen zu verwenden, wie Sie implementiert, und Sie werden die Systemüberwachung steuern, durch Angeben von Werten in der `healthMonitoring` Konfigurationsabschnitt. Sie können auch von Systemüberwachung Typen, die Ihre eigenen benutzerdefinierten Ereignisse und die Anbieter erstellt ableiten. Ein Beispiel für die Serialisierung der von der <xref:System.Web.Management.WebAuditEvent> Klasse, finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie für die Ableitung der <xref:System.Web.Management.WebAuditEvent> Klasse, um ein benutzerdefiniertes Überwachungsereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#1)]  
  
 Folgendes ist ein Auszug aus der Konfigurationsdatei, die ASP.NET verwenden Sie das Ereignis ermöglicht.  
  
```  
<healthMonitoring   
  enabled="true"  
  heartBeatInterval="0">   
  
  <providers>  
    <add name="EventLogProvider"   
      type="System.Web.Management.EventLogWebEventProvider,  
      System.Web,Version=2.0.3600.0,Culture=neutral,  
      PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  
  <eventMappings>  
    <add  name="SampleWebAuditEvent"   
      type="SamplesAspNet.SampleWebAuditEvent,  
      webauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <add name="Custom Audit Default"  
      eventName="SampleWebAuditEvent"  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Überschreiben Sie beim Formatieren der benutzerdefinierten Ereignisinformationen für die Anzeige der <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> Methode anstelle der <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> Methode. Dadurch wird vermieden, überschreiben oder die Manipulation von vertraulichen Informationen.</para></block>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebViewStateFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Übersicht über die ASP.NET-Systemüberwachung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuditEvent : string * obj * int -&gt; System.Web.Management.WebAuditEvent" Usage="new System.Web.Management.WebAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Nie verwenden Sie es zum Instanziieren einer <xref:System.Web.Management.WebAuditEvent> -Objekt, aber Sie können diesen Konstruktor beim Aufrufen Ihrer eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebAuditEvent> Klasse.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebAuditEvent" Usage="new System.Web.Management.WebAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebAuditEvent" />-Klasse mit den angegebenen Ereignisparametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Nie verwenden Sie es zum Instanziieren einer <xref:System.Web.Management.WebAuditEvent> -Objekt, aber Sie können diesen Konstruktor beim Aufrufen Ihrer eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebAuditEvent> Klasse.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuditEvent.RequestInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInformation As WebRequestInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebRequestInformation ^ RequestInformation { System::Web::Management::WebRequestInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestInformation : System.Web.Management.WebRequestInformation" Usage="System.Web.Management.WebAuditEvent.RequestInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die der Webanforderung zugeordneten Informationen ab.</summary>
        <value>Eine <see cref="T:System.Web.Management.WebRequestInformation" />, die die der Webanforderung zugeordneten Informationen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Informationen der <xref:System.Web.Management.WebAuditEvent.RequestInformation%2A> Eigenschaft, um die Ermittlung der Ursachen für eine Fehlfunktion zu unterstützen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Informationen über die <xref:System.Web.Management.WebRequestInformation> Eigenschaft.  
  
 [!code-csharp[System.Web.Management.WebAuditEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/CS/webauditevent.cs#5)]
 [!code-vb[System.Web.Management.WebAuditEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebAuditEvent/VB/webauditevent.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebRequestInformation" />
      </Docs>
    </Member>
  </Members>
</Type>