<Type Name="WebEventFormatter" FullName="System.Web.Management.WebEventFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6856f8a4004abf4400738be591b4c6413fbbd6a6" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299341" /></Metadata><TypeSignature Language="C#" Value="public class WebEventFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebEventFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class WebEventFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventFormatter" />
  <TypeSignature Language="F#" Value="type WebEventFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Formatiert ASP.NET-Systemüberwachungsereignisinformationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung ermöglicht die Produktion und operatives Personal bereitgestellte Webanwendungen zu verwalten. Die <xref:System.Web.Management> Namespace enthält die integritätsereignis Typen, die verantwortlich für das Verpacken von Anwendungsdaten für Integritätsstatus und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus werden die unterstützende Typen, mit denen bei der Verwaltung der Health-Ereignisse enthält.  
  
 Die <xref:System.Web.Management.WebEventFormatter> ist ein verwendet, um einheitlich formatieren von ereignisbezogener Informationen, was nützlich ist, wenn die Daten für das Ereignis protokolliert und später dem Benutzer angezeigt werden müssen. 
  
 Instanzen der <xref:System.Web.Management.WebEventFormatter> Klasse werden als Argumente übergeben, um die von den Typen von Systemereignissen definierten Formatierungsmethoden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.Management.WebEventFormatter> zum Formatieren von Ereignisinformationen. Es ist vor allem soll die richtige Syntax verwenden. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebBaseEvent> Klasse.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#17)]
 [!code-vb[System.Web.Management.WebBaseEvent#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#17)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public void AppendLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventFormatter.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.AppendLine : string -&gt; unit" Usage="webEventFormatter.AppendLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Die Zeichenfolge, die den Ereignisinformationen hinzugefügt werden soll.</param>
        <summary>Fügt die angegebene Zeichenfolge und einen Wagenrücklauf an die Ereignisinformationen an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebEventFormatter.AppendLine%2A> Methode können Sie die Informationen zum Anpassen, indem Sie Ihren eigenen ereignisspezifische Daten hinzufügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Management.WebEventFormatter.AppendLine%2A>-Methode veranschaulicht.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#20)]
 [!code-vb[System.Web.Management.WebBaseEvent#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentationLevel">
      <MemberSignature Language="C#" Value="public int IndentationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebEventFormatter.IndentationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentationLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentationLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentationLevel : int with get, set" Usage="System.Web.Management.WebEventFormatter.IndentationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Einzugsebene ab oder legt diese fest.</summary>
        <value>Die Anzahl der für die Einzugsebene verwendeten Tabstopps.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A> Eigenschaft können Sie steuern, wie die Ereignisinformationen eingezogen wird. Die Basiseinheit Einzug wird definiert, indem die <xref:System.Web.Management.WebEventFormatter.TabSize%2A> Eigenschaft. Für die einzelnen Einzugsebenen erhöhen Sie den Einzug eine Registerkarte.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#18)]
 [!code-vb[System.Web.Management.WebBaseEvent#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabSize">
      <MemberSignature Language="C#" Value="public int TabSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebEventFormatter.TabSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TabSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabSize : int with get, set" Usage="System.Web.Management.WebEventFormatter.TabSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Tabstoppgröße ab oder legt diese fest.</summary>
        <value>Die Anzahl der Leerzeichen in einem Tabstopp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebEventFormatter.TabSize%2A> Eigenschaft können Sie die Tabulatorgröße verwendet beim Schreiben von Ereignisinformationen zu steuern. Die <xref:System.Web.Management.WebEventFormatter.TabSize%2A> bestimmt die Anzahl der Leerzeichen pro Einheit des Einzugs, gesteuert durch <xref:System.Web.Management.WebEventFormatter.IndentationLevel%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Management.WebEventFormatter.TabSize%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Management.WebBaseEvent#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#19)]
 [!code-vb[System.Web.Management.WebBaseEvent#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventFormatter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webEventFormatter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ereignisinformationen im Zeichenfolgenformat zurück.</summary>
        <returns>Die Ereignisinformationen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Management.WebEventFormatter> verwendet eine interne <xref:System.Text.StringBuilder> Variable, die die Ereignisinformationen zu speichern. Dies <xref:System.Web.Management.WebEventFormatter.ToString%2A> Methode können Sie alle Informationen, die in einem Zeichenfolgenformat zu erhalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>