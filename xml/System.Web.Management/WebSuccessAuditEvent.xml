<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba8631ac99a8425208ffd28b81693ba0500242fd" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51864819" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über erfolgreich ausgeführte Sicherheitsereignisse bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung ermöglicht die Produktion und operatives Personal bereitgestellte Webanwendungen zu verwalten. Die <xref:System.Web.Management> -Namespace enthält die Ereignis-systemzustandstypen, die verantwortlich für das Verpacken von Anwendungsdaten für Integritätsstatus und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus werden die unterstützende Typen, mit denen bei der Verwaltung der Health-Ereignisse enthält.  
  
 Die <xref:System.Web.Management.WebSuccessAuditEvent> Klasse wird verwendet, wenn bei einem erfolgreicher von sicherheitsrelevanten Vorgang auftritt. Ein Beispiel hierfür ist eine erfolgreiche URL-Autorisierung für eine webanforderung an.  
  
 Die folgende Liste beschreibt die Funktionen für die Ereignisse vom Typ <xref:System.Web.Management.WebSuccessAuditEvent> von ASP.NET ausgelöst werden:  
  
-   Dateiautorisierung. Erfolgreiche Bedingungen geprüft werden. Dateiautorisierung wird nur von ASP.NET versucht, wenn eine Windows-Identität mit der Anforderung zugeordnet ist. Verwandtes Ereignis Audit Code ist <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.  
  
-   URL-Autorisierung. Es gibt an, Zugriff auf eine URL-Ressource, die für die Autorisierung gewährt wird. Erfolgreiche Bedingungen geprüft werden. Verwandtes Ereignis Audit Code ist <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.  
  
-   Andere Bedingungen Sicherheit. Im folgenden finden eine Liste mit den zugehörigen Ereigniscode:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 Wenn eine <xref:System.Web.Management.WebSuccessAuditEvent> wird ausgelöst, den zugehörigen Leistungsindikator bei erfolgreicher Überwachung ausgelöste Ereignisse und überprüft anschließend inkrementiert ASP.NET-Systemüberwachung der `healthMonitoring` Konfiguration, um zu bestimmen, ob der Anbieter das Ereignis abonniert haben. Wenn der Anbieter das Ereignis abonnieren, sendet ASP.NET das Ereignis werden zur Verarbeitung an.  
  
> [!NOTE]
>  So zeigen Sie in den erfolgreicher Überwachung ausgelöste Ereignis Leistungsindikator des Systemmonitors (PerfMon) an die **Leistungsindikatoren hinzufügen** wählen Sie im Fenster **ASP.NET** aus der **Leistungsobjekt** Dropdown-Liste die **erfolgreicher Überwachung ausgelöste Ereignis** Leistungsindikator, und klicken Sie auf die **hinzufügen** Schaltfläche. Weitere Informationen finden Sie unter [Monitoring ASP.NET Application Performance](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 Da erfolgsüberwachungen eine erwartete Bedingung darstellen, können Sie nicht auf diese abonnieren möchten. Sie können auf diese abonnieren, um den Zugriff, die Überwachung für die Website bereitzustellen.  
  
> [!NOTE]
>  In den meisten Fällen werden Sie können die ASP.NET Systemüberwachung Typen zu verwenden, wie Sie implementiert, und Sie werden die Systemüberwachung steuern, durch Angeben von Werten in der `healthMonitoring` Konfigurationsabschnitt. Sie können auch von Systemüberwachung Typen, die Ihre eigenen benutzerdefinierten Ereignisse und die Anbieter erstellt ableiten. Ein Beispiel für die Serialisierung der von der <xref:System.Web.Management.WebSuccessAuditEvent> Klasse, finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie für die Ableitung der <xref:System.Web.Management.WebSuccessAuditEvent> Klasse, um ein benutzerdefiniertes Überwachungsereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 Im folgende Beispiel wird ein Auszug aus der Konfigurationsdatei, mit der ASP.NET-Systemüberwachung um das Ereignis verwenden kann.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Übersicht über die ASP.NET-Systemüberwachung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Nie verwenden Sie es zum Instanziieren einer <xref:System.Web.Management.WebSuccessAuditEvent> -Objekt, aber Sie können diesen Konstruktor beim Aufrufen Ihrer eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
> [!NOTE]
>  Die <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor ist nicht direkt aus Ihrem Code verwendet werden. Es wird von ASP.NET aufgerufen. Rufen Sie die <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor beim Ableiten von der <xref:System.Web.Management.WebSuccessAuditEvent> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor aufgerufen wird, der `SampleWebSuccessAuditEvent` Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebSuccessAuditEvent> Klasse.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Nie verwenden Sie es zum Instanziieren einer <xref:System.Web.Management.WebSuccessAuditEvent> -Objekt, aber Sie können diesen Konstruktor beim Aufrufen Ihrer eigenen Ereignistyp implementieren, die von dieser Klasse erbt.  
  
> [!NOTE]
>  Die <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor ist nicht direkt aus Ihrem Code verwendet werden. Es wird von ASP.NET aufgerufen. Rufen Sie die <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor beim Ableiten von der <xref:System.Web.Management.WebSuccessAuditEvent> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor aufgerufen wird, der `SampleWebSuccessAuditEvent` Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Management.WebSuccessAuditEvent> Klasse.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erhöht den Leistungsindikator Bei erfolgreicher Überwachung ausgelöste Ereignisse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Leistungsindikator Überwachung ausgelöste Ereignisse verfolgt die Anzahl der erfolgreichen Überwachungsereignisse, die seit dem Start der Anwendung ausgelöst. Diese Methode ruft auch die übergeordnete <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> -Methode, die den Indikator ausgelöste Ereignisse erhöht. Dieser Leistungsindikator verfolgt die Gesamtanzahl der Ereignisse, die ausgelöst wird.  
  
 An dieser Leistungsindikatoren im Systemmonitor (PerfMon) in der **Leistungsindikatoren hinzufügen** wählen Sie im Fenster **ASP.NET** aus der **Leistungsobjekt** Dropdown-Liste der Leistungsindikator, die Sie anzeigen möchten, und klicken Sie auf die **hinzufügen** Schaltfläche. Weitere Informationen finden Sie unter [Monitoring ASP.NET Application Performance](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>