<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2409e76e5b7f238291bf0cbfb159fafea5b0b84" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138146" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Informationen über erfolgreich ausgeführte Sicherheitsereignisse bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der ASP.net-Integritäts Überwachung können Produktions-und Betriebspersonal bereitgestellte Webanwendungen verwalten. Der <xref:System.Web.Management> -Namespace enthält die Integritäts Ereignis Typen, die für das Verpacken von Anwendungs Integritäts Statusdaten und die für die Verarbeitung dieser Daten verantwortlichen Anbieter Typen verantwortlich sind. Sie enthält auch unterstützende Typen, die bei der Verwaltung von Integritäts Ereignissen helfen.  
  
 Die <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse wird verwendet, wenn ein erfolgreicher sicherheitsbezogener Vorgang auftritt. Ein Beispiel hierfür ist eine erfolgreiche URL-Autorisierung für eine Webanforderung.  
  
 In der folgenden Liste werden die Funktionen beschrieben, für die <xref:System.Web.Management.WebSuccessAuditEvent> Ereignisse vom Typ von ASP.net ausgelöst werden:  
  
-   Datei Autorisierung. Erfolgreiche Bedingungen werden überprüft. Die Datei Autorisierung wird nur von ASP.net versucht, wenn der Anforderung eine Windows-Identität zugeordnet ist. Der zugehörige Ereignis Überwachungs Code <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>ist.  
  
-   URL-Autorisierung. Sie gibt den Zugriff auf eine URL-Ressource an, für die die Autorisierung erteilt wird. Erfolgreiche Bedingungen werden überprüft. Der zugehörige Ereignis Überwachungs Code <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>ist.  
  
-   Andere Sicherheitsbedingungen. Im folgenden finden Sie eine Liste der zugehörigen Ereignis Codes:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 Wenn eine <xref:System.Web.Management.WebSuccessAuditEvent> -Methode ausgelöst wird, erhöht die ASP.net-Integritäts Überwachung den Leistungsdaten Träger mit den zugehörigen Überwachungs `healthMonitoring` Erfolgs Ereignissen und überprüft dann die Konfiguration, um zu bestimmen, ob Anbieter das Ereignis abonnieren. Wenn Anbieter das Ereignis abonnieren, sendet ASP.NET das Ereignis zur Verarbeitung an Sie.  
  
> [!NOTE]
>  Wählen Sie im Fenster "Leistungsindikator **Hinzufügen** " in der Dropdown Liste " **Leistungs Objekt** " die Option " **ASP.net** " aus, um den Leistungsindikator "Überwachungs Erfolgs Ereignis" **** in System Monitor (Perfmon) anzuzeigen. und klicken Sie auf die Schaltfläche **Hinzufügen** . Weitere Informationen finden Sie unter [Überwachung ASP.NET Anwendungsleistung](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 Da Erfolgs Überwachungen eine erwartete Bedingung darstellen, sollten Sie diese möglicherweise nicht abonnieren. Sie können Sie abonnieren, um die Zugriffs Überwachung für die Website bereitzustellen.  
  
> [!NOTE]
>  In den meisten Fällen können Sie die ASP.net-Integritäts Überwachungs Typen als implementiert verwenden, und Sie steuern das System Überwachungssystem durch Angabe von Werten im `healthMonitoring` Konfigurations Abschnitt. Sie können auch von den Typen der Integritäts Überwachung ableiten, um eigene benutzerdefinierte Ereignisse und Anbieter zu erstellen. Ein Beispiel für die Ableitung von der <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie von der <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse abgeleitet wird, um ein benutzerdefiniertes Überwachungs Ereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 Das folgende Beispiel ist ein Auszug aus der Konfigurationsdatei, die es der ASP.net-Integritäts Überwachung ermöglicht, das-Ereignis zu verwenden.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie verwenden Sie niemals, um ein-Objekt zu <xref:System.Web.Management.WebSuccessAuditEvent> instanziieren, aber Sie können diesen Konstruktor auch bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
> [!NOTE]
>  Der <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor ist nicht für die direkte Verwendung im Code vorgesehen. Sie wird von ASP.NET aufgerufen. Sie können den <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> -Konstruktor beim Ableiten von der <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse aufzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor in der `SampleWebSuccessAuditEvent` -Klasse aufgerufen wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Beschreibung des Ereignisses.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebSuccessAuditEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie verwenden Sie niemals, um ein-Objekt zu <xref:System.Web.Management.WebSuccessAuditEvent> instanziieren, aber Sie können diesen Konstruktor auch bei der Implementierung eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
> [!NOTE]
>  Der <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> Konstruktor ist nicht für die direkte Verwendung im Code vorgesehen. Sie wird von ASP.NET aufgerufen. Sie können den <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> -Konstruktor beim Ableiten von der <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse aufzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie dieser Konstruktor in der `SampleWebSuccessAuditEvent` -Klasse aufgerufen wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Management.WebSuccessAuditEvent> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erhöht den Leistungsindikator Bei erfolgreicher Überwachung ausgelöste Ereignisse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Leistungs Monitor "erfolgreiche Ereignisse überwachen" verfolgt die Anzahl der erfolgreichen Überwachungs Ereignisse, die seit dem Start der Anwendung ausgelöst wurden. Mit dieser Methode wird auch die <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> übergeordnete-Methode aufgerufen, die den Wert des Zählers für Ereignisse erhöht. Mit diesem Wert wird die Gesamtanzahl der Ereignisse nachverfolgt.  
  
 Um diese Leistungsindikatoren im System Monitor (Perfmon) anzuzeigen, wählen Sie im Fenster Leistungsindikatoren **Hinzufügen** in der Dropdown Liste **Leistungs Objekt** die Option **ASP.net** aus, wählen Sie den Leistungsindikator aus, den Sie anzeigen möchten, und klicken Sie auf die Schaltfläche **Hinzufügen** . . Weitere Informationen finden Sie unter [Überwachung ASP.NET Anwendungsleistung](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
