<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="546ea7a4ed1850ca63fe0cea02cfd9fdb2c26284" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86679915" /></Metadata><TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationLifetimeEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebApplicationLifetimeEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebApplicationLifetimeEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein wichtiges Ereignis in der Lebensdauer einer Anwendung dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der ASP.net-Integritäts Überwachung können Produktions-und Betriebspersonal bereitgestellte Webanwendungen verwalten. Der <xref:System.Web.Management> -Namespace enthält die Integritäts Ereignis Typen, die für das Verpacken von Anwendungs Integritäts Statusdaten und die für die Verarbeitung dieser Daten verantwortlichen Anbieter Typen verantwortlich sind. Sie enthält auch unterstützende Typen, die bei der Verwaltung von Integritäts Ereignissen helfen.  
  
 Ereignisse für die Anwendungs Lebensdauer enthalten Ereignisse wie das Starten und Herunterfahren von Anwendungen. Wenn eine Anwendung beendet wird, können Sie ermitteln, warum Sie das zugehörige Ereignis Nachrichtenfeld anzeigen.  
  
 Wenn eine- <xref:System.Web.Management.WebApplicationLifetimeEvent> Instanz auftritt, aktualisiert die ASP.net-Integritäts Überwachung den Leistungs Bezeichner für Anwendungs Lebensdauer Ereignisse. Sie können diese Ereignisse protokollieren, indem Sie das- <xref:System.Web.Management.WebApplicationLifetimeEvent> Objekt dem `rules` unter Abschnitt des- `healthMonitoring` Abschnitts der Konfigurationsdatei hinzufügen, wie im folgenden Beispiel gezeigt.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Der Leistungs Leistungs-Leistungswert für Anwendungs Lebensdauer enthält die Gesamtsumme aller ASP.net-Lebensdauer Ereignisse. Um diesen Leistungsindikator im System Monitor (Perfmon) anzuzeigen, wählen Sie im Fenster Leistungsindikatoren **Hinzufügen** in der Dropdown Liste **Leistungs Objekt** die Option **ASP.net** aus. Wählen Sie den Leistungswert **Anwendungs Lebensdauer Ereignisse** aus, und klicken Sie auf **Hinzufügen** . Weitere Informationen finden Sie unter "Verwenden des System Monitors (Perfmon) mit ASP.NET-Anwendungen" auf der [MSDN](https://go.microsoft.com/fwlink/?linkid=37118)-Website. Wenn Sie zulassen, dass Ereignisse vom Standard protokolliert werden <xref:System.Web.Management.EventLogWebEventProvider> , können Sie Sie in [Ereignisanzeige](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc756915\(v=ws.10\)) anzeigen, indem Sie das **Anwendungs** Protokoll auswählen.
  
> [!CAUTION]
>  Da <xref:System.Web.Management.WebApplicationLifetimeEvent> es sich bei dem Objekt um ein Ereignis mit hohem aufkommen handelt, ist die Protokollierung sehr ressourcenintensiv und verlangsamt möglicherweise das System. Es kann auch dazu führen, dass andere Ereignisse im Fall der <xref:System.Web.Management.EventLogWebEventProvider> -Klasse aufgrund der großen Anzahl von Ereignissen und der Funktionsweise der Ereignisprotokollierung überschrieben werden.  
  
> [!NOTE]
>  In den meisten Fällen können Sie die ASP.net-Integritäts Überwachungs Typen als implementiert verwenden, und Sie steuern das System Überwachungssystem durch Angabe von Werten im `healthMonitoring` Konfigurations Abschnitt. Sie können auch von den Typen der Integritäts Überwachung ableiten, um eigene benutzerdefinierte Ereignisse und Anbieter zu erstellen. Ein Beispiel für die Ableitung von der- <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie von der-Klasse abgeleitet wird <xref:System.Web.Management.WebApplicationLifetimeEvent> , um ein benutzerdefiniertes Ereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 Der folgende Konfigurationsdatei Auszug zeigt, wie Sie den- `healthMonitoring` Abschnitt einer Konfigurationsdatei so konfigurieren, dass der `SampleWebApplicationLifetimeEvent` oben definierte Code dem ASP.NET Health-Monitoring-System hinzugefügt wird. Um das Ereignis zum System hinzuzufügen, müssen Sie das Ereignis definieren, indem Sie dem Abschnitt einen neuen Eintrag hinzufügen `eventMappings` und das Ereignis einem Anbieter zuordnen, indem Sie dem Abschnitt einen neuen Eintrag hinzufügen `rules` .  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie die benutzerdefinierten Ereignis Informationen für die Anzeige formatieren, überschreiben Sie die- <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> Methode anstelle der- <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> Methode. Dadurch wird das Überschreiben oder manipulieren von sensiblen Systeminformationen vermieden.</para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />-Klasse.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die dem Ereignis zugeordnete Meldung.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <summary>Initialisiert die <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie werden Sie niemals zum Erstellen einer Instanz der- <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse verwenden, aber Sie können diesen Konstruktor beim Implementieren eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
> [!NOTE]
>  Der <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor ist nicht für die direkte Verwendung im Code vorgesehen. Sie wird von ASP.NET aufgerufen. Sie können den- <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor beim Ableiten von der-Klasse aufzurufen <xref:System.Web.Management.WebApplicationLifetimeEvent> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das- <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Ereignis in einem benutzerdefinierten ASP.net-Integritäts Ereignis verwendet wird. Dieses Codebeispiel soll vor allem die richtige Syntax zeigen, die verwendet werden soll.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebApplicationLifetimeEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebApplicationLifetimeEvent : string * obj * int * int -&gt; System.Web.Management.WebApplicationLifetimeEvent" Usage="new System.Web.Management.WebApplicationLifetimeEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die dem Ereignis zugeordnete Meldung.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet ist. Beim Implementieren eines benutzerdefinierten Ereignisses muss der Ereigniscode größer als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> sein.</param>
        <param name="eventDetailCode">Der <see cref="T:System.Web.Management.WebEventCodes" />-Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert die <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" />-Klasse mit den bereitgestellten Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Health-Monitoring-System verwendet. Sie werden Sie niemals zum Erstellen einer Instanz der- <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse verwenden, aber Sie können diesen Konstruktor beim Implementieren eines eigenen Ereignis Typs, der von dieser Klasse erbt, abrufen.  
  
> [!NOTE]
>  Der <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor ist nicht für die direkte Verwendung im Code vorgesehen. Sie wird von ASP.NET aufgerufen. Sie können den- <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor beim Ableiten von der-Klasse aufzurufen <xref:System.Web.Management.WebApplicationLifetimeEvent> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das- <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Ereignis in einem benutzerdefinierten ASP.net-Integritäts Ereignis verwendet wird. Dieses Codebeispiel soll vor allem die richtige Syntax zeigen, die verwendet werden soll.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webApplicationLifetimeEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird intern zum Inkrementieren der Leistungsindikatoren verwendet.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
      </Docs>
    </Member>
  </Members>
</Type>
