<Type Name="EventLogWebEventProvider" FullName="System.Web.Management.EventLogWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="542385469f0b38641c2c6cba60ffafe9bda5e94c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69138926" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.EventLogWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWebEventProvider sealed : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type EventLogWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementiert einen Ereignisanbieter, der ASP.NET-Systemüberwachungsereignisse in das Windows-Anwendungsereignisprotokoll schreibt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der ASP.net-Integritäts Überwachung können Produktions-und Betriebspersonal bereitgestellte Webanwendungen verwalten. Der <xref:System.Web.Management> -Namespace enthält die Integritäts Ereignis Typen, die für das Verpacken von Anwendungs Integritäts Statusdaten und die für die Verarbeitung dieser Daten verantwortlichen Anbieter Typen verantwortlich sind. Sie enthält auch unterstützende Typen, die bei der Verwaltung von Integritäts Ereignissen helfen.  
  
 Die <xref:System.Web.Management.EventLogWebEventProvider>Ereignisse, die Fehlerüberwachung und die Fehler Integritäts Überwachung werden standardmäßig konfiguriert (aktiviert). Dies bedeutet, dass die Fehlerüberwachung und die Fehler Integritäts Überwachungs Ereignisse standardmäßig im Windows-Anwendungs Ereignisprotokoll protokolliert werden.  
  
> [!NOTE]
>  In den meisten Fällen können Sie die ASP.net-Integritäts Überwachungs Typen als implementiert verwenden, und Sie steuern das System Überwachungssystem durch Angabe von Werten im `healthMonitoring` Konfigurations Abschnitt. Sie können auch von den Typen der Integritäts Überwachung ableiten, um eigene benutzerdefinierte Ereignisse und Anbieter zu erstellen. Ein Beispiel für das Erstellen eines benutzerdefinierten Anbieters finden [Sie unter Gewusst wie: Implementieren Sie das Beispiel](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)eines benutzerdefinierten Integritäts Überwachungs Anbieters.  
  
   
  
## Examples  
 Der folgende Konfigurationsdatei Auszug zeigt, wie Sie einen Anbieter vom Typ <xref:System.Web.Management.EventLogWebEventProvider> angeben, um Erfolgs Überwachungs Ereignisse zu verarbeiten. Die <xref:System.Web.Management.EventLogWebEventProvider> und die Überwachung der Integritäts Ereignis Typen, die überwacht werden sollen, sind standardmäßig konfiguriert. Zum Überwachen der Erfolgs Überwachungen müssen Sie diese konfigurieren, wie im Beispielcode gezeigt.  
  
```  
<healthMonitoring   
  enabled="true" heartbeatInterval="10">  
  
  <rule>  
    <add name="Success Audits Default"  
      eventName="Success Audits"  
      provider="EventLogProvider"  
      profile="Default"  
      minInterval="00:01:00" />  
  </rule>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.net Übersicht über die Integritäts Überwachung</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c">ASP.NET Beispiel für einen benutzerdefinierten Anbieter für die Integritäts Überwachung</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">Installieren und Konfigurieren von ASP.NET-Anbietern</related>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="eventLogWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verschiebt Ereignisse aus dem Puffer des Anbieters in das Ereignisprotokoll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode aufgerufen wird, werden alle Ereignisse im Puffer des Anbieters sofort in das Windows-Anwendungs Ereignisprotokoll geschrieben, unabhängig davon, wie viel Zeit seit dem letzten schreiben oder wie viele Ereignisse im Puffer verstrichen sind. Die Uhrzeit des letzten Schreibvorgangs wird auf die Zeit der leeren Aktion zurückgesetzt. Wenn der Puffer Mechanismus nicht aktiviert ist, hat das Aufrufen dieser Methode keinerlei Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="eventLogWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der in der Konfigurationsdatei zum Bezeichnen dieses Anbieters verwendete Name.</param>
        <param name="config">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" />, die die Attribute angibt, die diesem Anbieter in der Konfigurationsdatei zugewiesen sind.</param>
        <summary>Legt die Anfangswerte für dieses Objekt fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, um die <xref:System.Web.Management.EventLogWebEventProvider> mit den Konfigurationseinstellungen und dem Namen zu initialisieren, wie in der Konfigurationsdatei angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="eventLogWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">Das zu verarbeitende <see cref="T:System.Web.Management.WebBaseEvent" />-Objekt.</param>
        <summary>Verarbeitet das an den Anbieter übergebene Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die Methode, die ASP.NET Health Monitoring aufruft, um die Verarbeitung des Ereignisses zu starten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.EventLogWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="eventLogWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt mit dem Beenden des Anbieters verbundene Aufgaben aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net Ruft die <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> Methode auf, wenn die Anwendungsdomäne, die die Webanwendung gehostet, beendet wird Die-Methode wird aufgerufen, um Aufgaben auszuführen, die das ordnungsgemäße Beenden der Anwendung ermöglichen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
