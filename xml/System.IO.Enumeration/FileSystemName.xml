<Type Name="FileSystemName" FullName="System.IO.Enumeration.FileSystemName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57074b028fa34309272431a47d850366474e8a35" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73388508" /></Metadata><TypeSignature Language="C#" Value="public static class FileSystemName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FileSystemName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Enumeration.FileSystemName" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemName" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemName abstract sealed" />
  <TypeSignature Language="F#" Value="type FileSystemName = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden für das Abgleichen von Dateisystemnamen bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MatchesSimpleExpression">
      <MemberSignature Language="C#" Value="public static bool MatchesSimpleExpression (ReadOnlySpan&lt;char&gt; expression, ReadOnlySpan&lt;char&gt; name, bool ignoreCase = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MatchesSimpleExpression(valuetype System.ReadOnlySpan`1&lt;char&gt; expression, valuetype System.ReadOnlySpan`1&lt;char&gt; name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MatchesSimpleExpression (expression As ReadOnlySpan(Of Char), name As ReadOnlySpan(Of Char), Optional ignoreCase As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="static member MatchesSimpleExpression : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * bool -&gt; bool" Usage="System.IO.Enumeration.FileSystemName.MatchesSimpleExpression (expression, name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="name" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expression">Der Ausdruck, mit dem verglichen werden soll.</param>
        <param name="name">Der Name, der mit dem Ausdruck verglichen werden soll.</param>
        <param name="ignoreCase"><see langword="true" /> zum Ignorieren von Groß-/Kleinschreibung (Standard). <see langword="false" />, wenn Groß-/Kleinschreibung beachtet werden soll.</param>
        <summary>Überprüft, ob der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt. Unterstützt die folgenden Platzhalterzeichen: „*“ und „?“. Der umgekehrte Schrägstrich '\' dient als Escapezeichen.</summary>
        <returns><see langword="true" />, wenn der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesWin32Expression">
      <MemberSignature Language="C#" Value="public static bool MatchesWin32Expression (ReadOnlySpan&lt;char&gt; expression, ReadOnlySpan&lt;char&gt; name, bool ignoreCase = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MatchesWin32Expression(valuetype System.ReadOnlySpan`1&lt;char&gt; expression, valuetype System.ReadOnlySpan`1&lt;char&gt; name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MatchesWin32Expression (expression As ReadOnlySpan(Of Char), name As ReadOnlySpan(Of Char), Optional ignoreCase As Boolean = true) As Boolean" />
      <MemberSignature Language="F#" Value="static member MatchesWin32Expression : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * bool -&gt; bool" Usage="System.IO.Enumeration.FileSystemName.MatchesWin32Expression (expression, name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="name" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expression">Der Ausdruck, mit dem verglichen werden soll, z.B. „*.foo“.</param>
        <param name="name">Der Name, der mit dem Ausdruck verglichen werden soll.</param>
        <param name="ignoreCase"><see langword="true" /> zum Ignorieren von Groß-/Kleinschreibung (Standard). <see langword="false" />, wenn Groß-/Kleinschreibung bei der Übereinstimmung beachtet werden soll.</param>
        <summary>Überprüft, ob der angegebene Win32-Ausdruck mit dem angegebenen Namen übereinstimmt. Unterstützt die folgenden Platzhalterzeichen: „*“, „?“, „&lt;“, „&gt;“, „"“. Der umgekehrte Schrägstrich '\' dient als Escapezeichen.</summary>
        <returns><see langword="true" />, wenn der angegebene Ausdruck mit dem angegebenen Namen übereinstimmt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Die Syntax des `expression`-Parameters basiert auf der Syntax, die von <xref:System.IO.FileSystemWatcher>verwendet wird, der auf [rtlisnameinexpression](/windows/win32/devnotes/rtlisnameinexpression)basiert, der die Regeln für den passenden DOS-Platzhalter definiert (`'*'`, `'?'`, `'<'`, `'>'`, `'"'`).
 
Die Übereinstimmung entspricht nicht dem Win32-Verhalten, es sei denn, Sie transformieren den Ausdruck mit <xref:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateWin32Expression">
      <MemberSignature Language="C#" Value="public static string TranslateWin32Expression (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslateWin32Expression(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslateWin32Expression (expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TranslateWin32Expression(System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member TranslateWin32Expression : string -&gt; string" Usage="System.IO.Enumeration.FileSystemName.TranslateWin32Expression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Der zu übersetzende Ausdruck.</param>
        <summary>Übersetzt den angegebenen Win32-Ausdruck. Ändern Sie „*“ und „?“ in „&lt;“, „&gt;“ und „"“, um Win32-Verhalten zu ermitteln.</summary>
        <returns>Eine Zeichenfolge mit dem übersetzten Win32-Ausdruck.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Aus Kompatibilitätsgründen werden von Windows einige Platzhalter geändert, um eine genauere Übereinstimmung mit der Vergangenheits Zuordnung mit dem historischen DOS 8,3

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
