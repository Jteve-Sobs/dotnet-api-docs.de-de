<Type Name="IXmlJsonWriterInitializer" FullName="System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5eedde95c3ce9544180a64575467b404c948939" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46684832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlJsonWriterInitializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlJsonWriterInitializer" />
  <TypeSignature Language="F#" Value="type IXmlJsonWriterInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a603f-101">Gibt die Schnittstelle für die Initialisierung eines JSON-Writers (JavaScript Object Notation) an, wenn dieser zum Schreiben in einen bestimmten Ausgabestream wiederverwendet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a603f-101">Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a603f-102">Die <xref:System.Xml.XmlDictionaryWriter>-Objekte, die von den <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A>-Methoden erstellt werden, implementieren diese Schnittstelle und können nach dem Erstellen direkt JSON-codierte Daten schreiben.</span><span class="sxs-lookup"><span data-stu-id="a603f-102">The <xref:System.Xml.XmlDictionaryWriter> objects created by the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> methods implement this interface and when created are immediately ready to write JSON-encoded data.</span></span> <span data-ttu-id="a603f-103">Wenn ein Benutzer jedoch das gleiche <xref:System.Xml.XmlDictionaryWriter>-Objekt zum Schreiben eines neuen JSON-Dokuments in einen anderen Ausgabestream wiederverwenden möchte, muss der Writer mit der <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29>-Methode für den jeweiligen Stream initialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="a603f-103">But if a user wants to reuse the same <xref:System.Xml.XmlDictionaryWriter> object to write a new JSON document to another output stream, then the writer must be initialized to the appropriate stream by using the <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetOutput">
      <MemberSignature Language="C#" Value="public void SetOutput (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutput(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutput(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="abstract member SetOutput : System.IO.Stream * System.Text.Encoding * bool -&gt; unit" Usage="iXmlJsonWriterInitializer.SetOutput (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a603f-104">Der Ausgabe-<see cref="T:System.IO.Stream" />, in den der Writer schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a603f-104">The output <see cref="T:System.IO.Stream" /> to which the writer writes.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="a603f-105">Das <see cref="T:System.Text.Encoding" />-Objekt, das die Zeichencodierung des Ausgabestreams angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a603f-105">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding of the output stream.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="a603f-106">
            <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a603f-106">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a603f-107">Initialisiert (oder reinitialisiert) einen JSON-Writer (JavaScript Object Notation) für einen bestimmten Ausgabestream mit der angegebenen Zeichencodierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a603f-107">Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a603f-108">Die <xref:System.Xml.XmlDictionaryWriter>-Objekte, die von den <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A>-Methoden erstellt werden, implementieren diese Schnittstelle und können nach dem Erstellen direkt JSON-codierte Daten schreiben.</span><span class="sxs-lookup"><span data-stu-id="a603f-108">The <xref:System.Xml.XmlDictionaryWriter> objects created by the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> methods implement this interface and when created are immediately ready to write JSON-encoded data.</span></span> <span data-ttu-id="a603f-109">Wenn ein Benutzer jedoch das gleiche <xref:System.Xml.XmlDictionaryWriter>-Objekt zum Schreiben eines neuen JSON-Dokuments in einen anderen Ausgabestream wiederverwenden möchte, muss der Writer mit der <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29>-Methode für den jeweiligen Stream initialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="a603f-109">But if a user wants to reuse the same <xref:System.Xml.XmlDictionaryWriter> object to write a new JSON document to another output stream, then the writer must be initialized to the appropriate stream by using the <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="a603f-110">Die von <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> erstellten Writer können UTF-8- und UTF-16-Codierungen (Big- oder Little-Endian) verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="a603f-110">The writers created by <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> can handle the UTF-8 and the UTF-16 (big- or little-endian) encodings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>