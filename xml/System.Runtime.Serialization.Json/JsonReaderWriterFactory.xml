<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0092286e389e04d7f227b072971845d72f42e71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8e81-101">Erzeugt Instanzen von <see cref="T:System.Xml.XmlDictionaryReader" />, die mit JSON (JavaScript Object Notation) codierte Daten aus einem Stream oder Puffer lesen und diese einem XML-Infoset zuordnen können, sowie Instanzen von <see cref="T:System.Xml.XmlDictionaryWriter" />, die ein XML-Infoset zu JSON zuordnen und JSON-codierte Daten in einen Stream schreiben können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8e81-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-102">In [!INCLUDE[indigo1](~/includes/indigo1-md.md)] werden JSON-Nachrichten verarbeitet, indem die JSON-Daten dem XML-Infoset zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="d8e81-102">[!INCLUDE[indigo1](~/includes/indigo1-md.md)] processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="d8e81-103">Normalerweise erfolgt diese Zuordnung im Hintergrund.</span><span class="sxs-lookup"><span data-stu-id="d8e81-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="d8e81-104">In einigen erweiterten Szenarien kann jedoch eine manuelle Konvertierung zwischen JSON und XML erforderlich sein.</span><span class="sxs-lookup"><span data-stu-id="d8e81-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="d8e81-105">In diesem Fall kann die <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory>-Klasse verwendet werden, um die notwendigen XML-Reader und -Writer zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d8e81-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="d8e81-106">Beachten Sie, dass nicht jedes XML-Infoset-Element JSON zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="d8e81-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-107"> zur Zuordnung finden Sie unter [wie: Serialisieren und Deserialisieren von JSON-Daten](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-107"> mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8e81-108">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams oder Puffer einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-109">Jede der Überladungen verwendet ein <xref:System.Xml.XmlDictionaryReaderQuotas>-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="d8e81-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-110"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-110"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d8e81-111">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="d8e81-112">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-113">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-114">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON-Daten (JavaScript Object Notation) verarbeiten kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-115">Diese Überladung lässt keinen <xref:System.Text.Encoding>-Parameter zu.</span><span class="sxs-lookup"><span data-stu-id="d8e81-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="d8e81-116">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="d8e81-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-117"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-117"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-118">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="d8e81-119">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-120">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-121">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-122">Diese Überladung verwendet keinen <xref:System.Text.Encoding>-Parameter.</span><span class="sxs-lookup"><span data-stu-id="d8e81-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="d8e81-123">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="d8e81-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-124"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-124"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d8e81-125">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d8e81-126">Die Anfangsposition, ab der in <c>buffer</c> gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-126">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d8e81-127">Byteanzahl, die aus <c>buffer</c> gelesen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-127">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="d8e81-128">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-129">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-130">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-131">Diese Überladung verwendet keinen <xref:System.Text.Encoding>-Parameter.</span><span class="sxs-lookup"><span data-stu-id="d8e81-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="d8e81-132">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="d8e81-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-133"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-133"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-134">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-135">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="d8e81-136">Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="d8e81-137">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="d8e81-138">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-139">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-140">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-141"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-141"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="d8e81-142">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="d8e81-143">Die Anfangsposition, ab der in <c>buffer</c> gelesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-143">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d8e81-144">Byteanzahl, die aus <c>buffer</c> gelesen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-144">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-145">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="d8e81-146">Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="d8e81-147">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="d8e81-148">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
          <span data-ttu-id="d8e81-149">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-149">The default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-150">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe, einem festen Offset und einer spezifischen Zeichencodierung einem XML-Infoset zuordnen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-151">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="d8e81-152"> mit <xref:System.Xml.XmlDictionaryReaderQuotas> um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen zu Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="d8e81-152"> using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8e81-153">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-154">Die statische <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A>-Methode gibt eine <xref:System.Xml.XmlDictionaryWriter>-Instanz zurück, die ein XML-Infoset einem JSON-Stream zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="d8e81-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="d8e81-155">Für den <xref:System.Xml.XmlDictionaryWriter> besteht keine Garantie, dass er gültige JSON-Daten erzeugt.</span><span class="sxs-lookup"><span data-stu-id="d8e81-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="d8e81-156">Wird er auf eine von der JSON-XML-Zuordnung nicht unterstützte Weise verwendet, wird entweder eine Ausnahme ausgelöst, oder es wird ein ungültiges JSON-Dokument geschrieben.</span><span class="sxs-lookup"><span data-stu-id="d8e81-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-157">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-158">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-159">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-160">Die Standardzeichencodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="d8e81-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="d8e81-161">Wenn der Writer geschlossen wird, wird der Stream ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="d8e81-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-162">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-163">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="d8e81-164">Die Standardcodierung ist UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-164">The default encoding is UTF-8.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-165">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-166">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8e81-167">Wenn der Writer geschlossen wird, wird der Stream ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="d8e81-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-168">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-169">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="d8e81-170">Die Standardcodierung ist UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-170">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="d8e81-171">
            <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8e81-172">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-172">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-173">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-174">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-175">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-176">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="d8e81-177">Die Standardcodierung ist UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-177">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="d8e81-178">
            <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8e81-179">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-179">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="d8e81-180">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-181">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-182">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="d8e81-183">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="d8e81-184">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="d8e81-185">Die Standardcodierung ist UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-185">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="d8e81-186">
            <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d8e81-187">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-187">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="d8e81-188">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="indentChars">
          <span data-ttu-id="d8e81-189">Die Zeichenfolge, die für den Einzug jeder Ebene verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-189">The string used to indent each level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8e81-190">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8e81-191">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8e81-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>