<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="681275183cee74ea05c0842a6c99b9cf05aad4d7" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83542485" /></Metadata><TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.Serialization.Json" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.Runtime.Serialization" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="07320-101">Erzeugt Instanzen von <see cref="T:System.Xml.XmlDictionaryReader" />, die mit JSON (JavaScript Object Notation) codierte Daten aus einem Stream oder Puffer lesen und diese einem XML-Infoset zuordnen können, sowie Instanzen von <see cref="T:System.Xml.XmlDictionaryWriter" />, die ein XML-Infoset zu JSON zuordnen und JSON-codierte Daten in einen Stream schreiben können.</span><span class="sxs-lookup"><span data-stu-id="07320-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-102">Windows Communication Foundation (WCF) verarbeitet JSON-Nachrichten mithilfe einer Zuordnung zwischen JSON-Daten und dem XML-Infoset.</span><span class="sxs-lookup"><span data-stu-id="07320-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="07320-103">Normalerweise erfolgt diese Zuordnung im Hintergrund.</span><span class="sxs-lookup"><span data-stu-id="07320-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="07320-104">In einigen erweiterten Szenarien kann jedoch eine manuelle Konvertierung zwischen JSON und XML erforderlich sein.</span><span class="sxs-lookup"><span data-stu-id="07320-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="07320-105">In diesem Fall kann die <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory>-Klasse verwendet werden, um die notwendigen XML-Reader und -Writer zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="07320-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="07320-106">Beachten Sie, dass nicht jedes XML-Infoset-Element JSON zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="07320-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="07320-107">Weitere Informationen zur Zuordnung finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON-Daten](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07320-108">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams oder Puffer einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-109">Jede der Überladungen verwendet ein <xref:System.Xml.XmlDictionaryReaderQuotas>-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="07320-110">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="07320-111">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="07320-112">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="07320-113">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="07320-114">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON-Daten (JavaScript Object Notation) verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="07320-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-115">Diese Überladung lässt keinen <xref:System.Text.Encoding>-Parameter zu.</span><span class="sxs-lookup"><span data-stu-id="07320-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="07320-116">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="07320-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="07320-117">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (stream As Stream, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-118">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="07320-119">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="07320-120">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="07320-121">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-122">Diese Überladung verwendet keinen <xref:System.Text.Encoding>-Parameter.</span><span class="sxs-lookup"><span data-stu-id="07320-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="07320-123">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="07320-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="07320-124">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="07320-125">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="07320-126">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-126">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="07320-127">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="07320-127">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="quotas"><span data-ttu-id="07320-128">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="07320-129">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="07320-130">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-131">Diese Überladung verwendet keinen <xref:System.Text.Encoding>-Parameter.</span><span class="sxs-lookup"><span data-stu-id="07320-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="07320-132">Die Zeichencodierung (UTF-8, Unicode oder Big-Endian Unicode) wird automatisch erkannt, wenn die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="07320-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="07320-133">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (stream As Stream, encoding As Encoding, quotas As XmlDictionaryReaderQuotas, onClose As OnXmlDictionaryReaderClose) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-134">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-135">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="07320-136">Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="07320-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="07320-137">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="07320-138">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span></param>
        <summary><span data-ttu-id="07320-139">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="07320-140">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-141">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, encoding As Encoding, quotas As XmlDictionaryReaderQuotas, onClose As OnXmlDictionaryReaderClose) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="07320-142">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="07320-143">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-143">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="07320-144">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="07320-144">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-145">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="07320-146">Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="07320-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="07320-147">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</span><span class="sxs-lookup"><span data-stu-id="07320-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="07320-148">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07320-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span> <span data-ttu-id="07320-149">Standardwert: <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07320-149">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="07320-150">Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe, einem festen Offset und einer spezifischen Zeichencodierung einem XML-Infoset zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="07320-151">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-152">Weitere Informationen zur Verwendung von <xref:System.Xml.XmlDictionaryReaderQuotas>, um Denial-of-Service-Angriffe beim Lesen nicht vertrauenswürdiger Daten zu verhindern, finden Sie unter [Sicherheitsüberlegungen für Daten](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="07320-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07320-153">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-154">Die statische <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A>-Methode gibt eine <xref:System.Xml.XmlDictionaryWriter>-Instanz zurück, die ein XML-Infoset einem JSON-Stream zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="07320-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="07320-155">Für den <xref:System.Xml.XmlDictionaryWriter> besteht keine Garantie, dass er gültige JSON-Daten erzeugt.</span><span class="sxs-lookup"><span data-stu-id="07320-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="07320-156">Wird er auf eine von der JSON-XML-Zuordnung nicht unterstützte Weise verwendet, wird entweder eine Ausnahme ausgelöst, oder es wird ein ungültiges JSON-Dokument geschrieben.</span><span class="sxs-lookup"><span data-stu-id="07320-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonWriter (stream As Stream) As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-157">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span><span class="sxs-lookup"><span data-stu-id="07320-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <summary><span data-ttu-id="07320-158">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <returns><span data-ttu-id="07320-159">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-160">Die Standardzeichencodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="07320-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="07320-161">Wenn der Writer geschlossen wird, wird der Stream ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="07320-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonWriter (stream As Stream, encoding As Encoding) As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-162">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span><span class="sxs-lookup"><span data-stu-id="07320-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-163">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="07320-164">Die Standardcodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="07320-164">The default encoding is UTF-8.</span></span></param>
        <summary><span data-ttu-id="07320-165">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="07320-166">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07320-167">Wenn der Writer geschlossen wird, wird der Stream ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="07320-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonWriter (stream As Stream, encoding As Encoding, ownsStream As Boolean) As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-168">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span><span class="sxs-lookup"><span data-stu-id="07320-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-169">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="07320-170">Die Standardcodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="07320-170">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="07320-171"><see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07320-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="07320-172">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="07320-172">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="07320-173">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="07320-174">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonWriter (stream As Stream, encoding As Encoding, ownsStream As Boolean, indent As Boolean) As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-175">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span><span class="sxs-lookup"><span data-stu-id="07320-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-176">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="07320-177">Die Standardcodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="07320-177">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="07320-178"><see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07320-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="07320-179">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="07320-179">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="07320-180">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07320-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="07320-181">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="07320-182">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonWriter (stream As Stream, encoding As Encoding, ownsStream As Boolean, indent As Boolean, indentChars As String) As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indentChars" Type="System.String" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="07320-183">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</span><span class="sxs-lookup"><span data-stu-id="07320-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="07320-184">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt.</span><span class="sxs-lookup"><span data-stu-id="07320-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="07320-185">Die Standardcodierung ist UTF-8.</span><span class="sxs-lookup"><span data-stu-id="07320-185">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="07320-186"><see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07320-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="07320-187">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="07320-187">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="07320-188">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07320-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <param name="indentChars"><span data-ttu-id="07320-189">Die Zeichenfolge, die für den Einzug jeder Ebene verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="07320-189">The string used to indent each level.</span></span></param>
        <summary><span data-ttu-id="07320-190">Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="07320-191">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</span><span class="sxs-lookup"><span data-stu-id="07320-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
