<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9238f0f551f2efdea9af6b538562421b793067a0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70488986" /></Metadata><TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type SendActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="14608-101">Clientaktivität, die den synchronen Aufruf eines Windows Communication Foundation (WCF)-Dienstvorgangs abbildet.</span><span class="sxs-lookup"><span data-stu-id="14608-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="14608-102">Mit <xref:System.Workflow.Activities.SendActivity> der-Aktivität können Sie mithilfe eines vordefinierten Nachrichtenaustausch Musters an einer Konversation mit einem WCF-Dienst teilnehmen.</span><span class="sxs-lookup"><span data-stu-id="14608-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14608-103">Bei der <xref:System.Workflow.Activities.SendActivity>-Aktivität handelt es sich um eine Blockieraktivität, d.&#160;h, die Workflowausführung wird bis zum Ende der Ausführung der Aktivität blockiert.</span><span class="sxs-lookup"><span data-stu-id="14608-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="14608-104">Zu den von der <xref:System.Workflow.Activities.SendActivity>-Aktivität unterstützten Nachrichtenaustauschmustern zählen:</span><span class="sxs-lookup"><span data-stu-id="14608-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="14608-105">Nachricht unidirektional senden</span><span class="sxs-lookup"><span data-stu-id="14608-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="14608-106">Die <xref:System.Workflow.Activities.SendActivity>-Aktivität sendet eine Nachricht, erwartet aber keine Antwort vom Dienst.</span><span class="sxs-lookup"><span data-stu-id="14608-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="14608-107">Anforderung senden - Antwort empfangen</span><span class="sxs-lookup"><span data-stu-id="14608-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="14608-108">Die <xref:System.Workflow.Activities.SendActivity>-Aktivität sendet eine Nachricht und wartet, bis eine Antwort vom Dienst empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="14608-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="14608-109">Anforderung senden - Fehler empfangen</span><span class="sxs-lookup"><span data-stu-id="14608-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="14608-110">Die <xref:System.Workflow.Activities.SendActivity>-Aktivität sendet eine Nachricht und wartet, bis eine Antwort oder ein Fehler vom Dienst empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="14608-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="14608-111">Während der Ausführung werden durch die Sendeaktivität alle vom Server empfangenen Fehler ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="14608-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="14608-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity>-Aktivitäten können zum Behandeln der Fehler im Clientworkflow verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14608-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14608-113">Diese Aktivität ist Teil von [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="14608-113">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="14608-114">Informationen zu den entsprechenden- [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]Aktivitäten in <xref:System.ServiceModel.Activities.Send>finden Sie unter.</span><span class="sxs-lookup"><span data-stu-id="14608-114">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14608-115">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.SendActivity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="14608-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-116">Der <xref:System.Workflow.Activities.SendActivity>-Konstruktor wird normalerweise in der vom Workflow-Designer erstellten Code-Beside-Datei aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="14608-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14608-117">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.SendActivity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="14608-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-118">Der <xref:System.Workflow.Activities.SendActivity>-Konstruktor wird normalerweise in der vom Workflow-Designer erstellten Code-Beside-Datei aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="14608-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-119">Im folgenden Beispiel wird gezeigt, wie eine neue Instanz der <xref:System.Workflow.Activities.SendActivity>-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="14608-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="14608-120">Dieses Beispiel basiert auf dem SDK-Beispiel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="14608-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.SendActivity : string -&gt; System.Workflow.Activities.SendActivity" Usage="new System.Workflow.Activities.SendActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="14608-121">Der <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> zugewiesene Wert, wenn die Aktivität initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="14608-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span></span></param>
        <summary><span data-ttu-id="14608-122">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.SendActivity" />-Klasse mit der angegebenen <see langword="name" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="14608-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-123">Der <xref:System.Workflow.Activities.SendActivity>-Konstruktor wird normalerweise in der vom Workflow-Designer erstellten Code-Beside-Datei aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="14608-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-124">Im folgenden Beispiel wird gezeigt, wie eine neue Instanz der <xref:System.Workflow.Activities.SendActivity>-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="14608-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberSignature Language="F#" Value="member this.AfterResponse : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.AfterResponse : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-125">Tritt auf, nachdem die Antwort vom Dienst empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="14608-125">Occurs after the response has been received from the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-126">Der diesem Ereignis zugeordnete Ereignishandler kann zum Lesen des Rückgabewerts aus dem aufgerufenen Dienstvorgang verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14608-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-127">Im folgenden Beispiel wird die Verwendung des `AfterResponse`-Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AfterResponseEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-128">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf das <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />-Ereignis bezieht.</span><span class="sxs-lookup"><span data-stu-id="14608-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-129">Diese Abhängigkeitsereigniseigenschaft kann zum Binden des <xref:System.Workflow.Activities.SendActivity.AfterResponse>-Ereignisses der Sendeaktivität an einen öffentlichen Ereignishandler für die Workflowklasse verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14608-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberSignature Language="F#" Value="member this.BeforeSend : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.BeforeSend : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-130">Tritt auf, bevor die <see cref="T:System.Workflow.Activities.SendActivity" />-Aktivität die Nachricht an den Dienst sendet.</span><span class="sxs-lookup"><span data-stu-id="14608-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-131">Der diesem Ereignis zugeordnete Ereignishandler kann zum Festlegen der Parameterwerte für den aufgerufenen Dienstvorgang verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14608-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14608-132">Der Kontext einer <xref:System.Workflow.Activities.SendActivity> kann in diesem Ereignishandler nicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="14608-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-133">Im folgenden Beispiel wird die Verwendung des `BeforeSend`-Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="14608-134">Dieses Beispiel basiert auf dem SDK-Beispiel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="14608-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeforeSendEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-135">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf das <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />-Ereignis bezieht.</span><span class="sxs-lookup"><span data-stu-id="14608-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-136">Diese Abhängigkeitsereigniseigenschaft kann zum Binden des <xref:System.Workflow.Activities.SendActivity.BeforeSend>-Ereignisses der Sendeaktivität an einen öffentlichen Ereignishandler für die Workflowklasse verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="14608-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelToken : System.Workflow.Activities.ChannelToken with get, set" Usage="System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-137"><see cref="T:System.Workflow.Activities.ChannelToken" />, das von der <see cref="T:System.Workflow.Activities.SendActivity" /> zur eigenen Zuordnung zu einem Clientkanal verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="14608-137"><see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span></span></summary>
        <value><span data-ttu-id="14608-138">Ein <see cref="T:System.Workflow.Activities.ChannelToken" />, das einen Clientkanal definiert, den eine <see cref="T:System.Workflow.Activities.SendActivity" /> zur Kommunikation mit einem Dienst verwendet.</span><span class="sxs-lookup"><span data-stu-id="14608-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-139">Ein Kanaltoken gibt den Namen des Kanals, den Bereich des Kanals und den beim Erstellen des Kanals zu verwendenden Endpunktkonfigurationsnamen an.</span><span class="sxs-lookup"><span data-stu-id="14608-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="14608-140">Der Endpunktname in der Konfigurationsdatei enthält die Adresse, Bindung und Vertragsinformationen für einen Dienst, mit dem die <xref:System.Workflow.Activities.SendActivity>-Aktivität kommuniziert.</span><span class="sxs-lookup"><span data-stu-id="14608-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="14608-141">Das Kanaltoken gibt auch einen eindeutigen Kanalnamen und einen Besitzeraktivitätsnamen für das Token an.</span><span class="sxs-lookup"><span data-stu-id="14608-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="14608-142">Ein Kanaltoken kann von mehreren Sendeaktivitäten genutzt werden, die den gleichen Endpunkt für die Kommunikation mit einem Dienst verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="14608-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-143">Im folgenden Beispiel wird der Zugriff auf die `ChannelToken`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="14608-144">Dieses Beispiel basiert auf dem SDK-Beispiel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="14608-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="System.Workflow.Activities.SendActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-145">Gibt ein Wörterbuch zurück, das den für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendeten Kontext enthält, darunter die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <value><span data-ttu-id="14608-146">Eine wörterbuchbasierte Auflistung, die <see cref="T:System.Xml.XmlQualifiedName" />-Schlüssel und ihre zugeordneten <see cref="T:System.String" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="14608-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-147">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-148">Im folgenden Beispiel wird der Zugriff auf die `Context`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="14608-149">Dieses Beispiel basiert auf dem SDK-Beispiel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="14608-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomAddress : string with get, set" Usage="System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-150">Ruft die benutzerdefinierte Adresse ab, die zur Kommunikation mit einem Dienst verwendet wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="14608-150">Gets or sets the custom address used to communicate with a service.</span></span></summary>
        <value><span data-ttu-id="14608-151">Zeichenfolgenwert, dessen Wert die Adresse ist, die ein Dienst überwacht.</span><span class="sxs-lookup"><span data-stu-id="14608-151">String value whose value is the address a service is listening on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-152">Falls vorhanden, wird dieser Wert verwendet, um die Endpunktadresse für den Vorgang zu definieren.</span><span class="sxs-lookup"><span data-stu-id="14608-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-153">Im folgenden Beispiel wird der Zugriff auf die `CustomAddress`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="14608-154">Dieses Beispiel basiert auf dem SDK-Beispiel `CalculatorClient`.</span><span class="sxs-lookup"><span data-stu-id="14608-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomAddressProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-155">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> für die <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />-Eigenschaft dar.</span><span class="sxs-lookup"><span data-stu-id="14608-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-156">Falls vorhanden, wird dieser Wert verwendet, um die Endpunktadresse für den Vorgang zu definieren.</span><span class="sxs-lookup"><span data-stu-id="14608-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="sendActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14608-157">Gibt ein Wörterbuch zurück, das den für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendeten Kontext enthält, darunter die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-158">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpoint, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="14608-159">Aktivität, deren Kontextinformationen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="14608-159">Activity whose context information is required.</span></span></param>
        <param name="endpoint"><span data-ttu-id="14608-160">Endpunktinformationen für Korrelation mit einem Dienst.</span><span class="sxs-lookup"><span data-stu-id="14608-160">Endpoint information for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="14608-161">Der <see cref="T:System.Type" /> des von einem Dienst implementierten Vertrags.</span><span class="sxs-lookup"><span data-stu-id="14608-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="14608-162">Ruft die Kontextinformationen für einen Sendevorgang ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="14608-162">Gets or sets the context information for a send operation.</span></span></summary>
        <returns><span data-ttu-id="14608-163">Eine wörterbuchbasierte Auflistung, die <see cref="T:System.Xml.XmlQualifiedName" />-Schlüssel und ihre zugeordneten <see cref="T:System.String" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="14608-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-164">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-165">Im folgenden Beispiel wird die Verwendung der `GetContext`-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="14608-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpointName, ownerActivityName, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="14608-166">Aktivität, deren Kontextinformationen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="14608-166">Activity whose context information is required.</span></span></param>
        <param name="endpointName"><span data-ttu-id="14608-167">Der Name des für Korrelation mit einem Dienst verwendeten Endpunkts.</span><span class="sxs-lookup"><span data-stu-id="14608-167">Name of the endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="14608-168">Der Name der besitzenden Aktivität.</span><span class="sxs-lookup"><span data-stu-id="14608-168">The name of the owning activity.</span></span></param>
        <param name="contractType"><span data-ttu-id="14608-169">Der <see cref="T:System.Type" /> des von einem Dienst implementierten Vertrags.</span><span class="sxs-lookup"><span data-stu-id="14608-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="14608-170">Statische Methode, die Kontextinformationen zurückgibt, wenn eine Aktivitätsinstanz, ein von dieser Instanz verwendeter Endpunktname, der Name der Besitzeraktivität und ein <see cref="T:System.Type" />-Objekt, das den Vertragstyp darstellt, angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="14608-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span></span></summary>
        <returns><span data-ttu-id="14608-171">Eine wörterbuchbasierte Auflistung, die <see cref="T:System.Xml.XmlQualifiedName" />-Schlüssel und ihre zugeordneten <see cref="T:System.String" />-Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="14608-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-172">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-173">Im folgenden Beispiel wird die Verwendung der `GetContext`-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="14608-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="sendActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-174">Ruft die Auflistung von bindungsfähigen Parametern ab, so wie sie in der Parameterliste des Windows Communication Foundation-Diensts (WCF) vorkommt.</span><span class="sxs-lookup"><span data-stu-id="14608-174">Gets the collection of bindable parameters as found in the Windows Communication Foundation (WCF) service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="14608-175">Die <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> der Parameter, zu denen eine Bindung hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="14608-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> können verwendet werden, um Bindungen zwischen den Dienstvorgangsparametern und dem öffentlichen Feld und den Eigenschaften des Workflows anzugeben, der die <xref:System.Workflow.Activities.SendActivity>-Aktivität enthält.</span><span class="sxs-lookup"><span data-stu-id="14608-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="14608-177">Beim Ausführen der <xref:System.Workflow.Activities.SendActivity>-Aktivität werden die entsprechenden Parameterwerte aus den Workfloweigenschaften, denen sie zugeordnet sind, gelesen und als Dienstvorgangsparameter an den Dienst gesendet.</span><span class="sxs-lookup"><span data-stu-id="14608-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="14608-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> können auch verwendet werden, um die Rückgabewerte aus einem Dienstvorgang abzurufen.</span><span class="sxs-lookup"><span data-stu-id="14608-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="14608-179">Alle Parameter des Dienstvorgangs sollten gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="14608-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="14608-180">Ungebundene Dienstvorgangsparameter erzeugen Compilerwarnungen, und die Standardwerte des Parameters werden gesendet, wenn <xref:System.Workflow.Activities.SendActivity> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="14608-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-181">Im folgenden Beispiel wird der Zugriff auf die `ParameterBindings`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="14608-182">Dieses Beispiel basiert auf dem SDK-Beispiel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="14608-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberSignature Language="F#" Value="val mutable ReturnValuePropertyName : string" Usage="System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-183">Name der Eigenschaft, die für den vom Dienst, mit dem die <see langword="SendActivity" />-Aktivität kommuniziert, gesendeten Rückgabewert verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="14608-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-184">Diese Zeichenfolge kann zum Abrufen des Rückgabewerts aus den <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> verwendet werden, die der <xref:System.Workflow.Activities.SendActivity>-Aktivität im <xref:System.Workflow.Activities.SendActivity.AfterResponse>-Ereignishandler zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="14608-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-185">Im folgenden Beispiel wird der Zugriff auf das Feld `ReturnValuePropertyName` veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.TypedOperationInfo with get, set" Usage="System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14608-186">Definiert den Vertrag und den Vorgang des Diensts, mit dem die <see langword="SendActivity" />-Aktivität kommuniziert.</span><span class="sxs-lookup"><span data-stu-id="14608-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span></span></summary>
        <value><span data-ttu-id="14608-187">Ein <see cref="T:System.Workflow.Activities.TypedOperationInfo" />-Objekt, das den Vertragsnamen, Vertragstyp, Vorgangsnamen (der vom tatsächlichen Methodennamen abweichen kann), Informationen, ob der Vorgang ein unidirektionaler Vorgang ist, und Methodeninformationen einschließlich Parameter zu dem Vorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="14608-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-188">Die <xref:System.Workflow.Activities.SendActivity>-Aktivität verweist immer auf einen vorhandenen Vertrag und seine definierten Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="14608-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="14608-189">Es gibt keine Klausel, die es einer <xref:System.Workflow.Activities.SendActivity>-Aktivität ermöglicht, einen Vertrag selbst zu definieren.</span><span class="sxs-lookup"><span data-stu-id="14608-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-190">Im folgenden Beispiel wird der Zugriff auf die `ServiceOperationInfo`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="14608-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="14608-191">Dieses Beispiel basiert auf dem SDK-Beispiel `Conversations`.</span><span class="sxs-lookup"><span data-stu-id="14608-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14608-192">Legt Kontextinformationen für eine <see cref="T:System.Workflow.Activities.SendActivity" />-Aktivität fest.</span><span class="sxs-lookup"><span data-stu-id="14608-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-193">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpoint, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="14608-194">Die Aktivitätsinstanz, der die Kontextinformationen zugeordnet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="14608-194">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpoint"><span data-ttu-id="14608-195">Der für Korrelation mit einem Dienst verwendete Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="14608-195">The endpoint used for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="14608-196">Der <see cref="T:System.Type" /> des von einem Dienst implementierten Vertrags.</span><span class="sxs-lookup"><span data-stu-id="14608-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="14608-197">Die festzulegenden Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="14608-197">The context information to set.</span></span></param>
        <summary><span data-ttu-id="14608-198">Eine statische Methode, die Kontextinformationen für eine <see cref="T:System.Workflow.Activities.SendActivity" />-Aktivität festlegt, wenn eine Aktivitätsinstanz, ein von dieser Aktivität verwendeter Endpunkt, ein <see cref="T:System.Type" />-Objekt, das den Vertragstyp darstellt, und die eigentlichen Kontextinformationen angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="14608-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14608-199">Kontextinformationen werden für die Kommunikation zwischen dem Client und dem jeweiligen Dienst verwendet und enthalten u.&#160;A. die Identifizierung zur Korrelation.</span><span class="sxs-lookup"><span data-stu-id="14608-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14608-200">Im folgenden Beispiel wird die Verwendung der `SetContext`-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="14608-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * string * string * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpointName, ownerActivityName, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="14608-201">Die Aktivitätsinstanz, der die Kontextinformationen zugeordnet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="14608-201">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpointName"><span data-ttu-id="14608-202">Der Name eines für Korrelation mit einem Dienst verwendeten Endpunkts.</span><span class="sxs-lookup"><span data-stu-id="14608-202">The name of an endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="14608-203">Der Name der besitzenden Aktivität.</span><span class="sxs-lookup"><span data-stu-id="14608-203">The name of the owning activity</span></span></param>
        <param name="contractType"><span data-ttu-id="14608-204">Der <see cref="T:System.Type" /> des von einem Dienst implementierten Vertrags.</span><span class="sxs-lookup"><span data-stu-id="14608-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="14608-205">Die festzulegenden Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="14608-205">The context information to set.</span></span></param>
        <summary><span data-ttu-id="14608-206">Eine statische Methode, die Kontextinformationen für eine <see cref="T:System.Workflow.Activities.SendActivity" />-Aktivität festlegt, wenn eine Aktivitätsinstanz, ein von dieser Aktivität verwendeter Endpunktname, der Name der Besitzeraktivität, ein <see cref="T:System.Type" />-Objekt, das den Vertragstyp darstellt, und die eigentlichen Kontextinformationen angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="14608-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14608-207">Im folgenden Beispiel wird die Verwendung der `SetContext`-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="14608-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
