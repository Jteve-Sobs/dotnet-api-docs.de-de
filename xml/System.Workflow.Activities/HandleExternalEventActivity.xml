<Type Name="HandleExternalEventActivity" FullName="System.Workflow.Activities.HandleExternalEventActivity">
  <TypeSignature Language="C#" Value="public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandleExternalEventActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.HandleExternalEventActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class HandleExternalEventActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IDynamicPropertyTypeProvider, IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleExternalEventActivity : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Invoked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="96aa1-101">Definiert eine Workflow-Kommunikationsaktivität, mit der ein von einem lokalen Dienst ausgelöstes Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-101">Defines a workflow communication activity that is used to handle an event that is raised by a local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="96aa1-102">Ein lokaler Dienst ist eine Klasse, mit der eine lokale Dienstschnittstelle implementiert wird (eine Schnittstelle, die mit <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> markiert wird) und die <xref:System.Workflow.Activities.ExternalDataExchangeService> hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-102">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
 <span data-ttu-id="96aa1-103"><xref:System.Workflow.Activities.HandleExternalEventActivity> empfängt Daten, wenn vom <xref:System.Workflow.Activities.ExternalDataExchangeService>-Dienst mit von <xref:System.Workflow.Activities.ExternalDataEventArgs> abgeleiteten Ereignisdaten ein Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-103">The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span></span>  
  
 <span data-ttu-id="96aa1-104"><xref:System.Workflow.Activities.HandleExternalEventActivity> ist eine Blockieraktivität.</span><span class="sxs-lookup"><span data-stu-id="96aa1-104">The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.</span></span>  
  
 <span data-ttu-id="96aa1-105">Klassen, die von <xref:System.Workflow.Activities.HandleExternalEventActivity> abgeleitet werden, sollten nicht für die Implementierung der <xref:System.Workflow.ComponentModel.IActivityEventListener%601>-Schnittstelle verwendet werden, da die abgeleitete Klasse andernfalls nicht ordnungsgemäß ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-105">Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96aa1-106">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-106">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="96aa1-107">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-107">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-108">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-108">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96aa1-109">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96aa1-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96aa1-110">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96aa1-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-111">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-111">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span> <span data-ttu-id="96aa1-112">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-112">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-113">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-113">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="96aa1-114">Der benutzerdefinierte Name der Aktivität.</span><span class="sxs-lookup"><span data-stu-id="96aa1-114">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="96aa1-115">Initialisiert mithilfe des Aktivitätsnamens eine neue Instanz der <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96aa1-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="96aa1-116">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, der die Ausführungsumgebung von <see cref="T:System.Workflow.ComponentModel.Activity" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-116">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="96aa1-117">Bricht die Behandlung des Ereignisses ab.</span><span class="sxs-lookup"><span data-stu-id="96aa1-117">Cancels the handling of the event.</span></span></summary>
        <returns><span data-ttu-id="96aa1-118">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> von <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> am Ende des angeforderten Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-118">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-119">Ruft die Bindung ab oder legt sie auf <see cref="T:System.Workflow.Runtime.CorrelationToken" /> fest.</span><span class="sxs-lookup"><span data-stu-id="96aa1-119">Gets or sets the binding to a <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span></span></summary>
        <value><span data-ttu-id="96aa1-120">Mit dieser Eigenschaft wird ein Ereignis auf Grundlage seiner Nutzlast zur korrekten von <see cref="T:System.Workflow.Activities.IEventActivity" /> geerbten Aktivität in Beziehung gesetzt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-120">This property is used to correlate an event to the correct <see cref="T:System.Workflow.Activities.IEventActivity" />-inherited activity based on the payload of the event.</span></span> <span data-ttu-id="96aa1-121">Werden mehrere Instanzen eines Ereignisses gleichzeitig von einer einzelnen Workflowinstanz überwacht, wird das Ereignis mit der <see langword="CorrelationToken" />-Eigenschaft an die geeignete Aktivität in dieser Workflowinstanz weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="96aa1-121">For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the <see langword="CorrelationToken" /> property is used to route the event to the proper activity in that workflow instance.</span></span>  
  
 <span data-ttu-id="96aa1-122">Diese Korrelation darf nicht mit dem Vorgang verwechselt werden, ein Ereignis in Beziehung zur richtigen Workflowinstanz zu setzen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-122">This correlation should not be confused with correlating an event to the correct workflow instance.</span></span> <span data-ttu-id="96aa1-123">Das Herstellen einer Korrelation zur korrekten Workflowinstanz erfolgt durch Senden des Ereignisses an eine explizite Workflowinstanz und durch die Verwendung der <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />-Eigenschaft zur ordnungsgemäßen Identifizierung der korrekten Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="96aa1-123">The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> property to properly identify the correct workflow instance.</span></span>  
  
 <span data-ttu-id="96aa1-124">Ein Beispiel einer Korrelation, finden Sie die [korreliert Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="96aa1-124">For an example of correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-125">Das folgende Beispiel veranschaulicht den Zugriff auf die `CorrelationToken`-Eigenschaft von `HandleExternalEventActivity`.</span><span class="sxs-lookup"><span data-stu-id="96aa1-125">The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`.</span></span> <span data-ttu-id="96aa1-126">Dieses Beispiel stammt aus dem Correlated Local Service SDK-Beispiel in der Datei CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-126">This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="96aa1-127">Weitere Informationen finden Sie unter [korreliert Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="96aa1-127">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#198](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#198)]
 [!code-vb[Wf_samples#198](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#198)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-128">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />-Eigenschaft bezieht.</span><span class="sxs-lookup"><span data-stu-id="96aa1-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public virtual string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-129">Ruft den Namen des ausgelösten Ereignisses ab.</span><span class="sxs-lookup"><span data-stu-id="96aa1-129">Gets the name of the raised event.</span></span> <span data-ttu-id="96aa1-130">Diese Eigenschaft muss festgelegt werden, bevor lokale Kommunikation stattfinden kann.</span><span class="sxs-lookup"><span data-stu-id="96aa1-130">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="96aa1-131">Der Name des ausgelösten Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="96aa1-131">The name of the raised event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-132">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-132">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="96aa1-133">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-133">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-134">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-134">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-135">Entspricht dem Namen eines Ereignisses, das in einer mit <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> markierten Schnittstelle definiert ist.</span><span class="sxs-lookup"><span data-stu-id="96aa1-135">Corresponds to the name of an event that is defined in an interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="96aa1-136">Der mit dem <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> verknüpfte <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span><span class="sxs-lookup"><span data-stu-id="96aa1-136">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span></span></param>
        <summary><span data-ttu-id="96aa1-137">Versucht die <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> auszuführen, die <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="96aa1-137">Tries to run the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associated with the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="96aa1-138">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> von <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> am Ende des angeforderten Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-138">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="96aa1-139">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> für diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="96aa1-139">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="96aa1-140">Die <see cref="T:System.Exception" />, von der dieser Fehler verursacht wurde.</span><span class="sxs-lookup"><span data-stu-id="96aa1-140">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="96aa1-141">Wird aufgerufen, wenn eine Ausnahme innerhalb des Kontexts der Ausführung dieser Instanz ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-141">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="96aa1-142">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />, der aus einem Versuch resultiert, diese Instanz abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-142">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96aa1-143"><paramref name="exception" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96aa1-143"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override sealed void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="96aa1-144">Der <see cref="T:System.IServiceProvider" />, der benutzerdefinierte Unterstützung für die Klasse bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-144">The <see cref="T:System.IServiceProvider" /> that provides custom support to the class.</span></span></param>
        <summary><span data-ttu-id="96aa1-145">Initialisiert das Ereignis beim Dienstanbieter.</span><span class="sxs-lookup"><span data-stu-id="96aa1-145">Initializes the event with the service provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96aa1-146"><paramref name="provider" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual&amp;#160;Basic), der Typ des Dienstanbieters ist ein NULL-Verweis (<see langword="Nothing" />), oder der Proxy für den Dienstanbieter ist ein NULL-Verweis (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="96aa1-146"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic), the type of the service provider is a null reference (<see langword="Nothing" />), or the proxy for the service provider is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96aa1-147">Führt Initialisierung für Abhängigkeitseigenschaften aus.</span><span class="sxs-lookup"><span data-stu-id="96aa1-147">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-148">Diese Methode dient dazu, die <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A>-Eigenschaft zu initialisieren, zu überprüfen, ob die <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>-Eigenschaft und die <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>-Eigenschaft festgelegt sind und ob sich das Ereignis, auf das in der <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A>-Eigenschaft verwiesen wird, in der Schnittstelle befindet, auf die in der <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A>-Eigenschaft verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-148">This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-149">Ruft den mit Attributen versehenen Schnittstellentyp <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> des lokalen Diensts, dessen Ereignis behandelt wird, ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="96aa1-149">Gets or sets the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> attributed interface type of the local service whose event is handled.</span></span> <span data-ttu-id="96aa1-150">Diese Eigenschaft muss festgelegt werden, bevor lokale Kommunikation stattfinden kann.</span><span class="sxs-lookup"><span data-stu-id="96aa1-150">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="96aa1-151">Der Schnittstellentyp des lokalen Diensts, dessen Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-151">The interface type of the local service whose event is handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-152">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-152">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="96aa1-153">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-153">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-154">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-154">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-155">Entspricht dem Namen der Schnittstelle, die mit <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="96aa1-155">Corresponds to the name of the interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invoked As EventHandler(Of ExternalDataEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ExternalDataEventArgs ^&gt; ^ Invoked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-156">Tritt auf, wenn das externe Ereignis empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-156">Occurs when the external event is received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-157">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-157">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="96aa1-158">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-158">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-159">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-159">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InvokedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-160">Definiert einen Ereignisdelegaten, der ausgeführt wird, nachdem die Aktivität das erwartete Ereignis vom lokalen Dienst empfangen hat.</span><span class="sxs-lookup"><span data-stu-id="96aa1-160">Defines an event delegate that is executed after the activity receives the expected event from the local service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="96aa1-161">Der <see cref="T:System.IServiceProvider" />, der den Dienst bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-161">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="96aa1-162">Wird von der Workflowlaufzeit als Teil des Übergangs der Aktivität in den Zustand <see langword="Closed" /> aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-162">Called by the workflow runtime as part of the activity's transition to the <see langword="Closed" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-163">Mit dieser Methode wird der Aktivität ermöglicht, während ihrer Ausführung genutzte Ressourcen zu bereinigen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-163">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvoked(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="96aa1-164">Die <see cref="T:System.EventArgs" />, die vom soeben empfangenen externen Ereignis empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="96aa1-164">The <see cref="T:System.EventArgs" /> that are received from the external event that was just received.</span></span></param>
        <summary><span data-ttu-id="96aa1-165">Wird unmittelbar nach dem Empfang des externen Ereignisses aufgerufen, um abgeleitete Klassen vor dem Schließen der Aktivität die Verarbeitung der eingehenden <see cref="T:System.EventArgs" /> zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-165">Called just after the external event is received to allow derived classes to process the inbound <see cref="T:System.EventArgs" /> before the activity closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-166">Die <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A>-Methode in abgeleiteten Klassen wird am häufigsten zum Extrahieren von Membern aus den empfangenen <xref:System.EventArgs> verwendet, um die Werte der öffentlichen Eigenschaften der als Unterklasse erstellten Aktivität festzulegen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-166">The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96aa1-167">Im folgenden Beispiel wird eine Implementierung der `OnInvoked`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="96aa1-167">The following example shows an implementation of the `OnInvoked` method.</span></span> <span data-ttu-id="96aa1-168">Dieses Beispiel stammt aus dem Correlated Local Service SDK (in der Datei CreateTask.cs).</span><span class="sxs-lookup"><span data-stu-id="96aa1-168">This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file.</span></span> <span data-ttu-id="96aa1-169">Weitere Informationen finden Sie unter [korreliert Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="96aa1-169">For more information, see [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[Wf_samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-170">Ruft die Auflistung der Parameterbindungen ab.</span><span class="sxs-lookup"><span data-stu-id="96aa1-170">Gets the collection of parameter bindings.</span></span></summary>
        <value><span data-ttu-id="96aa1-171">Die Auflistung der Parameterbindungen.</span><span class="sxs-lookup"><span data-stu-id="96aa1-171">The collection of parameter bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96aa1-172">Im folgenden Beispiel wird der Zugriff auf die `ParameterBindings`-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="96aa1-172">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="96aa1-173">Dieses Beispiel stammt vom Ordering State Machine SDK-Beispiel (in der Datei SampleWorkflow.designer.cs).</span><span class="sxs-lookup"><span data-stu-id="96aa1-173">This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.</span></span>  <span data-ttu-id="96aa1-174">Weitere Informationen finden Sie unter [Bestelldienst State Machine Beispiel](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="96aa1-174">For more information, see [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[wf_samples#125](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#125)]
 [!code-vb[wf_samples#125](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-175">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />-Eigenschaft bezieht.</span><span class="sxs-lookup"><span data-stu-id="96aa1-175">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.WorkflowRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Property Roles As WorkflowRoleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::WorkflowRoleCollection ^ Roles { System::Workflow::Activities::WorkflowRoleCollection ^ get(); void set(System::Workflow::Activities::WorkflowRoleCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.BindUITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.WorkflowRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-176">Ruft einen Verweis auf eine Workflowrollenauflistung ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="96aa1-176">Gets or sets a reference to a workflow role collection.</span></span></summary>
        <value><span data-ttu-id="96aa1-177">Eine Sammlung einer Workflowrolle.</span><span class="sxs-lookup"><span data-stu-id="96aa1-177">A collection of a workflow role.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-178">Mit <xref:System.Workflow.Activities.WorkflowRoleCollection> wird die Anzahl der Benutzer begrenzt, die mit einer <xref:System.Workflow.Activities.HandleExternalEventActivity>-Aktivität Nachrichten an eine Workflowinstanz senden können.</span><span class="sxs-lookup"><span data-stu-id="96aa1-178">The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96aa1-179">Im folgenden Codebeispiel wird das Erstellen und Festlegen von Werten für die <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse dargestellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-179">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="96aa1-180">Dieses Codebeispiel stammt aus dem RaiseEventToLoadWorkflow SDK-Beispiel in der Datei DocumentApprovalWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="96aa1-180">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="96aa1-181">Weitere Informationen finden Sie unter [Ereignis der Last Workflow auslösen](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span><span class="sxs-lookup"><span data-stu-id="96aa1-181">For more information, see [Raise Event To Load Workflow](http://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RolesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty RolesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RolesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ RolesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-182">Identifiziert die gültigen Benutzerrollen, die zum Senden von Nachrichten vom Host an diese Aktivität berechtigt sind.</span><span class="sxs-lookup"><span data-stu-id="96aa1-182">Identifies the valid user roles that are allowed to send messages from the host to this activity.</span></span> <span data-ttu-id="96aa1-183">Die zwei Typen unterstützter Rollen sind Active Directory und ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="96aa1-183">The two types of supported roles are Active Directory and ASP.NET.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System.Workflow.Activities.IEventActivity.QueueName { IComparable ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96aa1-184">Ruft den Namen der <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ab, in der die Aktivität auf das Eintreffen der Daten wartet.</span><span class="sxs-lookup"><span data-stu-id="96aa1-184">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></summary>
        <value><span data-ttu-id="96aa1-185">Der Name der <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, in der die Aktivität auf das Eintreffen der Daten wartet.</span><span class="sxs-lookup"><span data-stu-id="96aa1-185">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="96aa1-186">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, der die Ausführungsumgebung von <see cref="T:System.Workflow.ComponentModel.Activity" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-186">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="96aa1-187">Der <see cref="T:System.EventHandler" /> für das übergeordnete Ereignis.</span><span class="sxs-lookup"><span data-stu-id="96aa1-187">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="96aa1-188">Erstellt das Abonnement für die <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />-Aktivität für ein Ereignis.</span><span class="sxs-lookup"><span data-stu-id="96aa1-188">Creates the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="96aa1-189">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, der die Ausführungsumgebung der Aktivität darstellt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-189">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="96aa1-190">Der <see cref="T:System.EventHandler" /> für das übergeordnete Ereignis.</span><span class="sxs-lookup"><span data-stu-id="96aa1-190">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="96aa1-191">Bricht das Abonnement der <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />-Aktivität für ein Ereignis ab.</span><span class="sxs-lookup"><span data-stu-id="96aa1-191">Cancels the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="96aa1-192">Das Objekt, das das Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="96aa1-192">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="96aa1-193">Die vorher eingegebenen Ereignisargumente.</span><span class="sxs-lookup"><span data-stu-id="96aa1-193">The previously typed event arguments.</span></span></param>
        <summary><span data-ttu-id="96aa1-194">Definiert die Verarbeitungsprozedur, wenn das Abonnementereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-194">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="96aa1-195">Ein Objekt, das <see cref="T:System.IServiceProvider" /> implementiert, um Zugriff auf Entwurfszeitdienste bereitzustellen, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="96aa1-195">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="96aa1-196">Den Namen der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="96aa1-196">The name of the property.</span></span></param>
        <summary><span data-ttu-id="96aa1-197">Gibt den Zugriffstyp für die angegebene Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="96aa1-197">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="96aa1-198">Ein <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />-Enumerationswert, der die Zugriffsebene der Eigenschaft anzeigt.</span><span class="sxs-lookup"><span data-stu-id="96aa1-198">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denote the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-199">Wird zur Kompilierzeit verwendet, um zu überprüfen, ob die Eigenschaften ordnungsgemäß aneinander gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="96aa1-199">Used at compile time to validate whether the properties are correctly bound to one other.</span></span> <span data-ttu-id="96aa1-200">Ohne diese Schnittstelle werden diese Informationen direkt von Gettern bzw. Settern für Eigenschaften abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="96aa1-200">Without this interface, this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="96aa1-201">Ein Objekt, das <see cref="T:System.IServiceProvider" /> implementiert, um Zugriff auf Entwurfszeitdienste bereitzustellen, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="96aa1-201">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="96aa1-202">Den Namen der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="96aa1-202">The name of the property.</span></span></param>
        <summary><span data-ttu-id="96aa1-203">Gibt den <see cref="T:System.Type" /> der angegebenen Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="96aa1-203">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="96aa1-204">Der <see cref="T:System.Type" /> für die Eigenschaft, deren Name als <paramref name="propertyName" />-Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="96aa1-204">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96aa1-205">Wird zur Kompilierzeit verwendet, um zu überprüfen, ob die Eigenschaften ordnungsgemäß aneinander gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="96aa1-205">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>