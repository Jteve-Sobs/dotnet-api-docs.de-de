<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="053d36ad727b19d1c8937490c3610eab14e30d26" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a20ea-101">Definiert eine Workflow-Kommunikationsaktivität, die zum Aufrufen einer Methode auf einem lokalen Dienst verwendet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a20ea-101">Defines a workflow communication activity that is used to call a method on a local service.</span>
      </span>
      <span data-ttu-id="a20ea-102">Diese Aktivität wird verwendet, um Daten durch den lokalen Dienst vom Workflow an den Host zu senden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a20ea-102">This activity is used to send data from the workflow to the host through the local service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="a20ea-103">Ein lokaler Dienst ist eine Klasse, mit der eine lokale Dienstschnittstelle implementiert wird (eine Schnittstelle, die mit <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> markiert wird) und die <xref:System.Workflow.Activities.ExternalDataExchangeService> hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="a20ea-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a20ea-104">Wenn die externe Methode aufgerufen wird, werden alle Parameter der Methode geklont.</span><span class="sxs-lookup"><span data-stu-id="a20ea-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="a20ea-105">Falls durch die Parametertypen <xref:System.ICloneable> implementiert wird, wird die `Clone`-Methode aufgerufen, oder sie werden mit <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> serialisiert oder deserialisiert.</span><span class="sxs-lookup"><span data-stu-id="a20ea-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a20ea-106">Das folgende Codebeispiel zeigt, wie <xref:System.Workflow.Activities.CallExternalMethodActivity> in einer benutzerdefinierten Aktivität verwendet wird, um eine externe Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="a20ea-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="a20ea-107">Dieses Codebeispiel stammt aus dem Listen SDK-Beispiel in der Datei PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-108"> [Lauschen Beispiel](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-108"> [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-109">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-110">Im folgenden Beispiel wird veranschaulicht, wie eine Instanz der `CallExternalMethodActivity`-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="a20ea-110">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="a20ea-111">Dieses Beispiel stammt aus dem PersistenceHost SDK-Beispiel in der Datei DocumentApprovalWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-111">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-112"> [Persistenz-Diensthost-Beispiel](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span><span class="sxs-lookup"><span data-stu-id="a20ea-112"> [Persistence Host Sample](http://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-113">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-113">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-114">Im folgenden Codebeispiel wird das Initialisieren einer neuen Instanz von <xref:System.Workflow.Activities.CallExternalMethodActivity> veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a20ea-114">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="a20ea-115">Im Code werden auch neue Instanzen der <xref:System.Workflow.Activities.ListenActivity>-Klasse, der <xref:System.Workflow.Activities.EventDrivenActivity>-Klasse, der <xref:System.Workflow.Activities.HandleExternalEventActivity>-Klasse, der <xref:System.Workflow.Activities.DelayActivity>-Klasse und der <xref:System.Workflow.Activities.CodeActivity>-Klasse initialisiert.</span><span class="sxs-lookup"><span data-stu-id="a20ea-115">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="a20ea-116">Dieses Codebeispiel stammt aus dem Listen SDK-Beispiel in der Datei PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-116">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-117"> [Lauschen Beispiel](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-117"> [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a20ea-118">Der benutzerdefinierte Name der Aktivität, der zum Initialisieren der Aktivitätsnamenseigenschaft verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-118">The user-defined name of the activity, used to initialize the activity name property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-119">Initialisiert mithilfe des Aktivitätsnamens eine neue Instanz der <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-119">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-120">Ruft <see cref="T:System.Workflow.Runtime.CorrelationToken" /> für die externe Methode ab oder legt es fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-120">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a20ea-121">Das Korrelationstoken für die externe Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-121">The correlation token for the external method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-122">Mit dieser Eigenschaft wird definiert, von welcher bestimmten <xref:System.Workflow.Activities.CallExternalMethodActivity>-Aktivität ein angegebener externer Methodenaufruf stammt.</span><span class="sxs-lookup"><span data-stu-id="a20ea-122">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="a20ea-123">Dieser Wert kann anschließend in der Nutzlast eines lokalen Kommunikationsdienstereignisses dazu verwendet werden, dieses Ereignis an die korrekte <xref:System.Workflow.Activities.HandleExternalEventActivity>-Aktivität zu leiten.</span><span class="sxs-lookup"><span data-stu-id="a20ea-123">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 [!INCLUDE[crexample](~/includes/crexample-md.md)]<span data-ttu-id="a20ea-124"> Korrelation finden Sie unter der [korreliert Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="a20ea-124"> correlation, see the [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a20ea-125">Im folgenden Beispiel wird der Zugriff der `CorrelationToken`-Eigenschaft eines `CallExternalMethodActivity`-Objekts veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a20ea-125">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="a20ea-126">Dieses Beispiel stammt aus dem Correlated Local Service SDK-Beispiel in der Datei CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-126">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-127"> [Lokaler Dienst Beispiel korreliert](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="a20ea-127"> [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-128">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />-Eigenschaft bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="a20ea-129">Der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, der die Ausführungsumgebung beinhaltet, in der <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-129">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-130">Versucht <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> mit dem angegebenen <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-130">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a20ea-131">Einer der <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-131">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a20ea-132">Dieses <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual&amp;#160;Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-132">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a20ea-133">
            <paramref name="executionContext" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-133">
              <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a20ea-134">Das Dienstobjekt für <paramref name="executionContext" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-134">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-135">Führt Initialisierung für Abhängigkeitseigenschaften aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-135">Performs initialization on dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-136">Diese Methode dient dazu, die <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>-Eigenschaft zu initialisieren, zu überprüfen, ob die <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>-Eigenschaft und die <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>-Eigenschaft festgelegt sind und ob sich das Ereignis, auf das in der <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>-Eigenschaft verwiesen wird, in der Schnittstelle befindet, auf die in der <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>-Eigenschaft verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="a20ea-136">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-137">Ruft die deklarierende Schnittstelle einer externen Methode ab, die über <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> verfügt, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-137">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a20ea-138">Die deklarierende Schnittstelle der externen Methode, die über <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> verfügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-138">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-139">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>-Eigenschaft festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a20ea-139">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="a20ea-140">Der Schnittstellentyp muss <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> zugeschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="a20ea-140">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="a20ea-141">Dieses Codebeispiel stammt aus dem Listen SDK-Beispiel in der Datei PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-141">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-142"> [Lauschen Beispiel](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-142"> [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-143">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />-Eigenschaft bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-143">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-144">Die <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>-Eigenschaft entspricht dem Namen der Schnittstelle, die mit <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="a20ea-144">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-145">Tritt vor dem Aufrufen der Methode auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-145">Occurs before invoking the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-146">Im folgenden Codebeispiel wird die Verwendung des <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>-Ereignisses zum Festlegen der aufzurufenden Methode vor dem Aufrufen der externen Methode dargestellt.</span><span class="sxs-lookup"><span data-stu-id="a20ea-146">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="a20ea-147">Dieses Codebeispiel stammt aus dem Listen SDK-Beispiel in der Datei PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-148"> [Lauschen Beispiel](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-148"> [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-149">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf das <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />-Ereignis bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-149">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-150">Das <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>-Ereignis definiert einen Ereignisdelegaten, der ausgeführt wird, bevor die Aktivität auf dem lokalen Dienst die externe Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="a20ea-150">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-151">Ruft den Namen der auf dem lokalen Dienst aufzurufenden Methode ab, die bei <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> registriert ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-151">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a20ea-152">Der Methodenname der <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-152">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-153">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>-Eigenschaft zum Festlegen des Methodennamens der externen Methode dargestellt.</span><span class="sxs-lookup"><span data-stu-id="a20ea-153">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="a20ea-154">Dieses Codebeispiel stammt aus dem Listen SDK-Beispiel in der Datei PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="a20ea-154">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-155"> [Lauschen Beispiel](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-155"> [Listen Sample](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-156">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />-Eigenschaft bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-156">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-157">Die <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>-Eigenschaft entspricht dem Namen einer Methode, die auf einer mit <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> markierten Schnittstelle enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="a20ea-157">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a20ea-158">
            <see cref="T:System.EventArgs" />, die Daten für das <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />-Ereignis enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-158">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-159">Stellt einen Hook für abgeleitete Klassen bereit, um Werte aus <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> zu extrahieren und zurückzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-159">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          </span>
          <span data-ttu-id="a20ea-160">Diese Methode wird umgehend nach Ausführung der externen Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-160">This method is called just after the external method is run.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-161">Im folgenden Beispiel wird eine Implementierung der `OnMethodInvoked`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a20ea-161">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a20ea-162">
            <see cref="T:System.EventArgs" />, die Daten für das <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />-Ereignis enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-162">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-163">Stellt zum Festlegen von <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> einen Hook für abgeleitete Klassen bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-163">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span>
          </span>
          <span data-ttu-id="a20ea-164">Diese Methode wird unmittelbar vor Ausführung der externen Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-164">This method is called just before the external method is run.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-165">Im folgenden Beispiel wird eine Implementierung der `OnMethodInvoking`-Methode gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a20ea-165">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="a20ea-166">Dieses Beispiel stammt aus dem Correlated Local Service SDK-Beispiel (in der Datei CreateTask.cs).</span><span class="sxs-lookup"><span data-stu-id="a20ea-166">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-167"> [Lokaler Dienst Beispiel korreliert](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="a20ea-167"> [Correlated Local Service Sample](http://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-168">Ruft die Auflistung bindungsfähiger Parameter ab, die in der Liste für formale Parameter der externen Methode aufgeführt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-168">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a20ea-169">Die <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> der Parameter, zu denen eine Bindung hergestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-169">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a20ea-170">Im folgenden Beispiel wird veranschaulicht, wie der Auflistung der Parameterbindungen eine Parameterbindung hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="a20ea-170">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="a20ea-171">Dieses Beispiel stammt aus dem Host Communication SDK-Beispiel (in der Datei VotingServiceWorkflow.designer.cs).</span><span class="sxs-lookup"><span data-stu-id="a20ea-171">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="a20ea-172"> [Hosten von Kommunikation Beispiel](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span><span class="sxs-lookup"><span data-stu-id="a20ea-172"> [Host Communication Sample](http://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a20ea-173">Stellt die <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> dar, die sich auf die <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />-Eigenschaft bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-173">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="a20ea-174">Ein Objekt, das <see cref="T:System.IServiceProvider" /> implementiert, um Zugriff auf Entwurfszeitdienste bereitzustellen, wenn sie benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-174">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="a20ea-175">Den Namen der Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-175">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-176">Gibt den Zugriffstyp für die angegebene Eigenschaft zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-176">Returns the access type for the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a20ea-177">Ein <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />-Enumerationswert, der die Zugriffsebene der Eigenschaft anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-177">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-178">Wird zur Kompilierzeit verwendet, um zu überprüfen, ob die Eigenschaften ordnungsgemäß aneinander gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="a20ea-178">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="a20ea-179">Ohne diese Schnittstelle werden diese Informationen direkt von Gettern bzw. Settern für Eigenschaften abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="a20ea-179">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="a20ea-180">Ein Objekt, das <see cref="T:System.IServiceProvider" /> implementiert, um Zugriff auf Entwurfszeitdienste bereitzustellen, wenn sie benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-180">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="a20ea-181">Den Namen der Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-181">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a20ea-182">Gibt den <see cref="T:System.Type" /> der angegebenen Eigenschaft zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-182">Returns the <see cref="T:System.Type" /> of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a20ea-183">Der <see cref="T:System.Type" /> für die Eigenschaft, deren Name als <paramref name="propertyName" />-Parameter übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a20ea-183">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a20ea-184">Wird zur Kompilierzeit verwendet, um zu überprüfen, ob die Eigenschaften ordnungsgemäß aneinander gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="a20ea-184">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>