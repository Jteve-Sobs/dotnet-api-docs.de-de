<Type Name="PipeReader" FullName="System.IO.Pipelines.PipeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="461542feb5b5a40081150e4c47e2c6c7b09a0b18" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76946745" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeReader abstract" />
  <TypeSignature Language="F#" Value="type PipeReader = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="597d5-101">Definiert eine Klasse, die Zugriff auf eine Leseseite der Pipe bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="597d5-101">Defines a class that provides access to a read side of pipe.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="597d5-102">Initialisiert eine neue Instanz der Klasse <see cref="T:System.IO.Pipelines.PipeReader" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-102">Initializes a new instance of the <see cref="T:System.IO.Pipelines.PipeReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AdvanceTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="597d5-103">Verschiebt den Lese-Cursor der Pipeline nach vorn an eine Position nach den verwendeten Daten.</span><span class="sxs-lookup"><span data-stu-id="597d5-103">Moves forward the pipeline's read cursor to after the consumed data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="597d5-104">Der Arbeitsspeicher für die verbrauchten Daten wird freigegeben und ist nicht mehr verfügbar.</span><span class="sxs-lookup"><span data-stu-id="597d5-104">The memory for the consumed data will be released and no longer available.</span></span> <span data-ttu-id="597d5-105">Auf den zuvor von <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> zurückgegebenen <xref:System.IO.Pipelines.ReadResult.Buffer%2A> darf nach diesem-Befehl nicht zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="597d5-105">The <xref:System.IO.Pipelines.ReadResult.Buffer%2A> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span> <span data-ttu-id="597d5-106">Die untersuchten Daten kommunizieren mit der Pipeline, wenn die Verfügbarkeit von mehr Daten signalisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="597d5-106">The examined data communicates to the pipeline when it should signal more data is available.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo consumed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed"><span data-ttu-id="597d5-107">Markiert den Umfang der Daten, die erfolgreich verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="597d5-107">Marks the extent of the data that has been successfully processed.</span></span></param>
        <summary><span data-ttu-id="597d5-108">Verschiebt den Lesecursor der Pipeline nach vorn an eine Position nach den verwendeten Daten und markiert die Daten dabei als verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="597d5-108">Moves forward the pipeline's read cursor to after the consumed data, marking the data as processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="597d5-109">Der Arbeitsspeicher für die verbrauchten Daten wird freigegeben und ist nicht mehr verfügbar.</span><span class="sxs-lookup"><span data-stu-id="597d5-109">The memory for the consumed data will be released and no longer available.</span></span>

<span data-ttu-id="597d5-110">Auf den zuvor von <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> zurückgegebenen <xref:System.IO.Pipelines.ReadResult.Buffer> darf nach diesem-Befehl nicht zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="597d5-110">The <xref:System.IO.Pipelines.ReadResult.Buffer> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span>

<span data-ttu-id="597d5-111">Die untersuchten Daten kommunizieren mit der Pipeline, wenn die Verfügbarkeit von mehr Daten signalisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="597d5-111">The examined data communicates to the pipeline when it should signal more data is available.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed, valuetype System.SequencePosition examined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition, examined As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition * SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo (consumed, examined)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
        <Parameter Name="examined" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed"><span data-ttu-id="597d5-112">Markiert den Umfang der Daten, die erfolgreich verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="597d5-112">Marks the extent of the data that has been successfully processed.</span></span></param>
        <param name="examined"><span data-ttu-id="597d5-113">Markiert den Umfang der Daten, die gelesen und geprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="597d5-113">Marks the extent of the data that has been read and examined.</span></span></param>
        <summary><span data-ttu-id="597d5-114">Verschiebt den Lesecursor der Pipeline nach vorn an eine Position nach den verwendeten Daten und markiert die Daten dabei als verarbeitet, gelesen und überprüft.</span><span class="sxs-lookup"><span data-stu-id="597d5-114">Moves forward the pipeline's read cursor to after the consumed data, marking the data as processed, read and examined.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="597d5-115">Der Arbeitsspeicher für die verbrauchten Daten wird freigegeben und ist nicht mehr verfügbar.</span><span class="sxs-lookup"><span data-stu-id="597d5-115">The memory for the consumed data will be released and no longer available.</span></span>

<span data-ttu-id="597d5-116">Auf den zuvor von <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> zurückgegebenen <xref:System.IO.Pipelines.ReadResult.Buffer> darf nach diesem-Befehl nicht zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="597d5-116">The <xref:System.IO.Pipelines.ReadResult.Buffer> previously returned from <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> must not be accessed after this call.</span></span>

<span data-ttu-id="597d5-117">Die untersuchten Daten kommunizieren mit der Pipeline, wenn die Verfügbarkeit von mehr Daten signalisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="597d5-117">The examined data communicates to the pipeline when it should signal more data is available.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream AsStream (bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream AsStream(bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AsStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsStream (Optional leaveOpen As Boolean = false) As Stream" />
      <MemberSignature Language="F#" Value="abstract member AsStream : bool -&gt; System.IO.Stream&#xA;override this.AsStream : bool -&gt; System.IO.Stream" Usage="pipeReader.AsStream leaveOpen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="leaveOpen"><span data-ttu-id="597d5-118">Ein optionales Flag, das angibt, ob das Löschen des zurückgegebenen <see cref="T:System.IO.Stream" />-Elements <see cref="T:System.IO.Pipelines.PipeReader" /> geöffnet lässt (<see langword="true" />) oder <see cref="T:System.IO.Pipelines.PipeReader" /> abschließt (<see langword="false" />).</span><span class="sxs-lookup"><span data-stu-id="597d5-118">An optional flag that indicates whether disposing the returned <see cref="T:System.IO.Stream" /> leaves <see cref="T:System.IO.Pipelines.PipeReader" /> open (<see langword="true" />) or completes <see cref="T:System.IO.Pipelines.PipeReader" /> (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="597d5-119">Gibt den zugrunde liegenden <see cref="T:System.IO.Stream" /> mit <see cref="T:System.IO.Pipelines.PipeReader" /> als Wrapper zurück.</span><span class="sxs-lookup"><span data-stu-id="597d5-119">Returns the underlying <see cref="T:System.IO.Stream" /> wrapped by the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="597d5-120">Der zugrunde liegende Stream.</span><span class="sxs-lookup"><span data-stu-id="597d5-120">The underlying stream.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRead">
      <MemberSignature Language="C#" Value="public abstract void CancelPendingRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CancelPendingRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelPendingRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelPendingRead();" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingRead : unit -&gt; unit" Usage="pipeReader.CancelPendingRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="597d5-121">Bricht ab und wechselt in den ausstehenden Status, oder wenn kein Vorgang aussteht, erfolgt der Aufruf des nächsten <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> ohne Abschluss der <see cref="T:System.IO.Pipelines.PipeReader" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-121">Cancels to currently pending or if none is pending next call to <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />, without completing the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Complete(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="pipeReader.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="597d5-122">Optional weißt <see cref="T:System.Exception" /> auf einen Fehler hin, durch den die Pipeline beendet wird.</span><span class="sxs-lookup"><span data-stu-id="597d5-122">Optional <see cref="T:System.Exception" /> indicating a failure that's causing the pipeline to complete.</span></span></param>
        <summary><span data-ttu-id="597d5-123">Signalisiert dem Producer, dass der Lesevorgang des Consumers abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="597d5-123">Signals to the producer that the consumer is done reading.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask CompleteAsync (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask CompleteAsync(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CompleteAsync(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask&#xA;override this.CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask" Usage="pipeReader.CompleteAsync exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="597d5-124">Eine optionale Ausnahme, die den Fehler angibt, der zum Abschluss des Readers geführt hat.</span><span class="sxs-lookup"><span data-stu-id="597d5-124">An optional exception that indicates the failure that caused the reader to complete.</span></span></param>
        <summary><span data-ttu-id="597d5-125">Markiert die aktuelle Pipereaderinstanz als abgeschlossen. Es werden also keine weiteren Daten aus ihr gelesen.</span><span class="sxs-lookup"><span data-stu-id="597d5-125">Marks the current pipe reader instance as being complete, meaning no more data will be read from it.</span></span></summary>
        <returns><span data-ttu-id="597d5-126">Ein Werttask, der den asynchronen Abschlussvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="597d5-126">A value task that represents the asynchronous complete operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Pipelines.PipeWriter destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Pipelines.PipeWriter destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Pipelines.PipeWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Pipelines.PipeWriter" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="597d5-127">Der Pipewriter, in den der Inhalt des aktuellen Streams kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="597d5-127">The pipe writer to which the contents of the current stream will be copied.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="597d5-128">Das Token zum Überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="597d5-128">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="597d5-129">Standardwert: <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-129">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="597d5-130">Liest die Bytes asynchron aus dem <see cref="T:System.IO.Pipelines.PipeReader" /> und schreibt sie unter Verwendung einer angegebenen Puffergröße und eines angegebenen Abbruchtokens in den angegebenen <see cref="T:System.IO.Pipelines.PipeWriter" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-130">Asynchronously reads the bytes from the <see cref="T:System.IO.Pipelines.PipeReader" /> and writes them to the specified <see cref="T:System.IO.Pipelines.PipeWriter" />, using a specified buffer size and cancellation token.</span></span></summary>
        <returns><span data-ttu-id="597d5-131">Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="597d5-131">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="597d5-132">Der Stream, in den der Inhalt des aktuellen Stream kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="597d5-132">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="597d5-133">Das Token zum Überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="597d5-133">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="597d5-134">Standardwert: <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-134">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="597d5-135">Liest die Bytes asynchron aus dem <see cref="T:System.IO.Pipelines.PipeReader" /> und schreibt sie unter Verwendung eines angegebenen Abbruchtokens in den angegebenen Stream.</span><span class="sxs-lookup"><span data-stu-id="597d5-135">Asynchronously reads the bytes from the <see cref="T:System.IO.Pipelines.PipeReader" /> and writes them to the specified stream, using a specified cancellation token.</span></span></summary>
        <returns><span data-ttu-id="597d5-136">Eine Aufgabe, die den asynchronen Kopiervorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="597d5-136">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeReader Create (System.IO.Stream stream, System.IO.Pipelines.StreamPipeReaderOptions readerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Pipelines.PipeReader Create(class System.IO.Stream stream, class System.IO.Pipelines.StreamPipeReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Create(System.IO.Stream,System.IO.Pipelines.StreamPipeReaderOptions)" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.IO.Pipelines.StreamPipeReaderOptions -&gt; System.IO.Pipelines.PipeReader" Usage="System.IO.Pipelines.PipeReader.Create (stream, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="readerOptions" Type="System.IO.Pipelines.StreamPipeReaderOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="597d5-137">Der Stream, den der Pipereader umschließt.</span><span class="sxs-lookup"><span data-stu-id="597d5-137">The stream that the pipe reader will wrap.</span></span></param>
        <param name="readerOptions"><span data-ttu-id="597d5-138">Die Optionen zum Konfigurieren des Pipereaders.</span><span class="sxs-lookup"><span data-stu-id="597d5-138">The options to configure the pipe reader.</span></span></param>
        <summary><span data-ttu-id="597d5-139">Erstellt einen <see cref="T:System.IO.Pipelines.PipeReader" />, der den angegebenen <see cref="T:System.IO.Stream" /> umschließt.</span><span class="sxs-lookup"><span data-stu-id="597d5-139">Creates a <see cref="T:System.IO.Pipelines.PipeReader" /> wrapping the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="597d5-140">Ein <see cref="T:System.IO.Pipelines.PipeReader" />, der den <see cref="T:System.IO.Stream" /> umschließt.</span><span class="sxs-lookup"><span data-stu-id="597d5-140">A <see cref="T:System.IO.Pipelines.PipeReader" /> that wraps the <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriterCompleted">
      <MemberSignature Language="C#" Value="public abstract void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWriterCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.OnWriterCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public virtual void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit&#xA;override this.OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
          <AttributeName>System.Obsolete("OnWriterCompleted may not be invoked on all implementations of PipeReader. This will be removed in a future release.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="597d5-141">Der Rückruf, der registriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="597d5-141">The callback to register.</span></span></param>
        <param name="state"><span data-ttu-id="597d5-142">Das Zustandsobjekt, das an <paramref name="callback" /> übergeben wird, wenn es aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="597d5-142">The state object to pass to <paramref name="callback" /> when it's invoked.</span></span></param>
        <summary><span data-ttu-id="597d5-143">Registriert einen Rückruf, der ausgeführt wird, wenn die <see cref="T:System.IO.Pipelines.PipeWriter" />-Komponente der Pipe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="597d5-143">Registers a callback that executes when the <see cref="T:System.IO.Pipelines.PipeWriter" /> side of the pipe is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="597d5-144">`OnWriterCompleted` können nicht für alle Implementierungen <xref:System.IO.Pipelines.PipeWriter>aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="597d5-144">`OnWriterCompleted` may not be invoked on all implementations of <xref:System.IO.Pipelines.PipeWriter>.</span></span> <span data-ttu-id="597d5-145">Diese Methode wird in einer zukünftigen Version entfernt.</span><span class="sxs-lookup"><span data-stu-id="597d5-145">This method will be removed in a future release.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt; ReadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.ReadResult&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;" Usage="pipeReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="597d5-146">Das Token zum Überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="597d5-146">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="597d5-147">Standardwert: <see langword="default" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-147">The default value is <see langword="default" />.</span></span></param>
        <summary><span data-ttu-id="597d5-148">Liest asynchron eine Folge von Bytes aus dem aktuellen <see cref="T:System.IO.Pipelines.PipeReader" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-148">Asynchronously reads a sequence of bytes from the current <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="597d5-149">Eine <see cref="T:System.Threading.Tasks.ValueTask`1" />, die den asynchronen Lesevorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="597d5-149">A <see cref="T:System.Threading.Tasks.ValueTask`1" /> representing the asynchronous read operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead">
      <MemberSignature Language="C#" Value="public abstract bool TryRead (out System.IO.Pipelines.ReadResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRead([out] valuetype System.IO.Pipelines.ReadResult&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.TryRead(System.IO.Pipelines.ReadResult@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryRead (ByRef result As ReadResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryRead([Runtime::InteropServices::Out] System::IO::Pipelines::ReadResult % result);" />
      <MemberSignature Language="F#" Value="abstract member TryRead : ReadResult -&gt; bool" Usage="pipeReader.TryRead result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IO.Pipelines.ReadResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="597d5-150">Wenn diese Methode <see langword="true" /> zurückgibt, wird dieser Wert auf eine <see cref="T:System.IO.Pipelines.ReadResult" />-Instanz festgelegt, die das Ergebnis des Leseaufrufs darstellt. Andernfalls wird dieser Wert auf <see langword="default" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="597d5-150">When this method returns <see langword="true" />, this value is set to a <see cref="T:System.IO.Pipelines.ReadResult" /> instance that represents the result of the read call; otherwise, this value is set to <see langword="default" />.</span></span></param>
        <summary><span data-ttu-id="597d5-151">Versucht, im <see cref="T:System.IO.Pipelines.PipeReader" /> synchron Daten zu lesen.</span><span class="sxs-lookup"><span data-stu-id="597d5-151">Attempts to synchronously read data the <see cref="T:System.IO.Pipelines.PipeReader" />.</span></span></summary>
        <returns><span data-ttu-id="597d5-152"><see langword="true" />, wenn Daten verfügbar waren, oder wenn der Aufruf abgebrochen wurde, oder der Writer wurde abgeschlossen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="597d5-152"><see langword="true" /> if data was available, or if the call was canceled or the writer was completed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="597d5-153">Wenn die Pipe `false`zurückgibt, muss keine <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)>aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="597d5-153">If the pipe returns `false`, there is no need to call <xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
