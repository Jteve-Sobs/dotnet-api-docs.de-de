<Type Name="PrinterSettings" FullName="System.Drawing.Printing.PrinterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c0e502570086836fec57f5511363467f75093f0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrinterSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PrinterSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrinterSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PrinterSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrinterSettings : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Gibt Informationen darüber an, wie ein Dokument gedruckt wird, einschließlich des Druckers für das Drucken, sofern der Druck aus einer Windows Forms-Anwendung erfolgt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel, die Sie Zugriff auf eine <xref:System.Drawing.Printing.PrinterSettings> über <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> oder <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=nameWithType> Eigenschaften zum Ändern von Druckereinstellungen fest. Ist die gebräuchlichste druckereinstellung <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>, der angibt, dass der Drucker zum Drucken auf.  
  
 Weitere Informationen zum Drucken in Windows Forms finden Sie unter der <xref:System.Drawing.Printing> Namespace (Übersicht). Wenn Sie über eine Windows Presentation Foundation-Anwendung drucken möchten, finden Sie unter der <xref:System.Printing> Namespace.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird Druckt ein Dokument auf dem angegebenen Drucker. Das Beispiel besteht aus drei Komponenten:  
  
-   Eine Variable namens `filePath` auf den Pfad der Datei zum Drucken festgelegt wurde.  
  
-   Eine Methode namens `pd_PrintPage`, welche behandelt die <xref:System.Drawing.Printing.PrintDocument.PrintPage> Ereignis definiert wurde.  
  
-   Eine Variable namens `printer` auf den Namen des Druckers festgelegt wurde.  
  
 Verwenden der <xref:System.Drawing>, <xref:System.Drawing.Printing>, und <xref:System.IO> Namespaces für dieses Beispiel.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
    <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
    <altmember cref="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrinterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrinterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Printing.PrinterSettings" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardkonstruktor initialisiert alle Felder mit ihren Standardwerten.  
  
 Normalerweise erstellen Sie keine Instanz von <xref:System.Drawing.Printing.PrinterSettings>, aber verwenden Sie stattdessen die <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> Festlegen von Einstellungen für den Drucker.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDuplex">
      <MemberSignature Language="C#" Value="public bool CanDuplex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDuplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDuplex As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDuplex { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Drucker beidseitiges Drucken unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Drucker beidseitiges Drucken unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Duplex mit gedruckt und festlegen, wenn der Drucker, unterstützt <xref:System.Drawing.Printing.PrinterSettings.Duplex%2A> in eines der <xref:System.Drawing.Printing.Duplex> Werte.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie dieser Instanz von <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <returns>Eine Kopie dieses Objekts.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collate">
      <MemberSignature Language="C#" Value="public bool Collate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collate" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Collate" />
      <MemberSignature Language="VB.NET" Value="Public Property Collate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das gedruckte Dokument sortiert wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das gedruckte Dokument sortiert wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sortieren erfolgt nur, wenn die Anzahl der Kopien größer als 1 ist. Legen Sie die <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> Eigenschaft, um die Anzahl der zu druckenden Kopien anzugeben.  
  
 Festlegen von <xref:System.Drawing.Printing.PrinterSettings.Collate%2A> auf `true` wird eine vollständige Kopie des Dokuments gedruckt, bevor die erste Seite der nächsten Kopie gedruckt wird. `false` die Anzahl der Kopien, die vor dem Drucken der nächsten Seite angegeben wird jede Seite gedruckt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Copies">
      <MemberSignature Language="C#" Value="public short Copies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Copies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Copies" />
      <MemberSignature Language="VB.NET" Value="Public Property Copies As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Copies { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der zu druckenden Exemplare des Dokuments ab oder legt diese fest.</summary>
        <value>Die Anzahl der zu druckenden Kopien. Der Standard ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nicht alle Drucker unterstützen mehrere Exemplare gedruckt. Sie können die <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> Eigenschaft, um zu bestimmen, die maximale Anzahl von kopiert der Drucker unterstützt. Wenn die Anzahl der Kopien höher als die maximale Anzahl der Kopien vom Drucker unterstützten festgelegt ist, werden nur die maximale Anzahl von Kopien ausgegeben, und wird keine Ausnahme ausgelöst.  
  
> [!NOTE]
>  Einige Drucker unterstützen möglicherweise nicht mehr als eine Kopie zu einem Zeitpunkt drucken.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" />-Eigenschaft ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMeasurementGraphics">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Instanz von <see cref="T:System.Drawing.Graphics" /> zurück, die Druckerinformationen enthält.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Instanz von <see cref="T:System.Drawing.Graphics" /> zurück, die Druckerinformationen enthält, die beim Erstellen von <see cref="T:System.Drawing.Printing.PrintDocument" /> hilfreich sind.</summary>
        <returns>Eine Instanz von <see cref="T:System.Drawing.Graphics" />, die Informationen von einem Drucker enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> -Methode, die Sie erhalten eine <xref:System.Drawing.Graphics> für den Drucker ohne einen Druckauftrag zu erstellen. Sie können die <xref:System.Drawing.Graphics> für zum Layout visuelle Elemente wie Schriftarten, Größen und Stile eines komplexen Druckauftrags Entscheidungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Der in der <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft bezeichnete Drucker ist nicht vorhanden.</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics (honorOriginAtMargins As Boolean) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(bool honorOriginAtMargins);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="honorOriginAtMargins">
          <see langword="true" />, wenn der Ursprung an den Seitenrändern angegeben werden soll, andernfalls <see langword="false" />.</param>
        <summary>Gibt eine Instanz von <see cref="T:System.Drawing.Graphics" /> zurück, die Druckerinformationen enthält. Optional wird der Ursprung an den Seitenrändern angegeben.</summary>
        <returns>Eine Instanz von <see cref="T:System.Drawing.Graphics" />, die Druckerinformationen von <see cref="T:System.Drawing.Printing.PageSettings" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> -Methode, die Sie erhalten eine <xref:System.Drawing.Graphics> für den Drucker ohne einen Druckauftrag zu erstellen. Verwenden der <xref:System.Drawing.Graphics> für zum Layout visuelle Elemente wie Schriftarten, Größen und Stile eines komplexen Druckauftrags Entscheidungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">Die <see cref="T:System.Drawing.Printing.PageSettings" />, für die ein Grafikobjekt abgerufen werden soll.</param>
        <summary>Gibt eine Instanz von <see cref="T:System.Drawing.Graphics" /> zurück, die Druckerinformationen enthält, die den angegebenen <see cref="T:System.Drawing.Printing.PageSettings" /> zugeordnet sind.</summary>
        <returns>Eine Instanz von <see cref="T:System.Drawing.Graphics" />, die Druckerinformationen von <see cref="T:System.Drawing.Printing.PageSettings" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> -Methode, die Sie erhalten eine <xref:System.Drawing.Graphics> für den Drucker ohne einen Druckauftrag zu erstellen. Verwenden der <xref:System.Drawing.Graphics> für zum Layout visuelle Elemente wie Schriftarten, Größen und Stile eines komplexen Druckauftrags Entscheidungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings, bool honorOriginAtMargins);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pageSettings">Die <see cref="T:System.Drawing.Printing.PageSettings" />, für die ein <see cref="T:System.Drawing.Graphics" />-Objekt abgerufen werden soll.</param>
        <param name="honorOriginAtMargins">
          <see langword="true" />, wenn der Ursprung an den Seitenrändern angegeben werden soll, andernfalls <see langword="false" />.</param>
        <summary>Erstellt eine Instanz von <see cref="T:System.Drawing.Graphics" />, die den angegebenen Seiteneinstellungen zugeordnet ist. Optional wird der Ursprung an den Seitenrändern angegeben.</summary>
        <returns>Eine Instanz von <see cref="T:System.Drawing.Graphics" />, die Druckerinformationen von <see cref="T:System.Drawing.Printing.PageSettings" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> Methode ermöglicht Ihnen das Abrufen einer <xref:System.Drawing.Graphics> für den Drucker ohne einen Druckauftrag zu erstellen. Verwenden der <xref:System.Drawing.Graphics> für zum Layout visuelle Elemente wie Schriftarten, Größen und Stile eines komplexen Druckauftrags Entscheidungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardseiteneinstellungen für diesen Drucker ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Drawing.Printing.PageSettings" />, die die Standardseiteneinstellungen für diesen Drucker darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seite die Einstellungen umfassen die Größe der Ränder auf der Seite, die Größe der zu verwendende Papier an, und ob er in Farbe gedruckt. Weitere Informationen zu seiteneinstellungen finden Sie unter der <xref:System.Drawing.Printing.PageSettings> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
      </Docs>
    </Member>
    <Member MemberName="Duplex">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Duplex Duplex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.Duplex Duplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Duplex" />
      <MemberSignature Language="VB.NET" Value="Public Property Duplex As Duplex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Duplex Duplex { System::Drawing::Printing::Duplex get(); void set(System::Drawing::Printing::Duplex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Duplex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Druckereinstellung für beidseitiges Drucken ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Drawing.Printing.Duplex" />-Werte. Der Standardwert wird durch den Drucker bestimmt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A> Eigenschaft, um zu überprüfen, um festzustellen, ob der Drucker Duplexdruck unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />-Eigenschaft ist keiner der <see cref="T:System.Drawing.Printing.Duplex" />-Werte.</exception>
        <altmember cref="T:System.Drawing.Printing.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="FromPage">
      <MemberSignature Language="C#" Value="public int FromPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FromPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.FromPage" />
      <MemberSignature Language="VB.NET" Value="Public Property FromPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FromPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Nummer der ersten zu druckenden Seite ab oder legt diese fest.</summary>
        <value>Die Nummer der ersten zu druckenden Seite.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften werden verwendet, indem Sie die <xref:System.Windows.Forms.PrintDialog> Wenn der Benutzer einen Druckbereich auswählt. Die <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true` , die dem Benutzer ermöglichen, ein Druckbereich angegeben. Darüber hinaus die <xref:System.Windows.Forms.PrintDialog> erfordert die <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> angegeben werden und die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> Wert innerhalb dieses Bereichs ist.  
  
 Während des Druckvorgangs in der <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Ereignis, das <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> um zu bestimmen, was gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, verwenden Sie die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften, um zu bestimmen, welche Seiten gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, geben Sie die Ausgabe nur für die ausgewählten Seiten.  
  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> auch programmgesteuert festgelegt werden können, obwohl die <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Implementierung entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />-Eigenschaft ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHdevmode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein Handle für eine <see langword="DEVMODE" />-Struktur, die den Druckereinstellungen entspricht.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevmode () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für eine <see langword="DEVMODE" />-Struktur, die den Druckereinstellungen entspricht.</summary>
        <returns>Ein Handle für eine <see langword="DEVMODE" />-Struktur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` Strukturen sind gerätespezifisch. Kopieren einer `DEVMODE` Struktur aus einer <xref:System.Drawing.Printing.PrinterSettings> auf eine <xref:System.Drawing.Printing.PrinterSettings> für ein anderen Drucker wird nicht unterstützt. Wenn Sie mit dem Handle fertig sind, die über diese Methode erstellt wird, Sie müssen es manuell freigeben durch Aufrufen von systemeigenen Win32 `GlobalFree` Methode. Wenn Sie diese Methode aufrufen, Sie übergeben als Parameter den Rückgabewert der <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Der in der <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft bezeichnete Drucker ist nicht vorhanden.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Die Initialisierungsinformationen des Druckers konnten nicht abgerufen werden.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">Das <see cref="T:System.Drawing.Printing.PageSettings" />-Objekt, dem das Handle der <see langword="DEVMODE" />-Struktur entspricht.</param>
        <summary>Erstellt ein Handle für eine <see langword="DEVMODE" />-Struktur, die den über den <paramref name="pageSettings" />-Parameter angegebenen Drucker- und Seiteneinstellungen entspricht.</summary>
        <returns>Ein Handle für eine <see langword="DEVMODE" />-Struktur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` Strukturen sind gerätespezifisch. Kopieren einer `DEVMODE` Struktur aus einer <xref:System.Drawing.Printing.PrinterSettings> auf eine <xref:System.Drawing.Printing.PrinterSettings> für ein anderen Drucker wird nicht unterstützt.  
  
 Wenn Sie mit dem Handle fertig sind, die über diese Methode erstellt wird, Sie müssen es manuell freigeben durch Aufrufen von systemeigenen Win32 `GlobalFree` Methode. Wenn Sie diese Methode aufrufen, Sie übergeben als Parameter den Rückgabewert der <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">Der in der <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft bezeichnete Drucker ist nicht vorhanden.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Die Initialisierungsinformationen des Druckers konnten nicht abgerufen werden.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevnames">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevnames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevnames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevnames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevnames () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevnames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für eine <see langword="DEVNAMES" />-Struktur, die den Druckereinstellungen entspricht.</summary>
        <returns>Ein Handle für eine <see langword="DEVNAMES" />-Struktur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie mit dem Handle fertig sind, die über diese Methode erstellt wird, Sie müssen es manuell freigeben durch Aufrufen von systemeigenen Win32 `GlobalFree` Methode. Wenn Sie diese Methode aufrufen, Sie übergeben als Parameter den Rückgabewert der <xref:System.Drawing.Printing.PrinterSettings.GetHdevnames%2A> Methode.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstalledPrinters">
      <MemberSignature Language="C#" Value="public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Printing.PrinterSettings/StringCollection InstalledPrinters" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledPrinters As PrinterSettings.StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Printing::PrinterSettings::StringCollection ^ InstalledPrinters { System::Drawing::Printing::PrinterSettings::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Namen aller auf dem Computer installierten Drucker ab.</summary>
        <value>Eine <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />, die die Namen aller auf dem Computer installierten Drucker darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die Sammlung der installierten Drucker verwenden, um Benutzern eine Auswahl von Druckern zu drucken.  
  
   
  
## Examples  
 Füllt im folgenden Codebeispiel wird die `comboInstalledPrinters` Kombinationsfelds mit der installierten Drucker und zudem wird den Drucker zum Drucken verwenden möchten, die <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> -Eigenschaft, wenn sich die Auswahl ändert. Die `PopulateInstalledPrintersCombo` Routine wird aufgerufen, wenn das Formular initialisiert wird. Im Beispiel erfordert, dass eine <xref:System.Drawing.Printing.PrintDocument> Variable mit dem Namen `printDoc` vorhanden ist und ob das bestimmte Kombinationsfeld vorhanden ist.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#5)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#5)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Die verfügbaren Drucker konnten nicht aufgezählt werden.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPrinter">
      <MemberSignature Language="C#" Value="public bool IsDefaultPrinter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPrinter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPrinter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPrinter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft immer dann den Standarddrucker festlegt, wenn der Benutzer <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> nicht explizit festlegt.</summary>
        <value>
          <see langword="true" />, wenn <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> den Standarddrucker festlegt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> Gibt immer `false` beim explizit festlegen der <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> Eigenschaft in einen Zeichenfolgenwert außer `null`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> Eigenschaft. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, und rufen `PopulateInstalledPrintersCombo` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.  
  
 [!code-csharp[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDirectPrintingSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob der Drucker das Drucken einer Bilddatei unterstützt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Das zu druckende Bild.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der Drucker das Drucken der angegebenen Bilddatei unterstützt.</summary>
        <returns>
          <see langword="true" />, wenn der Drucker das Drucken des angegebenen Bilds unterstützt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFormat">Ein zu druckendes <see cref="T:System.Drawing.Imaging.ImageFormat" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der Drucker das Drucken des angegebenen Bildformats unterstützt.</summary>
        <returns>
          <see langword="true" />, wenn der Drucker das Drucken des angegebenen Bildformats unterstützt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlotter">
      <MemberSignature Language="C#" Value="public bool IsPlotter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlotter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPlotter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPlotter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob es sich bei dem Drucker um einen Plotter handelt.</summary>
        <value>
          <see langword="true" />, wenn es sich bei dem Drucker um einen Plotter handelt, <see langword="false" />, wenn es sich bei dem Drucker um einen Matrixdrucker handelt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einen Plotter handelt es sich um einen Drucker, der im Gegensatz zum Raster basierende Vektor-basiert ist. Die meisten Vektor-basierten Drucker verwenden einzelne Zeichnungslinien Stifte Ausgabe zu erzeugen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft einen gültigen Drucker bezeichnet.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />-Eigenschaft einen gültigen Drucker festlegt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Abrufen oder einiger Eigenschaften festlegen ein gültiger Drucker ist erforderlich, da sonst eine Ausnahme ausgelöst. Um Ausnahmen zu vermeiden, verwenden die <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> -Eigenschaft nach dem Festlegen der <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> zu bestimmen, ob der Drucker gültig ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zieldrucker durch Festlegen der <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> -Eigenschaft, und wenn die <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> ist `true`, das Dokument auf dem angegebenen Drucker gedruckt. Das Beispiel besteht aus drei Komponenten:  
  
-   Eine Variable namens `filePath` auf den Pfad der Datei zum Drucken festgelegt wurde.  
  
-   Eine Methode namens `pd_PrintPage`, welche behandelt die <xref:System.Drawing.Printing.PrintDocument.PrintPage> Ereignis definiert wurde.  
  
-   Eine Variable namens `printer` auf den Namen des Druckers festgelegt wurde.  
  
 Verwenden der <xref:System.Drawing>, <xref:System.Drawing.Printing>, und <xref:System.IO> Namespaces für dieses Beispiel.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="LandscapeAngle">
      <MemberSignature Language="C#" Value="public int LandscapeAngle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LandscapeAngle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LandscapeAngle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LandscapeAngle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Winkel in Grad ab, um den das Querformat gegenüber dem Hochformat gedreht wird.</summary>
        <value>Der Winkel in Grad, um den das Querformat gegenüber dem Hochformat gedreht wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rotation der gültigen Werte sind 90 und 270 Grad. Wenn Querformat nicht unterstützt wird, ist der einzige gültige Drehungswert 0 Grad. Festlegen der <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> Eigenschaft `true` eine Seite im Querformat gedruckt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PageSettings.Landscape" />
      </Docs>
    </Member>
    <Member MemberName="MaximumCopies">
      <MemberSignature Language="C#" Value="public int MaximumCopies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumCopies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumCopies As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumCopies { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl der Exemplare ab, die pro Auftrag auf dem Drucker gedruckt werden können.</summary>
        <value>Die maximale Anzahl der Exemplare, die pro Auftrag auf dem Drucker gedruckt werden können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie die <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> Eigenschaft, um die Anzahl der zu druckenden Kopien. Verwenden der <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> Eigenschaft, um zu bestimmen, ob Ihr Drucker unterstützt mehrere Kopien gleichzeitig drucken, da einige Drucker nicht der Fall ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
      </Docs>
    </Member>
    <Member MemberName="MaximumPage">
      <MemberSignature Language="C#" Value="public int MaximumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Höchstwert für <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> oder für <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> ab, der in einem <see cref="T:System.Windows.Forms.PrintDialog" /> ausgewählt werden kann, oder legt diesen fest.</summary>
        <value>Der Höchstwert für <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> oder für <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />, der in einem <see cref="T:System.Windows.Forms.PrintDialog" /> ausgewählt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften werden verwendet, indem Sie die <xref:System.Windows.Forms.PrintDialog> Wenn der Benutzer einen Druckbereich auswählt. Die <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true` , die dem Benutzer ermöglichen, ein Druckbereich angegeben. Beim Festlegen der <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> oder <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Werte programmgesteuert, sicherzustellen, dass sie innerhalb des Bereichs von definiert die <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> Eigenschaften oder eine Ausnahme wird ausgelöst, wenn die Anzeige der <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />-Eigenschaft ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="MinimumPage">
      <MemberSignature Language="C#" Value="public int MinimumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Mindestwert für <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> oder für <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> ab, der in einem <see cref="T:System.Windows.Forms.PrintDialog" /> ausgewählt werden kann, oder legt diesen fest.</summary>
        <value>Der Mindestwert für <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> oder für <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />, der in einem <see cref="T:System.Windows.Forms.PrintDialog" /> ausgewählt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften werden verwendet, indem Sie die <xref:System.Windows.Forms.PrintDialog> Wenn der Benutzer einen Druckbereich auswählt. Die <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true` , die dem Benutzer ermöglichen, ein Druckbereich angegeben. Beim Festlegen der <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> oder <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Werte programmgesteuert, sicherzustellen, dass sie innerhalb des Bereichs von definiert die <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> Eigenschaften oder eine Ausnahme wird ausgelöst, wenn die Anzeige der <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />-Eigenschaft ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PaperSizes">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSizeCollection PaperSizes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSizes As PrinterSettings.PaperSizeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ PaperSizes { System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSizeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von diesem Drucker unterstützten Papiergrößen ab.</summary>
        <value>Eine <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />, die die von diesem Drucker unterstützten Papiergrößen darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection> enthält <xref:System.Drawing.Printing.PaperSize> Instanzen, die über die Papiergröße darstellen der <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType> -Eigenschaft, die eine enthält die <xref:System.Drawing.Printing.PaperKind> Werte.  
  
 In der Regel legen Sie eine Seite Papiergröße über die <xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=nameWithType> -Eigenschaft eine gültige <xref:System.Drawing.Printing.PaperSize> über die <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A> Auflistung.  
  
 Um eine benutzerdefinierte Papiergröße anzugeben, finden Sie unter der <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `comboPaperSize` Kombinationsfeld mit dem Drucker Papierformate unterstützt. Darüber hinaus wird eine benutzerdefinierte Papiergröße erstellt und dem Kombinationsfeld hinzugefügt. Die <xref:System.Drawing.Printing.PaperSize.PaperName%2A> wird als Eigenschaft, die die Anzeigezeichenfolge für das Element hinzugefügt wird, über bereitstellt identifiziert die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft des Kombinationsfelds. Im Beispiel erfordert, dass eine <xref:System.Drawing.Printing.PrintDocument> Variable mit dem Namen `printDoc` vorhanden ist und ob das bestimmte Kombinationsfeld vorhanden ist.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PaperSources">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSourceCollection PaperSources" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSources As PrinterSettings.PaperSourceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ PaperSources { System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die bei diesem Drucker verfügbaren Papierzufuhrschächte ab.</summary>
        <value>Eine <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />, die die verfügbaren Papierzufuhrschächte dieses Druckers darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection> enthält <xref:System.Drawing.Printing.PaperSource> Instanzen, die in diesem Dokument darstellen Datenquelle Fächer über die <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType> -Eigenschaft, die eine enthält die <xref:System.Drawing.Printing.PaperSourceKind> Werte.  
  
 In der Regel eine Seite Papierquelle durch Festlegen der <xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=nameWithType> -Eigenschaft eine gültige <xref:System.Drawing.Printing.PaperSource> über die <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A> Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `comboPaperSource` Kombinationsfeld mit dem Drucker Papier Datenquellen unterstützt. Die <xref:System.Drawing.Printing.PaperSource.SourceName%2A> wird als Eigenschaft, die die Anzeigezeichenfolge für das Element hinzugefügt wird, über bereitstellt identifiziert die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft des Kombinationsfelds. Im Beispiel erfordert, dass eine <xref:System.Drawing.Printing.PrintDocument> Variable mit dem Namen `printDoc` vorhanden ist und ob das bestimmte Kombinationsfeld vorhanden ist.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PrinterName">
      <MemberSignature Language="C#" Value="public string PrinterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrinterName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrinterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des zu verwendenden Druckers ab oder legt diesen fest.</summary>
        <value>Der Name des zu verwendenden Druckers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie nach dem Festlegen der Druckername, <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> zu bestimmen, ob der Druckername als gültiger Drucker auf dem System erkannt wird.  
  
 Sie können auch die <xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A> Eigenschaft, um eine Liste der auf dem System installierten Drucker abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zieldrucker durch Festlegen der <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> -Eigenschaft, und wenn die <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> ist `true`, das Dokument auf dem angegebenen Drucker gedruckt. Das Beispiel besteht aus drei Komponenten:  
  
-   Eine Variable namens `filePath` auf den Pfad der Datei zum Drucken festgelegt wurde.  
  
-   Eine Methode namens `pd_PrintPage`, welche behandelt die <xref:System.Drawing.Printing.PrintDocument.PrintPage> Ereignis definiert wurde.  
  
-   Eine Variable namens `printer` auf den Namen des Druckers festgelegt wurde.  
  
 Verwenden der <xref:System.Drawing>, <xref:System.Drawing.Printing>, und <xref:System.IO> Namespaces für dieses Beispiel.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      </Docs>
    </Member>
    <Member MemberName="PrinterResolutions">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PrinterResolutionCollection PrinterResolutions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrinterResolutions As PrinterSettings.PrinterResolutionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ PrinterResolutions { System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle von diesem Drucker unterstützten Auflösungen ab.</summary>
        <value>Eine <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />, die die von diesem Drucker unterstützten Auflösungen darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection> enthält <xref:System.Drawing.Printing.PrinterResolution> Instanzen, die darstellen, den Drucker-Lösungen, die durch unterstützt die <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType> -Eigenschaft, die eine enthält die <xref:System.Drawing.Printing.PrinterResolutionKind> Werte.  
  
 In der Regel eine Seite Papierquelle durch Festlegen der <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=nameWithType> -Eigenschaft eine gültige <xref:System.Drawing.Printing.PrinterResolution> über die <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A> Auflistung.  
  
 Wenn <xref:System.Drawing.Printing.PrinterResolutionKind> ist `Custom`, verwenden Sie dann die <xref:System.Drawing.Printing.PrinterResolution.X%2A> und <xref:System.Drawing.Printing.PrinterResolution.Y%2A> Eigenschaften, die benutzerdefinierte Drucker-Lösung in die horizontal und vertikal um, um zu bestimmen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `comboPrintResolution` Kombinationsfelds mit der unterstützten Auflösungen. Im Beispiel erfordert, dass eine <xref:System.Drawing.Printing.PrintDocument> Variable mit dem Namen `printDoc` vorhanden ist und ob das bestimmte Kombinationsfeld vorhanden ist.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintFileName">
      <MemberSignature Language="C#" Value="public string PrintFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrintFileName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrintFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft bei der Druckausgabe in eine Datei den Dateinamen ab oder legt diesen fest.</summary>
        <value>Der Dateiname für die Druckausgabe in eine Datei.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">für den Lesezugriff beim Abrufen von den Dateinamen und den Schreibzugriff beim Festlegen des Dateinamens. Im Zusammenhang Enumeration <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PrintRange">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintRange PrintRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.PrintRange PrintRange" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintRange As PrintRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintRange PrintRange { System::Drawing::Printing::PrintRange get(); void set(System::Drawing::Printing::PrintRange value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Seitennummern ab, die entsprechend der Angabe des Benutzers gedruckt werden sollen, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Drawing.Printing.PrintRange" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> Eigenschaft wird verwendet, durch die <xref:System.Windows.Forms.PrintDialog>bei der Benutzer wählt einen Druckbereich. Die Standardeinstellung für <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist `AllPages`. Um dem Benutzer ermöglichen, geben Sie einen Bereich von zu druckenden Seiten der <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true`. Um dem Benutzer ermöglichen, die ausgewählten Seiten drucken möchten, geben die <xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true`.  
  
 Während des Druckvorgangs in der <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Ereignis, das <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> um zu bestimmen, was gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, verwenden Sie die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften, um zu bestimmen, welche Seiten gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, geben Sie die Ausgabe nur für die ausgewählten Seiten.  
  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> auch programmgesteuert festgelegt werden können, obwohl die <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Implementierung entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />-Eigenschaft ist keiner der <see cref="T:System.Drawing.Printing.PrintRange" />-Werte.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="T:System.Drawing.Printing.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PrintToFile">
      <MemberSignature Language="C#" Value="public bool PrintToFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintToFile" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintToFile" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintToFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintToFile { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Druckausgabe nicht an einen Druckeranschluss, sondern an eine Datei gesendet wird.</summary>
        <value>
          <see langword="true" />, wenn die Druckausgabe an eine Datei gesendet wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> Eigenschaft wird verwendet, durch die <xref:System.Windows.Forms.PrintDialog> Wenn der Benutzer wählt die **Ausgabe in Datei** Option. In einem solchen Fall der Ausgabeport festgelegt ist auf "FILE", wodurch Windows drucken Subsystems, für den Benutzer für eine Datei aufzufordern beim Benennen der <xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=nameWithType> -Methode aufgerufen wird.  
  
> [!NOTE]
>  Die <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> Eigenschaft wird nur verwendet, durch die <xref:System.Windows.Forms.PrintDialog> und programmgesteuert festgelegt werden können. Die `Print to file` Option wird nur angezeigt, auf die <xref:System.Windows.Forms.PrintDialog> bei der <xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PrintDialog.AllowPrintToFile" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Das Handle für eine Win32-<see langword="DEVMODE" />-Struktur.</param>
        <summary>Kopiert die relevanten Informationen vom angegebenen Handle in die <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` Strukturen sind gerätespezifisch, und Kopieren einer `DEVMODE` Struktur aus einer <xref:System.Drawing.Printing.PrinterSettings> auf eine <xref:System.Drawing.Printing.PrinterSettings> für ein anderen Drucker wird nicht unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Druckerhandle ist nicht gültig.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHdevnames">
      <MemberSignature Language="C#" Value="public void SetHdevnames (IntPtr hdevnames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevnames(native int hdevnames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevnames (hdevnames As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevnames(IntPtr hdevnames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevnames" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevnames">Das Handle für eine Win32-<see langword="DEVNAMES" />-Struktur.</param>
        <summary>Kopiert die relevanten Informationen vom angegebenen Handle in die <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Das Druckerhandle ist ungültig.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">zum Drucken und den Zugriff auf alle Drucker im Netzwerk. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsColor">
      <MemberSignature Language="C#" Value="public bool SupportsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsColor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Drucker Farbdruck unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Drucker Farbdruck unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um mit Farbe gedruckt, und wenn der Drucker unterstützt, legen Sie <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> auf `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird Druckt ein Dokument mit der ersten Seite in Farbe an, wenn der Drucker unterstützt. Im Beispiel erfordert, dass eine <xref:System.Drawing.Printing.PrintDocument> Variable mit dem Namen `printDoc` erstellt wurde, und die <xref:System.Drawing.Printing.PrintDocument.PrintPage> und <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> Ereignisse behandelt.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Drawing.Printing> Namespaces für dieses Beispiel.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Color" />
      </Docs>
    </Member>
    <Member MemberName="ToPage">
      <MemberSignature Language="C#" Value="public int ToPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ToPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ToPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ToPage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Nummer der letzten zu druckenden Seite ab oder legt diese fest.</summary>
        <value>Die Nummer der letzten zu druckenden Seite.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften werden verwendet, indem Sie die <xref:System.Windows.Forms.PrintDialog> Wenn der Benutzer einen Druckbereich auswählt. Die <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> Eigenschaft muss festgelegt werden, um `true` , die dem Benutzer ermöglichen, ein Druckbereich angegeben. Darüber hinaus die <xref:System.Windows.Forms.PrintDialog> erfordert außerdem die <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> angegeben werden und die <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Wert innerhalb dieses Bereichs ist.  
  
 Während des Druckvorgangs in der <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Ereignis, das <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> um zu bestimmen, was gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>, verwenden Sie die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> Eigenschaften, um zu bestimmen, welche Seiten gedruckt werden soll. Wenn <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> ist <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, geben Sie die Ausgabe nur für die ausgewählten Seiten.  
  
 Die <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> und <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> auch programmgesteuert festgelegt werden können, obwohl die <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> Implementierung entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />-Eigenschaft ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt Informationen zu <see cref="T:System.Drawing.Printing.PrinterSettings" /> als Zeichenfolge bereit.</summary>
        <returns>Eine Zeichenfolge.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>