<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1b6a515860c8bbd6ada9ca0536436e21610cdaf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30367084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cf96a-101">Gibt an, dass ein Typ, eine Eigenschaft, ein Feld oder eine Methode einen bestimmten Export bereitstellt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf96a-101">Specifies that a type, property, field, or method provides a particular export.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf96a-102">Im Modell attributierten Programmierung der <xref:System.ComponentModel.Composition.ExportAttribute> deklariert, dass ein Teil wird exportiert oder liefert dem Kompositionscontainer ein Objekt, das einen bestimmten Vertrag erfüllt.</span><span class="sxs-lookup"><span data-stu-id="cf96a-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="cf96a-103">Während der Komposition müssen Teile Importen, die übereinstimmende Verträge solcher Abhängigkeiten, die durch das exportierte Objekt gefüllt.</span><span class="sxs-lookup"><span data-stu-id="cf96a-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="cf96a-104">Die <xref:System.ComponentModel.Composition.ExportAttribute> kann entweder eine ganze Klasse oder eine Eigenschaft oder Methode einer Klasse ergänzen.</span><span class="sxs-lookup"><span data-stu-id="cf96a-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="cf96a-105">Wenn die gesamte Klasse ergänzt wird, ist eine Instanz der Klasse das exportierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="cf96a-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="cf96a-106">Wenn ein Member einer Klasse ergänzt wird, werden das exportierte Objekt den Wert des ergänzten Members.</span><span class="sxs-lookup"><span data-stu-id="cf96a-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="cf96a-107">Gibt an, ob ein Vertrag übereinstimmt, wird in erster Linie durch die Vertragsnamen und Vertragstyp bestimmt.</span><span class="sxs-lookup"><span data-stu-id="cf96a-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="cf96a-108">Weitere Informationen finden Sie unter <xref:System.ComponentModel.Composition.ImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="cf96a-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf96a-109">Das folgende Beispiel zeigt drei Klassen mit ergänzt die <xref:System.ComponentModel.Composition.ExportAttribute>, und drei Importe, die sie entsprechen.</span><span class="sxs-lookup"><span data-stu-id="cf96a-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf96a-110">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf96a-111">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter dem Standardvertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf96a-112">Der Name des Vertrags ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> Methode für die Eigenschaft oder Feld vorliegt oder der Typ, der mit diesem Attribut gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="cf96a-112">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="cf96a-113">Methoden, die mit diesem Attribut gekennzeichnet müssen angeben, dem Vertragsnamen oder ein Typ entweder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="cf96a-113">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="cf96a-114">Der Name des Vertrags wird verglichen mit der <xref:System.StringComparer.Ordinal%2A> Eigenschaft, um einen Groß-/Kleinschreibung beachtet, nicht linguistischen Vergleich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="cf96a-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="cf96a-115">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren, oder <see langword="null" /> oder eine leere Zeichenfolge (""), um den Standardvertragsnamen zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-115">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf96a-116">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter dem angegebenen Vertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf96a-117">Der Name des Vertrags ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> Methode für den Typ Eigenschaft oder ein Feld oder für den Typ, der mit diesem Attribut gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="cf96a-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="cf96a-118">Methoden, die mit diesem Attribut gekennzeichnet müssen angeben, dem Vertragsnamen oder ein Typ entweder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="cf96a-118">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="cf96a-119">Der Name des Vertrags wird verglichen mit der <xref:System.StringComparer.Ordinal%2A> Eigenschaft, um einen Groß-/Kleinschreibung beachtet, nicht linguistischen Vergleich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="cf96a-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="cf96a-120">Ein Typ, aus dem der zum Exportieren des mit diesem Attribut markierten Typs oder Members verwendete Vertragsname abgeleitet werden soll, oder <see langword="null" />, um den Standardvertragsnamen zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-120">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf96a-121">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter einem aus dem angegebenen Typ abgeleiteten Vertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf96a-122">Der Name des Vertrags ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> Methode `contractType`.</span><span class="sxs-lookup"><span data-stu-id="cf96a-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="cf96a-123">Der Name des Vertrags ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> Methode für die Eigenschaft oder Feld vorliegt oder der Typ, der mit diesem Attribut gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="cf96a-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="cf96a-124">Methoden, die mit diesem Attribut gekennzeichnet müssen angeben, dem Vertragsnamen oder ein Typ entweder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="cf96a-124">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="cf96a-125">Der Name des Vertrags wird verglichen mit der <xref:System.StringComparer.Ordinal%2A> Eigenschaft, um einen Groß-/Kleinschreibung beachtet, nicht linguistischen Vergleich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="cf96a-125">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="cf96a-126">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren, oder <see langword="null" /> oder eine leere Zeichenfolge (""), um den Standardvertragsnamen zu verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-126">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="cf96a-127">Der Typ, der exportiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-127">The type to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf96a-128">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der angegebene Typ unter dem angegebenen Vertragsnamen exportiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf96a-129">Ruft den Vertragsnamen ab, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-129">Gets the contract name that is used to export the type or member marked with this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf96a-130">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-130">The contract name that is used to export the type or member marked with this attribute.</span>
          </span>
          <span data-ttu-id="cf96a-131">Der Standardwert ist eine leere Zeichenfolge („“).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-131">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf96a-132">Ruft den Vertragstyp ab, der von dem Member exportiert wird, an den dieses Attribut angefügt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-132">Gets the contract type that is exported by the member that this attribute is attached to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf96a-133">Der Typ des Exports, der bereitgestellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-133">The type of export that is be provided.</span>
          </span>
          <span data-ttu-id="cf96a-134">Der Standardwert ist <see langword="null" /> und bedeutet, dass der Typ durch Abrufen des Typs für den Member erhalten wird, an den dieser Export angefügt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf96a-134">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>