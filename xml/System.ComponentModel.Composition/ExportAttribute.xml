<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc87c5584b3bf18910b971687df7c0502a45fe9f" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375214" /></Metadata><TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a859c-101">Gibt an, dass ein Typ, eine Eigenschaft, ein Feld oder eine Methode einen bestimmten Export bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a859c-101">Specifies that a type, property, field, or method provides a particular export.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a859c-102">Im attributierten Programmiermodell deklariert der <xref:System.ComponentModel.Composition.ExportAttribute>, dass ein Teil ein Objekt exportiert oder für den Kompositions Container bereitstellt, ein Objekt, das einen bestimmten Vertrag erfüllt.</span><span class="sxs-lookup"><span data-stu-id="a859c-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="a859c-103">Während der Komposition werden diese Abhängigkeiten von Teilen mit Importen, die übereinstimmende Verträge aufweisen, vom exportierten Objekt ausgefüllt.</span><span class="sxs-lookup"><span data-stu-id="a859c-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="a859c-104">Der <xref:System.ComponentModel.Composition.ExportAttribute> kann entweder eine ganze Klasse, eine Eigenschaft, ein Feld oder eine Methode einer Klasse ergänzen.</span><span class="sxs-lookup"><span data-stu-id="a859c-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="a859c-105">Wenn die gesamte Klasse ergänzt wird, ist eine Instanz der-Klasse das exportierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="a859c-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="a859c-106">Wenn ein Member einer Klasse ergänzt wird, ist das exportierte Objekt der Wert des ergänzten Elements.</span><span class="sxs-lookup"><span data-stu-id="a859c-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="a859c-107">Ob ein Vertrag übereinstimmt, wird in erster Linie durch den Vertrags Namen und den Vertragstyp bestimmt.</span><span class="sxs-lookup"><span data-stu-id="a859c-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="a859c-108">Weitere Informationen finden Sie unter <xref:System.ComponentModel.Composition.ImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a859c-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a859c-109">Das folgende Beispiel zeigt drei Klassen, die mit dem <xref:System.ComponentModel.Composition.ExportAttribute>ergänzt werden, und drei Importe, die Ihnen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="a859c-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde"><span data-ttu-id="a859c-110">Übersicht über das Modell der attributierten Programmierung</span><span class="sxs-lookup"><span data-stu-id="a859c-110">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a859c-111">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a859c-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a859c-112">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter dem Standardvertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span><span class="sxs-lookup"><span data-stu-id="a859c-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a859c-113">Der Standardvertrags Name ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>-Methode für die Eigenschaft oder den Feldtyp oder für den Typ, der mit diesem Attribut markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a859c-114">Mit diesem Attribut gekennzeichnete Methoden müssen entweder mithilfe von <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>einen Vertrags Namen oder einen Typ angeben.</span><span class="sxs-lookup"><span data-stu-id="a859c-114">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="a859c-115">Der Vertrags Name wird mit der <xref:System.StringComparer.Ordinal%2A>-Eigenschaft verglichen, um einen nicht linguistischen Vergleich mit Berücksichtigung der Groß-/Kleinschreibung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="a859c-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="a859c-116">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren, oder <see langword="null" /> oder eine leere Zeichenfolge (""), um den Standardvertragsnamen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="a859c-116">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="a859c-117">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter dem angegebenen Vertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span><span class="sxs-lookup"><span data-stu-id="a859c-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a859c-118">Der Standardvertrags Name ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>-Methode für die Eigenschaft oder den Feldtyp oder für den Typ, der mit diesem Attribut markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a859c-119">Mit diesem Attribut gekennzeichnete Methoden müssen entweder mithilfe von <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>einen Vertrags Namen oder einen Typ angeben.</span><span class="sxs-lookup"><span data-stu-id="a859c-119">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="a859c-120">Der Vertrags Name wird mit der <xref:System.StringComparer.Ordinal%2A>-Eigenschaft verglichen, um einen nicht linguistischen Vergleich mit Berücksichtigung der Groß-/Kleinschreibung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="a859c-120">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="a859c-121">Ein Typ, aus dem der zum Exportieren des mit diesem Attribut markierten Typs oder Members verwendete Vertragsname abgeleitet werden soll, oder <see langword="null" />, um den Standardvertragsnamen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="a859c-121">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="a859c-122">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der unter einem aus dem angegebenen Typ abgeleiteten Vertragsnamen mit diesem Attribut markierte Typ oder Member exportiert wird.</span><span class="sxs-lookup"><span data-stu-id="a859c-122">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a859c-123">Der Vertrags Name ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>-Methode auf `contractType`.</span><span class="sxs-lookup"><span data-stu-id="a859c-123">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="a859c-124">Der Standardvertrags Name ist das Ergebnis des Aufrufs der <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>-Methode für die Eigenschaft oder den Feldtyp oder für den Typ, der mit diesem Attribut markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-124">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a859c-125">Mit diesem Attribut gekennzeichnete Methoden müssen entweder mithilfe von <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> oder <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>einen Vertrags Namen oder einen Typ angeben.</span><span class="sxs-lookup"><span data-stu-id="a859c-125">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="a859c-126">Der Vertrags Name wird mit der <xref:System.StringComparer.Ordinal%2A>-Eigenschaft verglichen, um einen nicht linguistischen Vergleich mit Berücksichtigung der Groß-/Kleinschreibung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="a859c-126">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="a859c-127">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren, oder <see langword="null" /> oder eine leere Zeichenfolge (""), um den Standardvertragsnamen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="a859c-127">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="a859c-128">Der Typ, der exportiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a859c-128">The type to export.</span></span></param>
        <summary><span data-ttu-id="a859c-129">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Composition.ExportAttribute" />-Klasse, wobei der angegebene Typ unter dem angegebenen Vertragsnamen exportiert wird.</span><span class="sxs-lookup"><span data-stu-id="a859c-129">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="a859c-130">Der Standardvertrags Name ist das Ergebnis des Aufrufs von <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)?displayProperty=nameWithType> für die Eigenschaft oder den Feldtyp oder für den Typ selbst, dass dieser mit diesem Attribut markiert ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-130">The default contract name is the result of calling <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)?displayProperty=nameWithType> on the property or field type, or on the type itself that this is marked with this attribute.</span></span> 
                
<span data-ttu-id="a859c-131">Der Vertrags Name wird mit einem nicht linguistischen Vergleich unter Berücksichtigung der Groß-/Kleinschreibung mithilfe <xref:System.StringComparer.Ordinal?displayProperty=nameWithType>verglichen.</span><span class="sxs-lookup"><span data-stu-id="a859c-131">The contract name is compared using a case-sensitive, non-linguistic comparison using <xref:System.StringComparer.Ordinal?displayProperty=nameWithType>.</span></span>
                    
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a859c-132">Ruft den Vertragsnamen ab, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="a859c-132">Gets the contract name that is used to export the type or member marked with this attribute.</span></span></summary>
        <value><span data-ttu-id="a859c-133">Der Vertragsname, der verwendet wird, um den mit diesem Attribut markierten Typ oder Member zu exportieren.</span><span class="sxs-lookup"><span data-stu-id="a859c-133">The contract name that is used to export the type or member marked with this attribute.</span></span> <span data-ttu-id="a859c-134">Der Standardwert ist eine leere Zeichenfolge („“).</span><span class="sxs-lookup"><span data-stu-id="a859c-134">The default value is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a859c-135">Ruft den Vertragstyp ab, der von dem Member exportiert wird, an den dieses Attribut angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-135">Gets the contract type that is exported by the member that this attribute is attached to.</span></span></summary>
        <value><span data-ttu-id="a859c-136">Der Typ des Exports, der bereitgestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a859c-136">The type of export that is be provided.</span></span> <span data-ttu-id="a859c-137">Der Standardwert ist <see langword="null" /> und bedeutet, dass der Typ durch Abrufen des Typs für den Member erhalten wird, an den dieser Export angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="a859c-137">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
