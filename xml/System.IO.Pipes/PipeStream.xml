<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PipeStream.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c4ce12188b120bb90db9e7bbf08c300b37b4511a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4ce12188b120bb90db9e7bbf08c300b37b4511a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeStream">
          <source>Exposes a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object around a pipe, which supports both anonymous and named pipes.</source>
          <target state="translated">Macht ein <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt um eine Pipe verfügbar, das sowohl anonyme als auch benannte Pipes unterstützt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class provides the base class for named and anonymous pipes operations in the .NET Framework.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Klasse stellt die Basisklasse für benannte und anonyme Pipeoperationen in .NET Framework bereit.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> classes for named pipe operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> Klassen für die named Pipe-Vorgänge.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> classes for anonymous pipe operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> Klassen für anonyme Pipeoperationen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>For more information about pipes, see <bpt id="p1">[</bpt>Pipes<ept id="p1">](~/docs/standard/io/pipe-operations.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Pipes finden Sie unter <bpt id="p1">[</bpt>Pipes<ept id="p1">](~/docs/standard/io/pipe-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>For an example of anonymous pipes, see <bpt id="p1">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</source>
          <target state="translated">Ein Beispiel für anonyme Pipes, finden Sie unter <bpt id="p1">[</bpt>wie: Verwenden von anonymen Pipes zur lokalen prozessübergreifenden Kommunikation<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>For an example of named pipes, see <bpt id="p1">[</bpt>How to: Use Named Pipes for Network Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>.</source>
          <target state="translated">Ein Beispiel der named Pipes finden Sie unter <bpt id="p1">[</bpt>wie: Verwenden von Named Pipes für die prozessübergreifende Kommunikation<ept id="p1">](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>for full trust for inheritors.</source>
          <target state="translated">für volle Vertrauenswürdigkeit für erben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeStream">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Diese Klasse kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> values that indicates the direction of the pipe object.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>-Werte, die die Richtung des Pipeobjekts angeben.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than or equal to 0 that indicates the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer oder gleich 0, der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value and buffer size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Klasse unter Verwendung des angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>-Werts und der angegebenen Puffergröße.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source>This constructor uses a pipe transmission mode of <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Byte&gt;</ph>.</source>
          <target state="translated">Dieser Konstruktor verwendet ein Pipeübertragungsmodus <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> ist kein gültiger <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> values that indicates the direction of the pipe object.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>-Werte, die die Richtung des Pipeobjekts angeben.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> values that indicates the transmission mode of the pipe object.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Werte, die den Übertragungsmodus des Pipeobjekts angeben.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>A positive <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value greater than or equal to 0 that indicates the buffer size.</source>
          <target state="translated">Ein positiver <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert größer oder gleich 0, der die Puffergröße angibt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>, and buffer size.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Klasse mit der angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>, dem angegebenen <ph id="ph3">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> und der angegebenen Puffergröße.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> ist kein gültiger <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeDirection" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="transmissionMode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transmissionMode" /&gt;</ph> ist kein gültiger <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to read data into.</source>
          <target state="translated">Der Puffer, in den Daten gelesen werden sollen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading.</source>
          <target state="translated">Der Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, ab dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Die maximale Anzahl der zu lesenden Bytes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to call when the asynchronous read operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der asynchrone Lesevorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Leseanforderung von anderen Anforderungen unterscheidet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">Beginnt einen asynchronen Lesevorgang.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous read.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt, das auf den asynchronen Lesevorgang verweist.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Pass the returned <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> object to the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">Übergeben Sie das zurückgegebene <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> -Objekt an die <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> Methode, um zu bestimmen, wie viele Bytes gelesen wurden, und zum Freigeben von Betriebssystemressourcen, die zum Lesen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> must be called once for every call to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> muss einmal für jeden Aufruf aufgerufen werden <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This can be done either in the same code that called <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> or in a callback that is passed to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">Dies kann dafür den gleichen Code, der aufgerufen <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> oder einen Rückruf, der an übergebene <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If the pipe is closed or an invalid argument is passed to <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, the appropriate exceptions are raised immediately.</source>
          <target state="translated">Wenn die Pipe ist geschlossen, oder ein ungültiges Argument, um übergeben wird <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, die erforderlichen Ausnahmen werden sofort ausgelöst.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">Während einer asynchronen leseanforderung auftretende Fehler auftreten, auf dem Thread des Threadpools, die die Anforderung ausführt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The exceptions are raised when the code calls the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method.</source>
          <target state="translated">Die Ausnahmen werden ausgelöst, wenn der Code Ruft die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist größer als die im <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> verfügbare Anzahl von Bytes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe does not support read operations.</source>
          <target state="translated">Die Pipe unterstützt keine Lesevorgänge.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to write to the current stream.</source>
          <target state="translated">Der Puffer mit den Daten, die in den aktuellen Stream geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Der nullbasierte Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, ab dem Daten in den aktuellen Stream kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Die maximale Anzahl der zu schreibenden Bytes.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to call when the asynchronous write operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen wird, wenn der asynchrone Schreibvorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diese asynchrone Schreibanforderung von anderen Anforderungen unterscheidet.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">Beginnt einen asynchronen Schreibvorgang.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous write operation.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt, das auf den asynchronen Schreibvorgang verweist.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> must be called once for every call to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> muss einmal für jeden Aufruf aufgerufen werden <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This can be done either in the same code that called <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> or in a callback that is passed to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">Dies kann dafür den gleichen Code, der aufgerufen <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> oder einen Rückruf, der an übergebene <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If the pipe is closed or an invalid argument is passed to <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, the appropriate exceptions are raised immediately.</source>
          <target state="translated">Wenn die Pipe ist geschlossen, oder ein ungültiges Argument, um übergeben wird <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, die erforderlichen Ausnahmen werden sofort ausgelöst.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">Während einer asynchronen schreibanforderung auftretende Fehler auftreten, auf dem Thread des Threadpools, die die Anforderung ausführt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The exceptions are raised when the code calls the  <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> method.</source>
          <target state="translated">Die Ausnahmen werden ausgelöst, wenn der Code Ruft die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist größer als die im <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> verfügbare Anzahl von Bytes.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe does not support write operations.</source>
          <target state="translated">Die Pipe unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.CanRead">
          <source>Gets a value indicating whether the current stream supports read operations.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports read operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Stream Lesevorgänge unterstützt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanRead">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt geschlossen ist, gibt diese Eigenschaft zurück <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.CanSeek">
          <source>Gets a value indicating whether the current stream supports seek operations.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Suchvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> in allen Fällen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanSeek">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt geschlossen ist, gibt diese Eigenschaft zurück <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.CanWrite">
          <source>Gets a value indicating whether the current stream supports write operations.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der aktuelle Stream Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports write operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Stream Schreibvorgänge unterstützt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.CanWrite">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt geschlossen ist, gibt diese Eigenschaft zurück <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
          <source>Verifies that the pipe is in a proper state for getting or setting properties.</source>
          <target state="translated">Überprüft, ob sich die Pipe in einem ordnungsgemäßen Zustand zum Abrufen oder Festlegen von Eigenschaften befindet.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.CheckReadOperations">
          <source>Verifies that the pipe is in a connected state for read operations.</source>
          <target state="translated">Überprüft, ob die Pipe verbunden ist, um Lesevorgänge auszuführen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
          <source>Verifies that the pipe is in a connected state for write operations.</source>
          <target state="translated">Überprüft, ob die Pipe verbunden ist, um Schreibvorgänge auszuführen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> Methode und die <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> Ruft die geschützte <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Ruft <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>When the disposing parameter is <ph id="ph1">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object references.</source>
          <target state="translated">Wenn der disposing-Parameter ist <ph id="ph1">`true`</ph>, diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte frei, die von diesem <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt verweist.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>In derived classes, put all <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> cleanup logic in the <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">In abgeleiteten Klassen versetzen Sie alle <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> Bereinigungslogik in die <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">Beim Überschreiben von <ph id="ph1">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> freigegeben wurden.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see cref="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>The reference to the pending asynchronous request.</source>
          <target state="translated">Der Verweis auf die ausstehende asynchrone Anforderung.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>Ends a pending asynchronous read request.</source>
          <target state="translated">Beendet eine ausstehende asynchrone Leseanforderung.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes that were read.</source>
          <target state="translated">Die Anzahl von Bytes, die gelesen wurden.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>A return value of 0 indicates the end of the stream (the pipe has been closed).</source>
          <target state="translated">Der Rückgabewert 0 (null) gibt das Ende des Streams an (d. h., die Pipe wurde geschlossen).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>This method returns the number of bytes read into the byte array specified by the earlier call to <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt die Anzahl der Bytes im Bytearray, angegeben durch den früheren Aufruf von gelesen <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>Pass the returned <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> object to the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">Übergeben Sie das zurückgegebene <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> -Objekt an die <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> Methode, um zu bestimmen, wie viele Bytes gelesen wurden, und zum Freigeben von Betriebssystemressourcen, die zum Lesen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> must be called once for every call to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> muss einmal für jeden Aufruf aufgerufen werden <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>This can be done either in the same code that called <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> or in a callback that is passed to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">Dies kann dafür den gleichen Code, der aufgerufen <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> oder einen Rückruf, der an übergebene <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>If the pipe is closed or an invalid argument is passed to <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, the appropriate exceptions are raised immediately.</source>
          <target state="translated">Wenn die Pipe ist geschlossen, oder ein ungültiges Argument, um übergeben wird <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, die erforderlichen Ausnahmen werden sofort ausgelöst.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">Während einer asynchronen leseanforderung auftretende Fehler auftreten, auf dem Thread des Threadpools, die die Anforderung ausführt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>The exceptions are raised when the code calls the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method.</source>
          <target state="translated">Die Ausnahmen werden ausgelöst, wenn der Code Ruft die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> basiert nicht auf einer <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode im aktuellen Stream.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>The reference to the pending asynchronous request.</source>
          <target state="translated">Der Verweis auf die ausstehende asynchrone Anforderung.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>Ends a pending asynchronous write request.</source>
          <target state="translated">Beendet eine ausstehende asynchrone Schreibanforderung.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> must be called once for every call to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> muss einmal für jeden Aufruf aufgerufen werden <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>This can be done either in the same code that called <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> or in a callback that is passed to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">Dies kann dafür den gleichen Code, der aufgerufen <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> oder einen Rückruf, der an übergebene <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>If the pipe is closed or an invalid argument is passed to <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, the appropriate exceptions are raised immediately.</source>
          <target state="translated">Wenn die Pipe ist geschlossen, oder ein ungültiges Argument, um übergeben wird <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, die erforderlichen Ausnahmen werden sofort ausgelöst.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">Während einer asynchronen schreibanforderung auftretende Fehler auftreten, auf dem Thread des Threadpools, die die Anforderung ausführt.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>The exceptions are raised when the code the calls <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> method.</source>
          <target state="translated">Die Ausnahmen werden ausgelöst, wenn der Code Ruft die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> basiert nicht auf einer <ph id="ph2">&lt;see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode im aktuellen Stream.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">Der Stream ist geschlossen, oder ein interner Fehler ist aufgetreten.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Flush">
          <source>Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Löscht den Puffer für den aktuellen Stream und veranlasst die Ausgabe aller gepufferten Daten an das zugrunde liegende Gerät.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Flush">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Flush%2A&gt;</ph> method is not supported in the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class and does nothing when it is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Flush%2A&gt;</ph> Methode wird nicht unterstützt, der <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Klasse, jedoch nichts, wenn sie aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Flush">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Flush">
          <source>The pipe does not support write operations.</source>
          <target state="translated">Die Pipe unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Flush">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the pipe described by the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>-Objekt ab, das die Einträge in der Zugriffssteuerungsliste für die Pipe kapselt, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt beschrieben wird.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the pipe described by the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>-Objekt, das die Einträge in der Zugriffssteuerungsliste für die Pipe kapselt, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt beschrieben wird.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</source>
          <target state="translated">Eine Zugriffssteuerungsliste (ACL) beschreibt Einzelpersonen und/oder Gruppen, die oder verfügen nicht über, Rechte zum Ausführen bestimmter Aktionen auf einer angegebenen Datei.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Hinzufügen oder Entfernen von Zugriffssteuerungslisten-Einträgen<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.GetAccessControl">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>Gets the size, in bytes, of the inbound buffer for a pipe.</source>
          <target state="translated">Ruft die Größe des Eingangspuffers für eine Pipe in Bytes ab.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>An integer value that represents the inbound buffer size, in bytes.</source>
          <target state="translated">Ein Ganzzahlwert, der die Größe des Eingangspuffers in Bytes darstellt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>If <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.InBufferSize%2A&gt;</ph> is 0, the buffer size is allocated as needed.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.InBufferSize%2A&gt;</ph> gleich 0 ist, wird die Größe des Puffers Bedarf zugeordnet.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>The stream is unreadable.</source>
          <target state="translated">Der Datenstrom ist nicht lesbar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>The pipe is waiting to connect.</source>
          <target state="translated">Die Pipe wartet auf eine Verbindung.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.InBufferSize">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph> object of the pipe to initialize.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph>-Objekt der zu initialisierenden Pipe.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to expose the handle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um das Handle verfügbar zu machen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the handle was opened asynchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um anzugeben, dass das Handle asynchron geöffnet wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object from the specified <ph id="ph2">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt aus dem angegebenen <ph id="ph2">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source>If the pipe is in a connected state, this method also sets the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Wenn die Pipe verbunden ist, legt diese Methode auch die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
          <source>A handle cannot be bound to the pipe.</source>
          <target state="translated">Ein Handle kann nicht an die Pipe gebunden werden.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsAsync">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object was opened asynchronously or synchronously.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt asynchron oder synchron geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsAsync">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object was opened asynchronously; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt asynchron geöffnet wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsAsync">
          <source>This property enables your code to use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt;</ph> property correctly.</source>
          <target state="translated">Diese Eigenschaft ermöglicht den Code so die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt;</ph> Eigenschaft ordnungsgemäß.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsConnected">
          <source>Gets or sets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object is connected.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt verbunden ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object is connected; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt verbunden ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> only if the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is connected.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> -Eigenschaft gibt <ph id="ph2">`true`</ph> nur, wenn die <ph id="ph3">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt verbunden ist.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsConnected">
          <source>If this property returns <ph id="ph1">`false`</ph>, the pipe may be waiting to connect, or may be disconnected, closed, or broken.</source>
          <target state="translated">Wenn diese Eigenschaft gibt <ph id="ph1">`false`</ph>, die Pipe kann wartet, eine Verbindung herstellen, möglicherweise werden getrennt, geschlossen oder unterbrochen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsHandleExposed">
          <source>Gets a value indicating whether a handle to a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object is exposed.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Handle für ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt verfügbar gemacht wurde.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsHandleExposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a handle to the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object is exposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein Handle für das <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt verfügbar gemacht wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsHandleExposed">
          <source>The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.</source>
          <target state="translated">Der Wert dieser Eigenschaft wird festgelegt, wenn ein Handle für die Pipe abrufen, die vom aktuellen gekapselt ist <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>Gets a value indicating whether there is more data in the message returned from the most recent read operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob in der vom letzten Lesevorgang zurückgegebenen Meldung weitere Daten vorhanden sind.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are no more characters to read in the message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn in der Meldung keine weiteren zu lesenden Zeichen vorhanden sind, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>This property is relevant if the pipe's <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt;</ph> property was set to <ph id="ph2">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> by the most recent call to <ph id="ph3">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft ist relevant, wenn der Pipes <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt;</ph> -Eigenschaft wurde festgelegt, um <ph id="ph2">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> durch den letzten Aufruf von <ph id="ph3">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>The pipe is not connected.</source>
          <target state="translated">Die Pipe ist nicht verbunden.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>The pipe handle has not been set.</source>
          <target state="translated">Das Pipehandle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>The pipe's <ph id="ph1">&lt;see cref="P:System.IO.Pipes.PipeStream.ReadMode" /&gt;</ph> property value is not <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="P:System.IO.Pipes.PipeStream.ReadMode" /&gt;</ph>-Eigenschaftswert der Pipe ist nicht <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.IsMessageComplete">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.Length">
          <source>Gets the length of a stream, in bytes.</source>
          <target state="translated">Ruft die Länge eines Streams in Bytes ab.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.Length">
          <source>0 in all cases.</source>
          <target state="translated">0 in allen Fällen.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.Length">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Length%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph>-Klasse unterstützt die <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Length%2A&gt;</ph>-Eigenschaft nicht.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.Length">
          <source>Always thrown.</source>
          <target state="translated">Wird immer ausgelöst.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>Gets the size, in bytes, of the outbound buffer for a pipe.</source>
          <target state="translated">Ruft die Größe des Ausgangspuffers für eine Pipe in Bytes ab.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>The outbound buffer size, in bytes.</source>
          <target state="translated">Die Größe des Ausgangspuffers in Bytes.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>If <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.OutBufferSize%2A&gt;</ph> is 0, the buffer size is allocated as needed.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.OutBufferSize%2A&gt;</ph> gleich 0 ist, wird die Größe des Puffers Bedarf zugeordnet.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>The stream is unwriteable.</source>
          <target state="translated">Der Stream ist nicht schreibbar.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>The pipe is waiting to connect.</source>
          <target state="translated">Die Pipe wartet auf eine Verbindung.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.OutBufferSize">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.Position">
          <source>Gets or sets the current position of the current stream.</source>
          <target state="translated">Ruft die aktuelle Position des aktuellen Streams ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.Position">
          <source>0 in all cases.</source>
          <target state="translated">0 in allen Fällen.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.Position">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Position%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph>-Klasse unterstützt die <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.Position%2A&gt;</ph>-Eigenschaft nicht.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.Position">
          <source>Always thrown.</source>
          <target state="translated">Wird immer ausgelöst.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">Enthält, wenn diese Methode zurückgegeben wird, das angegebene Bytearray mit den Werten zwischen <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> und (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> –1), das von den Bytes ersetzt wird, die aus der aktuellen Quelle gelesen werden.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> array at which the bytes that are read will be placed.</source>
          <target state="translated">Das Byteoffset im <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>-Array, an dem die gelesenen Bytes platziert werden.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Die maximale Anzahl der zu lesenden Bytes.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a block of bytes from a stream and writes the data to a specified buffer.</source>
          <target state="translated">Liest einen Byteblock aus einem Stream und schreibt die Daten in einen angegebenen Puffer.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes that are read into <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated">Die Gesamtanzahl der in den <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> gelesenen Bytes.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</source>
          <target state="translated">Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0, wenn das Streamende erreicht ist.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> method blocks until <ph id="ph2">`count`</ph> bytes are read or the end of the stream is reached.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> Methode blockiert, bis <ph id="ph2">`count`</ph> Bytes gelesen wurden, oder das Ende des Streams erreicht ist.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For asynchronous read operations, see <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">Für asynchrone Lesevorgänge finden Sie unter <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example creates an anonymous pipe client and pipe server.</source>
          <target state="translated">Das folgende Beispiel erstellt eine anonyme Pipes Client- und Pipe.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe server uses the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> method to read a series of bytes from the pipe client as a validation code.</source>
          <target state="translated">Der Pipeserver verwendet die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> Methode, um eine Reihe von Bytes aus der Pipeclient als Validierungscode zu lesen.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Both the pipe client and the pipe server are part of the same example.</source>
          <target state="translated">Der Pipeclient und dem Pipeserver sind Teil des gleichen Beispiels.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.</source>
          <target state="translated">Der Serverteil des Beispiels erstellt einen Clientprozess und übergibt es ein anonymes Pipehandle als Argument.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist größer als die im <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> verfügbare Anzahl von Bytes.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe does not support read operations.</source>
          <target state="translated">Die Pipe unterstützt keine Lesevorgänge.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Any I/O error occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>Reads a byte from a pipe.</source>
          <target state="translated">Liest ein Byte aus einer Pipe.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>The byte, cast to <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, or -1 indicates the end of the stream (the pipe has been closed).</source>
          <target state="translated">Das in <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> umgewandelte Byte oder -1, wenn das Ende des Streams erreicht wurde (die Pipe wurde geschlossen).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Lesevorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>The pipe does not support read operations.</source>
          <target state="translated">Die Pipe unterstützt keine Lesevorgänge.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.ReadByte">
          <source>Any I/O error occurred.</source>
          <target state="translated">Es ist ein E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>Gets or sets the reading mode for a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object.</source>
          <target state="translated">Ruft den Lesemodus für ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> values that indicates how the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object reads from the pipe.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Werte, die angeben, wie das <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt aus der Pipe liest.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> mode message transmission.</source>
          <target state="translated">Anonyme Pipes unterstützen keine <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> Modus nachrichtenübertragung.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>The supplied value is not a valid <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> value.</source>
          <target state="translated">Der bereitgestellte Wert ist kein gültiger <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>The supplied value is not a supported <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> value for this pipe stream.</source>
          <target state="translated">Der bereitgestellte Wert ist kein unterstützter <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Wert für diesen Pipestream.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>The handle has not been set.</source>
          <target state="translated">Das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>The pipe is waiting to connect with a named client.</source>
          <target state="translated">Die Pipe wartet auf die Verbindung mit einem benannten Client.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.ReadMode">
          <source>The pipe is broken or an I/O error occurred with a named client.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder mit einem benannten Client ist ein E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.SafePipeHandle">
          <source>Gets the safe handle for the local end of the pipe that the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">Ruft das sichere Handle für das lokale Ende der Pipe ab, die vom aktuellen <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.SafePipeHandle">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph> object for the pipe that is encapsulated by the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /&gt;</ph>-Objekt für die Pipe, die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt gekapselt wird.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.SafePipeHandle">
          <source>The pipe handle has not been set.</source>
          <target state="translated">Das Pipehandle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.SafePipeHandle">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The point, relative to <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>, to begin seeking from.</source>
          <target state="translated">Der Punkt, ab dem gesucht werden soll, der relativ zu <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>ist.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Specifies the beginning, the end, or the current position as a reference point for <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>, using a value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den Anfang, das Ende oder die aktuelle Position als Bezugspunkt für <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> unter Verwendung eines Werts vom Typ <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the current position of the current stream to the specified value.</source>
          <target state="translated">Legt die aktuelle Position des aktuellen Streams auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position in the stream.</source>
          <target state="translated">Die neue Position im Stream.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Seek%2A&gt;</ph> method is not supported in pipes and raises a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> when it is called.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Seek%2A&gt;</ph> Methode wird nicht unterstützt, Pipes und löst eine <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> bei Aufruf.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object that specifies an access control list (ACL) entry to apply to the current pipe.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>-Objekt, das einen Eintrag in einer Zugriffssteuerungsliste angibt, der auf die aktuelle Pipe angewendet werden soll.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>Applies the access control list (ACL) entries specified by a <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to the pipe specified by the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph> object.</source>
          <target state="translated">Wendet von einem <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>-Objekt angegebene Einträge in Zugriffssteuerungslisten auf die vom aktuellen <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeStream" /&gt;</ph>-Objekt angegebene Pipe an.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</source>
          <target state="translated">Eine Zugriffssteuerungsliste (ACL) beschreibt Einzelpersonen und/oder Gruppen, die oder verfügen nicht über, Rechte zum Ausführen bestimmter Aktionen auf einer angegebenen Datei.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gewusst wie: Hinzufügen oder Entfernen von Zugriffssteuerungslisten-Einträgen<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source><ph id="ph1">&lt;paramref name="pipeSecurity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeSecurity" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">Fehler beim zugrunde liegenden Aufruf zum Festlegen der Sicherheitsinformationen.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
          <source>The new length of the stream.</source>
          <target state="translated">Die neue Länge des Streams.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
          <source>Sets the length of the current stream to the specified value.</source>
          <target state="translated">Legt die Länge des aktuellen Streams auf den angegebenen Wert fest.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.SetLength%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Klasse bietet keine Unterstützung der <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.SetLength%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>Gets the pipe transmission mode supported by the current pipe.</source>
          <target state="translated">Ruft den von der aktuellen Pipe unterstützten Pipeübertragungsmodus ab.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> values that indicates the transmission mode supported by the current pipe.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>-Werte, die den von der aktuellen Pipe unterstützten Übertragungsmodus angeben.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> mode message transmission.</source>
          <target state="translated">Anonyme Pipes unterstützen keine <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> Modus nachrichtenübertragung.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>The handle has not been set.</source>
          <target state="translated">Das Handle wurde noch nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>The pipe is waiting to connect in an anonymous client/server operation or with a named client.</source>
          <target state="translated">Die Pipe wartet auf die Verbindung in einem anonymen Client/Server-Vorgang oder mit einem benannten Client.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
          <source>Waits for the other end of the pipe to read all sent bytes.</source>
          <target state="translated">Wartet, bis das andere Ende der Pipe alle gesendeten Bytes gelesen hat.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A&gt;</ph> method blocks until the other end of the pipe has read all sent bytes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A&gt;</ph> Methode blockiert, bis das andere Ende der Pipe alle gesendeten Bytes gelesen hat.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
          <source>The pipe does not support write operations.</source>
          <target state="translated">Die Pipe unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer that contains data to write to the pipe.</source>
          <target state="translated">Der Puffer, der Daten enthält, die in die Pipe geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Der nullbasierte Byteoffset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, ab dem Daten in den aktuellen Stream kopiert werden sollen.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write to the current stream.</source>
          <target state="translated">Die maximale Anzahl an Bytes, die in den aktuellen Stream geschrieben werden sollen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a block of bytes to the current stream using data from a buffer.</source>
          <target state="translated">Schreibt einen Byteblock mit den Daten aus einem Puffer in den aktuellen Stream.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Write%2A&gt;</ph> method blocks until <ph id="ph2">`count`</ph> bytes are read or the end of the stream is reached.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.Write%2A&gt;</ph> Methode blockiert, bis <ph id="ph2">`count`</ph> Bytes gelesen wurden, oder das Ende des Streams erreicht ist.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For asynchronous read operations, see <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">Für asynchrone Lesevorgänge finden Sie unter <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist kleiner als 0.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist größer als die im <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> verfügbare Anzahl von Bytes.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe does not support write operations.</source>
          <target state="translated">Die Pipe unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>The byte to write to the stream.</source>
          <target state="translated">Das Byte, das in den Stream geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>Writes a byte to the current stream.</source>
          <target state="translated">Schreibt ein Byte in den aktuellen Stream.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob die aktuelle <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> -Objekt Schreibvorgänge unterstützt.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>The pipe is closed.</source>
          <target state="translated">Die Pipe ist geschlossen.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>The pipe does not support write operations.</source>
          <target state="translated">Die Pipe unterstützt keine Schreibvorgänge.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">Die Verbindung der Pipe ist getrennt, die Pipe wartet auf eine Verbindung, oder das Handle wurde nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">Die Pipe wurde unterbrochen, oder es ist ein anderer E/A-Fehler aufgetreten.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>