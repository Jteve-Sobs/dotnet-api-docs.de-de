<Type Name="TryCatch" FullName="System.Activities.Statements.TryCatch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f6608f474f015b7b02de3988d3ac1b97111796f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TryCatch : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TryCatch extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.TryCatch" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryCatch&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryCatch sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33410-101">Enthält Aktivitäten, die von der Workflowlaufzeit innerhalb eines Ausnahmebehandlungsblocks ausgeführt werden sollen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="33410-101">Contains activities to be executed by the workflow runtime in an exception handling block.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="33410-102">Die <xref:System.Activities.Statements.TryCatch.Finally%2A> Aktivität Mitglied einer <xref:System.Activities.Statements.TryCatch> Aktivität, die dem untergeordneten Element für eine <xref:System.Activities.Statements.TransactionScope> wird nicht ausgeführt werden, wenn eine nicht behandelte Ausnahme, hinter weitergibt die <xref:System.Activities.Statements.TransactionScope> Grenze.</span><span class="sxs-lookup"><span data-stu-id="33410-102">The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33410-103">Im folgenden Codebeispiel wird das Erstellen einer <xref:System.Activities.Statements.TransactionScope>-Aktivität gezeigt.</span><span class="sxs-lookup"><span data-stu-id="33410-103">The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="33410-104">Dieses Beispiel stammt aus dem [Schachteln von TransactionScope innerhalb eines Diensts](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="33410-104">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TryCatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TryCatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33410-105">Erstellt eine neue Instanz der <see cref="M:System.Activities.Statements.TryCatch.#ctor" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-105">Creates a new instance of the <see cref="M:System.Activities.Statements.TryCatch.#ctor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33410-106">Im folgenden Codebeispiel wird das Erstellen einer <xref:System.Activities.Statements.TransactionScope>-Aktivität gezeigt.</span><span class="sxs-lookup"><span data-stu-id="33410-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="33410-107">Dieses Beispiel stammt aus dem [Schachteln von TransactionScope innerhalb eines Diensts](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="33410-107">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catches">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.Catch&gt; Catches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Statements.Catch&gt; Catches" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Catches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catches As Collection(Of Catch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::Catch ^&gt; ^ Catches { System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::Catch ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Try")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.Catch&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33410-108">Die Auflistung von <see langword="Catch" />-Elementen, die überprüft werden müssen, wenn die <see cref="P:System.Activities.Statements.TryCatch.Try" />-Aktivität eine Ausnahme auslöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-108">The collection of <see langword="Catch" /> elements to be checked when the <see cref="P:System.Activities.Statements.TryCatch.Try" /> activity throws an exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33410-109">Die Catch-Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-109">The catch collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33410-110">Catch-Vorgänge werden in der Reihenfolge ausgewertet, in der sie der Auflistung hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="33410-110">Catches are evaluated in the order in which they are added to the collection.</span></span> <span data-ttu-id="33410-111">Wenn eine genaue Übereinstimmung für den Typ der Ausnahme gefunden wird, wird der übereinstimmende <xref:System.Activities.Statements.Catch> -Aktivität ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="33410-111">If an exact match for the exception type is found, the matching <xref:System.Activities.Statements.Catch> activity is executed.</span></span>  <span data-ttu-id="33410-112">Wenn keine genaue Übereinstimmung gefunden wird, die <xref:System.Activities.Statements.Catch> mit dem nächsten übereinstimmenden <xref:System.Activities.Statements.Catch.ExceptionType%2A> ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="33410-112">If no exact match is found, the <xref:System.Activities.Statements.Catch> with the closest matching <xref:System.Activities.Statements.Catch.ExceptionType%2A> is executed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33410-113">Im folgenden Codebeispiel wird das Festlegen der Catches-Eigenschaft einer <xref:System.Activities.Statements.TransactionScope>-Aktivität gezeigt.</span><span class="sxs-lookup"><span data-stu-id="33410-113">The following code sample demonstrates setting the Catches property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="33410-114">Dieses Beispiel stammt aus dem [Schachteln von TransactionScope innerhalb eines Diensts](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="33410-114">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
 <span data-ttu-id="33410-115">Einmal im Designer platziert <xref:System.Activities.Statements.Catch> Aktivitäten können nicht in den Designer neu angeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="33410-115">Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.</span></span>  <span data-ttu-id="33410-116">Die Auflistung der Reorganisation <xref:System.Activities.Statements.Catch> Aktivitäten, löschen und erneut in der richtigen Reihenfolge hinzufügen, oder verwenden Sie die Verwendung von XAML-(Code)-Ansicht für den Workflow.</span><span class="sxs-lookup"><span data-stu-id="33410-116">To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finally">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Finally { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Finally" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Finally" />
      <MemberSignature Language="VB.NET" Value="Public Property Finally As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Finally { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Catches")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33410-117">Die Aktivität, die ausgeführt werden soll, wenn die Ausführung von <see cref="P:System.Activities.Statements.TryCatch.Try" /> und aller erforderlichen Aktivitäten in der <see cref="P:System.Activities.Statements.TryCatch.Catches" />-Auflistung abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-117">The activity to be executed when the <see cref="P:System.Activities.Statements.TryCatch.Try" /> and any necessary activities in the <see cref="P:System.Activities.Statements.TryCatch.Catches" /> collection complete execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33410-118">Die Aktivität, die die <see cref="P:System.Activities.Statements.TryCatch.Finally" />-Logik darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-118">The activity that represents the <see cref="P:System.Activities.Statements.TryCatch.Finally" /> logic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33410-119">Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Activities.Statements.TryCatch.Finally%2A> Eigenschaft von einem <xref:System.Activities.Statements.TransactionScope> Aktivität.</span><span class="sxs-lookup"><span data-stu-id="33410-119">The following code sample demonstrates setting the <xref:System.Activities.Statements.TryCatch.Finally%2A> property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="33410-120">Dieses Beispiel stammt aus dem [Schachteln von TransactionScope innerhalb eines Diensts](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="33410-120">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Try">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Try { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Try" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Try" />
      <MemberSignature Language="VB.NET" Value="Public Property Try As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Try { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Variables")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33410-121">Die Aktivität wird erstmalig ausgeführt wird, wenn <see cref="T:System.Activities.Statements.TryCatch" /> ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-121">The activity first executed when the <see cref="T:System.Activities.Statements.TryCatch" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33410-122">Die Aktivität.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-122">The activity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33410-123">Im folgenden Codebeispiel wird das Festlegen der Try-Eigenschaft einer <xref:System.Activities.Statements.TransactionScope>-Aktivität gezeigt.</span><span class="sxs-lookup"><span data-stu-id="33410-123">The following code sample demonstrates setting the Try property of a <xref:System.Activities.Statements.TransactionScope> activity.</span></span> <span data-ttu-id="33410-124">Dieses Beispiel stammt aus dem [Schachteln von TransactionScope innerhalb eines Diensts](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) Beispiel.</span><span class="sxs-lookup"><span data-stu-id="33410-124">This example is from the [Nesting of TransactionScope within a service](~/docs/framework/windows-workflow-foundation/samples/nesting-of-transactionscope-within-a-service.md) sample.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.TryCatch.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.TryCatch.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33410-125">Die Auflistung enthaltener Variablen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-125">The collection of contained variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33410-126">Die Auflistung der Variablen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="33410-126">The collection of variables.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>