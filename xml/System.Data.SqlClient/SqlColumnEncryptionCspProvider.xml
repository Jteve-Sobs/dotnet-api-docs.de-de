<Type Name="SqlColumnEncryptionCspProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCspProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c207e9bd83bca3c7a79d133c556f8753d108a428" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912005" /></Metadata><TypeSignature Language="C#" Value="public class SqlColumnEncryptionCspProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCspProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCspProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCspProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCspProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="177b9-101">Die Implementierung des CMK-Anbieters für die Verwendung des Microsoft CAPI-basierten Microsoft-Kryptografiedienstanbieters (Cryptographic Service Provider, CSP) mit <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span><span class="sxs-lookup"><span data-stu-id="177b9-101">The CMK Store provider implementation for using  Microsoft CAPI based Cryptographic Service Providers (CSP) with <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="177b9-102">Ermöglicht das Speichern von Always Encrypted-Spalten-Hauptschlüssel Schlüssel in einem Speicher, basieren (Hardwaresicherheitsmodule), die von der Microsoft CAPI unterstützt (Cryptographic Service Provider, CSP) wie z. B. eine Hardware.</span><span class="sxs-lookup"><span data-stu-id="177b9-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft CAPI based Cryptographic Service Providers (CSP).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://blogs.msdn.com/b/sqlsecurity/archive/tags/always+encrypted/"><span data-ttu-id="177b9-103">Always Encrypted-Blog</span><span class="sxs-lookup"><span data-stu-id="177b9-103">Always Encrypted Blog</span></span></related>
    <related type="ExternalDocumentation" href="/sql/relational-databases/security/encryption/always-encrypted-client-development"><span data-ttu-id="177b9-104">Always Encrypted (Cliententwicklung)</span><span class="sxs-lookup"><span data-stu-id="177b9-104">Always Encrypted (client development)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCspProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCspProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="177b9-105">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="177b9-105">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="177b9-106">Der Pfad des Hauptschlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-106">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="177b9-107">Der Verschlüsselungsalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="177b9-107">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="177b9-108">Der verschlüsselte Spaltenverschlüsselungsschlüssel.</span><span class="sxs-lookup"><span data-stu-id="177b9-108">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="177b9-109">Entschlüsselt den angegebenen verschlüsselten Wert mit einem asymmetrischen Schlüssel, der durch den Schlüsselpfad und den Algorithmus angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="177b9-109">Decrypts the given encrypted value using an asymmetric key specified by the key path and algorithm.</span></span> <span data-ttu-id="177b9-110">Der Schlüsselpfad liegt im Format „[Anbietername]/Schlüssel-ID“ vor und muss ein asymmetrischer Schlüssel sein, der im angegebenen Kryptografiedienstanbieter gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="177b9-110">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span></span> <span data-ttu-id="177b9-111">Der gültige Algorithmus zum Verschlüsseln und Entschlüsseln des CEK (Content Encryption Key) ist „RSA_OAEP“.</span><span class="sxs-lookup"><span data-stu-id="177b9-111">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="177b9-112">Der entschlüsselte Spaltenverschlüsselungsschlüssel.</span><span class="sxs-lookup"><span data-stu-id="177b9-112">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="177b9-113">Der Pfad des Hauptschlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-113">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="177b9-114">Der Verschlüsselungsalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="177b9-114">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="177b9-115">Der verschlüsselte Spaltenverschlüsselungsschlüssel.</span><span class="sxs-lookup"><span data-stu-id="177b9-115">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="177b9-116">Verschlüsselt den Verschlüsselungsschlüssel der Nur-Text-Spalte mithilfe eines asymmetrischen Schlüssels, der durch den Schlüsselpfad und den angegebenen Algorithmus festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="177b9-116">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="177b9-117">Der Schlüsselpfad liegt im Format „[Anbietername]/Schlüssel-ID“ vor und muss ein asymmetrischer Schlüssel sein, der im angegebenen Kryptografiedienstanbieter gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="177b9-117">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span></span> <span data-ttu-id="177b9-118">Der gültige Algorithmus zum Verschlüsseln und Entschlüsseln des CEK (Content Encryption Key) ist „RSA_OAEP“.</span><span class="sxs-lookup"><span data-stu-id="177b9-118">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="177b9-119">Der verschlüsselte Spaltenverschlüsselungsschlüssel.</span><span class="sxs-lookup"><span data-stu-id="177b9-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="177b9-120">Eine konstante Zeichenfolge für den Anbieternamen „MSSQL_CSP_PROVIDER“.</span><span class="sxs-lookup"><span data-stu-id="177b9-120">A constant string for the provider name 'MSSQL_CSP_PROVIDER'.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="177b9-121">Der Pfad des Spaltenhauptschlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-121">The column master key path.</span></span> <span data-ttu-id="177b9-122">Das Pfadformat ist spezifisch für einen Schlüsselspeicheranbieter.</span><span class="sxs-lookup"><span data-stu-id="177b9-122">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="177b9-123"><see langword="true" />, um anzugeben, dass der Spaltenhauptschlüssel Enclave-Berechnungen unterstützt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="177b9-123"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="177b9-124">Löst in allen Fällen eine <see cref="T:System.NotSupportedException" />-Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="177b9-124">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="177b9-125">Die Signatur der Metadaten des Spaltenhauptschlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-125">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="177b9-126">Die <xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> Methode muss durch die entsprechenden Schlüsselspeicheranbieter implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="177b9-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="177b9-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> Verwenden Sie einen asymmetrischen Schlüssel von einem Schlüsselpfad und signieren Sie die Metadaten des `masterKeyPath`, `allowEnclaveComputations`, und "ProviderName".</span><span class="sxs-lookup"><span data-stu-id="177b9-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="177b9-128">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="177b9-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
        <Parameter Name="signature" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="177b9-129">Der vollständige Pfad eines asymmetrischen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-129">The complete path of an asymmetric key.</span></span> <span data-ttu-id="177b9-130">Das Pfadformat ist spezifisch für einen Schlüsselspeicheranbieter.</span><span class="sxs-lookup"><span data-stu-id="177b9-130">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="177b9-131">Ein boolescher Wert, der angibt, ob dieser Schlüssel an eine vertrauenswürdige Enklave gesendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="177b9-131">A boolean that indicates if this key can be sent to the trusted enclave.</span></span></param>
        <param name="signature"><span data-ttu-id="177b9-132">Die Signatur für die Metadaten des Hauptschlüssels.</span><span class="sxs-lookup"><span data-stu-id="177b9-132">Master key metadata signature.</span></span></param>
        <summary><span data-ttu-id="177b9-133">Diese Funktion muss vom entsprechenden Schlüsselspeicheranbieter implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="177b9-133">This function must be implemented by the corresponding Key Store providers.</span></span> <span data-ttu-id="177b9-134">Diese Funktion muss einen asymmetrischen Schlüssel verwenden, der von einem Schlüsselpfad bestimmt wird, und die Metadaten des Hauptschlüssels signieren, die aus folgenden Elementen bestehen: masterKeyPath, allowEnclaveComputations, providerName.</span><span class="sxs-lookup"><span data-stu-id="177b9-134">This function should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span></span></summary>
        <returns><span data-ttu-id="177b9-135">Ein boolescher Wert, der angibt, ob die Metadaten des Hauptschlüssels anhand der bereitgestellten Signatur verifiziert werden können.</span><span class="sxs-lookup"><span data-stu-id="177b9-135">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>