<Type Name="SqlClientPermission" FullName="System.Data.SqlClient.SqlClientPermission">
  <TypeSignature Language="C#" Value="public sealed class SqlClientPermission : System.Data.Common.DBDataPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlClientPermission extends System.Data.Common.DBDataPermission" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientPermission&#xA;Inherits DBDataPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientPermission sealed : System::Data::Common::DBDataPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DBDataPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1d98c-101">Ermöglicht dem .NET Framework-Datenanbieter für SQL Server sicherzustellen, dass nur Benutzer mit der entsprechenden Sicherheitsebene auf eine Datenquelle zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="1d98c-101">Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d98c-102">Die <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Eigenschaft hat Vorrang vor den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1d98c-102">The <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="1d98c-103">Deshalb, wenn Sie festlegen, <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> auf `false`, müssen Sie auch festlegen <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> zu `false` um zu verhindern, dass einen Benutzer eine Verbindung mit einem leeren Kennwort vornehmen.</span><span class="sxs-lookup"><span data-stu-id="1d98c-103">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d98c-104">Bei Verwendung der Codezugriffsberechtigungen für ADO.NET ist die korrekte Vorgehensweise mit vom restriktivsten Fall (gar keine Berechtigungen) beginnen, und fügen Sie dann auf die spezifischen Berechtigungen, die für die Aufgabe erforderlich sind, die der Code durchführen muss.</span><span class="sxs-lookup"><span data-stu-id="1d98c-104">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="1d98c-105">Die entgegengesetzten, alle Berechtigungen zu gewähren und dann nur eine bestimmte Berechtigung ist dagegen unsicher, da es viele Möglichkeiten gibt auszudrücken, die gleiche Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1d98c-105">The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="1d98c-106">Wenn Sie z. B. alle Berechtigungen zulassen und dann die Verwendung der Verbindungszeichenfolge "server=someserver" zu verweigern versuchen, wäre die Zeichenfolge "server=someserver.mycompany.com" nach wie vor zulässig.</span><span class="sxs-lookup"><span data-stu-id="1d98c-106">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="1d98c-107">Wenn Sie hingegen immer ohne jede Berechtigung beginnen, sinkt die Gefahr, dass der Berechtigungssatz Lücken enthält.</span><span class="sxs-lookup"><span data-stu-id="1d98c-107">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d98c-108">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlClientPermission" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1d98c-108">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission() has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d98c-109">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlClientPermission" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1d98c-109">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1d98c-110">Einer der <see cref="T:System.Security.Permissions.PermissionState" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="1d98c-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="1d98c-111">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlClientPermission" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1d98c-111">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state, bool allowBlankPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState, allowBlankPassword As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state, bool allowBlankPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
        <Parameter Name="allowBlankPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1d98c-112">Einer der <see cref="T:System.Security.Permissions.PermissionState" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="1d98c-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <param name="allowBlankPassword"><span data-ttu-id="1d98c-113">Gibt an, ob ein leeres Kennwort zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="1d98c-113">Indicates whether a blank password is allowed.</span></span></param>
        <summary><span data-ttu-id="1d98c-114">Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlClientPermission" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1d98c-114">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d98c-115">Die <xref:System.Security.Permissions.PermissionState> Enumeration hat Vorrang vor den <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1d98c-115">The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="1d98c-116">Deshalb, wenn Sie festlegen, <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> auf `false`, müssen Sie auch festlegen <xref:System.Security.Permissions.PermissionState> zu `None` um zu verhindern, dass einen Benutzer eine Verbindung mit einem leeren Kennwort vornehmen.</span><span class="sxs-lookup"><span data-stu-id="1d98c-116">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.</span></span> <span data-ttu-id="1d98c-117">Das Beispiel mithilfe von sicherheitsforderungen, finden Sie unter [Codezugriffssicherheit und ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span><span class="sxs-lookup"><span data-stu-id="1d98c-117">For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(string connectionString, string restrictions, valuetype System.Data.KeyRestrictionBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (connectionString As String, restrictions As String, behavior As KeyRestrictionBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::String ^ connectionString, System::String ^ restrictions, System::Data::KeyRestrictionBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="restrictions" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.KeyRestrictionBehavior" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="1d98c-118">Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1d98c-118">The connection string.</span></span></param>
        <param name="restrictions"><span data-ttu-id="1d98c-119">Die Schlüsseleinschränkungen.</span><span class="sxs-lookup"><span data-stu-id="1d98c-119">The key restrictions.</span></span></param>
        <param name="behavior"><span data-ttu-id="1d98c-120">Eine der <see cref="T:System.Data.KeyRestrictionBehavior" />-Enumerationen.</span><span class="sxs-lookup"><span data-stu-id="1d98c-120">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</span></span></param>
        <summary><span data-ttu-id="1d98c-121">Fügt im <see cref="T:System.Data.SqlClient.SqlClientPermission" />-Objekt eine neue Verbindungszeichenfolge und einen Satz beschränkter Schlüsselwörter hinzu.</span><span class="sxs-lookup"><span data-stu-id="1d98c-121">Adds a new connection string and a set of restricted keywords to the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d98c-122">Verwenden Sie diese Methode so konfigurieren Sie die Verbindungszeichenfolgen durch einen bestimmten Berechtigungsobjekt zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="1d98c-122">Use this method to configure which connection strings are allowed by a particular permission object.</span></span> <span data-ttu-id="1d98c-123">Verwenden Sie z. B. das folgende Codefragment auf, wenn Sie nur eine bestimmte Verbindungszeichenfolge und nichts anderes gestatten möchten:</span><span class="sxs-lookup"><span data-stu-id="1d98c-123">For example, use the following code fragment if you want to only allow a specific connection string and nothing else:</span></span>  
  
 `permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="1d98c-124">Im folgende Beispiel kann Verbindungszeichenfolgen, die eine beliebige Datenbank verwenden, aber nur auf dem Server mit dem Namen "EigenerServer", und eine beliebige Kombination von Benutzer und Kennwort und keine anderen Schlüsselwörter für Verbindungszeichenfolgen mit:</span><span class="sxs-lookup"><span data-stu-id="1d98c-124">The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:</span></span>  
  
 `permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="1d98c-125">Im folgenden Beispiel wird ein Failoverpartner, die verwendet werden kann, bei der Verbindung von Servern, die für die datenbankspiegelung konfiguriert erlaubt aber verwendet dasselbe Szenario wie oben beschrieben:</span><span class="sxs-lookup"><span data-stu-id="1d98c-125">The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:</span></span>  
  
 `permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
> [!NOTE]
>  <span data-ttu-id="1d98c-126">Bei Verwendung der Codezugriffsberechtigungen für ADO.NET ist die korrekte Vorgehensweise mit vom restriktivsten Fall (gar keine Berechtigungen) beginnen, und fügen Sie dann auf die spezifischen Berechtigungen, die für die Aufgabe erforderlich sind, die der Code durchführen muss.</span><span class="sxs-lookup"><span data-stu-id="1d98c-126">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="1d98c-127">Die entgegengesetzten, alle Berechtigungen zu gewähren und dann versucht wird, eine bestimmte Berechtigung zu verweigern ist dagegen unsicher, da es viele Möglichkeiten gibt auszudrücken, die gleiche Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1d98c-127">The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="1d98c-128">Wenn Sie z. B. alle Berechtigungen zulassen und dann die Verwendung der Verbindungszeichenfolge "server=someserver" zu verweigern versuchen, wäre die Zeichenfolge "server=someserver.mycompany.com" nach wie vor zulässig.</span><span class="sxs-lookup"><span data-stu-id="1d98c-128">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="1d98c-129">Wenn Sie hingegen immer ohne jede Berechtigung beginnen, sinkt die Gefahr, dass der Berechtigungssatz Lücken enthält.</span><span class="sxs-lookup"><span data-stu-id="1d98c-129">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d98c-130">Gibt die <see cref="T:System.Data.SqlClient.SqlClientPermission" /> als <see cref="T:System.Security.IPermission" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1d98c-130">Returns the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.</span></span></summary>
        <returns><span data-ttu-id="1d98c-131">Eine Kopie des aktuellen Berechtigungsobjekts.</span><span class="sxs-lookup"><span data-stu-id="1d98c-131">A copy of the current permission object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>