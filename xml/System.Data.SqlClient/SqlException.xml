<Type Name="SqlException" FullName="System.Data.SqlClient.SqlException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94492979f079f6807576086128a126bdf4fedc8a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36679956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlException extends System.Data.Common.DbException" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlException&#xA;Inherits DbException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlException sealed : System::Data::Common::DbException" />
  <TypeSignature Language="F#" Value="type SqlException = class&#xA;    inherit DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird erstellt, wenn der .NET Framework-Datenanbieter für SQL Server einen vom Server generierten Fehler trifft. (Clientseitige Fehler werden als standard common Language Runtime-Ausnahmen ausgelöst.) <xref:System.Data.SqlClient.SqlException> enthält immer mindestens eine Instanz von <xref:System.Data.SqlClient.SqlError>.  
  
 Nachrichten, die mit einen Schweregrad von 10 oder darunter verfügen dienen zur Information und deuten auf Probleme hin, die durch fehlerhafte Informationen, mit denen ein Benutzer hat verursacht. Schweregrade von 11 bis 16 werden vom Benutzer generiert und können vom Benutzer korrigiert werden. Schweregrade von 17 bis 25 zeigen Software- oder Hardwarefehler an. Wenn ein Schweregrad 17, 18 oder 19 Fehler wird Sie weiterarbeiten können, obwohl Sie zum Ausführen einer bestimmten Anweisung möglicherweise nicht.  
  
 Die <xref:System.Data.SqlClient.SqlConnection> bleibt hergestellt, wenn der Schweregrad 19 oder darunter beträgt. Wenn der Schweregrad 20 oder größer ist, schließt der Server normalerweise die <xref:System.Data.SqlClient.SqlConnection>. Die Benutzer können die Verbindung aber erneut öffnen und fortfahren. In beiden Fällen wird von der Methode, die den Befehl ausführt, eine <xref:System.Data.SqlClient.SqlException> generiert.  
  
 Informationen zu den Warnungen und sonstige Meldungen, die von SQL Server gesendet werden finden Sie im Abschnitt Problembehandlung der SQL Server-Onlinedokumentation. Die <xref:System.Data.SqlClient.SqlException> -Klasse Zuordnungen in SQL Server-Schweregrad.  
  
 Im folgenden finden allgemeine Informationen zur Behandlung von Ausnahmen. Code sollte Abfangen von Ausnahmen, um zu verhindern, dass die Anwendung abstürzt und ermöglichen, eine entsprechende Fehlermeldung dem Benutzer angezeigt.  Sie können Datenbanktransaktionen verwenden, um sicherzustellen, dass die Daten unabhängig davon, was, in der Clientanwendung geschieht (einschließlich eines Absturzes) konsistent ist. Funktionen wie System.Transaction.TransactionScope oder die BeginTransaction-Methode (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection und System.Data.SqlClient.SqlConnection) stellen Sie sicher, konsistente Daten unabhängig von Ausnahmen vom Anbieter ausgelöst wird. Transaktionen können fehlschlagen, daher Fehler abgefangen und wiederholen Sie die Transaktion.  
  
 Beachten Sie, beginnend mit .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> können innere zurückgeben <xref:System.ComponentModel.Win32Exception>.  
  
 Exception-Klasse von einer .net Framework-Datenanbieter anbieterspezifischen Fehler meldet. Z. B. "System.Data.ODBC" OdbcException aufweist, "System.Data.OleDb" hat OleDbException und System.Data.SqlClient hat SqlException. Fangen Sie für das beste Maß Fehlerdetail diese Ausnahmen ab, und verwenden Sie die Elemente dieser Ausnahme-Klassen, um die Details des Fehlers zu erhalten.  
  
 Zusätzlich zu den Fehlern anbieterspezifischen können .NET Framework-Anbieter Datentypen wie z. B. System.OutOfMemoryException und System.Threading.ThreadAbortException .NET Framework-Ausnahmen auslösen. Wiederherstellung von folgenden Ausnahmen möglicherweise nicht möglich.  
  
 Ungültige Eingabe kann dazu führen, dass .NET Framework Data Provider-Typ zum Auslösen einer Ausnahme, z. B. System.ArgumentException oder System.IndexOutOfRangeException.  Aufrufen einer Methode zur falschen Zeit kann System.InvalidOperationException auslösen.  
  
 Im Allgemeinen schreiben also einen Ausnahmehandler, der alle Anbieter abfängt spezifischen Ausnahmen als auch Ausnahmen von der common Language Runtime.  Diese können wie folgt im Protokollstapel zugeordnet werden:  
  
```csharp  
try {  
   // code here  
}  
catch (SqlException odbcEx) {  
   // Handle more specific SqlException exception here.  
}  
catch (Exception ex) {  
   // Handle generic ones here.  
}  
  
```  
  
 Oder:  
  
```csharp  
try {  
   // code here  
}  
catch (Exception ex) {  
   if (ex is SqlException) {  
      // Handle more specific SqlException exception here.  
   }  
   else {  
      // Handle generic ones here.  
   }  
}  
  
```  
  
 Es ist auch möglich, bei .NET Framework Data Provider Methodenaufruf auf ein Thread des Threadpools mit kein Benutzercode auf dem Stapel fehl. In diesem Fall und asynchronen Methodenaufrufen verwenden, müssen Sie registrieren die <xref:System.AppDomain.UnhandledException> Ereignis, um diese Ausnahmen zu behandeln und Anwendungsabsturz zu vermeiden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlException> und zeigt dann die Ausnahme.  
  
 [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlError" />
    <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public byte Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Class" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Class { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.Class : byte" Usage="System.Data.SqlClient.SqlException.Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.</summary>
        <value>Ein Wert zwischen 1 und 25, der den Schweregrad des Fehlers angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachrichten, die mit einen Schweregrad von 10 oder darunter verfügen dienen zur Information und deuten auf Probleme hin, die durch fehlerhafte Informationen, mit denen ein Benutzer hat verursacht. Schweregrade von 11 bis 16 werden vom Benutzer generiert und können vom Benutzer korrigiert werden. Schweregrade von 17 bis 25 zeigen Software- oder Hardwarefehler an. Wenn ein Schweregrad 17, 18 oder 19 Fehler wird Sie weiterarbeiten können, obwohl Sie zum Ausführen einer bestimmten Anweisung möglicherweise nicht.  
  
 Die <xref:System.Data.SqlClient.SqlConnection> bleibt hergestellt, wenn der Schweregrad 19 oder darunter beträgt. Wenn der Schweregrad 20 oder größer ist, schließt der Server normalerweise die <xref:System.Data.SqlClient.SqlConnection>. Die Benutzer können die Verbindung aber erneut öffnen und fortfahren. In beiden Fällen wird von der Methode, die den Befehl ausführt, eine <xref:System.Data.SqlClient.SqlException> generiert.  
  
 Informationen zu den Warnungen und sonstige Meldungen, die von SQL Server gesendet werden finden Sie im Abschnitt Problembehandlung der SQL Server-Dokumentation.  
  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.Class%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the client connection ID. For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md).</summary>
        <value>Gibt die Clientverbindungs-ID.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Codebeispiel finden Sie unter <xref:System.Data.SqlClient.SqlException.ToString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As SqlErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlErrorCollection ^ Errors { System::Data::SqlClient::SqlErrorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Data.SqlClient.SqlErrorCollection" Usage="System.Data.SqlClient.SqlException.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of one or more <see cref="T:System.Data.SqlClient.SqlError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.</summary>
        <value>Die gesammelten Instanzen der dem <see cref="T:System.Data.SqlClient.SqlError" /> Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlErrorCollection> Klasse enthält immer mindestens eine Instanz von der <xref:System.Data.SqlClient.SqlError> Klasse.  
  
 Dies ist ein Wrapper für <xref:System.Data.SqlClient.SqlErrorCollection>. Weitere Informationen zu SQL Server-Datenbankmodul-Fehlern finden Sie in der SQL Server-Onlinedokumentation.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
        <altmember cref="T:System.Data.SqlClient.SqlError" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sqlException.GetObjectData (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetObjectData` legt die `SerializationInfo` mit allen Daten für das Ausnahmeobjekt fest, das für die Serialisierung vorgesehen ist. Während der Deserialisierung wird die Ausnahme aus der über den Stream übertragenen `SerializationInfo` wiederhergestellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="si" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Data.SqlClient.SqlException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.</summary>
        <value>Die Zeilennummer in der Transact-SQL-Befehlsbatch oder die gespeicherte Prozedur, der den Fehler generiert hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeile, die Nummerierung beginnt bei 1; Wenn 0 zurückgegeben wird, ist die Nummer der Zeile nicht anwendbar.  
  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.LineNumber%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Data.SqlClient.SqlException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Number" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Number : int" Usage="System.Data.SqlClient.SqlException.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a number that identifies the type of error.</summary>
        <value>Die Nummer, die den Fehlertyp angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.Number%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft. Weitere Informationen zu SQL Server-Datenbankmodul-Fehlern finden Sie in der SQL Server-Onlinedokumentation.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Procedure">
      <MemberSignature Language="C#" Value="public string Procedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Procedure" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Procedure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Procedure As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Procedure { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Procedure : string" Usage="System.Data.SqlClient.SqlException.Procedure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</summary>
        <value>Der Name der gespeicherten Prozedur oder des RPCs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.Procedure%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Server { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : string" Usage="System.Data.SqlClient.SqlException.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the computer that is running an instance of SQL Server that generated the error.</summary>
        <value>Der Name des Computers mit einer Instanz von SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.Server%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Data.SqlClient.SqlException.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the provider that generated the error.</summary>
        <value>Der Name des Providers, der den Fehler generiert hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.Source%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public byte State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte State { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.State : byte" Usage="System.Data.SqlClient.SqlException.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message. For more information about how to decode these values, see SQL Server Books Online.</summary>
        <value>Die Anzahl, die den Fehlercode darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Wrapper für die <xref:System.Data.SqlClient.SqlError.State%2A> Eigenschaft des ersten <xref:System.Data.SqlClient.SqlError> in der <xref:System.Data.SqlClient.SqlException.Errors%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt jede <xref:System.Data.SqlClient.SqlError> innerhalb der <xref:System.Data.SqlClient.SqlErrorCollection> Auflistung.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current <see cref="T:System.Data.SqlClient.SqlException" /> object, and includes the client connection ID (for more information, see <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />).</summary>
        <returns>A string that represents the current <see cref="T:System.Data.SqlClient.SqlException" /> object.<see cref="T:System.String" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden C#-Beispiel zeigt, wie ein Verbindungsversuch mit einem gültigen Server jedoch nicht vorhandene Datenbank bewirkt, dass eine <xref:System.Data.SqlClient.SqlException>, darunter die Clientverbindungs-ID:  
  
```  
using System.Data.SqlClient;  
using System;  
  
public class A {  
   public static void Main() {  
      SqlConnection connection = new SqlConnection();  
      connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true";  
      try {  
         connection.Open();  
      }  
      catch (SqlException p) {  
         Console.WriteLine("{0}", p.ClientConnectionId);  
         Console.WriteLine("{0}", p.ToString());  
      }  
      connection.Close();  
   }  
}  
```  
  
 Im folgende Visual Basic-Beispiel ist funktionell mit dem vorherigen Beispiel (c#):  
  
```  
Imports System.Data.SqlClient  
Imports System  
  
Module Module1  
  
    Sub Main()  
        Dim connection As New SqlConnection()  
        connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true"  
        Try  
            connection.Open()  
        Catch p As SqlException  
            Console.WriteLine("{0}", p.ClientConnectionId)  
            Console.WriteLine("{0}", p.ToString())  
        End Try  
        connection.Close()  
    End Sub  
  
End Module  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>