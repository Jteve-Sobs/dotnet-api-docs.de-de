<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="067e363bab7745bac3ff59e43cd945aa462eded5" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82476311" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.ComponentModel.Component, ICloneable, IDisposable, System.Data.IDbConnection" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.ComponentModel.Component implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits Component&#xA;Implements ICloneable, IDbConnection, IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::ComponentModel::Component, ICloneable, IDisposable, System::Data::IDbConnection" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit Component&#xA;    interface IDbConnection&#xA;    interface IDisposable&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlConnection extends System.Data.Common.DbConnection implements class System.ICloneable" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Verbindung zu einer SQL Server-Datenbank dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Ein <xref:System.Data.SqlClient.SqlConnection>-Objekt stellt eine eindeutige Sitzung für eine SQL Server Datenquelle dar. Bei einem Client/Server-Datenbanksystem entspricht dies einer Netzwerkverbindung mit dem Server. <xref:System.Data.SqlClient.SqlConnection> wird in Verbindung mit <xref:System.Data.SqlClient.SqlDataAdapter> und <xref:System.Data.SqlClient.SqlCommand> verwendet, um die Leistung beim Herstellen einer Verbindung mit einer Microsoft SQL Server Datenbank zu steigern. Verwenden Sie für alle SQL Server Produkte von Drittanbietern und andere OLE DB unterstützte Datenquellen <xref:System.Data.OleDb.OleDbConnection>.

 Wenn Sie eine Instanz von <xref:System.Data.SqlClient.SqlConnection>erstellen, werden alle Eigenschaften auf die Anfangswerte festgelegt. Eine Liste dieser Werte finden Sie im <xref:System.Data.SqlClient.SqlConnection>-Konstruktor.

 Eine Liste der Schlüsselwörter in einer Verbindungs Zeichenfolge finden Sie unter <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.

 Wenn das <xref:System.Data.SqlClient.SqlConnection> den Gültigkeitsbereich verlässt, wird es nicht geschlossen. Daher müssen Sie die Verbindung explizit schließen, indem Sie `Close` oder `Dispose`aufrufen. `Close` und `Dispose` sind funktional äquivalent. Wenn der Wert für das Verbindungspooling `Pooling` auf `true` oder `yes`festgelegt ist, wird die zugrunde liegende Verbindung an den Verbindungspool zurückgegeben. Wenn `Pooling` dagegen auf `false` oder `no`festgelegt ist, wird die zugrunde liegende Verbindung mit dem Server tatsächlich geschlossen.

> [!NOTE]
>  Wenn eine Verbindung aus dem Verbindungspool abgerufen oder an diesen zurückgegeben wird, werden keine Anmelde- und Abmeldeereignisse auf dem Server ausgelöst, da die Verbindung bei der Rückgabe an den Verbindungspool nicht geschlossen wird. Weitere Informationen finden Sie unter [SQL Server-Verbindungspooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).

 Um sicherzustellen, dass Verbindungen immer geschlossen werden, öffnen Sie die Verbindung in einem `using` Block, wie im folgenden Code Fragment dargestellt. Dadurch wird sichergestellt, dass die Verbindung automatisch geschlossen wird, wenn der Code den Block verlässt.

```vb
Using connection As New SqlConnection(connectionString)
    connection.Open()
    ' Do work here; connection closed on following line.
End Using

```

```csharp
using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        // Do work here; connection closed on following line.
    }
```

> [!NOTE]
>  Zum Bereitstellen von Hochleistungsanwendungen müssen Sie das Verbindungspooling verwenden. Wenn Sie die .NET Framework Datenanbieter für SQL Server verwenden, müssen Sie das Verbindungspooling nicht aktivieren, da der Anbieter dies automatisch verwaltet, auch wenn Sie einige Einstellungen ändern können. Weitere Informationen finden Sie unter [SQL Server-Verbindungspooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).

 Wenn ein <xref:System.Data.SqlClient.SqlException> von der Methode generiert wird, die eine <xref:System.Data.SqlClient.SqlCommand>ausführt, bleibt der <xref:System.Data.SqlClient.SqlConnection> geöffnet, wenn der Schweregrad 19 oder kleiner ist. Wenn der Schweregrad 20 oder größer ist, schließt der Server normalerweise den <xref:System.Data.SqlClient.SqlConnection>. Die Benutzer können die Verbindung aber erneut öffnen und fortfahren.

 Eine Anwendung, die eine Instanz des <xref:System.Data.SqlClient.SqlConnection> Objekts erstellt, kann erfordern, dass alle direkten und indirekten Aufrufer über ausreichende Berechtigungen für den Code verfügen, indem deklarative oder imperative Sicherheitsanforderungen festgelegt werden. <xref:System.Data.SqlClient.SqlConnection> nimmt Sicherheitsanforderungen mithilfe des <xref:System.Data.SqlClient.SqlClientPermission> Objekts an. Benutzer können überprüfen, ob Ihr Code über ausreichende Berechtigungen verfügt, indem Sie das <xref:System.Data.SqlClient.SqlClientPermissionAttribute>-Objekt verwenden. Benutzer und Administratoren können auch das [Caspol. exe (Code Access Security Policy-Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) verwenden, um die Sicherheitsrichtlinien auf Computer-, Benutzer-und Unternehmensebene zu ändern. Weitere Informationen finden Sie unter [Sicherheit in .NET](~/docs/standard/security/index.md). Ein Beispiel für die Verwendung von Sicherheitsanforderungen finden Sie unter [Code Zugriffssicherheit und ADO.net](~/docs/framework/data/adonet/code-access-security.md).

 Weitere Informationen zur Behandlung von Warn-und Informationsmeldungen vom Server finden Sie unter [Verbindungs Ereignisse](~/docs/framework/data/adonet/connection-events.md). Weitere Informationen zu SQL Server Engine-Fehlern und-Fehlermeldungen finden Sie unter [Datenbank-Engine Ereignisse und Fehler](/sql/relational-databases/errors-events/database-engine-events-and-errors).

> [!CAUTION]
>  Sie können TCP anstelle von Shared Memory erzwingen. Dies erreichen Sie, indem Sie TCP: dem Servernamen in der Verbindungs Zeichenfolge voranstellen, oder Sie können localhost verwenden.



## Examples
 Im folgenden Beispiel werden eine-<xref:System.Data.SqlClient.SqlCommand> und eine-<xref:System.Data.SqlClient.SqlConnection>erstellt. Der <xref:System.Data.SqlClient.SqlConnection> wird geöffnet und als <xref:System.Data.SqlClient.SqlCommand.Connection%2A> für die <xref:System.Data.SqlClient.SqlCommand>festgelegt. Im Beispiel wird dann <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>aufgerufen. Zu diesem Zweck wird dem <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> eine Verbindungs Zeichenfolge und eine Abfrage Zeichenfolge, die eine [!INCLUDE[tsql](~/includes/tsql-md.md)] INSERT-Anweisung ist, übermittelt. Die Verbindung wird automatisch geschlossen, wenn der Code den Using-Block verlässt.

 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlConnection" />-Klasse.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlConnection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn eine neue Instanz von <xref:System.Data.SqlClient.SqlConnection> erstellt wird, werden die Lese-/Schreibeigenschaften auf die folgenden Anfangswerte festgelegt, es sei denn, Sie werden ausdrücklich mit den zugehörigen Schlüsselwörtern in der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft festgelegt.

|Eigenschaften|Anfangswert|
|----------------|-------------------|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|leere Zeichenfolge ("")|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|leere Zeichenfolge ("")|
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|leere Zeichenfolge ("")|

 Sie können den Wert für diese Eigenschaften nur ändern, indem Sie die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft verwenden. Die <xref:System.Data.SqlClient.SqlConnectionStringBuilder>-Klasse stellt Funktionen zum Erstellen und Verwalten der Inhalte von Verbindungs Zeichenfolgen bereit.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection>erstellt und geöffnet.

 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Die Verbindung, mit der die SQL Server-Datenbank geöffnet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlConnection" />-Klasse, sofern eine Zeichenfolge mit der Verbindungszeichenfolge angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn eine neue Instanz von <xref:System.Data.SqlClient.SqlConnection> erstellt wird, werden die Lese-/Schreibeigenschaften auf die folgenden Anfangswerte festgelegt, es sei denn, Sie werden ausdrücklich mit den zugehörigen Schlüsselwörtern in der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft festgelegt.

|Eigenschaften|Anfangswert|
|----------------|-------------------|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|leere Zeichenfolge ("")|
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|leere Zeichenfolge ("")|

 Sie können den Wert für diese Eigenschaften nur ändern, indem Sie die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft verwenden. Die <xref:System.Data.SqlClient.SqlConnection>-Klasse stellt Funktionen zum Erstellen und Verwalten der Inhalte von Verbindungs Zeichenfolgen bereit.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection>erstellt und geöffnet.

 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Verwenden der .NET Framework Datenanbieter für SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Eine Verbindungszeichenfolge, die keine der folgenden Schlüsselwörter für Verbindungszeichenfolgen verwendet: <see langword="Integrated Security = true" />, <see langword="UserId" /> oder <see langword="Password" />; oder die <see langword="ContextConnection = true" /> nicht verwendet.</param>
        <param name="credential">Ein <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt. Wenn <paramref name="credential" /> 0 (null) ist, dann ist <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> zu <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" /> funktional äquivalent.</param>
        <param name="cred">To be added.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlConnection" />-Klasse mit einer Verbindungszeichenfolge, die weder <see langword="Integrated Security = true" /> noch ein <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt verwendet, das die Benutzer-ID und das Kennwort enthält.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zugriffstoken für die Verbindung ab oder legt es fest.</summary>
        <value>Das Zugriffstoken für die Verbindung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginDbTransaction (isolationLevel As IsolationLevel) As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet eine Datenbanktransaktion.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet eine Datenbanktransaktion.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Befehl wird der SQL Server Implementierung von BEGIN TRANSACTION zugeordnet.

 Sie müssen die Transaktion mithilfe der <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>-oder <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode explizit ausführen oder zurücksetzen. Um sicherzustellen, dass die .NET Framework Datenanbieter für SQL Server Transaktions Verwaltungsmodell ordnungsgemäß ausgeführt wird, vermeiden Sie die Verwendung anderer Transaktions Verwaltungsmodelle, wie z. b. die von SQL Server bereitgestellte.

> [!NOTE]
>  Wenn Sie keine Isolationsstufe angeben, wird die Standard Isolationsstufe verwendet. Wenn Sie eine Isolationsstufe mit der <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>-Methode angeben möchten, verwenden Sie die-Überladung, die den Parameter `iso` (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>) annimmt. Die Isolationsstufe, die für eine Transaktion festgelegt wurde, wird nach Abschluss der Transaktion und bis zum Schließen oder verwerfen der Verbindung beibehalten. Wenn die Isolationsstufe in einer Datenbank, in der die Momentaufnahme Isolationsstufe nicht aktiviert ist, auf **Snapshot** festgelegt wird, wird keine Ausnahme ausgelöst. Die Transaktion wird mit der Standard Isolationsstufe abgeschlossen.

> [!CAUTION]
>  Wenn eine Transaktion gestartet wird und auf dem Server ein Fehler auf der Ebene 16 oder höher auftritt, wird für die Transaktion erst dann ein Rollback ausgeführt, wenn die <xref:System.Data.SqlClient.SqlDataReader.Read%2A>-Methode aufgerufen wird. Für **ExecuteReader**wird keine Ausnahme ausgelöst.

> [!CAUTION]
>  Wenn die Abfrage eine große Datenmenge zurückgibt und `BeginTransaction`aufruft, wird eine <xref:System.Data.SqlClient.SqlException> ausgelöst, da SQL Server bei der Verwendung von Mars keine parallelen Transaktionen zulässt. Um dieses Problem zu vermeiden, ordnen Sie eine Transaktion immer dem Befehl, der Verbindung oder beiden zu, bevor Leser offen sind.

 Weitere Informationen zu SQL Server Transaktionen finden Sie unter [Transaktionen (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).



## Examples
 Im folgenden Beispiel werden eine-<xref:System.Data.SqlClient.SqlConnection> und eine-<xref:System.Data.SqlClient.SqlTransaction>erstellt. Außerdem wird veranschaulicht, wie die Methoden <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> verwendet werden.

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Parallele Transaktionen sind bei Verwendung von MARS (Multiple Active Result Sets) nicht zulässig.</exception>
        <exception cref="T:System.InvalidOperationException">Parallele Transaktionen werden nicht unterstützt.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen und Parallelität</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Die Isolationsstufe, unter der die Transaktion ausgeführt werden soll.</param>
        <summary>Startet eine Datenbanktransaktion mit der angegebenen Isolationsstufe.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Befehl wird der SQL Server Implementierung von BEGIN TRANSACTION zugeordnet.

 Sie müssen die Transaktion mithilfe der <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>-oder <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode explizit ausführen oder zurücksetzen. Um sicherzustellen, dass die .NET Framework Datenanbieter für SQL Server Transaktions Verwaltungsmodell ordnungsgemäß ausgeführt wird, vermeiden Sie die Verwendung anderer Transaktions Verwaltungsmodelle, wie z. b. die von SQL Server bereitgestellte.

> [!NOTE]
> Nachdem für eine Transaktion ein Commit oder ein Rollback ausgeführt wurde, wird die Isolationsstufe der Transaktion für alle nachfolgenden Befehle im Autocommitmodus (standardmäßig SQL Server) beibehalten. Dies kann zu unerwarteten Ergebnissen führen, z. b. eine Isolationsstufe der wiederholbaren Lese Speicherung und Sperrung anderer Benutzer aus einer Zeile. Um die Isolationsstufe auf den Standardwert zurückzusetzen (Read Commit), führen Sie die [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION Isolation Level Read COMMIT-Anweisung aus, oder wenden Sie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> gefolgt von <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>an. Weitere Informationen zu SQL Server Isolations Stufen finden Sie unter [Transaktions Isolations Stufen](/sql/t-sql/language-elements/transaction-isolation-levels).

 Weitere Informationen zu SQL Server Transaktionen finden Sie unter [Transaktionen (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).

> [!CAUTION]
>  Wenn die Abfrage eine große Datenmenge zurückgibt und `BeginTransaction`aufruft, wird eine <xref:System.Data.SqlClient.SqlException> ausgelöst, da SQL Server bei der Verwendung von Mars keine parallelen Transaktionen zulässt. Um dieses Problem zu vermeiden, ordnen Sie eine Transaktion immer dem Befehl, der Verbindung oder beiden zu, bevor Leser offen sind.



## Examples
 Im folgenden Beispiel werden eine-<xref:System.Data.SqlClient.SqlConnection> und eine-<xref:System.Data.SqlClient.SqlTransaction>erstellt. Außerdem wird veranschaulicht, wie die Methoden <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> verwendet werden.

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Parallele Transaktionen sind bei Verwendung von MARS (Multiple Active Result Sets) nicht zulässig.</exception>
        <exception cref="T:System.InvalidOperationException">Parallele Transaktionen werden nicht unterstützt.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Verwenden der .NET Framework Datenanbieter für SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Der Name der Transaktion.</param>
        <summary>Startet eine Datenbanktransaktion mit dem angegebenen Transaktionsnamen.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Befehl wird der SQL Server Implementierung von BEGIN TRANSACTION zugeordnet.

 Die Länge des `transactionName`-Parameters darf nicht länger als 32 Zeichen sein. Andernfalls wird eine Ausnahme ausgelöst.

 Der Wert im `transactionName`-Parameter kann in späteren Aufrufen von <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> und im `savePoint`-Parameter der <xref:System.Data.SqlClient.SqlTransaction.Save%2A>-Methode verwendet werden.

 Sie müssen die Transaktion mithilfe der <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>-oder <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode explizit ausführen oder zurücksetzen. Um sicherzustellen, dass die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Datenanbieter für SQL Server Transaktions Verwaltungsmodell ordnungsgemäß ausgeführt wird, vermeiden Sie die Verwendung anderer Transaktions Verwaltungsmodelle, wie z. b. die von SQL Server bereitgestellte.

 Weitere Informationen zu SQL Server Transaktionen finden Sie unter [Transaktionen (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).

> [!CAUTION]
>  Wenn die Abfrage eine große Datenmenge zurückgibt und `BeginTransaction`aufruft, wird eine <xref:System.Data.SqlClient.SqlException> ausgelöst, da SQL Server bei der Verwendung von Mars keine parallelen Transaktionen zulässt. Um dieses Problem zu vermeiden, ordnen Sie eine Transaktion immer dem Befehl, der Verbindung oder beiden zu, bevor Leser offen sind.



## Examples
 Im folgenden Beispiel werden eine-<xref:System.Data.SqlClient.SqlConnection> und eine-<xref:System.Data.SqlClient.SqlTransaction>erstellt. Außerdem wird veranschaulicht, wie die Methoden <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> verwendet werden.

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Parallele Transaktionen sind bei Verwendung von MARS (Multiple Active Result Sets) nicht zulässig.</exception>
        <exception cref="T:System.InvalidOperationException">Parallele Transaktionen werden nicht unterstützt.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Verwenden der .NET Framework Datenanbieter für SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Die Isolationsstufe, unter der die Transaktion ausgeführt werden soll.</param>
        <param name="transactionName">Der Name der Transaktion.</param>
        <summary>Startet eine Datenbanktransaktion mit dem angegebenen Isolationsgrad und Transaktionsnamen.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Befehl wird der SQL Server Implementierung von BEGIN TRANSACTION zugeordnet.

 Der Wert im `transactionName`-Parameter kann in späteren Aufrufen von <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> und im `savePoint`-Parameter der <xref:System.Data.SqlClient.SqlTransaction.Save%2A>-Methode verwendet werden.

 Sie müssen die Transaktion mithilfe der <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>-oder <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode explizit ausführen oder zurücksetzen. Um sicherzustellen, dass das SQL Server Transaktions Verwaltungsmodell ordnungsgemäß ausgeführt wird, vermeiden Sie die Verwendung anderer Transaktions Verwaltungsmodelle, wie z. b. das von SQL Server bereitgestellte.

> [!NOTE]
>  Nachdem für eine Transaktion ein Commit oder ein Rollback ausgeführt wurde, wird die Isolationsstufe der Transaktion für alle nachfolgenden Befehle im Autocommitmodus (standardmäßig SQL Server) beibehalten. Dies kann zu unerwarteten Ergebnissen führen, z. b. eine Isolationsstufe der wiederholbaren Lese Speicherung und Sperrung anderer Benutzer aus einer Zeile. Um die Isolationsstufe auf den Standardwert zurückzusetzen (Read Commit), führen Sie die [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION Isolation Level Read COMMIT-Anweisung aus, oder wenden Sie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> gefolgt von <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>an. Weitere Informationen zu SQL Server Isolations Stufen finden Sie unter [Transaktions Isolations Stufen](/sql/t-sql/language-elements/transaction-isolation-levels).

 Weitere Informationen zu SQL Server Transaktionen finden Sie unter [Transaktionen (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).

> [!CAUTION]
>  Wenn die Abfrage eine große Datenmenge zurückgibt und `BeginTransaction`aufruft, wird eine <xref:System.Data.SqlClient.SqlException> ausgelöst, da SQL Server bei der Verwendung von Mars keine parallelen Transaktionen zulässt. Um dieses Problem zu vermeiden, ordnen Sie eine Transaktion immer dem Befehl, der Verbindung oder beiden zu, bevor Leser offen sind.



## Examples
 Im folgenden Beispiel werden eine-<xref:System.Data.SqlClient.SqlConnection> und eine-<xref:System.Data.SqlClient.SqlTransaction>erstellt. Außerdem wird veranschaulicht, wie die Methoden <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> verwendet werden.

 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Parallele Transaktionen sind bei Verwendung von MARS (Multiple Active Result Sets) nicht zulässig.</exception>
        <exception cref="T:System.InvalidOperationException">Parallele Transaktionen werden nicht unterstützt.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Verwenden der .NET Framework Datenanbieter für SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void ChangeDatabase (string database);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeDatabase(string database) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeDatabase (database As String)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ChangeDatabase(System::String ^ database);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member ChangeDatabase : string -&gt; unit&#xA;override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Der Name der Datenbank, die anstelle der aktuellen Datenbank verwendet werden soll.</param>
        <summary>Ändert die aktuelle Datenbank für eine offene <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der im `database`-Parameter angegebene Wert muss ein gültiger Datenbankname sein. Der `database`-Parameter darf keinen NULL-Wert, keine leere Zeichenfolge oder eine Zeichenfolge enthalten, die nur Leerzeichen enthält.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und einige der schreibgeschützten Eigenschaften angezeigt.

 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Datenbankname ist ungültig.</exception>
        <exception cref="T:System.InvalidOperationException">Die Verbindung ist nicht geöffnet.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Die Datenbank kann nicht geändert werden.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ändert das SQL Server-Kennwort.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Verbindungszeichenfolge mit den notwendigen Informationen, um eine Verbindung mit dem gewünschten Server herzustellen. Die Verbindungszeichenfolge muss die Benutzer-ID und das aktuelle Kennwort enthalten.</param>
        <param name="newPassword">Das neue anzugebende Kennwort. Das Kennwort muss allen auf dem Server festgelegten Sicherheitsrichtlinien für Kennwörter entsprechen, einschließlich der Mindestlänge, erforderlicher Sonderzeichen usw.</param>
        <summary>Ändert das SQL Server-Kennwort für den Benutzer, der in der Verbindungszeichenfolge zum bereitgestellten neuen Kennwort angegeben ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie SQL Server unter Windows Server verwenden, können Entwickler die Funktionen nutzen, die es der Client Anwendung ermöglichen, das aktuelle und ein neues Kennwort zur Verfügung zu stellen, um das vorhandene Kennwort zu ändern. Anwendungen können Funktionen implementieren, wie z. b. den Benutzer zur Eingabe eines neuen Kennworts während der ersten Anmeldung auffordern, wenn die alte Anmeldung abgelaufen ist. dieser Vorgang kann ohne Eingreifen des Administrators abgeschlossen werden.

 Die <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A>-Methode ändert das SQL Server Kennwort für den Benutzer, der im angegebenen `connectionString`-Parameter angegeben ist, in den Wert, der im `newPassword`-Parameter angegeben wird. Wenn die Verbindungs Zeichenfolge die Option für die integrierte Sicherheit enthält (d. h. "Integrated Security = true" oder die entsprechende), wird eine Ausnahme ausgelöst.

 Um festzustellen, ob das Kennwort abgelaufen ist, löst der Aufruf der <xref:System.Data.SqlClient.SqlConnection.Open%2A>-Methode eine <xref:System.Data.SqlClient.SqlException>aus. Um anzugeben, dass das Kennwort, das in der Verbindungs Zeichenfolge enthalten ist, zurückgesetzt werden muss, enthält die <xref:System.Data.SqlClient.SqlException.Number%2A>-Eigenschaft für die Ausnahme den Statuswert 18487 oder 18488. Der erste Wert (18487) gibt an, dass das Kennwort abgelaufen ist und der zweite Wert (18488) angibt, dass das Kennwort vor der Anmeldung zurückgesetzt werden muss.

 Diese Methode öffnet eine eigene Verbindung mit dem Server, fordert die Kenn Wort Änderung an und schließt die Verbindung, sobald Sie abgeschlossen ist. Diese Verbindung wird nicht von der SQL Server Verbindungspool abgerufen oder an diesen zurückgegeben.



## Examples
 Im folgenden finden Sie ein einfaches Beispiel für das Ändern eines Kennworts:

```csharp
class Program {
   static void Main(string[] args) {
      System.Data.SqlClient.SqlConnection.ChangePassword(
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",
       "new_password");
   }
}

```

```vb
Module Module1
    Sub Main()
System.Data.SqlClient.SqlConnection.ChangePassword(
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",
       "new_password")
    End Sub
End Module

```

 Die folgende Konsolenanwendung veranschaulicht die Probleme, die beim Ändern des Kennworts eines Benutzers aufgetreten sind, da das aktuelle Kennwort abgelaufen ist.

 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Verbindungszeichenfolge enthält die Option, integrierte Sicherheit zu verwenden.

Oder

Das <paramref name="newPassword" /> ist länger als 128 Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException">Entweder der <paramref name="connectionString" />- oder der <paramref name="newPassword" />-Parameter ist gleich NULL.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Verbindungszeichenfolgen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Verwenden der .NET Framework Datenanbieter für SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Verbindungszeichenfolge mit den notwendigen Informationen, um eine Verbindung mit dem Server herzustellen. Die Verbindungszeichenfolge darf keines der folgenden Schlüsselwörter für Verbindungszeichenfolgen enthalten: <see langword="Integrated Security = true" />, <see langword="UserId" /> oder <see langword="Password" /> oder <see langword="ContextConnection = true" />.</param>
        <param name="credential">Ein <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt.</param>
        <param name="newPassword">Das neue Kennwort <paramref name="newPassword" /> muss schreibgeschützt sein. Das Kennwort muss auch allen auf dem Server festgelegten Sicherheitsrichtlinien für Kennwörter entsprechen, (zum Beispiel der Mindestlänge und erforderlicher Sonderzeichen).</param>
        <param name="newSecurePassword">Das neue Kennwort. <paramref name="newSecurePassword" /> muss schreibgeschützt sein. Das Kennwort muss auch allen auf dem Server festgelegten Sicherheitsrichtlinien für Kennwörter entsprechen, (zum Beispiel der Mindestlänge und erforderlicher Sonderzeichen).</param>
        <summary>Ändert das SQL Server-Kennwort für den Benutzer, der im <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt angegeben wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die Verbindungszeichenfolge enthält jede Kombination von <see langword="UserId" />, <see langword="Password" /> oder <see langword="Integrated Security=true" />.

- oder -

Die Verbindungszeichenfolge enthält <see langword="Context Connection=true" />.

- oder -

<paramref name="newSecurePassword" /> (oder <paramref name="newPassword" />) ist länger als 128 Zeichen.

- oder -

<paramref name="newSecurePassword" /> (oder <paramref name="newPassword" />) ist nicht schreibgeschützt.

- oder -

<paramref name="newSecurePassword" /> (oder <paramref name="newPassword" />) ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">Einer der Parameter (<paramref name="connectionString" />, <paramref name="credential" /> oder <paramref name="newSecurePassword" />) ist null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Leert den Verbindungspool.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> setzt den Verbindungspool zurück (oder leert ihn). Wenn zum Zeitpunkt des Aufrufs Verbindungen verwendet werden, werden diese als ordnungsgemäß gekennzeichnet und verworfen (statt an den Pool zurückgegeben), wenn <xref:System.Data.SqlClient.SqlConnection.Close%2A> für Sie aufgerufen wird.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection">Die aus dem Pool zu entfernende <see cref="T:System.Data.SqlClient.SqlConnection" />.</param>
        <summary>Leert den der angegebenen Verbindung zugeordneten Verbindungspool.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> löscht den Verbindungspool, der der `connection`zugeordnet ist. Wenn `connection`, die mit verknüpft sind, zum Zeitpunkt des Aufrufs verwendet werden, werden Sie als angemessen gekennzeichnet und verworfen (anstatt an den Pool zurückgegeben), wenn <xref:System.Data.SqlClient.SqlConnection.Close%2A> für Sie aufgerufen wird.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Verbindungs-ID der letzten Verbindungsversuchs, unabhängig davon, ob der Versuch erfolgreich war oder fehlgeschlagen ist.</summary>
        <value>Die Verbindungs-ID der letzten Verbindungversuchs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> funktioniert unabhängig von der Version des Servers, mit dem Sie eine Verbindung herstellen, aber die Protokolle für erweiterte Ereignisse und der Eintrag für Verbindungs Ringpuffer-Fehler sind in [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] und früheren Versionen nicht vorhanden.

 Wenn das erweiterte Ereignis zur Protokollierung der Verbindungs-ID aktiviert ist, können Sie die Verbindungs-ID im erweiterten Ereignisprotokoll suchen, um festzustellen, ob der Fehler auf dem Server aufgetreten ist. Bei bestimmten Verbindungsfehlern können Sie die Verbindungs-ID auch im Verbindungsringpuffer suchen ([Connectivity troubleshooting in SQL Server 2008 with the Connectivity Ring Buffer (Behandeln von Verbindungsproblemen in SQL Server 2008 mit dem Verbindungsringpuffer)](https://go.microsoft.com/fwlink/?LinkId=207752)). Wenn die Verbindungs-ID nicht im Konnektivitätsringpuffer enthalten ist, ist von einem Netzwerkfehler auszugehen.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Close ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt die Verbindung zur Datenbank. Dies ist die bevorzugte Methode zum Schließen offener Verbindungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Data.SqlClient.SqlConnection.Close%2A>-Methode führt ein Rollback für alle ausstehenden Transaktionen aus. Anschließend wird die Verbindung zum Verbindungspool freigegeben, oder die Verbindung wird geschlossen, wenn das Verbindungspooling deaktiviert ist.

> [!NOTE]
>  Ausstehende Transaktionen, die mit [!INCLUDE[tsql](~/includes/tsql-md.md)] oder <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> gestartet werden, werden automatisch zurückgesetzt, wenn die Verbindung zurückgesetzt wird, wenn das Verbindungspooling aktiviert ist. Wenn das Verbindungspooling deaktiviert ist, wird für die Transaktion ein Rollback ausgeführt, nachdem `SqlConnection.Close` aufgerufen wurde. Transaktionen, die über <xref:System.Transactions> gestartet werden, werden über die `System.Transactions` Infrastruktur gesteuert und sind von `SqlConnection.Close`nicht betroffen.

 Eine Anwendung kann <xref:System.Data.SqlClient.SqlConnection.Close%2A> mehrmals aufzurufen. Es wird keine Ausnahme generiert.

 Wenn das <xref:System.Data.SqlClient.SqlConnection> den Gültigkeitsbereich verlässt, wird es nicht geschlossen. Daher müssen Sie die Verbindung explizit schließen, indem Sie `Close` oder `Dispose`aufrufen. `Close` und `Dispose` sind funktional äquivalent. Wenn der Wert für das Verbindungspooling `Pooling` auf `true` oder `yes`festgelegt ist, wird die zugrunde liegende Verbindung an den Verbindungspool zurückgegeben. Wenn `Pooling` dagegen auf `false` oder `no`festgelegt ist, wird die zugrunde liegende Verbindung mit dem Server geschlossen.

> [!NOTE]
>  Wenn eine Verbindung aus dem Verbindungspool abgerufen oder an diesen zurückgegeben wird, werden keine Anmelde- und Abmeldeereignisse auf dem Server ausgelöst, da die Verbindung bei der Rückgabe an den Verbindungspool nicht geschlossen wird. Weitere Informationen finden Sie unter [SQL Server-Verbindungspooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).

> [!CAUTION]
>  Sie können `Close` oder `Dispose` nicht für eine Verbindung, einen DataReader oder ein anderes verwaltetes Objekt in der `Finalize`-Methode der Klasse aufzurufen. In einem Finalizer sollten Sie nur nicht verwaltete Ressourcen freigeben, die Ihre Klasse direkt besitzt. Wenn die Klasse keine nicht verwalteten Ressourcen besitzt, definieren Sie in der Klasse keine `Finalize`-Methode. Weitere Informationen finden Sie unter [Garbage Collection](~/docs/standard/garbage-collection/index.md).



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection>erstellt, geöffnet und einige Eigenschaften angezeigt. Die Verbindung wird am Ende des `using` Blocks automatisch geschlossen.

 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Der Fehler auf Verbindungsebene, der beim Öffnen der Verbindung aufgetreten ist.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gültigkeitsdauer der Einträge für die Spaltenverschlüsselungsschlüssel im entsprechenden Cache für das <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>-Feature ab oder legt die Dauer fest. Der Standardwert ist 2 Stunden. 0 bedeutet, dass keine Zwischenspeicherung stattfindet.</summary>
        <value>Das Zeitintervall.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Zwischenspeichern von Abfragemetadaten für parametrisierte Abfragen in <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>-fähigen Datenbanken aktiviert (TRUE) oder nicht aktiviert (FALSE) ist, oder legt diesen Wert fest. Der Standardwert ist true.</summary>
        <value>Gibt „true“ zurück, wenn das Zwischenspeichern von Abfragemetadaten aktiviert ist; andernfalls „false“. Der Standardwert ist „true“.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Bei parametrisierten Abfragen führt SqlClient einen Roundtrip zu SQL Server für Parameter Metadaten aus, um anzuzeigen, welcher Parameter verschlüsselt werden muss und wie (welche Schlüssel und Algorithmen verwendet werden sollen). Wenn die gleiche Abfrage mehrmals von der Anwendung aufgerufen wird, wird jedes Mal ein zusätzlicher Roundtrip zum Server durchgeführt, wodurch die Anwendungsleistung beeinträchtigt wird.

 Wenn **ColumnEncryptionQueryMetadataCacheEnabled** auf true festgelegt ist und dieselbe Abfrage mehrmals aufgerufen wird, wird der Roundtrip zum Server nur einmal durchgeführt. Der Cache verfügt über einen nicht konfigurierbaren Parameter für die maximale Größe, der auf 2000 Abfragen festgelegt ist.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ermöglicht Ihnen, eine Liste von vertrauenswürdigen Schlüsselpfaden für einen Datenbankserver festzulegen. Wenn der Treiber während der Verarbeitung eine Anwendungsabfrage einen Schlüsselpfad erhält, der nicht in der Liste enthalten ist, schlägt die Abfrage fehl. Diese Eigenschaft bietet zusätzlichen Schutz vor Angriffen, bei denen ein kompromittierter SQL Server gefälschte Schlüsselpfade bereitstellt, was zu Verlusten von Schlüsselspeicher-Anmeldeinformationen führen kann.</summary>
        <value>Die Liste vertrauenswürdiger Hauptschlüsselpfade für die Spaltenverschlüsselung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, mit der eine SQL Server-Datenbank geöffnet wird, oder legt diese fest.</summary>
        <value>Die Verbindungszeichenfolge, die den Namen der Quelldatenbank und weitere für das Herstellen der Anfangsverbindung erforderliche Parameter enthält. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ähnelt einer OLE DB Verbindungs Zeichenfolge, ist jedoch nicht identisch. Anders als bei OLE DB oder ADO ist die zurückgegebene Verbindungs Zeichenfolge mit dem Benutzer Satz <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>identisch, abzüglich der Sicherheitsinformationen, wenn der Wert für persistente Sicherheitsinformationen auf `false` (Standard) festgelegt ist. Der .NET Framework Datenanbieter für SQL Server speichert oder gibt das Kennwort nicht in einer Verbindungs Zeichenfolge zurück, es sei denn, Sie legen Beibehaltungs Sicherheitsinformationen auf `true`fest.

 Sie können die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft verwenden, um eine Verbindung mit einer-Datenbank herzustellen. Im folgenden Beispiel wird eine typische Verbindungs Zeichenfolge veranschaulicht.

```
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"
```

 Verwenden Sie die neue <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, um zur Laufzeit gültige Verbindungs Zeichenfolgen zu erstellen. Weitere Informationen finden Sie in [Connection String Builders (Verbindungszeichenfolgengeneratoren)](~/docs/framework/data/adonet/connection-string-builders.md).

 Die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft kann nur festgelegt werden, wenn die Verbindung geschlossen wird. Viele der Verbindungs Zeichen folgen Werte haben entsprechende schreibgeschützte Eigenschaften. Wenn die Verbindungs Zeichenfolge festgelegt ist, werden diese Eigenschaften aktualisiert, es sei denn, es wird ein Fehler erkannt. In diesem Fall wird keine der Eigenschaften aktualisiert. <xref:System.Data.SqlClient.SqlConnection> Eigenschaften geben nur die Einstellungen zurück, die in der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>enthalten sind.

 Zum Herstellen einer Verbindung mit einem lokalen Computer geben Sie "(local)" für den Server an. Wenn kein Servername angegeben ist, wird versucht, eine Verbindung mit der Standard Instanz auf dem lokalen Computer herzustellen.

 Durch das Zurücksetzen des <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> bei einer geschlossenen Verbindung werden alle Werte der Verbindungs Zeichenfolge (und zugehörige Eigenschaften) einschließlich des Kennworts zurückgesetzt. Wenn Sie z. b. eine Verbindungs Zeichenfolge mit "DATABASE = AdventureWorks" festlegen und anschließend die Verbindungs Zeichenfolge auf "Data Source = MyServer; Integrated Security = true" zurücksetzen, wird die <xref:System.Data.SqlClient.SqlConnection.Database%2A>-Eigenschaft nicht mehr auf "AdventureWorks" festgelegt.

 Die Verbindungs Zeichenfolge wird sofort nach dem Festlegen analysiert. Wenn beim Parsen Fehler in der Syntax gefunden werden, wird eine Lauf Zeit Ausnahme, z. b. <xref:System.ArgumentException>, generiert. Andere Fehler können nur gefunden werden, wenn versucht wird, die Verbindung zu öffnen.

 Das grundlegende Format einer Verbindungs Zeichenfolge enthält eine Reihe von Schlüsselwort-Wert-Paaren, die durch Semikolons getrennt sind. Ein Gleichheitszeichen (=) verbindet jedes Schlüsselwort mit seinem Wert. Der Wert muss in doppelte Anführungszeichen eingeschlossen werden, um Werte mit einem Semikolon, einem einfachen Anführungszeichen oder einem doppelten Anführungszeichen einzuschließen. Wenn der Wert sowohl ein Semikolon als auch ein doppeltes Anführungszeichen enthält, kann der Wert in einfache Anführungszeichen eingeschlossen werden. Das einfache Anführungszeichen ist auch nützlich, wenn der Wert mit einem doppelten Anführungszeichen beginnt. Umgekehrt kann das doppelte Anführungszeichen verwendet werden, wenn der Wert mit einem einfachen Anführungszeichen beginnt. Wenn der Wert sowohl einfache Anführungszeichen als auch doppelte Anführungszeichen enthält, muss das Anführungszeichen, das zum Einschließen des Werts verwendet wird, jedes Mal verdoppelt werden, wenn es innerhalb des Werts liegt.

 Um vorangehende oder nachfolgende Leerzeichen in den Zeichen folgen Wert einzuschließen, muss der Wert entweder in einfache Anführungszeichen oder in doppelte Anführungszeichen eingeschlossen werden. Alle führenden oder nachfolgenden Leerzeichen um ganzzahlige, boolesche Werte oder enumerierte Werte werden ignoriert, auch wenn Sie in Anführungszeichen eingeschlossen sind. Leerzeichen innerhalb eines zeichenfolgenliteralschlüsselworts oder Werts werden jedoch beibehalten. Einfache oder doppelte Anführungszeichen können in einer Verbindungs Zeichenfolge ohne Trennzeichen verwendet werden (z. b. Data Source = my' Server oder Data Source = My ' Server), es sei denn, ein Anführungszeichen ist das erste oder letzte Zeichen im Wert.

 Bei Schlüsselwörtern wird die Groß-/Kleinschreibung

 In der folgenden Tabelle sind die gültigen Namen für Schlüsselwort Werte innerhalb der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>aufgeführt.

|Schlüsselwort|Standard|Beschreibung|
|-------------|-------------|-----------------|
|Addr|N/V|Synonym der **Datenquelle**.|
|Adresse|N/V|Synonym der **Datenquelle**.|
|App|N/V|Synonym für den **Anwendungsnamen**.|
|Anwendungsname|N/V|Der Name der Anwendung oder ".NET SqlClient Datenanbieter", wenn kein Anwendungsname angegeben wird.<br /><br /> Ein Anwendungsname darf höchstens 128 Zeichen umfassen.|
|`ApplicationIntent`|`ReadWrite`|Deklariert den Arbeitsauslastungstyp der Anwendung beim Herstellen einer Verbindung mit einem Server. Mögliche Werte sind `ReadOnly` und `ReadWrite`. Beispiel:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Weitere Informationen zur SqlClient-Unterstützung für AlwaysOn-Verfügbarkeitsgruppen finden Sie unter [SqlClient-Unterstützung für hohe Verfügbarkeit, Notfallwiederherstellung](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|
|Asynchronous Processing<br /><br /> - oder -<br /><br /> Async|Alarm|Wenn `true`, aktiviert die Unterstützung für asynchrone Vorgänge. Erkannte Werte sind `true`, `false`, `yes` und `no`.<br /><br /> Diese Eigenschaft wird ab [!INCLUDE[net_v45](~/includes/net-v45-md.md)] ignoriert. Weitere Informationen zur SqlClient-Unterstützung für asynchrone Programmierung finden Sie unter [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md).|
|AttachDBFilename<br /><br /> - oder -<br /><br /> Extended Properties<br /><br /> - oder -<br /><br /> Ursprünglicher Dateiname|N/V|Der Name der primären Datenbankdatei, einschließlich des vollständigen Pfadnamens einer anfügbaren Datenbank. AttachDbFileName wird nur für primäre Datendateien mit der Erweiterung MDF unterstützt.<br /><br /> Wenn der Wert des AttachDBFilename-Schlüssels in der Verbindungs Zeichenfolge angegeben wird, wird die Datenbank angefügt und wird zur Standarddatenbank für die Verbindung.<br /><br /> Wenn dieser Schlüssel nicht angegeben ist und die Datenbank zuvor angefügt wurde, wird die Datenbank nicht erneut angefügt. Die zuvor angefügte Datenbank wird als Standarddatenbank für die Verbindung verwendet.<br /><br /> Wenn dieser Schlüssel mit dem AttachDBFilename-Schlüssel angegeben wird, wird der Wert dieses Schlüssels als Alias verwendet. Wenn der Name jedoch bereits in einer anderen verbundenen Datenbank verwendet wird, tritt bei der Verbindung ein Fehler auf.<br /><br /> Der Pfad kann absolut oder relativ sein, indem die DataDirectory-Ersetzungs Zeichenfolge verwendet wird. Wenn DataDirectory verwendet wird, muss die Datenbankdatei in einem Unterverzeichnis des Verzeichnisses vorhanden sein, auf das von der Ersetzungs Zeichenfolge verwiesen wird. **Hinweis:**  Remote Server-, http-und UNC-Pfadnamen werden nicht unterstützt. <br /><br /> Der Datenbankname muss mit dem Schlüsselwort ' Database ' (oder einem seiner Aliase) angegeben werden, wie im folgenden beschrieben:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Ein Fehler wird generiert, wenn eine Protokolldatei im gleichen Verzeichnis wie die Datendatei enthalten ist und beim Anfügen der primären Datendatei das Schlüsselwort "database" verwendet wird. Entfernen Sie in diesem Fall die Protokolldatei. Sobald die Datenbank angefügt wird, wird automatisch auf Grundlage des physischen Pfads eine neue Protokolldatei generiert.|
|Authentifizierung|N/V|Die Authentifizierungsmethode, die zum [Herstellen einer Verbindung mit SQL-Datenbank mithilfe Azure Active Directory-Authentifizierung](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities)verwendet wird.<br /><br /> Gültige Werte sind:<br /><br /> Active Directory integriert, Active Directory Kennwort und SQL-Kennwort.|
|Spaltenverschlüsselungseinstellung|N/V|Aktiviert oder deaktiviert [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) Funktionen für die Verbindung.|
|Verbindungstimeout<br /><br /> - oder -<br /><br /> Verbindungstimeout<br /><br /> - oder -<br /><br /> Timeout|15|Die Zeitspanne (in Sekunden), die auf eine Verbindung mit dem Server gewartet werden soll, bevor der Versuch beendet und ein Fehler erzeugt wird.<br /><br /> Gültige Werte sind größer als oder gleich 0 (null) und kleiner oder gleich 2147483647.<br /><br /> Legen Sie das Verbindungs Timeout beim Öffnen einer Verbindung mit einer Azure SQL-Datenbank auf 30 Sekunden fest.|
|Verbindungs Lebensdauer<br /><br /> - oder -<br /><br /> Load Balance Timeout|0|Wenn eine Verbindung an den Pool zurückgegeben wird, wird die Erstellungszeit mit der aktuellen Zeit verglichen. Wenn diese Zeitspanne (in Sekunden) größer ist als der für die `Connection Lifetime` angegebene Wert, wird die Verbindung zerstört. Dies ist hilfreich bei Gruppenkonfigurationen, um einen Lastenausgleich zwischen einem bereits aktiven Server und einem Server zu erzwingen, der gerade erst online gegangen ist.<br /><br /> Der Wert 0 (null) bewirkt, dass gepoolte Verbindungen das maximale Verbindungs Timeout aufweisen.|
|ConnectRetryCount|1|Steuert die Anzahl der Versuche zum erneuten Herstellen der Verbindung, nachdem der Client einen Fehler in einer Leerlaufverbindung identifiziert hat. Gültige Werte sind 0 bis 255. Der Standard ist 1. 0 bedeutet nicht, dass versucht wird, die Verbindung wiederherzustellen (Verbindungs Resilienz deaktivieren).<br /><br /> Weitere Informationen zur Verbindungsstabilität im Leerlauf finden Sie unter [Technische Artikel – Verbindungsstabilität im Leerlauf](https://go.microsoft.com/fwlink/?LinkId=393996).|
|ConnectRetryInterval|10|Gibt die Zeit zwischen den einzelnen Verbindungs Wiederholungs versuchen an (connectretrycount). Gültige Werte sind 1 bis 60 Sekunden (Standardwert = 10), die nach dem ersten Versuch der erneuten Verbindung angewendet werden. Wenn eine unterbrochene Verbindung erkannt wird, versucht der Client sofort, erneut eine Verbindung herzustellen. Dies ist der erste Wiederholungsversuch, der nur erfolgt, wenn connectretrycount größer als 0 (null) ist. Wenn der erste Verbindungsversuch fehlschlägt und connectretrycount größer als 1 ist, wartet der Client connectretryinterval, um den zweiten und nachfolgenden erneuten Verbindungsversuch zu versuchen.<br /><br /> Weitere Informationen zur Verbindungsstabilität im Leerlauf finden Sie unter [Technische Artikel – Verbindungsstabilität im Leerlauf](https://go.microsoft.com/fwlink/?LinkId=393996).|
|Kontextverbindung|Alarm|`true`, wenn eine Prozess interne Verbindung mit SQL Server hergestellt werden soll.|
|Aktuelle Sprache<br /><br /> - oder -<br /><br /> Sprache|N/V|Legt die für Datenbankserver-Warn-oder-Fehlermeldungen verwendete Sprache fest.<br /><br /> Der sprach Name darf höchstens 128 Zeichen umfassen.|
|Datenquelle<br /><br /> - oder -<br /><br /> Server<br /><br /> - oder -<br /><br /> Adresse<br /><br /> - oder -<br /><br /> Addr<br /><br /> - oder -<br /><br /> Netzwerkadresse|N/V|Der Name oder die Netzwerkadresse der Instanz von SQL Server mit der eine Verbindung hergestellt werden soll. Die Portnummer kann nach dem Servernamen angegeben werden:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> Verwenden Sie immer (local), wenn Sie eine lokale Instanz angeben. Fügen Sie zum Erzwingen eines Protokolls eines der folgenden Präfixe hinzu:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> Ab [!INCLUDE[net_v45](~/includes/net-v45-md.md)]können Sie auch wie folgt eine Verbindung mit einer localdb-Datenbank herstellen:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Weitere Informationen zu localdb finden Sie [unter SqlClient-Unterstützung für localdb](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> Die **Datenquelle** muss das TCP-Format oder das Named Pipes-Format verwenden.<br /><br /> Das TCP-Format lautet wie folgt:<br /><br /> -TCP:\<Hostname >\\< Instanzname\><br />-TCP:\<Hostname >,\<TCP/IP-Portnummer ><br /><br /> Das TCP-Format muss mit dem Präfix "TCP:" beginnen, gefolgt von der Daten Bank Instanz, die durch einen Hostnamen und einen Instanznamen angegeben wird. Dieses Format ist nicht anwendbar, wenn eine Verbindung mit Azure SQL-Datenbank hergestellt wird. TCP wird automatisch für Verbindungen mit Azure SQL-Datenbank ausgewählt, wenn kein Protokoll angegeben wird.<br /><br /> Der Hostname muss auf eine der folgenden Arten angegeben werden:<br /><br /> -NetbiosName<br />-IPv4Address<br />-IPv6Address<br /><br /> Der Instanzname wird verwendet, um eine bestimmte TCP/IP-Portnummer aufzulösen, auf der eine Daten Bank Instanz gehostet wird. Alternativ ist auch eine direkte Angabe einer TCP/IP-Portnummer zulässig. Wenn der Instanzname und die Portnummer nicht vorhanden sind, wird die Standard-Daten Bank Instanz verwendet.<br /><br /> Das Named Pipes-Format lautet wie folgt:<br /><br /> -NP:\\\\< Hostnamen\>\pipe\\< Pipename\><br /><br /> Das Named Pipes-Format muss mit dem Präfix "NP:" beginnen, gefolgt von einem Named Pipe Namen.<br /><br /> Der Hostname muss auf eine der folgenden Arten angegeben werden:<br /><br /> -NetbiosName<br />-IPv4Address<br />-IPv6Address<br /><br /> Der Pipename wird verwendet, um die Daten Bank Instanz zu identifizieren, mit der die .NET Framework Anwendung verbunden wird.<br /><br /> Wenn der Wert des **Netzwerk** Schlüssels angegeben ist, sollten die Präfixe "TCP:" und "NP:" nicht angegeben werden. **Hinweis:**  Sie können die Verwendung von TCP anstelle von Shared Memory erzwingen, indem Sie entweder **TCP:** dem Servernamen in der Verbindungs Zeichenfolge oder **localhost**verwenden.|
|Verschlüsseln|Alarm|Wenn `true`, verwendet SQL Server SSL-Verschlüsselung für alle Daten, die zwischen dem Client und dem Server gesendet werden, wenn auf dem Server ein Zertifikat installiert ist. Erkannte Werte sind `true`, `false`, `yes` und `no`. Weitere Informationen finden Sie unter [Syntax der Verbindungs Zeichenfolge](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> Ab [!INCLUDE[net_v45](~/includes/net-v45-md.md)]muss der Servername (oder die IP-Adresse) in einem SQL Server SSL-Zertifikat genau mit dem in der Verbindungs Zeichenfolge angegebenen Servernamen (oder der IP-Adresse) übereinstimmen, wenn `TrustServerCertificate` den Wert "false" hat und `Encrypt` den Wert true hat. Andernfalls schlägt die Verbindung fehl. Informationen zur Unterstützung für Zertifikate, deren Betreff mit einem Platzhalter Zeichen (*) beginnt, finden Sie unter akzeptierte Platzhalter, die [von Server Zertifikaten für die Server Authentifizierung verwendet werden](https://support.microsoft.com/kb/258858).|
|Eintragen|"true"|`true` gibt an, dass der SQL Server Connection Pool Funktion die Verbindung automatisch in den aktuellen Transaktionskontext des Erstellungsthreads einträgt.|
|Failoverpartner|N/V|Der Name des Failover-Partner Servers, auf dem die Daten Bank Spiegelung konfiguriert ist.<br /><br /> Wenn der Wert dieses Schlüssels "" ist, muss der **anfangs Katalog** vorhanden sein, und sein Wert darf nicht "" lauten.<br /><br /> Der Servername darf nicht länger als 128 Zeichen sein.<br /><br /> Wenn Sie einen Failoverpartner angeben, der Failoverpartnerserver aber nicht für die Daten Bank Spiegelung konfiguriert ist und der primäre Server (mit dem Server Schlüsselwort angegeben) nicht verfügbar ist, tritt bei der Verbindung ein Fehler auf.<br /><br /> Wenn Sie einen Failoverpartner angeben und der primäre Server nicht für die Daten Bank Spiegelung konfiguriert ist, wird die Verbindung mit dem primären Server (angegeben mit dem Server Schlüsselwort) erfolgreich hergestellt, wenn der primäre Server verfügbar ist.|
|Ursprünglicher Katalog<br /><br /> - oder -<br /><br /> Datenbank|N/V|Der Name der Datenbank.<br /><br /> Der Datenbankname darf nicht länger als 128 Zeichen sein.|
|Integrierte Sicherheit<br /><br /> - oder -<br /><br /> Trusted_Connection|Alarm|Wenn `false`, werden die Benutzer-ID und das Kennwort in der Verbindung angegeben. Wenn `true`, werden die aktuellen Anmelde Informationen für das Windows-Konto für die Authentifizierung verwendet.<br /><br /> Erkannte Werte sind `true`, `false`, `yes`, `no`und `sspi` (stark empfohlen), was `true`entspricht.<br /><br /> Wenn die Benutzer-ID und das Kennwort angegeben sind und die integrierte Sicherheit auf true festgelegt ist, werden die Benutzer-ID und das Kennwort ignoriert, und es wird die integrierte Sicherheit verwendet.<br /><br /> <xref:System.Data.SqlClient.SqlCredential> ist eine sicherere Möglichkeit zum Angeben von Anmelde Informationen für eine Verbindung, die SQL Server-Authentifizierung verwendet (`Integrated Security=false`).|
|Max. Poolgröße|100|Die maximale Anzahl von Verbindungen, die im Pool zulässig sind.<br /><br /> Gültige Werte sind größer als oder gleich 1. Werte, die kleiner als die **minimale Poolgröße** sind, generieren einen Fehler.|
|Min. Poolgröße|0|Die Mindestanzahl von Verbindungen, die im Pool zulässig sind.<br /><br /> Gültige Werte sind größer als oder gleich 0 (null). NULL (0) in diesem Feld bedeutet, dass keine minimalen Verbindungen anfänglich geöffnet werden.<br /><br /> Werte, die größer als die **maximale Poolgröße** sind, generieren einen Fehler.|
|MultipleActiveResultSets|Alarm|Wenn `true`, kann eine Anwendung mehrere aktive Resultsets (Mars) verwalten. Wenn `false`, muss eine Anwendung alle Resultsets von einem Batch verarbeiten oder Abbrechen, bevor Sie einen anderen Batch für diese Verbindung ausführen kann.<br /><br /> Gültige Werte sind `true` und `false`.<br /><br /> Weitere Informationen finden Sie unter [Multiple Active Result Sets (MARS)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|
|`MultiSubnetFailover`|FALSE|Geben Sie beim Herstellen einer Verbindung mit dem verfügbarkeitsgruppenlistener einer SQL Server 2012 (oder höher)-Verfügbarkeits Gruppe oder einer SQL Server 2012 (oder höher)-Failoverclusterinstanz immer `multiSubnetFailover=True` an. `multiSubnetFailover=True` konfiguriert SqlClient, um eine schnellere Erkennung und Verbindung mit dem (derzeit) aktiven Server zu ermöglichen. Mögliche Werte sind `Yes` und `No`, `True` und `False` oder `1` und `0`. Beispiel:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Der Standardwert lautet `False`. Weitere Informationen zur Unterstützung von SqlClient für Always on AGS finden Sie unter [SqlClient-Unterstützung für hohe Verfügbarkeit und Notfall Wiederherstellung](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|
|Network Library<br /><br /> - oder -<br /><br /> Netzwerk<br /><br /> - oder -<br /><br /> Net|N/V|Die Netzwerk Bibliothek, die verwendet wird, um eine Verbindung mit einer Instanz von SQL Server herzustellen. Unterstützte Werte:<br /><br /> dbnmpntw (Named Pipes)<br /><br /> dbmsrpcn (Multiprotocol, Windows RPC)<br /><br /> dbmsadsn (Apple Talk)<br /><br /> dbmsgnet (via)<br /><br /> dbmslpcn (Shared Memory)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan-Reben)<br /><br /> Die entsprechende Netzwerk-DLL muss auf dem System installiert werden, mit dem Sie eine Verbindung herstellen. Wenn Sie kein Netzwerk angeben und einen lokalen Server verwenden (z. b. "." oder "(local)"), wird der gemeinsame Arbeitsspeicher verwendet. In diesem Beispiel handelt es sich um die Netzwerkbibliothek {1}Win32 Winsock TCP/IP{2} ({3}dbmssocn{4}), wobei der Port 1433 verwendet wird.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|
|Paketgröße|8.000|Größe der Netzwerkpakete in Bytes, die für die Kommunikation mit einer Instanz von SQL Server verwendet werden.<br /><br /> Die Paketgröße kann größer oder gleich 512 und kleiner oder gleich 32768 sein.|
|Kennwort<br /><br /> - oder -<br /><br /> PWD|N/V|Das Kennwort für die Anmeldung des SQL Server Kontos. Nicht empfohlen. Um ein hohes Maß an Sicherheit zu gewährleisten, wird dringend empfohlen, stattdessen das Schlüsselwort "`Integrated Security`" oder "`Trusted_Connection`" zu verwenden. <xref:System.Data.SqlClient.SqlCredential> ist eine sicherere Möglichkeit zum Angeben von Anmelde Informationen für eine Verbindung, die SQL Server-Authentifizierung verwendet.<br /><br /> Das Kennwort darf höchstens 128 Zeichen enthalten.|
|Sicherheitsinformationen permanent speichern<br /><br /> - oder -<br /><br /> PersistSecurityInfo|Alarm|Bei Festlegung auf `false` oder `no` (stark empfohlen) werden sicherheitsrelevante Informationen, wie z. b. das Kennwort, nicht als Teil der Verbindung zurückgegeben, wenn die Verbindung geöffnet ist oder sich jemals im geöffneten Zustand befunden hat. Durch das Zurücksetzen der Verbindungs Zeichenfolge werden alle Verbindungs Zeichen folgen Werte einschließlich des Kennworts zurückgesetzt. Erkannte Werte sind `true`, `false`, `yes` und `no`.|
|PoolBlockingPeriod|Automatisch|Legt das Verhalten des Blockierungs Zeitraums für einen Verbindungspool fest. Weitere Informationen finden Sie in der Eigenschaft <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod>.|
|Pooling|"true"|Wenn der Wert dieses Schlüssels auf true festgelegt ist, werden alle neu erstellten Verbindungen dem Pool hinzugefügt, wenn Sie von der Anwendung geschlossen werden. Bei einem nächsten Versuch, dieselbe Verbindung zu öffnen, wird diese Verbindung aus dem Pool gezeichnet.<br /><br /> Verbindungen werden als identisch betrachtet, wenn Sie dieselbe Verbindungs Zeichenfolge aufweisen. Unterschiedliche Verbindungen verfügen über unterschiedliche Verbindungs Zeichenfolgen.<br /><br /> Der Wert dieses Schlüssels kann "true", "false", "yes" oder "No" lauten.|
|Replikation|Alarm|`true`, wenn die Replikation mithilfe der Verbindung unterstützt wird.|
|Transaktion Binding|Implicit Unbind|Steuert die Verbindungs Zuordnung mit einer eingetragenen `System.Transactions` Transaktion.<br /><br /> Mögliche Werte:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Die implizite unbindung bewirkt, dass die Verbindung von der Transaktion trennt, wenn Sie endet. Nach der Trennung werden im Autocommit-Modus zusätzliche Anforderungen für die Verbindung ausgeführt. Die `System.Transactions.Transaction.Current`-Eigenschaft wird nicht überprüft, wenn Anforderungen ausgeführt werden, solange die Transaktion aktiv ist. Nach Ende der Transaktion werden im Autocommit-Modus zusätzliche Anforderungen ausgeführt.<br /><br /> Wenn das System die Transaktion (im Bereich eines using-Blocks) beendet, bevor der letzte Befehl abgeschlossen ist, wird <xref:System.InvalidOperationException>ausgelöst.<br /><br /> Die explizite Bindung zur Bindung bewirkt, dass die Verbindung an die Transaktion angehängt bleibt, bis die Verbindung geschlossen wird oder ein expliziter `SqlConnection.TransactionEnlist(null)` aufgerufen wird. Beginnend mit [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]machen Änderungen an der impliziten Bindung zum Aufheben der Bindung explizit ungebunden. Eine `InvalidOperationException` wird ausgelöst, wenn es sich bei `Transaction.Current` nicht um die eingetragene Transaktion handelt, oder wenn die eingetragene Transaktion nicht aktiv ist.|
|TransparentNetworkIPResolution|Siehe Beschreibung.|Wenn der Wert dieses Schlüssels auf `true` festgelegt wird, muss die Anwendung alle IP-Adressen für einen bestimmten DNS-Eintrag abrufen und versuchen, mit der ersten Adresse auf der Liste eine Verbindung herzustellen. Wenn die Verbindung nicht innerhalb von 0,5 Sekunden hergestellt wird, versucht die Verbindung, parallel mit allen anderen Adressen eine Verbindung herzustellen. Wenn die erste Adresse antwortet, stellt die Anwendung eine Verbindung mit der antwortenden IP-Adresse her.<br /><br /> Wenn die `MultiSubnetFailover`-Taste auf `true`festgelegt ist, wird `TransparentNetworkIPResolution` ignoriert.<br /><br /> Wenn der `Failover Partner`-Schlüssel festgelegt ist, wird `TransparentNetworkIPResolution` ignoriert.<br /><br /> Der Wert dieses Schlüssels muss `true`, `false`, `yes`oder `no`sein.<br /><br /> Der Wert `yes` wird mit dem Wert `true`behandelt.<br /><br /> Der Wert `no` wird mit dem Wert `false`behandelt.<br /><br /> Die Standardwerte lauten wie folgt:<br /><br /> <ul><li>`false`:<br /><br /> <ul><li>Herstellen einer Verbindung mit der Azure SQL-Datenbank, in der die Datenquelle endet:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` ist ' Active Directory Password ' oder ' Active Directory Integrated '</li></ul></li><li>In allen anderen Fällen `true`.</li></ul>|
|TrustServerCertificate|Alarm|Bei Festlegung auf `true`wird SSL zum Verschlüsseln des Kanals verwendet, wenn die Überprüfung der Vertrauensstellung durchlaufen der Zertifikat Kette umgangen wird. Wenn TrustServerCertificate auf `true` und verschlüsseln auf `false`festgelegt ist, wird der Kanal nicht verschlüsselt. Erkannte Werte sind `true`, `false`, `yes` und `no`. Weitere Informationen finden Sie unter [Syntax der Verbindungs Zeichenfolge](~/docs/framework/data/adonet/connection-string-syntax.md).|
|Typsystem Version|N/V|Ein Zeichen folgen Wert, der das Typsystem angibt, das die Anwendung erwartet. Welche Funktionalität einer Clientanwendung zur Verfügung steht, hängt von der SQL Server-Version und der Kompatibilitätsstufe der Datenbank ab. Durch die explizite Festlegung der Systemversion, für die die Clientanwendung geschrieben wurde, werden potenzielle Probleme vermieden, die dazu führen könnten, dass eine Anwendung nicht funktioniert, wenn eine andere SQL Server-Version verwendet wird. **Hinweis:**  Die Typsystem Version kann nicht für Common Language Runtime (CLR)-Code festgelegt werden, der in-Process in SQL Server ausgeführt wird. Weitere Informationen finden Sie unter [SQL Server Common Language Runtime-Integration](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md). <br /><br /> Mögliche Werte:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` gibt an, dass die Anwendung die Version 11.0.0.0 von Microsoft. SqlServer. types. dll benötigt. Die anderen `Type System Version` Einstellungen erfordern Version 10.0.0.0 von Microsoft. SqlServer. types. dll.<br /><br /> `Latest` ist veraltet und sollte nicht verwendet werden. `Latest` entspricht `Type System Version=SQL Server 2008;`.|
|Benutzer-ID<br /><br /> - oder -<br /><br /> UID<br /><br /> - oder -|N/V|Das SQL Server-Anmelde Konto. Nicht empfohlen. Um ein hohes Maß an Sicherheit zu gewährleisten, wird dringend empfohlen, stattdessen die Schlüsselwörter `Integrated Security` oder `Trusted_Connection` zu verwenden. <xref:System.Data.SqlClient.SqlCredential> ist eine sicherere Möglichkeit zum Angeben von Anmelde Informationen für eine Verbindung, die SQL Server-Authentifizierung verwendet.<br /><br /> Die Benutzer-ID darf nicht länger als 128 Zeichen sein.|
|Benutzerinstanz|Alarm|Ein Wert, der angibt, ob die Verbindung von der Standard SQL Server Express Instanz zu einer von der Laufzeit initiierten Instanz umgeleitet werden soll, die unter dem Konto des Aufrufers ausgeführt wird.|
|Workstation ID<br /><br /> - oder -<br /><br /> WSID|Der Name des lokalen Computers|Der Name der Arbeitsstation, die eine Verbindung mit SQL Server herstellt.<br /><br /> Die ID darf nicht länger als 128 Zeichen sein.|

 Die folgende Liste enthält die gültigen Namen für die Verbindungspooling-Werte innerhalb der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Weitere Informationen finden Sie unter [SQL Server-Verbindungspooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).

-   Verbindungs Lebensdauer (oder Timeout für Lastenausgleich)

-   Eintragen

-   Max. Poolgröße

-   Min. Poolgröße

-   Pooling

 Wenn Sie Schlüsselwort-oder Verbindungspooling-Werte festlegen, die einen booleschen Wert erfordern, können Sie "yes" anstelle von "true" und "No" anstelle von "false" verwenden. Ganzzahlige Werte werden als Zeichen folgen dargestellt.

> [!NOTE]
>  Die .NET Framework Datenanbieter für SQL Server verwendet ein eigenes Protokoll, um mit SQL Server zu kommunizieren. Daher wird die Verwendung eines ODBC-Datenquellen namens (DSN) beim Herstellen einer Verbindung mit SQL Server nicht unterstützt, da keine ODBC-Schicht hinzugefügt wird.

> [!NOTE]
>  UDL-Dateien (Universal Data Link) werden für den .NET Framework Datenanbieter für SQL Server nicht unterstützt.

> [!CAUTION]
>  In dieser Version sollte die Anwendung Vorsicht walten lassen, wenn eine Verbindungs Zeichenfolge auf der Grundlage von Benutzereingaben erstellt wird (z. b. Wenn Benutzer-ID-und Kenn Wort Informationen aus einem Dialogfeld abgerufen und an die Verbindungs Zeichenfolge angehängt werden). Die Anwendung sollte sicherstellen, dass ein Benutzer keine zusätzlichen Verbindungs Zeichen folgen Parameter in diese Werte einbetten kann (z. b. das Eingeben eines Kennworts als "validpassword; database = somedb" in einen Versuch, eine Verbindung mit einer anderen Datenbank herzustellen). Wenn Sie Verbindungs Zeichenfolgen auf der Grundlage von Benutzereingaben erstellen müssen, verwenden Sie die neue <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, die die Verbindungs Zeichenfolge überprüft und dieses Problem beseitigt. Weitere Informationen finden Sie unter [Verbindungs Zeichenfolgen](~/docs/framework/data/adonet/connection-string-builders.md) -Generatoren.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und die <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>-Eigenschaft vor dem Öffnen der Verbindung festgelegt.

 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde ein ungültiges Argument für eine Verbindungszeichenfolge bereitgestellt, oder ein erforderliches Argument für eine Verbindungszeichenfolge wurde nicht bereitgestellt.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET Managed Provider und DataSet Developer Center</related>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Verbindungszeichenfolgen in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionTimeout As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionTimeout { int get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit (in Sekunden) ab, die beim Verbindungsaufbau gewartet werden soll, bis der Versuch beendet und ein Fehler generiert wird.</summary>
        <value>Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert beträgt 15 Sekunden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die Zeitspanne festlegen, die eine Verbindung auf das Timeout wartet, indem Sie die `Connect Timeout`-oder `Connection Timeout` Schlüsselwörter in der Verbindungs Zeichenfolge verwenden. Der Wert 0 gibt keine Begrenzung an und sollte in einer <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> vermieden werden, da ein Verbindungsversuch unbegrenzt wartet.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und die `Connection Timeout` in der Verbindungs Zeichenfolge auf 30 Sekunden festgelegt. Der Code öffnet die Verbindung und zeigt die <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>-Eigenschaft im Konsolenfenster an.

 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der festgelegte Wert ist kleiner als 0.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Verbindungszeichenfolgen in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Data.SqlClient.SqlCommand" />-Objekt, das der <see cref="T:System.Data.SqlClient.SqlConnection" /> zugeordnet ist, und gibt es zurück.</summary>
        <returns>Ein <see cref="T:System.Data.SqlClient.SqlCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt für diese Verbindung ab, oder legt es fest.</summary>
        <value>Das <see cref="T:System.Data.SqlClient.SqlCredential" />-Objekt für diese Verbindung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `Persist Security Info = true` ist erforderlich, um den Wert des <xref:System.Data.SqlClient.SqlCredential> Objekts mit <xref:System.Data.SqlClient.SqlConnection.Credential%2A>zu erhalten.

 Der Standardwert <xref:System.Data.SqlClient.SqlConnection.Credential%2A> ist NULL.

 Eine <xref:System.InvalidOperationException> Ausnahme wird ausgelöst:

-   , Wenn <xref:System.Data.SqlClient.SqlConnection.Credential%2A> für eine geöffnete Verbindung festgelegt ist.

-   , Wenn <xref:System.Data.SqlClient.SqlConnection.Credential%2A> festgelegt wird, wenn `Context Connection=true`.

-   , Wenn <xref:System.Data.SqlClient.SqlConnection.Credential%2A> festgelegt wird, wenn `Integrated Security = true`.

-   , Wenn <xref:System.Data.SqlClient.SqlConnection.Credential%2A> festgelegt wird, wenn die Verbindungs Zeichenfolge `Password`verwendet.

-   , Wenn <xref:System.Data.SqlClient.SqlConnection.Credential%2A> festgelegt wird, wenn die Verbindungs Zeichenfolge `UserID`verwendet.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="C#" Value="public string Database { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Database As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Database { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank ab.</summary>
        <value>Der Name der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Data.SqlClient.SqlConnection.Database%2A>-Eigenschaft wird dynamisch aktualisiert. Wenn Sie die aktuelle Datenbank mithilfe einer [!INCLUDE[tsql](~/includes/tsql-md.md)]-Anweisung oder der <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>-Methode ändern, wird eine Informations Meldung gesendet, und die-Eigenschaft wird automatisch aktualisiert.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und einige der schreibgeschützten Eigenschaften angezeigt.

 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Befehle und Parameter</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="C#" Value="public string DataSource { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der SQL Server-Instanz ab, mit der eine Verbindung hergestellt werden soll.</summary>
        <value>Der Name der Instanz von, mit der eine Verbindung hergestellt werden SQL Server. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  Die <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>-Eigenschaft gibt `null` zurück, wenn die Verbindungs Zeichenfolge für die <xref:System.Data.SqlClient.SqlConnection> "context connection = true" lautet.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und einige der schreibgeschützten Eigenschaften angezeigt.

 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">Ein Verweis auf eine vorhandene <see cref="T:System.EnterpriseServices.ITransaction" />, in der die Eintragung vorgenommen werden soll.</param>
        <summary>Trägt sich in der angegebenen Transaktion als verteilte Transaktion ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>-Methode verwenden, um eine verteilte Transaktion einzutragen. Da eine Verbindung in einer <xref:System.Transactions.Transaction> Instanz eingetragen wird, nutzt **EnlistTransaction** die Funktionalität, die im <xref:System.Transactions>-Namespace für die Verwaltung verteilter Transaktionen verfügbar ist, sodass Sie zu diesem Zweck " **EnlistDistributedTransaction** " vorzuziehen ist. Weitere Informationen finden Sie unter [verteilte Transaktionen](~/docs/framework/data/adonet/distributed-transactions.md).

 Sie können die Eintragung in eine vorhandene verteilte Transaktion mit der **EnlistDistributedTransaction** -Methode fortsetzen, wenn die automatische Eintragung deaktiviert ist. Durch das Eintragen in eine vorhandene verteilte Transaktion wird sichergestellt, dass bei einem Commit oder Rollback der Transaktion auch für Änderungen, die vom Code an der Datenquelle vorgenommen werden, ein Commit oder Rollback ausgeführt wird.

 `EnlistDistributedTransaction` gibt eine Ausnahme zurück, wenn die <xref:System.Data.SqlClient.SqlConnection> eine Transaktion bereits mit <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>gestartet hat. Wenn es sich bei der Transaktion jedoch um eine lokale Transaktion handelt, die in der Datenquelle gestartet wurde (z. b. durch explizites Ausführen der BEGIN TRANSACTION Anweisung mit einem <xref:System.Data.SqlClient.SqlCommand>-Objekt), führt **EnlistDistributedTransaction** ein Rollback der lokalen Transaktion aus und trägt die vorhandene verteilte Transaktion nach Bedarf ein. Sie erhalten keinen Hinweis darauf, dass für die lokale Transaktion ein Rollback ausgeführt wurde, und sind dafür verantwortlich, lokale Transaktionen zu verwalten, die nicht mit <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>gestartet wurden.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnlistTransaction (transaction As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">Ein Verweis auf eine vorhandene <see cref="T:System.Transactions.Transaction" />, in der die Eintragung vorgenommen werden soll.</param>
        <summary>Trägt sich in der angegebenen Transaktion als verteilte Transaktion ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>-Methode verwenden, um eine verteilte Transaktion einzutragen. Da eine Verbindung in einer <xref:System.Transactions.Transaction> Instanz eingetragen wird, nutzt **EnlistTransaction** die Funktionalität, die im <xref:System.Transactions>-Namespace für die Verwaltung verteilter Transaktionen verfügbar ist. Dadurch wird **EnlistDistributedTransaction**, das ein **System. EnterpriseServices. ITransaction** -Objekt verwendet, bevorzugt. Sie weist auch eine etwas andere Semantik auf: Sobald eine Verbindung explizit für eine Transaktion eingetragen wurde, kann Sie erst in einer anderen Transaktion eingetragen oder eingetragen werden, wenn die erste Transaktion abgeschlossen ist. Weitere Informationen zu verteilten Transaktionen finden Sie unter [verteilte Transaktionen](~/docs/framework/data/adonet/distributed-transactions.md).

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/transactions-and-concurrency.md">Transaktionen (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />-Eigenschaft ab oder legt diese fest.</summary>
        <value><see langword="true" />, wenn die <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />-Eigenschaft festgelegt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> auf `true`festlegen, werden Fehler, die zuvor als Ausnahmen behandelt wurden, jetzt als <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Ereignisse behandelt. Alle Ereignisse werden sofort ausgelöst und vom Ereignishandler behandelt. Wenn <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> auf `false`festgelegt ist, werden <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Ereignisse am Ende der Prozedur behandelt.

> [!NOTE]
>  Ein Fehler mit einem Schweregrad von 17 oder höher, der bewirkt, dass der Server die Verarbeitung des Befehls beendet, muss als Ausnahme behandelt werden. In diesem Fall wird unabhängig davon, wie der Fehler im <xref:System.Data.SqlClient.SqlConnection.InfoMessage>-Ereignis behandelt wird, eine Ausnahme ausgelöst.

 Weitere Informationen zum Arbeiten mit Ereignissen finden Sie unter [Verbindungs Ereignisse](~/docs/framework/data/adonet/connection-events.md). Weitere Informationen zu den von der SQL Server-Engine generierten Fehlern finden Sie unter [Datenbank-Engine Fehler](/sql/relational-databases/errors-events/database-engine-events-and-errors).

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connection-events.md">Verbindungsereignisse</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.SqlClient.SqlConnection" /> zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie versuchen, Schema Informationen für mehr als eine gespeicherte Prozedur mit Versions Angabe abzurufen, wird nur das Schema für die aktuelle gespeicherte Prozedur zurückgegeben.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Abrufen von Schema Informationen aus einer Datenbank</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.SqlClient.SqlConnection" /> zurück. Weitere Informationen zu Schemas finden Sie unter [SQL Server-Schemaauflistungen](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Abrufen von Schema Informationen aus einer Datenbank</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
        <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.SqlClient.SqlConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens zurück.</summary>
        <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Möglicherweise benötigen Sie die Schema Informationen der Datenbank, der Tabellen oder der Spalten. Dieses Beispiel:

-   Verwendet GetSchema, um Schema Informationen zu erhalten.

-   Verwenden Sie Schema Einschränkungen, um die angegebenen Informationen zu erhalten.

-   Ruft Schema Informationen der Datenbank, der Tabellen und einiger Spalten ab.

 Bevor Sie das Beispiel ausführen, müssen Sie die-Beispieldatenbank mithilfe der folgenden [!INCLUDE[tsql](~/includes/tsql-md.md)]erstellen:

```
USE [master]
GO

CREATE DATABASE [MySchool]

GO

USE [MySchool]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,
[Year] [smallint] NOT NULL,
[Title] [nvarchar](100) NOT NULL,
[Credits] [int] NOT NULL,
[DepartmentID] [int] NOT NULL,
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED
(
[CourseID] ASC,
[Year] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]

GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,
[Name] [nvarchar](50) NOT NULL,
[Budget] [money] NOT NULL,
[StartDate] [datetime] NOT NULL,
[Administrator] [int] NULL,
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED
(
[DepartmentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]

GO

INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)

SET IDENTITY_INSERT [dbo].[Department] ON

INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)
SET IDENTITY_INSERT [dbo].[Department] OFF

ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])
REFERENCES [dbo].[Department] ([DepartmentID])
GO
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]
GO
```

 C# [Informationen zum erhalten von Schema Informationen aus der-Datenbank finden Sie](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) unter und Visual Basic Versionen dieses Code Beispiels in einem Visual Studio-Projekt.

```csharp
using System;
using System.Data;
using System.Data.SqlClient;

class Program {
   static void Main(string[] args) {

      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {
         conn.Open();

         // Get the Meta Data for Supported Schema Collections
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");

         Console.WriteLine("Meta Data for Supported Schema Collections:");
         ShowDataTable(metaDataTable, 25);
         Console.WriteLine();

         // Get the schema information of Databases in your instance
         DataTable databasesSchemaTable = conn.GetSchema("Databases");

         Console.WriteLine("Schema Information of Databases:");
         ShowDataTable(databasesSchemaTable, 25);
         Console.WriteLine();

         // First, get schema information of all the tables in current database;
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");

         Console.WriteLine("Schema Information of All Tables:");
         ShowDataTable(allTablesSchemaTable, 20);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Table Type to get
         // the specified table(s).
         // You can use four restrictions for Table, so you should create a 4 members array.
         String[] tableRestrictions = new String[4];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Table Type.
         // Now we specify the Table Name of the table what we want to get schema information.
         tableRestrictions[2] = "Course";

         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);

         Console.WriteLine("Schema Information of Course Tables:");
         ShowDataTable(courseTableSchemaTable, 20);
         Console.WriteLine();

         // First, get schema information of all the columns in current database.
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");

         Console.WriteLine("Schema Information of All Columns:");
         ShowColumns(allColumnsSchemaTable);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).
         // You can use four restrictions for Column, so you should create a 4 members array.
         String[] columnRestrictions = new String[4];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Column Name.
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.
         columnRestrictions[2] = "Course";
         columnRestrictions[3] = "DepartmentID";

         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);

         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");
         ShowColumns(departmentIDSchemaTable);
         Console.WriteLine();

         // First, get schema information of all the IndexColumns in current database
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");

         Console.WriteLine("Schema Information of All IndexColumns:");
         ShowIndexColumns(allIndexColumnsSchemaTable);
         Console.WriteLine();

         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to
         // get the specified column(s).
         // You can use five restrictions for Column, so you should create a 5 members array.
         String[] indexColumnsRestrictions = new String[5];

         // For the array, 0-member represents Catalog; 1-member represents Schema;
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.
         indexColumnsRestrictions[2] = "Course";
         indexColumnsRestrictions[4] = "CourseID";

         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);

         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");
         ShowIndexColumns(courseIdIndexSchemaTable);
         Console.WriteLine();
      }

      Console.WriteLine("Please press any key to exit...");
      Console.ReadKey();
   }

   private static void ShowDataTable(DataTable table, Int32 length) {
      foreach (DataColumn col in table.Columns) {
         Console.Write("{0,-" + length + "}", col.ColumnName);
      }
      Console.WriteLine();

      foreach (DataRow row in table.Rows) {
         foreach (DataColumn col in table.Columns) {
            if (col.DataType.Equals(typeof(DateTime)))
               Console.Write("{0,-" + length + ":d}", row[col]);
            else if (col.DataType.Equals(typeof(Decimal)))
               Console.Write("{0,-" + length + ":C}", row[col]);
            else
               Console.Write("{0,-" + length + "}", row[col]);
         }
         Console.WriteLine();
      }
   }

   private static void ShowDataTable(DataTable table) {
      ShowDataTable(table, 14);
   }

   private static void ShowColumns(DataTable columnsTable) {
      var selectedRows = from info in columnsTable.AsEnumerable()
                         select new {
                            TableCatalog = info["TABLE_CATALOG"],
                            TableSchema = info["TABLE_SCHEMA"],
                            TableName = info["TABLE_NAME"],
                            ColumnName = info["COLUMN_NAME"],
                            DataType = info["DATA_TYPE"]
                         };

      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");
      foreach (var row in selectedRows) {
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);
      }
   }

   private static void ShowIndexColumns(DataTable indexColumnsTable) {
      var selectedRows = from info in indexColumnsTable.AsEnumerable()
                         select new {
                            TableSchema = info["table_schema"],
                            TableName = info["table_name"],
                            ColumnName = info["column_name"],
                            ConstraintSchema = info["constraint_schema"],
                            ConstraintName = info["constraint_name"],
                            KeyType = info["KeyType"]
                         };

      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");
      foreach (var row in selectedRows) {
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);
      }
   }
}
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> ist als null angegeben.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Abrufen von Schema Informationen aus einer Datenbank</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
        <param name="restrictionValues">Eine Gruppe von Einschränkungswerten für das angeforderte Schema.</param>
        <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.SqlClient.SqlConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens und des angegebenen Zeichenfolgenarrays der Einschränkungswerte zurück.</summary>
        <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der `restrictionValues`-Parameter kann *n* Tiefe von Werten bereitstellen, die durch die Auflistung der Einschränkungen für eine bestimmte Sammlung angegeben werden. Um Werte für eine bestimmte Einschränkung festzulegen und die Werte anderer Einschränkungen nicht festzulegen, müssen Sie die vorangehenden Einschränkungen auf `null` festlegen und dann den entsprechenden Wert in für die Einschränkung ablegen, für die Sie einen Wert angeben möchten.

 Ein Beispiel hierfür ist die Sammlung "Tables". Wenn die Tabelle "Tables" drei Einschränkungen aufweist:-Datenbank, Besitzer und Tabellenname, und Sie nur die Tabellen zurückgeben möchten, die dem Besitzer "Carl" zugeordnet sind, müssen Sie die folgenden Werte übergeben: NULL, "Carl". Wenn ein Einschränkungs Wert nicht übermittelt wird, werden die Standardwerte für diese Einschränkung verwendet. Dabei handelt es sich um dieselbe Zuordnung wie das Übergeben von `null`, die sich von der Übergabe einer leeren Zeichenfolge für den Parameterwert unterscheidet. In diesem Fall wird die leere Zeichenfolge ("") als der Wert für den angegebenen Parameter betrachtet.

 Ein Codebeispiel, das <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>veranschaulicht, finden Sie unter <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> ist als null angegeben.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Abrufen von Schema Informationen aus einer Datenbank</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn SQL Server eine Warn- oder Informationsmeldung zurückgibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Clients, die Warnungen oder Informationsmeldungen verarbeiten möchten, die vom Server gesendet werden, sollten einen <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> Delegaten erstellen, der auf dieses Ereignis lauscht.

 Das <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Ereignis tritt auf, wenn eine Nachricht mit einem Schweregrad von 10 oder weniger von SQL Server zurückgegeben wird. Meldungen mit einem Schweregrad zwischen 11 und 20 verursachen einen Fehler, und bei Nachrichten mit einem Schweregrad über 20 wird die Verbindung geschlossen. Weitere Informationen zu SQL Server Fehler Ebenen finden Sie unter [Datenbank-Engine Fehler Schweregrade](/sql/relational-databases/errors-events/database-engine-error-severities).

 Weitere Informationen und ein Beispiel finden Sie unter [Verbindungs Ereignisse](~/docs/framework/data/adonet/connection-events.md).

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connection-events.md">Arbeiten mit Verbindungs Ereignissen</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void Open ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet eine Datenbankverbindung mit den von der <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> angegebenen Eigenschafteneinstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn eine Verbindung verfügbar ist, wird vom <xref:System.Data.SqlClient.SqlConnection> eine geöffnete Verbindung aus dem Verbindungspool gezeichnet. Andernfalls stellt Sie eine neue Verbindung mit einer Instanz von SQL Server her.

> [!NOTE]
>  Wenn das <xref:System.Data.SqlClient.SqlConnection> den Gültigkeitsbereich verlässt, wird es nicht geschlossen. Daher müssen Sie die Verbindung explizit schließen, indem Sie <xref:System.Data.SqlClient.SqlConnection.Close%2A>aufrufen.

> [!NOTE]
>  Wenn Sie eine andere Portnummer als 1433 angeben, wenn Sie versuchen, eine Verbindung mit einer Instanz von herzustellen SQL Server und ein anderes Protokoll als TCP/IP verwenden, schlägt die Methode <xref:System.Data.SqlClient.SqlConnection.Open%2A> fehl. Wenn Sie eine andere Portnummer als 1433 angeben möchten, schließen Sie "Server = MachineName, Port Number" in die Verbindungs Zeichenfolge ein, und verwenden Sie das TCP/IP-Protokoll.

> [!NOTE]
>  Die .NET Framework Datenanbieter für SQL Server erfordert die Sicherheits Berechtigung mit aktiviertem "Zulassen von Aufrufen von nicht verwalteten Assemblys" (<xref:System.Security.Permissions.SecurityPermission> mit <xref:System.Security.Permissions.SecurityPermissionFlag> auf `UnmanagedCode`festgelegt), um eine <xref:System.Data.SqlClient.SqlConnection> mit aktiviertem SQL-Debuggen zu öffnen.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection>erstellt, geöffnet und einige ihrer Eigenschaften angezeigt. Die Verbindung wird am Ende des `using` Blocks automatisch geschlossen.

 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ohne Angabe einer Datenquelle oder eines Servers kann keine Verbindung geöffnet werden.

 oder

 Die Verbindung ist bereits geöffnet.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Beim Öffnen der Verbindung ist ein Fehler auf Verbindungsebene aufgetreten. Wenn die <see cref="P:System.Data.SqlClient.SqlException.Number" />-Eigenschaft den Wert 18487 oder 18488 enthält, weist dies darauf hin, dass das angegebene Kennwort abgelaufen ist oder zurückgesetzt werden muss. Weitere Informationen finden Sie unter der <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />-Methode.

Das <see langword="&lt;system.data.localdb&gt;" />-Tag in der Datei „app.config“ enthält ungültige oder unbekannte Elemente.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Im <see langword="&lt;localdbinstances&gt;" />-Abschnitt sind zwei Einträge mit demselben Namen vorhanden.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Verbindungszeichenfolgen in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server-Verbindungspooling (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OpenAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Die Abbruchanweisung.</param>
        <summary>Eine asynchrone Version von <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, die eine Datenbankverbindung mit den Eigenschaftseinstellungen öffnet, die durch <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> angegeben sind. Das Abbruchtoken kann verwendet werden, um anzufordern, dass der Vorgang abgebrochen wird, bevor das Timeout der Verbindung abläuft.  Ausnahmen werden über die zurückgegebene Aufgabe weitergegeben. Wenn die Timeout-Zeit für die Verbindung abläuft, ohne die Verbindung erfolgreich herzustellen, wird die zurückgegebene Aufgabe als fehlgeschlagen mit einer Ausnahme markiert. Die Implementierung gibt eine Aufgabe zurück, ohne den aufrufenden Verbindungs-Thread zu blockieren (gilt auch für Pool-Verbindungen).</summary>
        <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Nach dem Aufrufen von <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>muss <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState.Connecting> zurückgeben, bis die zurückgegebene <xref:System.Threading.Tasks.Task> abgeschlossen ist. Wenn die Verbindung erfolgreich hergestellt wurde, müssen <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState.Open>zurückgeben. Wenn die Verbindung nicht hergestellt werden kann, müssen <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState.Closed>zurückgeben.

 Beim <xref:System.Data.SqlClient.SqlConnection.Close%2A> wird versucht, den entsprechenden <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> Aufrufens abzubrechen oder zu schließen.

 Weitere Informationen zur asynchronen Programmierung in der .NET Framework Datenanbieter für SQL Server finden Sie unter [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md).

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> wird vor dem Abschluss der Aufgabe mehrmals für dieselbe Instanz aufgerufen.

 <see langword="Context Connection=true" /> ist in der Verbindungszeichenfolge angegeben.

Es war keine Verbindung aus dem Verbindungspool verfügbar, bevor ein Timeout für die Verbindung aufgetreten ist.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der Netzwerkpakete in Bytes ab, die zum Kommunizieren mit einer Instanz von SQL Server verwendet werden.</summary>
        <value>Die Größe von Netzwerkpaketen in Bytes. Der Standardwert ist 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn eine Anwendung Massen Kopiervorgänge ausführt oder viele Text-oder Bilddaten sendet oder empfängt, kann eine Paketgröße, die über der Standardgröße liegt, die Effizienz verbessern, da weniger Netzwerk Lese-und Schreibvorgänge ausgelöst werden. Wenn eine Anwendung kleine Mengen von Informationen sendet und empfängt, können Sie die Paketgröße auf 512 Bytes festlegen (unter Verwendung des Paketgrößen Werts in der <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), was für die meisten Datenübertragungs Vorgänge ausreichend ist. Für die meisten Anwendungen empfiehlt sich die Standardpaketgröße.

 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> kann ein Wert im Bereich von 512 bis 32767 Byte sein. Eine Ausnahme wird generiert, wenn der Wert außerhalb dieses Bereichs liegt.

 Das Festlegen des Standardwerts auf eine Zahl größer als 8000 bewirkt, dass die Pakete die MultiPage-Zuweisung für die Instanz von SQL Server anstelle des weitaus effizienteren Singlepage-zuordcators verwenden, wodurch die allgemeine Skalierbarkeit des SQL Server verringert wird. Weitere Informationen zur Verwendung von Arbeitsspeicher durch SQL Server finden Sie im [Handbuch zur Architektur der Speicherverwaltung](/sql/relational-databases/memory-management-architecture-guide).



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection>erstellt, einschließlich der `Packet Size` auf 512 in der Verbindungs Zeichenfolge. Die Eigenschaften <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> und <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> werden im Konsolenfenster angezeigt.

 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle in ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">Die benutzerdefinierten Anbieter</param>
        <summary>Registriert die Schlüsselspeicheranbieter für die Spaltenverschlüsselung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples

```csharp
Dictionary<string, SqlColumnEncryptionKeyStoreProvider> customKeyStoreProviders = new Dictionary<string, SqlColumnEncryptionKeyStoreProvider>();
MySqlClientHSMProvider myProvider = new MySqlClientHSMProvider();
customKeyStoreProviders.Add(@"HSM Provider", myProvider);
SqlConnection.RegisterColumnEncryptionKeyStoreProviders(customKeyStoreProviders)
```
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wenn die Statistikdatenerhebung aktiviert wird, werden alle Werte auf 0 (null) zurückgesetzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn die Statistik Sammlung nicht aktiviert ist und diese Methode aufgerufen wird, wird kein Fehler ausgelöst.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/provider-statistics-for-sql-server.md">Anbieterstatistiken für SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung von Name-Wert-Paaren statistischer Daten zum Zeitpunkt des Methodenaufrufs zurück.</summary>
        <returns>Gibt einen Verweis vom Typ <see cref="T:System.Collections.IDictionary" /> von <see cref="T:System.Collections.DictionaryEntry" />-Elementen zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn diese Methode aufgerufen wird, sind die abgerufenen Werte die Werte zum aktuellen Zeitpunkt. Wenn Sie die Verbindung weiterhin verwenden, sind die Werte falsch. Sie müssen die-Methode erneut ausführen, um die aktuellsten Werte zu erhalten.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/provider-statistics-for-sql-server.md">Anbieterstatistiken für SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="C#" Value="public string ServerVersion { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVersion As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServerVersion { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge mit der Version der SQL Server-Instanz ab, mit der der Client verbunden ist.</summary>
        <value>Die Version der-Instanz SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Version hat das Format *# #. # #. #*# # #, wobei die ersten beiden Ziffern die Hauptversion sind, die nächsten zwei Ziffern die neben Version sind und die letzten vier Ziffern die Releaseversion sind. Die Zeichenfolge hat die Form " *Major. Minor. Build*", wobei "Major" und "Minor" genau zwei Ziffern und "Build" genau vier Ziffern sind.

 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> wurde aufgerufen, während die zurückgegebene Aufgabe nicht abgeschlossen wurde, und die Verbindung wurde nach einem Aufruf von <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> nicht geöffnet.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und die <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>-Eigenschaft angezeigt.

 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung ist geschlossen.

 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> wurde aufgerufen, während die zurückgegebene Aufgabe nicht abgeschlossen wurde, und die Verbindung wurde nach einem Aufruf von <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> nicht geöffnet.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="C#" Value="public System.Data.ConnectionState State { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ConnectionState" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Zustand von <see cref="T:System.Data.SqlClient.SqlConnection" /> während des letzten Netzwerkvorgangs an, der für die Verbindung ausgeführt wurde.</summary>
        <value>Eine <see cref="T:System.Data.ConnectionState" />-Enumeration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Gibt eine <xref:System.Data.ConnectionState> Enumeration zurück, die den Status des <xref:System.Data.SqlClient.SqlConnection>angibt. Wenn Sie die Verbindung schließen und wieder öffnen, wird der Wert <xref:System.Data.SqlClient.SqlConnection.State%2A>aktualisiert.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Verbinden mit einer Datenquelle (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Status der Verbindung ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird für die aktuelle Verbindung die Statistikdatenerhebung aktiviert.</summary>
        <value>Gibt <see langword="true" /> zurück, wenn Statistikdatenerhebungen aktiviert sind, andernfalls <see langword="false" />. <see langword="false" /> ist die Standardeinstellung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das Aktivieren der Statistik Sammlung hat eine geringfügige, aber messliche Auswirkung auf die Leistung und sollte daher nur aktiviert werden, wenn es erforderlich ist.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/provider-statistics-for-sql-server.md">Anbieterstatistiken für SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.BeginTransaction : unit -&gt; System.Data.IDbTransaction&#xA;override this.System.Data.IDbConnection.BeginTransaction : unit -&gt; System.Data.IDbTransaction" Usage="sqlConnection.System.Data.IDbConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beginnt eine Datenbanktransaktion.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
Nachdem die Transaktion abgeschlossen ist, müssen Sie die Transaktion mithilfe der <xref:System.Data.IDbTransaction.Commit>-oder <xref:System.Data.IDbTransaction.Rollback> Methode explizit ausführen oder zurücksetzen.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.IDbTransaction&#xA;override this.System.Data.IDbConnection.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.IDbTransaction" Usage="sqlConnection.System.Data.IDbConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso">Einer der <see cref="T:System.Data.IsolationLevel" />-Werte.</param>
        <summary>Beginnt eine Datenbanktransaktion mit dem angegebenen <see cref="T:System.Data.IsolationLevel" />-Wert.</summary>
        <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
Nachdem die Transaktion abgeschlossen ist, müssen Sie die Transaktion mithilfe der <xref:System.Data.IDbTransaction.Commit>-oder <xref:System.Data.IDbTransaction.Rollback> Methode explizit ausführen oder zurücksetzen.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberSignature Language="F#" Value="abstract member System.Data.IDbConnection.CreateCommand : unit -&gt; System.Data.IDbCommand&#xA;override this.System.Data.IDbConnection.CreateCommand : unit -&gt; System.Data.IDbCommand" Usage="sqlConnection.System.Data.IDbConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Command-Objekt, das der Verbindung zugeordnet ist, und gibt dieses zurück.</summary>
        <returns>Ein Command-Objekt, das der Verbindung zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="sqlConnection.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
        <returns>Ein neues Objekt, das eine Kopie dieser Instanz darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlConnection>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.

 Dieser Member wird nur vom .NET Compact Framework unterstützt.

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Datenbankclient bezeichnet.</summary>
        <value>Eine Zeichenfolge, die den Datenbankclient bezeichnet. Wenn diese nicht angegeben ist, wird der Name des Clientcomputers verwendet. Wenn beides nicht angegeben wurde, ist der Wert eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Zeichenfolge enthält normalerweise den Netzwerknamen des Clients. Die <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>-Eigenschaft entspricht der Eigenschaft `Workstation ID`-Verbindungs Zeichenfolge.



## Examples
 Im folgenden Beispiel wird eine <xref:System.Data.SqlClient.SqlConnection> erstellt und die <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>-Eigenschaft angezeigt.

 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server und ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
