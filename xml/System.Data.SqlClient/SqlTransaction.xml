<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="579e95212cf9221715b6dddcc77959d010948046" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37671534" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlTransaction = class&#xA;    inherit DbTransaction&#xA;    interface IDbTransaction&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b704f-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b704f-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      </span>
      <span data-ttu-id="b704f-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b704f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-103">Die Anwendung erstellt eine <xref:System.Data.SqlClient.SqlTransaction> Objekt durch Aufrufen von <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> auf die <xref:System.Data.SqlClient.SqlConnection> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b704f-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="b704f-104">Alle nachfolgende Vorgänge, die der Transaktion (z. B. Commit oder Abbruch der Transaktion) zugeordnet werden ausgeführt, auf die <xref:System.Data.SqlClient.SqlTransaction> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b704f-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b704f-105">`Try`/`Catch` Behandlung von Ausnahmen sollten immer verwendet werden, wenn ein Commit oder Rollback einer <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-106">Beide <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generieren eine <xref:System.InvalidOperationException> , wenn die Verbindung beendet wird oder die Transaktion auf dem Server bereits ein Rollback durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="b704f-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="b704f-107">Weitere Informationen zu SQL Server-Transaktionen, finden Sie unter [explizite Transaktionen](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) und [Codieren effizienter Transaktionen](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span><span class="sxs-lookup"><span data-stu-id="b704f-107">For more information on SQL Server transactions, see [Explicit Transactions](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b704f-108">Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-109">Außerdem wird veranschaulicht, wie Sie mit der <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="b704f-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="b704f-110">Die Transaktion ein Rollback für alle Fehler, oder wenn es, ohne zuerst verworfen wird ein Commit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b704f-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="b704f-111">`Try`/`Catch` Fehlerbehandlung wird zum Behandeln von Fehlern beim Versuch, einen commit oder Rollback der Transaktions.</span><span class="sxs-lookup"><span data-stu-id="b704f-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="sqlTransaction.Commit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b704f-112">Commits the database transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-112">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-113">Die <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Methode entspricht der Transact-SQL-COMMIT TRANSACTION-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="b704f-113">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="b704f-114">Sie können keine Transaktion zurücksetzen, nachdem sie ein Commit ausgeführt wurde, da alle Änderungen dauerhaft in der Datenbank geworden sind.</span><span class="sxs-lookup"><span data-stu-id="b704f-114">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="b704f-115">Weitere Informationen dazu finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-115">For more information, see SQL Server Books Online.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b704f-116">`Try`/`Catch` Behandlung von Ausnahmen sollten immer verwendet werden, wenn ein Commit oder Rollback einer <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-116">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-117">Beide `Commit` und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generiert eine <xref:System.InvalidOperationException> , wenn die Verbindung beendet wird oder die Transaktion auf dem Server bereits ein Rollback durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="b704f-117">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="b704f-118">Weitere Informationen zu SQL Server-Transaktionen finden Sie unter "Explizite Transaktionen" und "Codieren effizienter Transaktionen" in SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-118">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b704f-119">Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-119">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-120">Außerdem wird veranschaulicht, wie Sie mit der <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="b704f-120">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="b704f-121">Die Transaktion wird bei jedem Fehler ein Rollback ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b704f-121">The transaction is rolled back on any error.</span></span> <span data-ttu-id="b704f-122">`Try`/`Catch` Fehlerbehandlung wird zum Behandeln von Fehlern beim Versuch, einen commit oder Rollback der Transaktions.</span><span class="sxs-lookup"><span data-stu-id="b704f-122">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="b704f-123">An error occurred while trying to commit the transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-123">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b704f-124">The transaction has already been committed or rolled back.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-124">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="b704f-125">-or-  The connection is broken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-125">-or-  The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b704f-126">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-126">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b704f-127">Ein <see cref="T:System.Data.SqlClient.SqlConnection" />-Objekt, das der Transaktion zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-127">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-128">Eine einzelne Anwendung kann mehrere Datenbankverbindungen mit NULL oder mehr Transaktionen verfügen.</span><span class="sxs-lookup"><span data-stu-id="b704f-128">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="b704f-129">Mit dieser Eigenschaft können Sie bestimmen, das Verbindungsobjekt, das eine bestimmte Transaktion, die von erstellten zugeordnet <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="b704f-129">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection" Usage="System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sqlTransaction.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlTransaction.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b704f-130">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-130">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b704f-131">Der <see cref="T:System.Data.IsolationLevel" /> für diese Transaktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-131">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="b704f-132">Die Standardeinstellung ist <see langword="ReadCommitted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-132">The default is <see langword="ReadCommitted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-133">Parallele Transaktionen werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="b704f-133">Parallel transactions are not supported.</span></span> <span data-ttu-id="b704f-134">Aus diesem Grund die <xref:System.Data.IsolationLevel> gilt für die gesamte Transaktion.</span><span class="sxs-lookup"><span data-stu-id="b704f-134">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="b704f-135">Weitere Informationen zu SQL Server-Isolationsstufen finden Sie unter "Isolation Levels in der Datenbank-Engine" in SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-135">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b704f-136">Rolls back a transaction from a pending state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-136">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberSignature Language="F#" Value="override this.Rollback : unit -&gt; unit" Usage="sqlTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b704f-137">Rolls back a transaction from a pending state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-137">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-138">Die <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode entspricht der Transact-SQL-ROLLBACK TRANSACTION-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="b704f-138">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="b704f-139">Weitere Informationen dazu finden Sie in der SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-139">For more information, see SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="b704f-140">Die Transaktion kann nur ein Rollback von Status "Ausstehend" (nach <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> aufgerufen wurde, jedoch bevor <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> aufgerufen wird).</span><span class="sxs-lookup"><span data-stu-id="b704f-140">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="b704f-141">Die Transaktion wird ein Rollback ausgeführt, verworfen wird, bevor Sie `Commit` oder `Rollback` aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b704f-141">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b704f-142">`Try`/`Catch` Behandlung von Ausnahmen sollten immer verwendet werden, wenn Rollback einer Transaktion.</span><span class="sxs-lookup"><span data-stu-id="b704f-142">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="b704f-143">Ein `Rollback` generiert eine <xref:System.InvalidOperationException> , wenn die Verbindung beendet wird oder die Transaktion auf dem Server bereits ein Rollback durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="b704f-143">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="b704f-144">Weitere Informationen zu SQL Server-Transaktionen finden Sie unter "Explizite Transaktionen" und "Codieren effizienter Transaktionen" in SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-144">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b704f-145">Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-145">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-146">Außerdem wird veranschaulicht, wie Sie mit der <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="b704f-146">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="b704f-147">Die Transaktion wird bei jedem Fehler ein Rollback ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b704f-147">The transaction is rolled back on any error.</span></span> <span data-ttu-id="b704f-148">`Try`/`Catch` Fehlerbehandlung wird zum Behandeln von Fehlern beim Versuch, einen commit oder Rollback der Transaktions.</span><span class="sxs-lookup"><span data-stu-id="b704f-148">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="b704f-149">An error occurred while trying to commit the transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-149">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b704f-150">The transaction has already been committed or rolled back.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-150">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="b704f-151">-or-  The connection is broken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-151">-or-  The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.Rollback : string -&gt; unit" Usage="sqlTransaction.Rollback transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="b704f-152">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-152">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b704f-153">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-153">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-154">Die <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode entspricht der Transact-SQL-ROLLBACK TRANSACTION-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="b704f-154">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="b704f-155">Weitere Informationen finden Sie unter "Explizite Transaktionen" und "Transaktionssicherungspunkte" in SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-155">For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="b704f-156">Die Transaktion kann nur ein Rollback von Status "Ausstehend" (nach <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> aufgerufen wurde, jedoch bevor <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> aufgerufen wird).</span><span class="sxs-lookup"><span data-stu-id="b704f-156">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="b704f-157">Die Transaktion wird ein Rollback ausgeführt, wenn es, bevor verworfen wird `Commit` oder `Rollback` aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b704f-157">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b704f-158">`Try`/`Catch` Behandlung von Ausnahmen sollten immer verwendet werden, wenn Rollback einer Transaktion.</span><span class="sxs-lookup"><span data-stu-id="b704f-158">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="b704f-159">Ein `Rollback` generiert eine <xref:System.InvalidOperationException> , wenn die Verbindung beendet wird oder die Transaktion auf dem Server bereits ein Rollback durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="b704f-159">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="b704f-160">Weitere Informationen zu SQL Server-Transaktionen finden Sie unter "Explizite Transaktionen" und "Codieren effizienter Transaktionen" in SQL Server-Onlinedokumentation.</span><span class="sxs-lookup"><span data-stu-id="b704f-160">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b704f-161">Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b704f-161">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="b704f-162">Außerdem wird veranschaulicht, wie Sie mit der <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, und <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="b704f-162">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="b704f-163">Die Transaktion wird bei jedem Fehler ein Rollback ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b704f-163">The transaction is rolled back on any error.</span></span> <span data-ttu-id="b704f-164">`Try`/`Catch` Fehlerbehandlung wird zum Behandeln von Fehlern beim Versuch, einen commit oder Rollback der Transaktions.</span><span class="sxs-lookup"><span data-stu-id="b704f-164">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b704f-165">No transaction name was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-165">No transaction name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b704f-166">The transaction has already been committed or rolled back.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-166">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="b704f-167">-or-  The connection is broken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-167">-or-  The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="sqlTransaction.Save savePointName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName">
          <span data-ttu-id="b704f-168">The name of the savepoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-168">The name of the savepoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b704f-169">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-169">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b704f-170"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> Methode ist gleichwertig mit der Transact-SQL-SAVE TRANSACTION-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="b704f-170"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="b704f-171">Der Wert, der verwendet wird, der `savePoint` Parameter kann den gleichen Wert verwendet werden die `transactionName` Parameter von einigen Implementierungen von der <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b704f-171">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="b704f-172">Sicherungspunkte bieten einen Mechanismus, um Teile von Transaktionen ein Rollback auszuführen.</span><span class="sxs-lookup"><span data-stu-id="b704f-172">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="b704f-173">Erstellen Sie einen Sicherungspunkt mit dem <xref:System.Data.SqlClient.SqlTransaction.Save%2A> -Methode, und klicken Sie dann später rufen die <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Methode, um ein Rollback zum Sicherungspunkt anstatt Rollback zum Anfang der Transaktion.</span><span class="sxs-lookup"><span data-stu-id="b704f-173">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="b704f-174">An error occurred while trying to commit the transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-174">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b704f-175">The transaction has already been committed or rolled back.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-175">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="b704f-176">-or-  The connection is broken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b704f-176">-or-  The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>