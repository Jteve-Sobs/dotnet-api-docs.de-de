<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopy.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15913de004f355c8ec72b363a3a33c142db5cfa36d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913de004f355c8ec72b363a3a33c142db5cfa36d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Lets you efficiently bulk load a SQL Server table with data from another source.</source>
          <target state="translated">Ermöglicht den effizienten Massenladevorgang einer SQL Server-Tabelle mit Daten aus einer anderen Quelle.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Microsoft SQL Server includes a popular command-prompt utility named <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> for moving data from one table to another, whether on a single server or between servers.</source>
          <target state="translated">Microsoft SQL Server enthält ein beliebtes Befehlszeilen-Hilfsprogramm namens <bpt id="p1">**</bpt>Bcp<ept id="p1">**</ept> zum Verschieben von Daten aus einer Tabelle in eine andere, ob auf einem einzelnen Server oder zwischen Servern.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class lets you write managed code solutions that provide similar functionality.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> -Klasse können Sie verwaltete codelösungen schreiben, die ähnliche Funktionalität bereitstellen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>There are other ways to load data into a SQL Server table (INSERT statements, for example), but <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> offers a significant performance advantage over them.</source>
          <target state="translated">Es gibt andere Möglichkeiten zum Laden von Daten in eine SQL Server-Tabelle (INSERT-Anweisungen, z. B.), aber <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> bietet einen erheblichen Leistungsvorteil.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class can be used to write data only to SQL Server tables.</source>
          <target state="translated">Mit der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>-Klasse können Daten nur in SQL Server-Tabellen geschrieben werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance or read with a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Die Datenquelle ist jedoch nicht auf SQL Server beschränkt; Jede Datenquelle kann verwendet werden, so lange die Daten können, um geladen werden eine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> -Instanz ein, oder Lesen Sie mit einer <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> will fail when bulk loading a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column of type <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> schlägt fehl, wenn Massenladen ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Spalte vom Typ <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> in einer SQL-Server hinzugefügt, dessen Typ einer der Typen Datum/Uhrzeit ist-Spalte in SQL Server 2008.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The following console application demonstrates how to load data using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class.</source>
          <target state="translated">In der folgenden Konsolenanwendung wird veranschaulicht, wie Daten mithilfe der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>-Klasse geladen werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">In diesem Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> dient zum Kopieren von Daten aus der <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> Tabelle in der SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> Datenbank in eine ähnliche Tabelle in der gleichen Datenbank.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy operation.</source>
          <target state="translated">Die bereits geöffnete <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Instanz, mit der Massenkopiervorgänge ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Wenn die Verbindungszeichenfolge nicht <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> verwendet, können Sie <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> verwenden, um die Benutzer-ID und das Kennwort sicherer zu übergeben, als wenn Sie die Benutzer-ID und das Kennwort als Text in der Verbindungszeichenfolge angeben.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the specified open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Initialisiert mit der angegebenen geöffneten Instanz von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> eine neue Instanz der <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Because the connection is already open when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is initialized, the connection remains open after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">Da die Verbindung bereits geöffnet wann ist die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Instanz initialisiert wird, die Verbindung bleibt nach der <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> -Instanz geschlossen ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">`connection`</ph> argument is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">`connection`</ph> Argument ist null, ein <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten mithilfe einer Verbindung, die bereits geöffnet ist.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">In diesem Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> dient zum Kopieren von Daten aus der <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> Tabelle in der SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> Datenbank in eine ähnliche Tabelle in der gleichen Datenbank.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This example is for demonstration purposes only.</source>
          <target state="translated">Das Beispiel dient nur der Veranschaulichung.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>You would not use <ph id="ph1">`SqlBulkCopy`</ph> to move data from one table to another in the same database in a production application.</source>
          <target state="translated">Verwenden Sie nicht <ph id="ph1">`SqlBulkCopy`</ph> zum Verschieben von Daten aus einer Tabelle in eine andere in der gleichen Datenbank in einer produktionsanwendung.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Beachten Sie, dass die Quelldaten nicht auf SQL Server befinden. können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Die Zeichenfolge zur Definition der Verbindung, die für die <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Instanz geöffnet wird.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Wenn die Verbindungszeichenfolge nicht <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> verwendet, können Sie <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> oder <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> und <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> verwenden, um die Benutzer-ID und das Kennwort sicherer zu übergeben, als wenn Sie die Benutzer-ID und das Kennwort als Text in der Verbindungszeichenfolge angeben.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Initialisiert und öffnet auf Grundlage des angegebenen <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The constructor uses the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Der Konstruktor initialisiert mithilfe von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> eine neue Instanz der <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed at the end of the bulk copy operation.</source>
          <target state="translated">Die Verbindung wird am Ende des Massenkopiervorgangs automatisch geschlossen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">`connectionString`</ph> ist null, ein <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is an empty string, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">`connectionString`</ph> ist eine leere Zeichenfolge ein <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The following console application demonstrates how to bulk load data by using a connection specified as a string.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten über eine Verbindung als Zeichenfolge angegeben wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">Die Verbindung wird automatisch geschlossen, wenn die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> -Instanz geschlossen ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel werden zunächst die Quelldaten aus einer SQL Server-Tabelle zu lesen eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Die Quelldaten muss nicht in SQL Server befinden; können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Die Zeichenfolge zur Definition der Verbindung, die für die <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Instanz geöffnet wird.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Wenn die Verbindungszeichenfolge nicht <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> verwendet, können Sie <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> oder <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> und <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> verwenden, um die Benutzer-ID und das Kennwort sicherer zu übergeben, als wenn Sie die Benutzer-ID und das Kennwort als Text in der Verbindungszeichenfolge angeben.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Eine Kombination von Werten aus der <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph>-Enumeration, die festlegt, welche Zeilen der Datenquelle in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Initialisiert und öffnet auf Grundlage des angegebenen <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> eine neue Instanz von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The constructor uses that <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Der Konstruktor initialisiert mithilfe von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> eine neue Instanz der <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Instanz verhält sich entsprechend den Optionen, die im <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>-Parameter angegeben wurden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>You can obtain detailed information about all the bulk copy options in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> topic.</source>
          <target state="translated">Sie erhalten ausführliche Informationen zu allen Massenkopieroptionen in die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> Thema.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</source>
          <target state="translated">Die folgenden Konsolenanwendung wird veranschaulicht, wie ein Massenladen durchgeführt wird, wird mithilfe einer Verbindungs als Zeichenfolge angegeben wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An option is set to use the value in the identity column of the source table when you load the destination table.</source>
          <target state="translated">Eine Option festgelegt ist, verwenden Sie den Wert in der Identitätsspalte der Quelltabelle, wenn die Zieltabelle zu laden.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel werden zunächst die Quelldaten aus einer SQL Server-Tabelle zu lesen eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The source table and destination table each include an Identity column.</source>
          <target state="translated">Die Quell- und Zieltabelle jeweils einschließen eine Identitätsspalte</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>By default, a new value for the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column is generated in the destination table for each row added.</source>
          <target state="translated">Standardmäßig wird ein neuer Wert für die <bpt id="p1">**</bpt>Identität<ept id="p1">**</ept> Spalte wird in der Zieltabelle für jede hinzugefügte Zeile generiert.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, an option is set when the connection is opened that forces the bulk load process to use the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> values from the source table instead.</source>
          <target state="translated">In diesem Beispiel wird eine Option festgelegt ist, wenn die Verbindung geöffnet wird, die den Massenladevorgang verwenden die <bpt id="p1">**</bpt>Identität<ept id="p1">**</ept> Werte aus der Quelltabelle stattdessen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">Um festzustellen, wie die Option die Funktionsweise des Bulk Load, führen Sie das Beispiel mit ändert die <bpt id="p1">**</bpt>Dbo. BulkCopyDemoMatchingColumns<ept id="p1">**</ept> Tabelle leer.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>All rows load from the source.</source>
          <target state="translated">Alle Zeilen aus der Quelle geladen werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Then run the sample again without emptying the table.</source>
          <target state="translated">Führen Sie das Beispiel erneut aus, ohne die Tabelle zu leeren.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</source>
          <target state="translated">Eine Ausnahme wird ausgelöst, und der Code schreibt eine Meldung an die Konsole, die Sie informiert, dass Zeilen aufgrund von Verletzungen der primary Key-Einschränkung hinzugefügt wurden nicht.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy.</source>
          <target state="translated">Die bereits geöffnete <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Instanz, mit der der Massenkopiervorgang ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Wenn die Verbindungszeichenfolge nicht <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph> verwendet, können Sie <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> verwenden, um die Benutzer-ID und das Kennwort sicherer zu übergeben, als wenn Sie die Benutzer-ID und das Kennwort als Text in der Verbindungszeichenfolge angeben.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Eine Kombination von Werten aus der <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph>-Enumeration, die festlegt, welche Zeilen der Datenquelle in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>An existing <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> instance under which the bulk copy will occur.</source>
          <target state="translated">Eine vorhandene <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>-Instanz, unter der der Massenkopiervorgang ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the supplied existing open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Initialisiert mit der angegebenen geöffneten Instanz von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> eine neue Instanz der <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Instanz verhält sich entsprechend den Optionen, die im <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>-Parameter angegeben wurden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If a non-null <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> is supplied, the copy operations will be performed within that transaction.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> auf einen anderen Wert als NULL festgelegt wird, werden die Kopiervorgänge innerhalb dieser Transaktion ausgeführt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If options include <ph id="ph1">`UseInternalTransaction`</ph> and the <ph id="ph2">`externalTransaction`</ph> argument is not null, an <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> is thrown.</source>
          <target state="translated">Wenn Optionen umfassen <ph id="ph1">`UseInternalTransaction`</ph> und <ph id="ph2">`externalTransaction`</ph> Argument ist nicht null, ein <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>For examples demonstrating how to use <ph id="ph1">`SqlBulkCopy`</ph> in a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Beispiele zur Veranschaulichung der Verwendung <ph id="ph1">`SqlBulkCopy`</ph> in einer Transaktion finden Sie unter <bpt id="p1">[</bpt>Transaktionen und Massenkopiervorgänge<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Number of rows in each batch.</source>
          <target state="translated">Anzahl der Zeilen in jedem Batch.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>At the end of each batch, the rows in the batch are sent to the server.</source>
          <target state="translated">Am Ende jedes Batches werden die Zeilen im Batch an den Server gesendet.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> property, or zero if no value has been set.</source>
          <target state="translated">Der ganzzahlige Wert der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph>-Eigenschaft oder 0 (null), wenn kein Wert festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>A batch is complete when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows have been processed or there are no more rows to send to the destination data source.</source>
          <target state="translated">Ein Batch ist abgeschlossen, wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> Zeilen verarbeitet wurden, oder es sind keine weiteren Zeilen zum Senden an die Zieldatenquelle.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Zero (the default) indicates that each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is a single batch.</source>
          <target state="translated">0 (null) (Standard) gibt an, dass jedes <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Vorgang ein einzelner Batch ist.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance has been declared without the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> option in effect, rows are sent to the server <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows at a time, but no transaction-related action is taken.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Instanz deklariert wurde, ohne die <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> Option aktiviert ist, werden die Zeilen an den Server gesendet <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> Zeilen auf eine Zeit, jedoch keine transaktionsbezogene Aktion stammt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is in effect, each batch of rows is inserted as a separate transaction.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> gültig ist, wird jeder Zeilenbatch wird als separate Transaktion eingefügt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> property can be set at any time.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> Eigenschaft kann zu einem beliebigen Zeitpunkt festgelegt werden.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</source>
          <target state="translated">Wenn bereits ein Massenkopiervorgang ausgeführt wird, wird der aktuelle Batch entsprechend der vorherigen Batchgröße angepasst.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Subsequent batches use the new size.</source>
          <target state="translated">Nachfolgende Batches verwenden die neue Größe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> is initially zero and changed while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is already in progress, that operation loads the data as a single batch.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> ist anfangs 0 (null) und geändert wurden, während ein <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Vorgang wird bereits ausgeführt, Vorgang die Daten als einzelner Batch geladen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Any subsequent <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operations on the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance use the new <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">Jeder nachfolgende <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Vorgänge auf dem gleichen <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Instanz verwenden Sie die neue <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The following console application demonstrates how to bulk load data in batches of 50 rows.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten in Batches von 50 Zeilen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>For an example illustrating how <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> works with a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Ein Beispiel zur Veranschaulichung wie <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> mit einer Transaktion finden Sie unter <bpt id="p1">[</bpt>Transaktionen und Massenkopiervorgänge<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel werden zunächst die Quelldaten aus einer SQL Server-Tabelle zu lesen eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Die Quelldaten muss nicht in SQL Server befinden; können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>Number of seconds for the operation to complete before it times out.</source>
          <target state="translated">Anzahl der Sekunden zum Abschließen des Vorgangs, bevor ein Timeout auftritt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> property.</source>
          <target state="translated">Der ganzzahlige Wert der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph>-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">Der Standardwert ist 30 Sekunden.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>A value of 0 indicates no limit; the bulk copy will wait indefinitely.</source>
          <target state="translated">Der Wert 0 steht für eine unbegrenzte Wartezeit für das Massenkopieren.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</source>
          <target state="translated">Wenn der Vorgang Timeout verwendet wird, die Transaktion wurde kein Commit ausgeführt, und alle kopierte Zeilen werden aus der Zieltabelle entfernt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie so ändern Sie das Timeout auf 60 Sekunden beim Massenkopieren das Laden der Daten.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel werden zunächst die Quelldaten aus einer SQL Server-Tabelle zu lesen eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Die Quelldaten muss nicht in SQL Server befinden; können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph2">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit einer <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> <ph id="ph2">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Schließt die <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>After you call a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object, no other operation will succeed.</source>
          <target state="translated">Nach dem Aufruf einer <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> auf die <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Objekt kein weiterer Vorgang wird erfolgreich ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Aufrufe von der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Methode löst eine <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method from the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> to be thrown.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> Methode aus der <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> -Ereignisses bewirkt, dass ein <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Note that open <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instances are closed implicitly at the end of a <ph id="ph2">`using`</ph> block.</source>
          <target state="translated">Beachten Sie, dass geöffnete <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Instanzen sind implizit geschlossen, am Ende einer <ph id="ph2">`using`</ph> Block.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The following example uses the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to add sales orders and their associated details to two destination tables.</source>
          <target state="translated">Im folgenden Beispiel wird die gleiche <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Instanz, die von Aufträgen und ihre zugehörigen Details in zwei Zieltabellen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Because the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</source>
          <target state="translated">Da die <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Verkaufsauftrag Tabellen groß sind, im Beispiel liest nur von einer bestimmten Kontonummer aufgegebenen Bestellungen und per Massenvorgang kopiert diese Aufträge und die Details in die Zieltabellen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method is used only after both bulk copy operations are complete.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> Methode wird verwendet, nur, nachdem beide Massenkopiervorgänge abgeschlossen sind.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items.</source>
          <target state="translated">Gibt eine Auflistung von <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>-Elementen zurück.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Column mappings define the relationships between columns in the data source and columns in the destination.</source>
          <target state="translated">Spaltenzuordnungen definieren die Beziehungen zwischen Spalten in der Datenquelle und den Spalten im Ziel.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>A collection of column mappings.</source>
          <target state="translated">Eine Auflistung von Spaltenzuordnungen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>By default, it is an empty collection.</source>
          <target state="translated">Standardmäßig ist es eine leere Auflistung.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is unnecessary.</source>
          <target state="translated">Wenn die Datenquelle und die Zieltabelle die gleiche Anzahl von Spalten müssen und die Ordnungsposition der einzelnen Quellspalten an, innerhalb der Datenquelle, die Ordnungsposition der entsprechenden Zielspalte übereinstimmt der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> Auflistung ist nicht erforderlich.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>However, if the column counts differ, or the ordinal positions are not consistent, you must use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> to make sure that data is copied into the correct columns.</source>
          <target state="translated">Wenn jedoch die Spalte Zahlen abweichen, oder die Ordnungspositionen für stimmen nicht überein, Sie müssen verwenden <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> um sicherzustellen, dass Daten in die richtigen Spalten kopiert werden.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</source>
          <target state="translated">Während der Ausführung eines Massenkopiervorgangs diese Auflistung kann zugegriffen werden, jedoch nicht geändert werden kann.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Any attempt to change it will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Jeder Versuch, ihn zu ändern löst eine <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>Name of the destination table on the server.</source>
          <target state="translated">Der Name der Zieltabelle auf dem Server.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The string value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property, or null if none as been supplied.</source>
          <target state="translated">Der Zeichenfolgenwert der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft oder NULL, wenn kein Wert angegeben wurde.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> has not been set when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> is called, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> nicht festgelegt wurde beim <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> aufgerufen wird, eine <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is modified while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is running, the change does not affect the current operation.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> wird geändert, während ein <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Vorgang ausgeführt wird, die Änderung wirkt sich nicht auf den aktuellen Vorgang.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> value is used the next time a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called.</source>
          <target state="translated">Die neue <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> Wert wird verwendet, das nächste Mal eine <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is a three-part name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> ist ein dreiteiliger Name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can qualify the table name with its database and owning schema if you choose.</source>
          <target state="translated">Falls gewünscht, können Sie den Tabellennamen mit seiner Datenbank und dem besitzenden Schema qualifizieren.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</source>
          <target state="translated">Jedoch, wenn der Tabellenname ein Unterstrich ("_") oder ein anderes Sonderzeichen verwendet, Sie müssen mit Escapezeichen versehen mithilfe von Klammern wie in den Namen (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>For more information, see "Identifiers" in SQL Server Books Online.</source>
          <target state="translated">Weitere Informationen finden Sie unter "Bezeichner" in SQL Server-Onlinedokumentation.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can bulk-copy data to a temporary table by using a value such as <ph id="ph1">`tempdb..#table`</ph> or <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> property.</source>
          <target state="translated">Können Sie das Massenkopieren von Daten in eine temporäre Tabelle mit einem Wert wie z. B. <ph id="ph1">`tempdb..#table`</ph> oder <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> für die <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten mithilfe einer Verbindung, die bereits geöffnet ist.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">Die Zieltabelle ist eine Tabelle in der <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel wird zunächst die Verbindung zum Lesen von Daten aus einer SQL Server-Tabelle, verwendet eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Die Quelldaten muss nicht in SQL Server befinden; können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>Enables or disables a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object to stream data from an <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object</source>
          <target state="translated">Aktiviert oder deaktiviert ein <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt zum Streamen von Daten aus einem <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>-Objekt</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object can stream data from an <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt Daten von einem <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>-Objekt streamen kann, andernfalls „false“.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> reads from an <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> object using <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizing memory usage by using the <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> streaming capabilities.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> ist <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> liest aus einer <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> -Objekt unter Verwendung <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, Optimieren der speicherauslastung mit der <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> Streamingfunktionen.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When it’s set to false, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class loads all the data returned by the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object into memory before sending it to SQL Server or SQL Azure.</source>
          <target state="translated">Wenn sie auf "false" festgelegt ist die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Klasse lädt alle Daten, die zurückgegeben werden, indem Sie die <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> Objekt in den Speicher vor dem Senden an SQL Server oder SQL Azure.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Defines the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Definiert die Anzahl der Zeilen, die verarbeitet werden, bevor ein Benachrichtigungsereignis generiert wird.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property, or zero if the property has not been set.</source>
          <target state="translated">Der Ganzzahlwert der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph>-Eigenschaft oder 0 (null), wenn die Eigenschaft nicht festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This property is designed for user interface components that illustrate the progress of a bulk copy operation.</source>
          <target state="translated">Diese Eigenschaft ist für Benutzeroberflächenkomponenten vorgesehen, die den Fortschritt eines Massenkopiervorgangs veranschaulichen.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>It indicates the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Er gibt an, die Anzahl der Zeilen verarbeitet werden, bevor ein Benachrichtigungsereignis generiert.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property can be set at any time, even while a bulk copy operation is underway.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> Eigenschaft kann zu einem beliebigen Zeitpunkt festgelegt werden, auch wenn ein Massenkopiervorgang ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Changes made during a bulk copy operation take effect after the next notification.</source>
          <target state="translated">Während eines Massenkopiervorgangs vorgenommenen Änderungen werden wirksam, nachdem die nächste Benachrichtigung.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The new setting applies to all subsequent operations on the same instance.</source>
          <target state="translated">Die neue Einstellung gilt für alle nachfolgenden Vorgänge in der gleichen Instanz.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> is set to a number less than zero, an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> legen Sie auf eine Zahl kleiner als 0 (null) ist, wird eine <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten mithilfe einer Verbindung, die bereits geöffnet ist.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> Eigenschaft festgelegt ist, damit der Ereignishandler aufgerufen wird, nachdem alle 50 Zeilen in der Tabelle kopiert.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel wird zunächst die Verbindung zum Lesen von Daten aus einer SQL Server-Tabelle, verwendet eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Then a second connection is opened to bulk copy the data.</source>
          <target state="translated">Und dann eine zweite Verbindung geöffnet wird, um die Daten das Massenkopieren.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Beachten Sie, dass die Quelldaten nicht auf SQL Server befinden. können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Occurs every time that the number of rows specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property have been processed.</source>
          <target state="translated">Tritt jedesmal auf, wenn die in der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph>-Eigenschaft angegebene Zeilenanzahl verarbeitet wurde.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the settings of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> are independent.</source>
          <target state="translated">Beachten Sie, dass die Einstellungen der <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> sind unabhängig voneinander.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Receipt of a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event does not imply that any rows have been sent to the server or committed.</source>
          <target state="translated">Bestätigung für eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> Ereignis bedeutet nicht, dass alle Zeilen an den Server gesendet, oder ein Commit ausgeführt wurde.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>You cannot call SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) or SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) from this event.</source>
          <target state="translated">Sie können SqlBulkCopy.Close nicht aufrufen (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) oder SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) aus diesem Ereignis.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Doing this will cause an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state will not change.</source>
          <target state="translated">Dadurch wird ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird, und die <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> Objektzustand ändert sich nicht.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the user wants to cancel the operation from the event, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> can be used.</source>
          <target state="translated">Wenn der Benutzer den Vorgang aus dem Ereignis abbrechen möchte die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> Eigenschaft des der <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> kann verwendet werden.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>(See <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> for examples that use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property.)</source>
          <target state="translated">(Siehe <bpt id="p1">[</bpt>Transaktionen und Massenkopiervorgänge<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> für Beispiele, in denen die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> Eigenschaft.)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event.</source>
          <target state="translated">Keine Aktion, z. B. Transaktionsaktivität, wird die Verbindung während der Ausführung der Massenkopiervorgang unterstützt, und es wird empfohlen, nicht die gleiche Verbindung verwendet wird, während die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>However, you can open a different connection.</source>
          <target state="translated">Allerdings können Sie eine andere Verbindung öffnen.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten mithilfe einer Verbindung, die bereits geöffnet ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> Eigenschaft festgelegt ist, damit der Ereignishandler aufgerufen wird, nachdem alle 50 Zeilen in der Tabelle kopiert.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">In diesem Beispiel wird zunächst die Verbindung zum Lesen von Daten aus einer SQL Server-Tabelle, verwendet eine <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Beachten Sie, dass die Quelldaten nicht auf SQL Server befinden. können Sie jede Datenquelle, die zu lesende ein <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> oder Laden in ein <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Gibt alle von der aktuellen Instanz der <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Klasse verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">`Dispose`</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">`Dispose`</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">`Dispose`</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">`Dispose`</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Copies all rows from a data source to a destination table specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert alle Zeilen aus einer Datenquelle in eine Zieltabelle, die von der <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Wenn mehrere aktive Resultsets (MARS) deaktiviert ist, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> stellt die Verbindung belegt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Wenn MARS aktiviert ist, können Sie Aufrufe von interleave <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> mit anderen Befehlen in derselben Verbindung.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert alle Zeilen aus dem bereitgestellten <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>-Array in eine Zieltabelle, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten, die in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert alle Zeilen aus dem bereitgestellten <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Array in eine Zieltabelle, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Während des Massenkopiervorgangs ausgeführt, das Ziel zugeordneten wird <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> Informationsfluss ausgelastet ist und keine anderen Vorgänge für die Verbindung ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columns to the destination database table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> -Auflistung ordnet die <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> Spalten in die Zieltabelle der Datenbank.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten aus einem <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> Array.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">Die Zieltabelle ist eine Tabelle in der <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time.</source>
          <target state="translated">In diesem Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> zur Laufzeit erstellt wird.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>A single row is selected from the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to copy to the destination table.</source>
          <target state="translated">Eine einzelne Zeile ausgewählt ist, aus der <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in die Zieltabelle kopiert.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert alle Zeilen aus der bereitgestellten <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> in eine Zieltabelle, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>All rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> are copied to the destination table except those that have been deleted.</source>
          <target state="translated">Alle Zeilen in der <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> werden kopiert, in die Zieltabelle mit Ausnahme derjenigen, die gelöscht wurden.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Während des Massenkopiervorgangs ausgeführt, das Ziel zugeordneten wird <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> Informationsfluss ausgelastet ist und keine anderen Vorgänge für die Verbindung ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> -Auflistung ordnet die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Spalten in die Zieltabelle der Datenbank.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The following Console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten aus einer <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">Die Zieltabelle ist eine Tabelle in der <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and is the source of the <ph id="ph2">`SqlBulkCopy`</ph> operation.</source>
          <target state="translated">In diesem Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> wird zur Laufzeit erstellt und ist die Quelle der <ph id="ph2">`SqlBulkCopy`</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert alle Zeilen aus der bereitgestellten <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> in eine Zieltabelle, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The copy operation starts at the next available row in the reader.</source>
          <target state="translated">Der Kopiervorgang beginnt bei der nächsten verfügbaren Zeile im Reader.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Most of the time, the reader was just returned by <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> or a similar call, so the next available row is the first row.</source>
          <target state="translated">In den meisten Fällen, der Reader wurde soeben zurückgegebenes <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> oder einem ähnlichen Aufruf, damit die nächste verfügbare Zeile die erste Zeile ist.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>To process multiple results, call <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> on the data reader and call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> again.</source>
          <target state="translated">Um mehrere Ergebnisse zu verarbeiten, rufen <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> auf der Datenleser und rufen <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> erneut aus.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Note that using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifies the state of the reader.</source>
          <target state="translated">Beachten Sie, dass die Verwendung <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> ändert den Zustand des Readers.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The method will call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> until it returns false, the operation is aborted, or an error occurs.</source>
          <target state="translated">Der Methodenaufruf <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> bis gibt "false" zurück, der Vorgang abgebrochen wird oder ein Fehler auftritt.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This means that the data reader will be in a different state, probably at the end of the result set, when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is complete.</source>
          <target state="translated">Dies bedeutet, dass der Datenleser einen Status, wahrscheinlich am Ende des Resultsets, wenn die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Während des Massenkopiervorgangs ausgeführt, das Ziel zugeordneten wird <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> Informationsfluss ausgelastet ist und keine anderen Vorgänge für die Verbindung ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the data reader columns to the destination database table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> Auflistung ordnet die Reader-Spalten in die Zieltabelle der Datenbank.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">Die folgende Konsolenanwendung zeigt, wie zum Massenladen von Daten aus einer <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">Die Zieltabelle ist eine Tabelle in der <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>-Enumeration.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Nur Zeilen, die dem Zeilenstatus entsprechen, werden in die Zieltabelle kopiert.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Copies only rows that match the supplied row state in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Kopiert nur die Zeilen mit dem angegebenen Zeilenzustand aus der bereitgestellten <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> in eine Zieltabelle, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that are in the states indicated in the <ph id="ph2">`rowState`</ph> argument and have not been deleted are copied to the destination table.</source>
          <target state="translated">Nur Zeilen aus der <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> , die sich in Zustand angegeben, der <ph id="ph2">`rowState`</ph> Argument und nicht gelöscht wurden in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> is specified, any <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> rows will also be copied to the server.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> angegeben ist, alle <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, und <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> Zeilen auch an den Server kopiert werden.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>No exception will be raised.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Während des Massenkopiervorgangs ausgeführt, das Ziel zugeordneten wird <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> Informationsfluss ausgelastet ist und keine anderen Vorgänge für die Verbindung ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> -Auflistung ordnet die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Spalten in die Zieltabelle der Datenbank.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The following Console application demonstrates how to bulk load only the rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that match a specified state.</source>
          <target state="translated">Die folgende Konsolenstrukturelementen Anwendung veranschaulicht, wie für das Massenkopieren Laden nur die Zeilen in einer <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> , die einen angegebenen Zustand entsprechen.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this case, only unchanged rows are added.</source>
          <target state="translated">In diesem Fall werden nur unveränderte Zeilen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">Die Zieltabelle ist eine Tabelle in der <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and three rows are added to it.</source>
          <target state="translated">In diesem Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> wird erstellt, zur Laufzeit und drei Zeilen hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Before the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is executed, one of the rows is edited.</source>
          <target state="translated">Bevor Sie die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> Methode ausgeführt wird, wird eine der Zeilen bearbeitet wird.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called with a <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argument, so only the two unchanged rows are bulk copied to the destination.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> -Methode aufgerufen wird und eine <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> Argument, sodass nur zwei unveränderten Zeilen werden an das Ziel beim Massenkopieren.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben <bpt id="p1">[</bpt>Einrichtung der Massenkopierbeispiele<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von <bpt id="p1">**</bpt>"SqlBulkCopy"<ept id="p1">**</ept> nur.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- <ph id="ph1">`INSERT … SELECT`</ph> Anweisung, um die Daten zu kopieren.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, which copies all rows from a data source to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, die Zeilen aus einer Datenquelle in eine Zieltabelle kopiert, die von der <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Wenn mehrere aktive Resultsets (MARS) deaktiviert ist, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> stellt die Verbindung belegt.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Wenn MARS aktiviert ist, können Sie Aufrufe von interleave <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> mit anderen Befehlen in derselben Verbindung.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The number of rows that are rolled back when one fails depends on several things:</source>
          <target state="translated">Die Anzahl der Zeilen, die zurückgesetzt werden, wenn ein Vorgang fehlschlägt, hängt von mehrere Aufgaben aus:</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is specified.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> angegeben ist.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If you have your own transaction.</source>
          <target state="translated">Wenn Sie eine eigene Transaktion sein.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>When there is an error while sending data to the server, the current batch (as specified by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) will be rolled back.</source>
          <target state="translated">Wenn beim Senden von Daten an den Server, den aktuellen Batch ein Fehler aufgetreten ist (nach den Angaben von <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) wird ein Rollback.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> nicht angegeben ist und Sie haben eine eigene Transaktion, die gesamte Transaktion ein Rollback (einschließlich aller früheren Batches).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> to know how many rows were copied to the server.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> wissen, wie viele Zeilen auf den Server kopiert wurden.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, die alle Zeilen aus dem bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten, die in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, die alle Zeilen aus dem bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, die alle Zeilen in das bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, die alle Zeilen in das bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> wurde geschlossen, bevor die abgeschlossene <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">Die zugeordnete Verbindung für den <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> wurde geschlossen, bevor die abgeschlossene <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Die Abbruchanweisung.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>-Wert in diesem Parameter macht diese Methode äquivalent zu <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, die alle Zeilen aus dem bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten, die in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Die Abbruchanweisung.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>-Wert in diesem Parameter macht diese Methode äquivalent zu <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, die alle Zeilen aus dem bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Das Abbruchtoken kann verwendet werden, um anzufordern, dass der Vorgang abgebrochen wird, bevor das Timeout des Befehls abläuft.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Ausnahmen werden über das zurückgegebene Aufgabenobjekt gemeldet.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>-Enumeration.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Nur Zeilen, die dem Zeilenstatus entsprechen, werden in die Zieltabelle kopiert.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Die asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, die nur die Zeilen mit dem angegebenen Zeilenzustand aus der bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Die Abbruchanweisung.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>-Wert in diesem Parameter macht diese Methode äquivalent zu <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, die alle Zeilen in das bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Das Abbruchtoken kann verwendet werden, um anzufordern, dass der Vorgang abgebrochen wird, bevor das Timeout des Befehls abläuft.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Ausnahmen werden über das zurückgegebene Aufgabenobjekt gemeldet.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Die Abbruchanweisung.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>-Wert in diesem Parameter macht diese Methode äquivalent zu <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Eine asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, die alle Zeilen in das bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>-Array in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Das Abbruchtoken kann verwendet werden, um anzufordern, dass der Vorgang abgebrochen wird, bevor das Timeout des Befehls abläuft.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Ausnahmen werden über das zurückgegebene Aufgabenobjekt gemeldet.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> wurde geschlossen, bevor die abgeschlossene <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">Die zugeordnete Verbindung für den <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> wurde geschlossen, bevor die abgeschlossene <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Zeilen in die Zieltabelle kopiert werden.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>-Enumeration.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Nur Zeilen, die dem Zeilenstatus entsprechen, werden in die Zieltabelle kopiert.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Die Abbruchanweisung.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>-Wert in diesem Parameter macht diese Methode äquivalent zu <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Die asynchrone Version von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, die nur die Zeilen mit dem angegebenen Zeilenzustand aus der bereitgestellten <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> in eine Zieltabelle kopiert, die von der <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph>-Eigenschaft des <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekts angegeben wird.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Das Abbruchtoken kann verwendet werden, um anzufordern, dass der Vorgang abgebrochen wird, bevor das Timeout des Befehls abläuft.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Ausnahmen werden über das zurückgegebene Aufgabenobjekt gemeldet.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur asynchronen Programmierung in .NET Framework-Datenanbieter für SQL Server finden Sie unter <bpt id="p1">[</bpt>asynchrone Programmierung<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss mehrfach aufrufen.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Aufruf von <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> für die gleiche Instanz vor Aufgabenabschluss.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">Die Verbindung geht verloren oder wird während <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>-Ausführung beendet.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wurde das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>-Objekt während der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt gab es ein Timeout für den Verbindungspool.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Bei Rückgabe im Taskobjekt wird das <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>-Objekt vor der Methodenausführung geschlossen.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> ist in der Verbindungszeichenfolge angegeben.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">Bei Rückgabe im Aufgabenobjekt jeder von SQL Server zurückgegebene Fehler, der beim Öffnen der Verbindung aufgetreten ist.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>