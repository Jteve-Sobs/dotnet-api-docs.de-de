<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c83c563de4e2500f12149fe24a87813d206f6765" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.SqlClient.SqlDependency" /> object represents a query notification dependency between an application and an instance of SQL Server. An application can create a <see cref="T:System.Data.SqlClient.SqlDependency" /> object and register to receive notifications via the <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> event handler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> ist ideal für das Zwischenspeichern von Szenarios, in denen die ASP.NET-Anwendung oder einen Dienst der mittleren Ebene bestimmte zwischengespeicherte Informationen im Arbeitsspeicher beibehalten muss. <xref:System.Data.SqlClient.SqlDependency> können Sie Benachrichtigungen erhalten, wenn die ursprünglichen Daten in der Datenbank geändert wird, damit der Cache aktualisiert werden kann.  
  
 Um eine Abhängigkeit einzurichten, müssen Sie zum Zuordnen einer <xref:System.Data.SqlClient.SqlDependency> Objekt, das eine oder mehrere <xref:System.Data.SqlClient.SqlCommand> Objekte. Um Benachrichtigungen zu erhalten, müssen Sie zum Abonnieren der <xref:System.Data.SqlClient.SqlDependency.OnChange> Ereignis. Weitere Informationen zu den Anforderungen zum Erstellen von Abfragen für Benachrichtigungen finden Sie unter "Erstellen einer Abfrage für die Benachrichtigung" in SQL Server-Onlinedokumentation.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> wurde entworfen, um die in ASP.NET oder Dienste der mittleren Ebene verwendet werden bei eine relativ kleine Anzahl von Servern, die über Abhängigkeiten, die für die Datenbank aktive verfügen. OTKLoadr können keine für die Verwendung in Client-Anwendungen, in denen Hunderte oder Tausende von Clientcomputern müssten <xref:System.Data.SqlClient.SqlDependency> Objekte, die für ein einzelner Datenbankserver eingerichtet. Wenn Sie eine Anwendung entwickeln, benötigen Sie Sekunde Benachrichtigungen bei datenänderungen, lesen Sie die Abschnitte **Planen einer effizienten Abfragebenachrichtigungs-Strategie** und **Alternativen zur Abfrage Benachrichtigungen** in die [Planen von Benachrichtigungen](http://go.microsoft.com/fwlink/?LinkId=211984) in SQL Server-Onlinedokumentation.  
  
 Weitere Informationen finden Sie unter [Abfragebenachrichtigungen in SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) und "Building Notification Solutions" in SQL Server-Onlinedokumentation.  
  
> [!NOTE]
>  Die <xref:System.Data.SqlClient.SqlDependency.OnChange> Ereignis wird generiert, die in einem anderen Thread aus dem Thread, der befehlsausführung initiiert hat.  
  
 Abfragebenachrichtigungen werden nur für SELECT-Anweisungen unterstützt, die bestimmte Anforderungen erfüllen. Die folgende Tabelle enthält Links zur SQL Server-Onlinedokumentation zu Service Broker und Abfragebenachrichtigungen.  
  
 **SQL Server Books Online (SQL Server-Onlinedokumentation)**  
  
-   [Erstellen eine Abfrage für die Benachrichtigung](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Überlegungen zur Sicherheit für Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicherheit und Schutz (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Sicherheitsaspekte für Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Berechtigungen für Abfragebenachrichtigungen](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Internationale Gesichtspunkte bei Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Überlegungen zu Lösungsentwürfen (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker-Entwickler (InfoCenter)](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Entwicklerhandbuch (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class with the default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Konstruktor initialisiert die <xref:System.Data.SqlClient.SqlDependency> -Objekt unter Verwendung der Standardnamen für Service Broker-Dienst und Timeout. Sie müssen an einem bestimmten Punkt nach der Erstellung verwenden die <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> Methode, um eine oder mehrere Befehle aus, um dies zu ordnen <xref:System.Data.SqlClient.SqlDependency> Objekt.  
  
 Abfragebenachrichtigungen werden nur für SELECT-Anweisungen unterstützt, die bestimmte Anforderungen erfüllen. Die folgende Tabelle enthält Links zur SQL Server-Onlinedokumentation zu Service Broker und Abfragebenachrichtigungen.  
  
 **SQL Server Books Online (SQL Server-Onlinedokumentation)**  
  
-   [Erstellen eine Abfrage für die Benachrichtigung](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Überlegungen zur Sicherheit für Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicherheit und Schutz (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Sicherheitsaspekte für Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Berechtigungen für Abfragebenachrichtigungen](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Internationale Gesichtspunkte bei Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Überlegungen zu Lösungsentwürfen (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker-Entwickler (InfoCenter)](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Entwicklerhandbuch (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor will set up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class and associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt intern eine Instanz der <xref:System.Data.Sql.SqlNotificationRequest> Klasse, und bindet sie an eine <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Abfragebenachrichtigungen werden nur für SELECT-Anweisungen unterstützt, die bestimmte Anforderungen erfüllen. Die folgende Tabelle enthält Links zur SQL Server-Onlinedokumentation zu Service Broker und Abfragebenachrichtigungen.  
  
 **SQL Server Books Online (SQL Server-Onlinedokumentation)**  
  
-   [Erstellen eine Abfrage für die Benachrichtigung](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Überlegungen zur Sicherheit für Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicherheit und Schutz (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Sicherheitsaspekte für Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Berechtigungen für Abfragebenachrichtigungen](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Internationale Gesichtspunkte bei Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Überlegungen zu Lösungsentwürfen (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker-Entwickler (InfoCenter)](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Entwicklerhandbuch (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor sets up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <param name="options">The notification request options to be used by this dependency.  <c>null</c> to use the default service.</param>
        <param name="timeout">The time-out for this notification in seconds. The default is 0, indicating that the server's time-out should be used.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class, associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter, and specifies notification options and a time-out value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abfragebenachrichtigungen werden nur für SELECT-Anweisungen unterstützt, die bestimmte Anforderungen erfüllen. Die folgende Tabelle enthält Links zur SQL Server-Onlinedokumentation zu Service Broker und Abfragebenachrichtigungen.  
  
 **SQL Server Books Online (SQL Server-Onlinedokumentation)**  
  
-   [Erstellen eine Abfrage für die Benachrichtigung](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Überlegungen zur Sicherheit für Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicherheit und Schutz (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Sicherheitsaspekte für Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Berechtigungen für Abfragebenachrichtigungen](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Internationale Gesichtspunkte bei Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Überlegungen zu Lösungsentwürfen (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker-Entwickler (InfoCenter)](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Entwicklerhandbuch (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The time-out value is less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.  An attempt was made to create a **SqlDependency** instance from within SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> object containing a statement that is valid for notifications.</param>
        <summary>Associates a <see cref="T:System.Data.SqlClient.SqlCommand" /> object with this <see cref="T:System.Data.SqlClient.SqlDependency" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abfragebenachrichtigungen werden nur für SELECT-Anweisungen unterstützt, die bestimmte Anforderungen erfüllen. Die folgende Tabelle enthält Links zur SQL Server-Onlinedokumentation zu Service Broker und Abfragebenachrichtigungen.  
  
 **SQL Server Books Online (SQL Server-Onlinedokumentation)**  
  
-   [Erstellen eine Abfrage für die Benachrichtigung](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Überlegungen zur Sicherheit für Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Sicherheit und Schutz (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Sicherheitsaspekte für Notification Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Berechtigungen für Abfragebenachrichtigungen](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Internationale Gesichtspunkte bei Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Überlegungen zu Lösungsentwürfen (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker-Entwickler (InfoCenter)](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Entwicklerhandbuch (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is null.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether one of the result sets associated with the dependency has changed.</summary>
        <value>Ein boolescher Wert, der angibt, ob der festgelegte Wert das Ergebnis hat sich geändert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht verwenden die <xref:System.Data.SqlClient.SqlDependency.OnChange> -Ereignis, sehen Sie sich die <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Eigenschaft, um zu bestimmen, ob die Ergebnisse der Abfrage geändert haben.  
  
 Die <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Eigenschaft ist nicht notwendigerweise, dass eine Änderung in den Daten. Andere Situationen, z. B. Timeout ist abgelaufen, und Fehler beim Festlegen der benachrichtigungsanforderung generieren auch ein Change-Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that uniquely identifies this instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
        <value>Eine Zeichenfolgendarstellung einer GUID, die für jede Instanz der generiert wird die <see cref="T:System.Data.SqlClient.SqlDependency" /> Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDependency.Id%2A> Eigenschaft dient zur eindeutigen Identifizierung einer bestimmten <xref:System.Data.SqlClient.SqlDependency> Instanz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a notification is received for any of the commands associated with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> Tritt auf, wenn die Ergebnisse für den zugeordneten Befehl ändern. Wenn Sie nicht verwenden <xref:System.Data.SqlClient.SqlDependency.OnChange>, sehen Sie sich die <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Eigenschaft, um zu bestimmen, ob die Ergebnisse der Abfrage geändert haben.  
  
 Die <xref:System.Data.SqlClient.SqlDependency.OnChange> Ereignis ist nicht notwendigerweise, dass eine Änderung in den Daten. Anderen Fällen, z. B. Timeout abgelaufen ist und auch generieren, Fehler beim Festlegen der benachrichtigungsanforderung <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Starts the listener for receiving dependency change notifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDependency> Listener wird neu gestartet, wenn in der SQL Server-Verbindung ein Fehler auftritt.  
  
 Mehrere Aufrufe der <xref:System.Data.SqlClient.SqlDependency.Start%2A> Methode erfolgen kann, jedoch mit folgenden Einschränkungen:  
  
-   Mehrere Aufrufe mit identischen Parametern (dieselbe Verbindungszeichenfolge und Windows-Anmeldeinformationen, in dem aufrufenden Thread) sind gültig.  
  
-   Mehrere Aufrufe mit verschiedene Verbindungszeichenfolgen sind gültig, solange:  
  
    -   Jede Verbindungszeichenfolge gibt eine andere Datenbank oder  
  
    -   Jede Verbindungszeichenfolge gibt an, ein anderer Benutzer ist, oder  
  
    -   Die Aufrufe stammen aus verschiedenen Anwendungsdomänen.  
  
 Möglich die <xref:System.Data.SqlClient.SqlDependency> ordnungsgemäß für Anwendungen, die mehrere Threads verwenden, um verschiedene Anmeldeinformationen darstellen, ohne die Dbo-Rolle-Gruppe, weil verschiedene Benutzer abonnieren und überwachen können (mit <xref:System.Web.Caching.SqlCacheDependency> oder <xref:System.Data.SqlClient.SqlCommand>) Um eine Benachrichtigungswarteschlange, die von einem Administrator erstellt. Wenn die relevante Anwendungsdomäne gestartet wird, rufen Sie Start mit den Anmeldeinformationen (Windows) von einem Benutzer mit Berechtigung für einen Dienst/Warteschlange (die CREATE QUEUE "und" CREATE SERVICE-Berechtigungen für die Datenbank) zu initialisieren. Stellen Sie sicher, dass nur Start aufgerufen wird, sobald pro Anwendungsdomäne, andernfalls eine Mehrdeutigkeit-Ausnahme ausgelöst wird.  Der Benutzerthread muss über die Berechtigung zum Abonnieren der Benachrichtigung (die SUBSCRIBE QUERY NOTIFICATIONS-Berechtigung für die Datenbank). <xref:System.Data.SqlClient.SqlDependency> Ordnen Sie die abonnementanforderung eines Benutzers ohne Administratorrechte auf die Dienstwarteschlange/vom Administrator erstellt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode startet den Listener für die <xref:System.AppDomain> für den Empfang von Benachrichtigungen der Abhängigkeit aus der Instanz von SQL Server, die gemäß der `connectionString` Parameter. Diese Methode kann mehrmals mit verschiedenen Verbindungszeichenfolgen für mehrere Server aufgerufen werden.  
  
 Zusätzliche Hinweise finden Sie unter <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter with a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <param name="queue">An existing SQL Server Service Broker queue to be used. If <see langword="null" />, the default queue is used.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode startet den Listener für die <xref:System.AppDomain> für den Empfang von Benachrichtigungen der Abhängigkeit aus der Instanz von SQL Server, die gemäß der `connectionString` Parameter. Diese Methode kann mehrmals mit verschiedenen Verbindungszeichenfolgen für mehrere Server aufgerufen werden.  
  
 Wenn kein Warteschlangenname angegeben wird, <xref:System.Data.SqlClient.SqlDependency> ein temporäre Warteschlange und ein Dienst auf dem Server, der verwendet wird, für den gesamten Prozess, erstellt werden, selbst wenn der Prozess umfasst das mehr als eine <xref:System.AppDomain>. Der Warteschlange und der Dienst werden beim Herunterfahren der Anwendung automatisch entfernt.  
  
 Zusätzliche Hinweise finden Sie unter <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter but a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDependency> Listener wird neu gestartet, wenn in der SQL Server-Verbindung ein Fehler auftritt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there are is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDependency.Stop%2A> -Methode muss aufgerufen werden, für die einzelnen <xref:System.Data.SqlClient.SqlDependency.Start%2A> aufrufen. Ein bestimmter Listener nur vollständig, wenn sie die gleiche Anzahl von empfängt heruntergefahren <xref:System.Data.SqlClient.SqlDependency.Stop%2A> -Anforderungen als <xref:System.Data.SqlClient.SqlDependency.Start%2A> Anforderungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">An underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <param name="queue">The SQL Server Service Broker queue that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDependency.Stop%2A> -Methode muss aufgerufen werden, für die einzelnen <xref:System.Data.SqlClient.SqlDependency.Start%2A> aufrufen. Ein bestimmter Listener nur vollständig, wenn sie die gleiche Anzahl von empfängt heruntergefahren <xref:System.Data.SqlClient.SqlDependency.Stop%2A> -Anforderungen als <xref:System.Data.SqlClient.SqlDependency.Start%2A> Anforderungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">And underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
  </Members>
</Type>