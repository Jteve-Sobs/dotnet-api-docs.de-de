<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fe356e09d6dd203321854f70a00901c7e8b9297" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70327074" /></Metadata><TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationManagement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationManagement abstract sealed" />
  <TypeSignature Language="F#" Value="type FederationManagement = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert statische Methoden zum Erstellen von Verbundmetadatendokumenten und zum Updaten der Anwendungskonfiguration auf Grundlage der Verbundmetadatendokumente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu verbundmetadatendokumenten finden Sie im Abschnitt drei der folgenden Spezifikation: [Web Services Federation Language (WS-Federation) Version 1.2](https://go.microsoft.com/fwlink/?LinkID=210152).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ CreateApplicationFederationMetadata(Uri ^ applicationUri, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Metadata::DisplayClaim ^&gt; ^ claimsRequired, System::IdentityModel::Services::ApplicationType applicationType, System::Collections::ObjectModel::Collection&lt;Uri ^&gt; ^ audienceUris);" />
      <MemberSignature Language="F#" Value="static member CreateApplicationFederationMetadata : Uri * System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; * System.IdentityModel.Services.ApplicationType * System.Collections.ObjectModel.Collection&lt;Uri&gt; -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata (applicationUri, certificate, claimsRequired, applicationType, audienceUris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">Die Anwendungs-URI.</param>
        <param name="certificate">Das zum Signieren der Metadaten zu verwendende X.509-Zertifikat.</param>
        <param name="claimsRequired">Die für die Anwendung erforderlichen Ansprüche.</param>
        <param name="applicationType">Einer der <see cref="T:System.IdentityModel.Services.ApplicationType" />-Werte, der den Typ der Anwendung angibt, die die Metadaten beschreiben. Dies wird verwendet, um die Endpunkte zu bestimmen, die erstellt werden soll.</param>
        <param name="audienceUris">Die Auflistung der zulässigen URI, die für diese Anwendung verwendet werden können.</param>
        <summary>Erstellt ein XML-Dokument, das Verbundmetadaten enthält.</summary>
        <returns>Ein XML-Reader, der das Metadatendokument enthält, das mit den Parametern erstellt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateIdentityProviderTrustInfo">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aktualisiert die angegebene Anwendungskonfiguration bei Bedarf auf Grundlage des angegebenen Verbund-Metadatendokuments.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XML-Reader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XML-Reader, der die Konfiguration enthält.</param>
        <param name="claimsOfferedUpdate"><see langword="true" />, wenn die bereitgestellte Liste aktualisiert werden soll; andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert die angegebene Anwendungskonfiguration bei Bedarf auf Grundlage des angegebenen Verbund-Metadatendokuments und eines Werts, der angibt, ob die Liste der angebotenen Ansprüche aktualisiert werden soll.</summary>
        <returns>Ein XML-Reader, der die aktualisierte Konfiguration oder <see langword="null" /> enthält, wenn die Konfiguration nicht aktualisiert werden konnte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool * System.IdentityModel.Metadata.MetadataSerializer -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XML-Reader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XML-Reader, der die Konfiguration enthält.</param>
        <param name="claimsOfferedUpdate"><see langword="true" />, wenn die bereitgestellte Liste aktualisiert werden soll; andernfalls <see langword="false" />.</param>
        <param name="metadataSerializer">Das Serialisierungsprogramm, mit dem die STS-Metadaten gelesen werden sollen.</param>
        <summary>Aktualisiert die angegebene Anwendungskonfiguration bei Bedarf auf Grundlage des angegebenen Verbund-Metadatendokuments und eines Werts, der angibt, ob die Liste der angebotenen Ansprüche aktualisiert werden soll. Das Serialisierungsprogramm, mit dem die Metadaten des Sicherheitstokendiensts (STS) gelesen werden sollen, ist ebenfalls angegeben.</summary>
        <returns>Ein XML-Reader, der die aktualisierte Konfiguration oder <see langword="null" /> enthält, wenn die Konfiguration nicht aktualisiert werden konnte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="metadataSerializer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XML-Reader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XML-Reader, der die Konfiguration enthält.</param>
        <param name="newIssuerNameRegistry">Enthält nach dem Beenden dieser Methode einen XML-Knoten-Reader, der die Elemente enthält, die die Ausstellernamensregistration angeben. <see langword="null" />, wenn keine Ausstellernamensregistrierung angegeben ist. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="claimTypesOffered">Wenn diese Methode beendet wird und die Liste der angebotenen Anspruchstypen geändert wurde, enthält sie einen XML-Knoten-Reader, der Elemente enthält, die die neue Liste angeben. Wenn die Liste nicht geändert wurde, wird <see langword="null" /> zurückgegeben. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <summary>Aktualisiert die angegebene Anwendungskonfiguration bei Bedarf auf Grundlage des angegebenen Verbund-Metadatendokuments. Gibt die Konfigurationselemente für die Ausstellernamen-Registrierung zurück, sowie die Konfigurationselemente für die aktualisierte Liste der angebotenen Anspruchstypen, wenn sie aktualisiert wurde.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="inputConfiguration" /><paramref name="metadataReader" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * XmlNodeReader * XmlNodeReader * System.IdentityModel.Metadata.MetadataSerializer -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XML-Reader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XML-Reader, der die Konfiguration enthält.</param>
        <param name="newIssuerNameRegistry">Enthält nach dem Beenden dieser Methode einen XML-Knoten-Reader, der die Elemente enthält, die die Ausstellernamensregistration angeben. <see langword="null" />, wenn keine Ausstellernamensregistrierung angegeben ist. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="claimTypesOffered">Wenn diese Methode beendet wird und die Liste der angebotenen Anspruchstypen geändert wurde, enthält sie einen XML-Knoten-Reader, der Elemente enthält, die die neue Liste angeben. Wenn die Liste nicht geändert wurde, wird <see langword="null" /> zurückgegeben. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="metadataSerializer">Das Serialisierungsprogramm, mit dem die STS-Metadaten gelesen werden sollen.</param>
        <summary>Aktualisiert die angegebene Anwendungskonfiguration bei Bedarf auf Grundlage des angegebenen Verbund-Metadatendokuments. Gibt Konfigurationselemente für die Ausstellernamen-Registrierung zurück, sowie die Konfigurationselemente für die aktualisierte Liste der angebotenen Anspruchstypen, wenn sie aktualisiert wurde. Das Serialisierungsprogramm, mit dem die Metadaten des Sicherheitstokendiensts (STS) gelesen werden sollen, ist ebenfalls angegeben.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="metadataReader" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="metadataSerializer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
