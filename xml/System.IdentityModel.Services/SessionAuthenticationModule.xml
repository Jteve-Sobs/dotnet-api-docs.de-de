<Type Name="SessionAuthenticationModule" FullName="System.IdentityModel.Services.SessionAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1289b28bb0b4bf053a1698a1a9adae95172abf08" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39753174" /></Metadata><TypeSignature Language="C#" Value="public class SessionAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SessionAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type SessionAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7ca1-101">Implementiert ein ASP.NET-Modul, das Sitzungscookies in den WS-Federation-Szenarien verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-101">Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-102">Wenn er in der ASP.NET-Pipeline die <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) verarbeitet Sitzungscookies in WS-Federation-Szenarien.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-102">When present in the ASP.NET pipeline, the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) processes session cookies in WS-Federation scenarios.</span></span> <span data-ttu-id="a7ca1-103">Er verwendet den cookiehandler, der gemäß der <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft, um den unformatierten Sitzungscookie aus der HTTP-Anforderung zu lesen und Schreiben sie in der HTTP-Antwort.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-103">It uses the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property to read the raw session cookie from the HTTP request and write it to the HTTP response.</span></span> <span data-ttu-id="a7ca1-104">Er verwendet den <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> für eine Anwendung zum Deserialisieren des unformatierten Sitzungscookies in konfigurierten <xref:System.IdentityModel.Tokens.SessionSecurityToken> Objekte.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-104">It uses the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that is configured for an application to deserialize the raw session cookie into <xref:System.IdentityModel.Tokens.SessionSecurityToken> objects.</span></span> <span data-ttu-id="a7ca1-105">Das sitzungssicherheitstoken enthält die Ansprüche (<xref:System.Security.Claims.Claim>) und der Prinzipaleigenschaft (<xref:System.Security.Claims.ClaimsPrincipal>) verknüpft ist, mit der Entität, die für die die Anforderung verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-105">The session security token contains the claims (<xref:System.Security.Claims.Claim>) and principal (<xref:System.Security.Claims.ClaimsPrincipal>) associated with the entity for which the request is being served.</span></span>  
  
 <span data-ttu-id="a7ca1-106">Fügt der SAM die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> -Ereignishandler der <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> Ereignis in der ASP.NET-Pipeline.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-106">The SAM adds its <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> event handler to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> event in the ASP.NET pipeline.</span></span> <span data-ttu-id="a7ca1-107">Dieser Handler fängt Anforderungen und, wenn ein Sitzungscookie deserialisiert sie in ein Sitzungstoken, und legt sie fest der <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> und <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> Eigenschaften, die der Anspruchs-Prinzipal, der in das Sitzungstoken enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-107">This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> properties to the claims principal contained in the session token.</span></span> <span data-ttu-id="a7ca1-108">Sie ruft mehrere der anderen Methoden von SAM während dieses Vorgangs verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-108">It invokes several of the other methods exposed by the SAM during this process.</span></span>  
  
 <span data-ttu-id="a7ca1-109">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode zum Abmelden des Benutzers eine-Sitzung (z. B. in einer SignOut.aspx.cs-Code-Behind-Datei) aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-109">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).</span></span>  
  
 <span data-ttu-id="a7ca1-110">Das SAM stellt mehrere Ereignisse, die Zugriff auf die Pipeline zur anforderungsverarbeitung ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-110">The SAM exposes several events that provide access to its processing pipeline.</span></span> <span data-ttu-id="a7ca1-111">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> und <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> Ereignisse ermöglichen das Sitzungstoken zu ändern, die Cookies lesen oder bei der Verarbeitung erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-111">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> events enable you to modify session tokens that are read from cookies or created during processing.</span></span> <span data-ttu-id="a7ca1-112">Dies erfolgt in der Regel um hinzufügen, entfernen oder transformieren Sie Ansprüche im Token oder den Ablaufzeitpunkt anzupassen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-112">Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.</span></span> <span data-ttu-id="a7ca1-113">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, und <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> Ereignisse bieten Hooks in die Verarbeitung von Anforderungen für einmaliges abmelden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-113">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> events provide hooks into the processing of sign-out requests.</span></span> <span data-ttu-id="a7ca1-114">Für viele Szenarien, die einfach Hinzufügen von Handlern für diese Ereignisse ist häufig in der Datei "Global.asax.cs" reicht jedoch aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-114">For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.</span></span>  
  
 <span data-ttu-id="a7ca1-115">Für komplexere Szenarien ist es sind ableitungen von <xref:System.IdentityModel.Services.SessionAuthenticationModule> zum Implementieren einer benutzerdefinierten SAM.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-115">For more complicated scenarios, you can derive from <xref:System.IdentityModel.Services.SessionAuthenticationModule> to implement a custom SAM.</span></span> <span data-ttu-id="a7ca1-116">Aus diesem Grund viele Methoden, die aufgerufen werden, während der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> und <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> werden verfügbar gemacht, damit Sie benutzerdefiniertes Verhalten in bestimmten Phasen des Lebenszyklus der Sitzung-Verarbeitung bereitstellen können.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-116">To this end, many of the methods that are invoked during <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.</span></span>  
  
 <span data-ttu-id="a7ca1-117">Sie können den SAM der ASP.NET-Pipeline in einer Konfigurationsdatei hinzufügen, indem Sie den HTTP-Modulen unter entweder hinzugefügt der `<system.webServer>` Element für IIS, Version 7 und höher oder unter dem `<system.web>` -Element für Versionen vor IIS 7.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-117">You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the `<system.webServer>` element for IIS version 7 and later or under the `<system.web>` element for versions prior to IIS 7.</span></span> <span data-ttu-id="a7ca1-118">Der von SAM verwendete cookiehandler kann konfiguriert werden, mit der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-118">The cookie handler used by the SAM can be configured with the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
   
  
## Examples  
 [!code-csharp[WifSAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#1)]  
  
 <span data-ttu-id="a7ca1-119">Das folgende XML zeigt, wie SAM in der ASP.NET-Pipeline konfiguriert wird.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-119">The following XML shows how to configure the SAM in the ASP.NET pipeline.</span></span> <span data-ttu-id="a7ca1-120">Viele andere Elemente, die in einer typischen Konfiguration vorhanden sind, werden hier aus Gründen der Übersichtlichkeit weggelassen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-120">Many other elements that are present in a typical configuration are omitted here for brevity.</span></span>  
  
```xml  
<configuration>  
  <system.webServer>  
    <modules>  
      <!--WIF 4.5 modules -->  
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7ca1-121">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-121">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-122">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> -Eigenschaftensatz auf `false` und <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> -Eigenschaft wird mit einer Standardinstanz von initialisiert die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-122">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A> property is set to `false` and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized to a default instance of the <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateSessionSecurityToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateSessionSecurityToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool writeCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateSessionSecurityToken (sessionToken As SessionSecurityToken, writeCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateSessionSecurityToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool writeCookie);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateSessionSecurityToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit&#xA;override this.AuthenticateSessionSecurityToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="sessionAuthenticationModule.AuthenticateSessionSecurityToken (sessionToken, writeCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="writeCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="a7ca1-123">Das Sitzungssicherheitstoken, das zur Authentifizierung der eingehenden HTTP-Anforderung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-123">The session security token to use to authenticate the incoming HTTP request.</span></span></param>
        <param name="writeCookie"><span data-ttu-id="a7ca1-124"><see langword="true" />, um den Sitzungscookie zu schreiben; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-124"><see langword="true" /> to write the session cookie; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a7ca1-125">Authentifiziert die eingehende Anforderung durch Überprüfen des eingehenden Sitzungstokens.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-125">Authenticates the incoming request by validating the incoming session token.</span></span> <span data-ttu-id="a7ca1-126">Nach erfolgreicher Validierung wird der aktuelle HTTP-Kontext und der Prinzipal des Threads mit dem angegebenen <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-126">Upon successful validation, it updates the current HTTP context and thread principal with the specified  <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-127">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-127">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span> <span data-ttu-id="a7ca1-128">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> Methode überprüft das eingehende Token und das Update der <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> und die <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-128">It calls the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A> method to validate the incoming token and update the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> and the <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="a7ca1-129">Wenn die `writeCookie` Parameter `true`, <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> Methode wird aufgerufen, um das Sitzungstoken, das in einem Cookie zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-129">If the `writeCookie` parameter is `true`, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A> method is invoked to write the session token to a cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsSessionTokenCookie">
      <MemberSignature Language="C#" Value="public bool ContainsSessionTokenCookie (System.Web.HttpCookieCollection httpCookieCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsSessionTokenCookie(class System.Web.HttpCookieCollection httpCookieCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsSessionTokenCookie(System::Web::HttpCookieCollection ^ httpCookieCollection);" />
      <MemberSignature Language="F#" Value="member this.ContainsSessionTokenCookie : System.Web.HttpCookieCollection -&gt; bool" Usage="sessionAuthenticationModule.ContainsSessionTokenCookie httpCookieCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpCookieCollection" Type="System.Web.HttpCookieCollection" />
      </Parameters>
      <Docs>
        <param name="httpCookieCollection"><span data-ttu-id="a7ca1-130">Das Cookieauflistung in der gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-130">The collection of cookies in which to search.</span></span></param>
        <summary><span data-ttu-id="a7ca1-131">Bestimmt, ob ein Sitzungscookie an der angegebenen Cookieauflistung ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-131">Determines whether a session cookie is in the specified cookie collection.</span></span></summary>
        <returns><span data-ttu-id="a7ca1-132"><see langword="true" />, wenn ein Sitzungscookie gefunden wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-132"><see langword="true" /> if a session cookie is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7ca1-133"><paramref name="httpCookieCollection" /> hat den Wert null.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-133"><paramref name="httpCookieCollection" /> is null</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SessionSecurityToken ContextSessionSecurityToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContextSessionSecurityToken As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SessionSecurityToken ^ ContextSessionSecurityToken { System::IdentityModel::Tokens::SessionSecurityToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextSessionSecurityToken : System.IdentityModel.Tokens.SessionSecurityToken" Usage="System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-134">Ruft das aktive <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> für den aktuellen <see cref="T:System.Web.HttpContext" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-134">Gets the active <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> for the current <see cref="T:System.Web.HttpContext" />.</span></span></summary>
        <value><span data-ttu-id="a7ca1-135">Das Sicherheitstoken der aktiven Sitzung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-135">The active session security token.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler CookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.CookieHandler CookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieHandler As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandler ^ CookieHandler { System::IdentityModel::Services::CookieHandler ^ get(); void set(System::IdentityModel::Services::CookieHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieHandler : System.IdentityModel.Services.CookieHandler with get, set" Usage="System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-136">Ruft den Cookie Handler ab, der verwendet wird, um Sitzungscookies zu lesen, zu schreiben und zu löschen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-136">Gets the cookie handler that is used to read, write, and delete session cookies.</span></span></summary>
        <value><span data-ttu-id="a7ca1-137">Der Cookie-Handler.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-137">The cookie handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-138">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft wird initialisiert, indem die <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-138">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property is initialized by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A> method.</span></span> <span data-ttu-id="a7ca1-139">Diese Methode initialisiert die Eigenschaft, die basierend auf den cookiehandler angegeben wird, auf die <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> -Objekt, das auf festgelegt ist die <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-139">This method initializes the property based on the cookie handler specified on the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-140">Sie können den cookiehandler in einer Konfigurationsdatei durch Festlegen der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-140">You can set the cookie handler in a configuration file through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
        <altmember cref="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, DateTime validFrom, DateTime validTo, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, valuetype System.DateTime validFrom, valuetype System.DateTime validTo, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, validFrom As DateTime, validTo As DateTime, isPersistent As Boolean) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, DateTime validFrom, DateTime validTo, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * DateTime * DateTime * bool -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionAuthenticationModule.CreateSessionSecurityToken (principal, context, validFrom, validTo, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="a7ca1-141">Der Prinzipal, der im Token aufgezeichnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-141">The principal to be captured in the token.</span></span></param>
        <param name="context"><span data-ttu-id="a7ca1-142">Eine anwendungsspezifische Kontextzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-142">An application-defined context string.</span></span></param>
        <param name="validFrom"><span data-ttu-id="a7ca1-143">Der erste Zeitpunkt, an dem dieses Token gültig ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-143">The first instant in which this token is valid.</span></span></param>
        <param name="validTo"><span data-ttu-id="a7ca1-144">Der letzte Zeitpunkt, an dem dieses Token gültig ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-144">The last instant in which this token is valid.</span></span></param>
        <param name="isPersistent"><span data-ttu-id="a7ca1-145"><see langword="true" />, wenn der Wert vom Benutzer-Agent beibehalten werden soll; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-145"><see langword="true" /> if the value should be persisted by the user agent; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a7ca1-146">Erstellt ein <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aus den angegebenen Parametern mithilfe des konfigurierten Sitzungentokenhandlers.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-146">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from the specified parameters by using the configured session token handler.</span></span></summary>
        <returns><span data-ttu-id="a7ca1-147">Das Sitzungstoken.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-147">The session token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7ca1-148">Kein gültiger Handler für Sitzungstoken konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-148">There is not a valid session token handler configured.</span></span> <span data-ttu-id="a7ca1-149">(Es gibt kein <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />, das in der <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />-Eigenschaft konfiguriert ist).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-149">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSessionTokenCookie">
      <MemberSignature Language="C#" Value="public void DeleteSessionTokenCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSessionTokenCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSessionTokenCookie ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSessionTokenCookie();" />
      <MemberSignature Language="F#" Value="member this.DeleteSessionTokenCookie : unit -&gt; unit" Usage="sessionAuthenticationModule.DeleteSessionTokenCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7ca1-150">Löscht das Sitzungscookie und entfernt es aus dem Cache.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-150">Deletes the session cookie and removes it from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-151">Löscht das Sitzungscookie mit der cookiehandler, der gemäß der <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-151">Deletes the session cookie by using the cookie handler specified by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.</span></span> <span data-ttu-id="a7ca1-152">Diese Methode wird aufgerufen, während der Abmeldung von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-152">This method is called during sign-out by the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="sessionAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a7ca1-153">Das HTTP-Anwendungsobjekt, das dieses Modul enthält.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-153">The HTTP application object that contains this module.</span></span></param>
        <summary><span data-ttu-id="a7ca1-154">Initialisiert das Modul und bereitet es auf die Verarbeitung von Ereignissen des [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]-Anwendungsobjekts des Moduls vor.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-154">Initializes the module and prepares it to handle events from the module's [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] application object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-155">Fügt der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> und <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> Handler, um die <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> und <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> Ereignissen des Anwendungsobjekts gemäß der `context` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-155">Adds the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> and the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handlers to the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> and <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> events of the application object specified by the `context` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="sessionAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7ca1-156">Initialisiert die Moduleigenschaften auf Grundlage von Definitionen in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-156">Initializes the module properties based on definitions in the configuration file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-157">Initialisiert die <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft aus dem Ereignishandler, die in der Konfiguration von angegebene die <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType> -Objekt, das auf festgelegt ist die <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-157">Initializes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property from the handler specified in configuration by the <xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType> object that is set on the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-158">Sie können den cookiehandler in einer Konfigurationsdatei durch Angeben der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-158">You can specify the cookie handler in a configuration file through the [&lt;cookieHandler&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-159">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Sitzungsinformationen (Anspruchswerte usw.) im Sitzungscookie gespeichert werden sollen oder ob der Sitzungsinhalt auf der Serverseite über das Cookie als Referenz gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-159">Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.</span></span></summary>
        <value><span data-ttu-id="a7ca1-160"><see langword="true" />, wenn sich ausgestellte Cookies im Referenzmodus befinden; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-160"><see langword="true" /> if issued cookies are in reference mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a7ca1-161">Der Standardwert ist <see langword="false" /> und gibt an, dass sich ausgestellte Cookies nicht im Referenzmodus befinden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-161">The default is <see langword="false" />, which specifies that issued cookies are not in reference mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-162">Im Referenzmodus befinden die <xref:System.IdentityModel.Tokens.SessionSecurityToken> befindet sich in einem serverseitigen Cache (ein Objekt, das von abgeleitet ist <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-162">In reference mode, the <xref:System.IdentityModel.Tokens.SessionSecurityToken> is stored in a server-side cache (an object that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>).</span></span> <span data-ttu-id="a7ca1-163">Ausgestellte Cookies enthält nur eine Kontext-ID, die verwendet wird, um das Token aus dem Cache abzurufen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-163">The issued cookie just contains a context identifier that is used to retrieve the token from the cache.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7ca1-164">Für die Ausführung im Verweismodus empfiehlt Microsoft die Bereitstellung eines Handlers für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> Ereignis in die Datei "global.asax.cs" und die Einstellung der <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> -Eigenschaft im Token übergeben wird, der <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-164">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-165">Dadurch wird sichergestellt, dass das Sitzungstoken, das für jede Anforderung im Verweismodus arbeitet und sitzungsauthentifizierungsmodul bevorzugt wird allein durch Festlegen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft für das Sitzungsauthentifizierungsmodul.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-165">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnAuthenticateRequest (sender, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a7ca1-166">Die Quelle für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-166">The source for the event.</span></span> <span data-ttu-id="a7ca1-167">Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-167">This will be an <see cref="T:System.Web.HttpApplication" /> object.</span></span></param>
        <param name="eventArgs"><span data-ttu-id="a7ca1-168">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-168">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-169">Behandelt das <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-169">Handles the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-170">Diese Methode führt Folgendes aus:</span><span class="sxs-lookup"><span data-stu-id="a7ca1-170">This method does the following:</span></span>  
  
1.  <span data-ttu-id="a7ca1-171">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> -Methode zum Lesen einer <xref:System.IdentityModel.Tokens.SessionSecurityToken> aus dem Sitzungscookie, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-171">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A> method to read a <xref:System.IdentityModel.Tokens.SessionSecurityToken> from the session cookie, if one is present.</span></span>  
  
2.  <span data-ttu-id="a7ca1-172">Wenn eine Sitzung Sicherheitstoken kann nicht gelesen (wahrscheinlich weil eine Sitzung nicht festgelegt wurde), zurück.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-172">If a session security token cannot be read (most likely because a session has not been established), return.</span></span>  
  
3.  <span data-ttu-id="a7ca1-173">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-173">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event.</span></span> <span data-ttu-id="a7ca1-174">Dies bietet die Möglichkeit, für das Lesen aus dem Cookie geändert werden, Token oder für die Anforderung abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-174">This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.</span></span> <span data-ttu-id="a7ca1-175">Der Handler kann auch angeben, dass das Token soll, durch Festlegen ausgestellt werden der <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-175">The handler can also specify that the token should be reissued, by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> property.</span></span>  
  
4.  <span data-ttu-id="a7ca1-176">Wenn das Token erneut ausgegeben werden, aus dem Cache entfernt, und ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-176">If the token is to be reissued, removes it from the cache and invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A> method to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event.</span></span> <span data-ttu-id="a7ca1-177">Dies bietet die Möglichkeit, für das Token erneut geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-177">This provides opportunity for the token to again be modified.</span></span> <span data-ttu-id="a7ca1-178">Wiederholen Sie Verhalten kann auch geändert werden, durch Festlegen der <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> Eigenschaft im Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-178">The reissue behavior can also be modified by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> property in the event handler.</span></span>  
  
5.  <span data-ttu-id="a7ca1-179">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Methode zur Authentifizierung des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-179">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method to authenticate the user.</span></span> <span data-ttu-id="a7ca1-180">Wenn erfolgreich, dies die Auswirkungen der Einstellung hat die <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> Eigenschaft, die dem Prinzipal, der in enthalten ist das <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType> Eigenschaft des eingehenden Tokens.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-180">If successful, this has the effect of setting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to the principal that is contained in the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType> property of the incoming token.</span></span>  
  
6.  <span data-ttu-id="a7ca1-181">Wenn die Sitzung abgelaufen ist, ruft der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-181">If the session has expired, invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method.</span></span>  
  
 <span data-ttu-id="a7ca1-182">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Methode wird hinzugefügt, um die Handler für die <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> Ereignis in der <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-182">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method is added to the handlers for the <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7ca1-183">Kein gültiger Handler für Sitzungstoken konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-183">There is not a valid session token handler configured.</span></span> <span data-ttu-id="a7ca1-184">(Es gibt kein <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />, das in der <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />-Eigenschaft konfiguriert ist).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-184">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a7ca1-185">Die Quelle für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-185">The source for the event.</span></span> <span data-ttu-id="a7ca1-186">Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-186">This will be an <see cref="T:System.Web.HttpApplication" /> object.</span></span></param>
        <param name="e"><span data-ttu-id="a7ca1-187">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-187">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-188">Behandelt das <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-188">Handles the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event from the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-189">Die Standardimplementierung ist leer.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-189">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="a7ca1-190">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> Handler hinzugefügt, mit den Handlern für die <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> Ereignis in der <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-190">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A> handler is added to the handlers for the <xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType> event in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="a7ca1-191">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-191">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-192">Löst das <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-192">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-193">Wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-193">Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenReceived">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenReceived (System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenReceived(class System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenReceived (args As SessionSecurityTokenReceivedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenReceived(System::IdentityModel::Services::SessionSecurityTokenReceivedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenReceived : System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenReceived : System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnSessionSecurityTokenReceived args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="a7ca1-194">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-194">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-195">Löst das <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-195">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-196">Wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-196">Called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnSignedOut e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7ca1-197">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-197">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-198">Löst das <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-198">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-199">Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> -Methode auf, nachdem die Abmeldung ausgeführt wurde und das Sitzungscookie gelöscht wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-199">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method after the sign-out has been performed and the session cookie has been deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (e As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnSigningOut e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7ca1-200">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-200">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-201">Löst das <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-201">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-202">Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode zum Abmelden durchführen. Er wird aufgerufen, bevor das Sitzungscookie gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-202">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method to perform sign-out. It is invoked before the session cookie is deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="sessionAuthenticationModule.OnSignOutError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7ca1-203">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-203">The data for the event.</span></span></param>
        <summary><span data-ttu-id="a7ca1-204">Löst das <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-204">Raises the <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-205">Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode, wenn ein Fehler während der Abmeldung auftritt.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-205">This method is invoked from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method if an error occurs during sign-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSessionTokenFromCookie">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie (byte[] sessionCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SessionSecurityToken ReadSessionTokenFromCookie(unsigned int8[] sessionCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadSessionTokenFromCookie (sessionCookie As Byte()) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SessionSecurityToken ^ ReadSessionTokenFromCookie(cli::array &lt;System::Byte&gt; ^ sessionCookie);" />
      <MemberSignature Language="F#" Value="member this.ReadSessionTokenFromCookie : byte[] -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionAuthenticationModule.ReadSessionTokenFromCookie sessionCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionCookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionCookie"><span data-ttu-id="a7ca1-206">Das Cookie, in der unformatierten Form, welches das Sitzungtoken enthält.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-206">The cookie, in raw form, that contains the session token.</span></span></param>
        <summary><span data-ttu-id="a7ca1-207">Liest ein <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aus dem angegebenen Sitzungscookie.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-207">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from the specified session cookie.</span></span></summary>
        <returns><span data-ttu-id="a7ca1-208">Das Sitzungstoken, das aus dem Cookie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-208">The session token that was read from the cookie.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7ca1-209">Kein gültiger Handler für Sitzungstoken konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-209">There is not a valid session token handler configured.</span></span> <span data-ttu-id="a7ca1-210">(Es gibt kein <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />, das in der <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />-Eigenschaft konfiguriert ist).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-210">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-211">Tritt ein, wenn ein Sitzungssicherheitstoken erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-211">Occurs when a session security token has been created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-212">Sie können dieses Ereignis verwenden, um das sitzungssicherheitstoken, das zu ändern, bevor sie ein Cookie geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-212">You can use this event to modify the session security token before it is written to a cookie.</span></span>  
  
 <span data-ttu-id="a7ca1-213">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> Ereignis wird ausgelöst, innerhalb der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> -Methode auf, nachdem ein Sitzungstoken (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-213">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been created.</span></span> <span data-ttu-id="a7ca1-214">Dies geschieht beispielsweise, wenn ein Ereignishandler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> Ereignis ändert das Token.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-214">This happens, for example, if an event handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event modifies the token.</span></span>  
  
 <span data-ttu-id="a7ca1-215">Sie können dieses Ereignis verwenden, das Sitzungstoken, das Eigenschaften ändern, bevor er weiter an die Pipeline übergeben wird, und verwendet wird, um die Entität, die die Anforderung (Benutzer) zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-215">You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</span></span>  
  
 <span data-ttu-id="a7ca1-216">In einem Ereignishandler, können Sie das Token über Zugriff auf die <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-216">In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-217">Nach der Änderung des Tokens, können Sie sicherstellen, dass sie wieder auf das Cookie durch Festlegen von geschrieben werden die <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-217">After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> property to `true`.</span></span> <span data-ttu-id="a7ca1-218">Im Gegensatz zu, die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> Ereignis <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> ist nicht abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-218">Unlike, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event, <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> is not a cancelable event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-219">Der folgende Code zeigt einen Handler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> -Ereignis in der Datei "Global.asax.cs" eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-219">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-220">Sie müssen auch den Handler für das Ereignis hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-220">You must also add the handler to the event.</span></span> <span data-ttu-id="a7ca1-221">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-221">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; SessionSecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; SessionSecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenReceived As EventHandler(Of SessionSecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenReceivedEventArgs ^&gt; ^ SessionSecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; " Usage="member this.SessionSecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-222">Tritt ein, wenn ein Sitzungssicherheitstoken von einem Cookie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-222">Occurs when a session security token has been read from a cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-223">Die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> Ereignis wird ausgelöst, innerhalb der <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> -Methode auf, nachdem ein Sitzungstoken (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) aus dem Sitzungscookie erfolgreich gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-223">The <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is raised from within the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A> method after a session token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) has been successfully read from the session cookie.</span></span>  
  
 <span data-ttu-id="a7ca1-224">Sie können dieses Ereignis verwenden, das Sitzungstoken, das Eigenschaften ändern, bevor er weiter an die Pipeline übergeben wird, und verwendet wird, um die Entität, die die Anforderung (Benutzer) zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-224">You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</span></span> <span data-ttu-id="a7ca1-225">Eines der häufigsten Szenarien umfasst die sitzungsablaufzeit ändern (über die <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> Eigenschaft) überschreiben die sitzungsablaufzeit in der Konfiguration durch Festlegen der `lifetime` Attribut der [ &lt;auf "sessiontokenrequirement"&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) Element.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-225">One of the most common scenarios involves modifying the session expiration time (accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> property) to override the session expiration time set in configuration through the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element.</span></span> <span data-ttu-id="a7ca1-226">Ändern Sie diese Eigenschaft für jede Anforderung, können Sie eine gleitende Sitzung Implementieren; d. h. eine Sitzung, in denen die Lebensdauer jeder erweitert wird, Zeit greift der Benutzer auf die Website.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-226">By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.</span></span>  
  
 <span data-ttu-id="a7ca1-227">In einem Ereignishandler, können Sie das Token über Zugriff auf die <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-227">In an event handler, you can access the token through the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-228">Nach der Änderung des Tokens, können Sie sicherstellen, dass sie wieder auf das Cookie durch Festlegen von geschrieben werden die <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-228">After modifying the token, you can ensure that it is written back to the cookie by setting the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType> to `true`.</span></span> <span data-ttu-id="a7ca1-229">Zum Schluss die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> Ereignis ist ein abbrechbares Ereignis aus, und Sie können festlegen, die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> zum Abbrechen der weiteren Verarbeitung der Anforderung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-229">Finally, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event is a cancelable event, and you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs> to abort further processing of the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-230">Der folgende Code zeigt einen Handler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> -Ereignis in der Datei "Global.asax.cs" eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-230">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-231">Sie müssen auch den Handler für das Ereignis hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-231">You must also add the handler to the event.</span></span> <span data-ttu-id="a7ca1-232">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-232">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalFromSessionToken">
      <MemberSignature Language="C#" Value="protected virtual void SetPrincipalFromSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPrincipalFromSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetPrincipalFromSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionSecurityToken);" />
      <MemberSignature Language="F#" Value="abstract member SetPrincipalFromSessionToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit&#xA;override this.SetPrincipalFromSessionToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionAuthenticationModule.SetPrincipalFromSessionToken sessionSecurityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionSecurityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionSecurityToken"><span data-ttu-id="a7ca1-233">Das Sitzungstoken, aus dem der Prinzipal festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-233">The session token from which to set the principal.</span></span></param>
        <summary><span data-ttu-id="a7ca1-234">Legt den Prinzipal im <see cref="T:System.Web.HttpContext" /> und <see cref="T:System.Threading.Thread" /> auf den Prinzipal fest, der im angegebenen Sitzungstoken enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-234">Sets the principal on the <see cref="T:System.Web.HttpContext" /> and <see cref="T:System.Threading.Thread" /> to the principal that is contained in the specified session token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-235">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> -Methode und legt die <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> Eigenschaft <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> mit den Identitäten, die zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-235">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A> method and sets the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property and the <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> property on <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> using the identities that are returned.</span></span>  
  
 <span data-ttu-id="a7ca1-236">Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-236">This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-237">Tritt auf, nachdem der Benutzer abgemeldet ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-237">Occurs after the user is signed out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-238">Wird ausgelöst, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode direkt nach der <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> -Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-238">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just after the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.</span></span>  
  
 <span data-ttu-id="a7ca1-239">Dieses Ereignis wird nicht unbedingt für jede Sitzung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-239">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="a7ca1-240">Beispielsweise können Cookies gelöscht werden, auf der Clientseite, in diesem Fall ist dieses Ereignis wird nie ausgelöst werden, da kein serverseitige-Ereignis für das Löschen der Sitzungs vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-240">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-241">Der folgende Code zeigt einen Handler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut> -Ereignis in der Datei "Global.asax.cs" eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-241">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-242">Sie müssen auch den Handler für das Ereignis hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-242">You must also add the handler to the event.</span></span> <span data-ttu-id="a7ca1-243">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-243">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-244">Tritt vor dem Löschen der Anmeldung auf.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-244">Occurs before deleting the sign-in session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-245">Wird ausgelöst, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode kurz vor dem Ausführen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> -Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-245">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method just before the <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A> method is invoked.</span></span>  
  
 <span data-ttu-id="a7ca1-246">Dieses Ereignis wird nicht unbedingt für jede Sitzung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-246">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="a7ca1-247">Beispielsweise können Cookies gelöscht werden, auf der Clientseite, in diesem Fall ist dieses Ereignis wird nie ausgelöst werden, da kein serverseitige-Ereignis für das Löschen der Sitzungs vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-247">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-248">Der folgende Code zeigt einen Handler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut> -Ereignis in der Datei "Global.asax.cs" eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-248">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-249">Sie müssen auch den Handler für das Ereignis hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-249">You must also add the handler to the event.</span></span> <span data-ttu-id="a7ca1-250">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-250">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="sessionAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7ca1-251">Meldet den aktuellen Benutzer ab und löst die entsprechenden Ereignisse aus.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-251">Signs the current user out and raises the associated events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-252">Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, und <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> Methoden zum Durchführen von Abmelden. Wenn eine Ausnahme auftritt, die <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-252">Invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A>, <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A>, and <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A> methods to perform sign-out. If an exception occurs, the <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A> method is invoked to raise the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event.</span></span> <span data-ttu-id="a7ca1-253">Sie können festlegen, die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.IdentityModel.Services.ErrorEventArgs> -Objekt übergeben, in den Ereignishandler für dieses Ereignis zum abzubrechen, die Abmeldung und verhindern, dass die Ausnahme, die an den Client weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-253">You can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.</span></span>  
  
 <span data-ttu-id="a7ca1-254">Sie können diese Methode, um anwendungsspezifisches Verhalten hinzufügen, überschreiben.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-254">You can override this method to add application-specific behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-255">Der folgende Code zeigt den Code zum Aufrufen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode von einer SignOut.aspx-Seite (SignOut.aspx.cs) in eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-255">The following code shows code for invoking the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-256">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-256">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7ca1-257">Tritt ein, wenn ein Fehler während der Abmeldung auftritt.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-257">Occurs when there is an error during sign-out.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-258">Wird ausgelöst, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> Methode, wenn ein Fehler während der Abmeldung auftritt.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-258">Raised from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A> method when an error occurs during sign-out.</span></span>  
  
 <span data-ttu-id="a7ca1-259">In einem Ereignishandler, erhalten Sie die Ausnahme, die im Ereignis ausgelöst wird, aus der <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-259">In an event handler, you can get the exception that resulted in the event being raised from the <xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a7ca1-260">Können Sie Abbrechen, weitere Verarbeitung der Ausnahme, die das Ergebnis der Weitergabe von der Ausnahme an den Client, nicht durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.IdentityModel.Services.ErrorEventArgs> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-260">You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.IdentityModel.Services.ErrorEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="a7ca1-261">Dieses Ereignis wird nicht unbedingt für jede Sitzung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-261">This event is not guaranteed to be called for every session.</span></span> <span data-ttu-id="a7ca1-262">Beispielsweise können Cookies gelöscht werden, auf der Clientseite, in diesem Fall ist dieses Ereignis wird nie ausgelöst werden, da kein serverseitige-Ereignis für das Löschen der Sitzungs vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-262">For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ca1-263">Der folgende Code zeigt einen Handler für die <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> -Ereignis in der Datei "Global.asax.cs" eine ASP.NET-Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-263">The following code shows a handler for the <xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError> event implemented in the global.asax.cs file of an ASP.NET web application.</span></span> <span data-ttu-id="a7ca1-264">Sie müssen auch den Handler für das Ereignis hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-264">You must also add the handler to the event.</span></span> <span data-ttu-id="a7ca1-265">Ein vollständigeres Beispiel sehen Sie der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-265">A more complete example is shown in the <xref:System.IdentityModel.Services.SessionAuthenticationModule> overview topic.</span></span>  
  
 [!code-csharp[WifSAM#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifsam/cs/webapplication1/global.asax.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadSessionTokenFromCookie">
      <MemberSignature Language="C#" Value="public bool TryReadSessionTokenFromCookie (out System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadSessionTokenFromCookie([out] class System.IdentityModel.Tokens.SessionSecurityToken&amp; sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadSessionTokenFromCookie (ByRef sessionToken As SessionSecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadSessionTokenFromCookie([Runtime::InteropServices::Out] System::IdentityModel::Tokens::SessionSecurityToken ^ % sessionToken);" />
      <MemberSignature Language="F#" Value="member this.TryReadSessionTokenFromCookie :  -&gt; bool" Usage="sessionAuthenticationModule.TryReadSessionTokenFromCookie sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="a7ca1-266">Enthält nach dem Beenden dieser Methode das Sicherheitstoken der Sitzung, das aus dem Sitzungscookie gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-266">When this method returns, contains the session security token that was read from the session cookie.</span></span></param>
        <summary><span data-ttu-id="a7ca1-267">Versucht, ein <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> aus einem Sitzungscookie zu lesen und gibt einen Wert zurück, der angibt, ob das Sitzungscookie erfolgreich gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-267">Attempts to read a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a session cookie and returns a value that indicates whether the session cookie was successfully read.</span></span></summary>
        <returns><span data-ttu-id="a7ca1-268"><see langword="true" />, wenn das Sitzungscookie aus der Anforderung erfolgreich gelesen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-268"><see langword="true" /> if the session cookie was successfully read from the request; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-269">Liest den Cookie, mit der cookiehandler, der in konfiguriert ist die <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft und ruft dann die <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> Methode, um das Token aus dem Cookie gelesen.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-269">Reads the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property and then invokes the <xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A> method to read the token from the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSessionToken">
      <MemberSignature Language="C#" Value="protected System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionSecurityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionSecurityToken);" />
      <MemberSignature Language="F#" Value="member this.ValidateSessionToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionAuthenticationModule.ValidateSessionToken sessionSecurityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionSecurityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionSecurityToken"><span data-ttu-id="a7ca1-270">Das zu validierende Token.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-270">The token to validate.</span></span></param>
        <summary><span data-ttu-id="a7ca1-271">Überprüft das angegebene <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> und gibt seine Identität zurück.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-271">Validates the specified <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> and returns its identities.</span></span></summary>
        <returns><span data-ttu-id="a7ca1-272">Die Auflistung der im Token enthaltenen Identitäten.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-272">The collection of identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-273">Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-273">This method is called from the <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> method.</span></span> <span data-ttu-id="a7ca1-274">Ruft die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType> -Methode des konfigurierten sitzungentokenhandlers zum Überprüfen des Tokens, und extrahieren die Identitäten.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-274">It invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType> method of the configured session token handler to validate the token and extract its identities.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Services.FederatedSessionExpiredException"><span data-ttu-id="a7ca1-275">Das Token wurde überschritten.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-275">The token has expired.</span></span></exception>
        <exception cref="T:System.IdentityModel.Services.FederationException"><span data-ttu-id="a7ca1-276">Die Tokenstartzeit ist noch nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-276">The token start time is not yet valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7ca1-277">Kein gültiger Handler für Sitzungstoken konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-277">There is not a valid session token handler configured.</span></span> <span data-ttu-id="a7ca1-278">(Es gibt kein <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />, das in der <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />-Eigenschaft konfiguriert ist).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-278">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSessionTokenToCookie">
      <MemberSignature Language="C#" Value="public void WriteSessionTokenToCookie (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSessionTokenToCookie(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSessionTokenToCookie (sessionToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSessionTokenToCookie(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberSignature Language="F#" Value="member this.WriteSessionTokenToCookie : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionAuthenticationModule.WriteSessionTokenToCookie sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="a7ca1-279">Das zu schreibende Sitzungssicherheitstoken.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-279">The session security token to write.</span></span></param>
        <summary><span data-ttu-id="a7ca1-280">Schreibt das angegebene <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> in ein Sitzungscookie.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-280">Writes the specified <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> to a session cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ca1-281">Schreibt das Cookie mit den cookiehandler, der in konfiguriert ist die <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-281">Writes the cookie by using the cookie handler that is configured in the <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7ca1-282"><paramref name="sessionToken" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-282"><paramref name="sessionToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7ca1-283">Kein gültiger Handler für Sitzungstoken konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="a7ca1-283">There is not a valid session token handler configured.</span></span> <span data-ttu-id="a7ca1-284">(Es gibt kein <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />, das in der <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" />-Eigenschaft konfiguriert ist).</span><span class="sxs-lookup"><span data-stu-id="a7ca1-284">(There is no <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> configured in the <see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /> property.)</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>