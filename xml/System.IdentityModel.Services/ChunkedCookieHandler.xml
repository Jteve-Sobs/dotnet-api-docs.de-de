<Type Name="ChunkedCookieHandler" FullName="System.IdentityModel.Services.ChunkedCookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7c0606d586442b3025f47071d37031eec73fd49" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69283150" /></Metadata><TypeSignature Language="C#" Value="public sealed class ChunkedCookieHandler : System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChunkedCookieHandler extends System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ChunkedCookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChunkedCookieHandler&#xA;Inherits CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChunkedCookieHandler sealed : System::IdentityModel::Services::CookieHandler" />
  <TypeSignature Language="F#" Value="type ChunkedCookieHandler = class&#xA;    inherit CookieHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.CookieHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b8d7f-101">Stellt einen Cookiehandler dar, der Cookiedaten schreibt, damit Cookies niemals eine festgelegte Größe überschreiten.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-101">Represents a cookie handler that writes cookie data so that cookies never exceed a set size.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8d7f-102">Die <xref:System.IdentityModel.Services.ChunkedCookieHandler> -Klasse stellt das Cookie als logische Entität dar, sodass bei Cookies mit einer Größe, die einen angegebenen Schwellenwert (die Segmentgröße) überschreitet, ein einzelner Aufrufder <xref:System.IdentityModel.Services.CookieHandler.Write%2A> Methode die Daten in eine Reihe von tatsächlichen Client seitigen Cookies umbricht. keine von, die die Segmentgröße überschreitet.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-102">The <xref:System.IdentityModel.Services.ChunkedCookieHandler> class presents the cookie as a logical entity, so that, in the case of cookies with a size that exceeds a specified threshold (the chunk size), a single call to the <xref:System.IdentityModel.Services.CookieHandler.Write%2A> method breaks the data into a series of actual client-side cookies, none of which exceeds the chunk size.</span></span>  
  
 <span data-ttu-id="b8d7f-103">Cookienamen werden basierend auf dem `name` -Parameter für <xref:System.IdentityModel.Services.CookieHandler.Write%2A>die <xref:System.IdentityModel.Services.CookieHandler.Read%2A>-, <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> -oder-Methoden erstellt.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-103">Cookie names are constructed based on the `name` parameter to the <xref:System.IdentityModel.Services.CookieHandler.Write%2A>, <xref:System.IdentityModel.Services.CookieHandler.Read%2A>, or <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods.</span></span> <span data-ttu-id="b8d7f-104">Die Namen der Cookies werden erstellt, indem eine Zahl an den Basisnamen angehängt wird: Name, Name1, name2 usw.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-104">The cookie names are constructed by appending a number to the base name: name, name1, name2, and so on.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8d7f-105">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChunkedCookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChunkedCookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8d7f-106">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />-Klasse, die einen Standardsegmentgröße.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" /> class that uses the default chunk size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8d7f-107">Die Standard Segmentgröße wird durch <xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize>angegeben.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-107">The default chunk size is specified by <xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChunkedCookieHandler (int chunkSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 chunkSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chunkSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChunkedCookieHandler(int chunkSize);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ChunkedCookieHandler : int -&gt; System.IdentityModel.Services.ChunkedCookieHandler" Usage="new System.IdentityModel.Services.ChunkedCookieHandler chunkSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chunkSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chunkSize"><span data-ttu-id="b8d7f-108">Die Segmentgröße zum Schreiben von Cookies.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-108">The chunk size that will be used to write cookies.</span></span></param>
        <summary><span data-ttu-id="b8d7f-109">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />-Klasse, die den angegebenen Segmentgröße.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" /> class that uses a specified chunk size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8d7f-110">Beim Anpassen der Segmentgröße müssen Sie vorsichtig sein.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-110">You must be careful when adjusting the chunk size.</span></span> <span data-ttu-id="b8d7f-111">Webbrowser haben unterschiedliche Beschränkungen hinsichtlich der Größe von Cookies und der Anzahl von Cookies, die insgesamt und pro Domäne zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-111">Web browsers have different limits on the size of cookies and the number of cookies that are allowed in total and per domain.</span></span> <span data-ttu-id="b8d7f-112">Die ursprüngliche Netscape-Spezifikation hat z. b. die folgenden Grenzwerte angegeben: 300 Cookies Gesamt, 4096 Bytes pro Cookieheader (einschließlich Metadaten, nicht nur der Cookiewert) und 20 Cookies pro Domäne.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-112">For example, the original Netscape specification specified these limits: 300 cookies total, 4096 bytes per cookie header (including metadata, not just the cookie value), and 20 cookies per domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b8d7f-113"><paramref name="chunkSize" />' ist kleiner als die minimale Blockgröße von 1000 (<see cref="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />).</span><span class="sxs-lookup"><span data-stu-id="b8d7f-113"><paramref name="chunkSize" />' is less than the minimum chunk size of 1000 (<see cref="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public int ChunkSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChunkSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChunkSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChunkSize : int" Usage="System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8d7f-114">Ruft die Abschnittsgröße ab, die von der aktuellen Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-114">Gets the chunk size used by the current instance.</span></span></summary>
        <value><span data-ttu-id="b8d7f-115">Die Segmentgröße in Bytes.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-115">The chunk size, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultChunkSize">
      <MemberSignature Language="C#" Value="public const int DefaultChunkSize = 2000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultChunkSize = (2000)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultChunkSize As Integer  = 2000" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultChunkSize = 2000;" />
      <MemberSignature Language="F#" Value="val mutable DefaultChunkSize : int" Usage="System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b8d7f-116">Die standardmäßige Segmentgröße von 2000 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-116">The default chunk size of 2000 characters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected override void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="chunkedCookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="path">To be added.</param>
        <param name="domain">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumChunkSize">
      <MemberSignature Language="C#" Value="public const int MinimumChunkSize = 1000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinimumChunkSize = (1000)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public Const MinimumChunkSize As Integer  = 1000" />
      <MemberSignature Language="C++ CLI" Value="public: int MinimumChunkSize = 1000;" />
      <MemberSignature Language="F#" Value="val mutable MinimumChunkSize : int" Usage="System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b8d7f-117">Die minimale Segmentgröße von 1000 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="b8d7f-117">The minimum chunk size of 1000 characters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected override byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="chunkedCookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected override void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="chunkedCookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="name">To be added.</param>
        <param name="path">To be added.</param>
        <param name="domain">To be added.</param>
        <param name="expirationTime">To be added.</param>
        <param name="secure">To be added.</param>
        <param name="httpOnly">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
