<Type Name="WSFederationMessage" FullName="System.IdentityModel.Services.WSFederationMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="facd66b34587916caeee7c928b7e2e11c8f492bd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39747236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WSFederationMessage : System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSFederationMessage extends System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSFederationMessage&#xA;Inherits FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationMessage abstract : System::IdentityModel::Services::FederationMessage" />
  <TypeSignature Language="F#" Value="type WSFederationMessage = class&#xA;    inherit FederationMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.FederationMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine WS-Verbund-Nachricht dar und definiert die Basisklasse, von der weitere spezialisierte WS-Verbund-Nachrichtenklassen abgeleitet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationMessage> Klasse eine WS-Verbund-Anforderung oder einer WS-Verbund-Antwort darstellt. Weitere spezialisierte Klassen, die bestimmte WS-Verbund-Nachrichten darstellen abgeleitet <xref:System.IdentityModel.Services.WSFederationMessage>, z. B. die <xref:System.IdentityModel.Services.SignInRequestMessage> -Klasse, die eine WS-Verbund-anmeldungsanforderung-Meldung darstellt.  
  
 Die <xref:System.IdentityModel.Services.WSFederationMessage> Klasse macht mehrere Eigenschaften, die zum Festlegen oder zugreifen auf einzelne Nachricht-Parameter verwendet werden können. Diese Parameter können auch festlegen oder erfolgt über die <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> Wörterbuch. Angenommen, Sie erhalten Wencoding-Parameters in der Nachricht entweder über die <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> Eigenschaft oder durch Angabe von "Wencoding" als Schlüssel für die <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> Wörterbuch.  
  
 Die <xref:System.IdentityModel.Services.WSFederationMessage> enthält statische Methoden, die Sie aufrufen können, erstellen Sie die entsprechende WS-Verbund-Meldung aus: eine URL, die eine Abfragezeichenfolge enthält, eine Basis-URL und eine Auflistung von WS-Verbund-Parameternamen und Werte oder Formular veröffentlichen von Daten in eine HTTP-Anforderung.  
  
 [!INCLUDE[wif_wsfed_ref](~/includes/wif-wsfed-ref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationMessage (Uri baseUrl, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationMessage(Uri ^ baseUrl, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationMessage : Uri * string -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="new System.IdentityModel.Services.WSFederationMessage (baseUrl, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">Die Basis-URL für die WS-Federation-Nachricht. Dies ist die URL ohne Abfrageparameter. Legt die <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" />-Eigenschaft fest.</param>
        <param name="action">Der wa-Parameter der Meldung. Gibt die Aktion an, die ausgeführt werden soll, z.B. „wsignin1.0“ für eine WS-Verbund-Anmeldungsanforderung. Legt die <see cref="P:System.IdentityModel.Services.WSFederationMessage.Action" />-Eigenschaft fest.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.WSFederationMessage" />-Klasse von der Basis-URL, für die die Meldung gilt und die Aktion ausgeführt werden soll (wa-Meldungsparameter).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="action" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">
          <paramref name="baseUri" /> ist kein gültiger absoluter URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Übernimmt oder bestimmt den wa-Parameter der Nachricht.</summary>
        <value>Der Wert des wa-Parameters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wa-Parameter gibt die Aktion ausgeführt werden. Für anmeldeszenarien, beispielsweise die <xref:System.IdentityModel.Services.WSFederationMessage.Action%2A> -Eigenschaft festgelegt ist, um "wsignin1. 0" und für Abmeldung Szenarien, die Eigenschaft auf "wsignout1. 0" festgelegt ist. Der wa-Parameter ist erforderlich, damit diese Eigenschaft nicht werden, um festgelegt kann `null` oder eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, einen Wert festzulegen, der <see langword="null" /> oder leer ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Übernimmt oder bestimmt den wctx-Parameter der Nachricht.</summary>
        <value>Der Wert des wct-Parameters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt einen Kontextwert, der den ausgestellten Token zurückgegeben werden muss, wenn sie in der Anforderung übergeben wird. Der Wert nicht transparent, d. h. seine Semantik bekanntermaßen nur vom Absender der Nachricht (in der Regel eine relying Party – RP); Es wird nicht vom Empfänger der Meldung oder zwischendienste interpretiert. Der Wctx-Parameter ist optional. Legen Sie die <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> Eigenschaft `null` oder eine leere Zeichenfolge, die den Wctx-Parameter aus der Nachricht zu entfernen.  
  
> [!IMPORTANT]
>  Ihre Anwendung eine WS-Verbund-Nachricht mit den Wctx-Parameter erhält, sollte es sicher, dass der gleiche Wert wird in alle Antworten an den Absender zurückgegeben oder weitergeleitet, wenn die Nachricht an eine andere Partei übergeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFormPost">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromFormPost (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromFormPost(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFormPost (request As HttpRequestBase) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromFormPost(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="static member CreateFromFormPost : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Das Anforderung mit der Formularbereitstellung.</param>
        <summary>Erstellt eine WS-Verbund-Meldung aus dem Formularbeitrag, der in der angegebenen Anforderung empfangen wird.</summary>
        <returns>Die Meldung, die erstellt wurde, oder <see langword="null" />, wenn eine Nachricht nicht erstellt werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Nachricht erstellt werden kann, gibt die Methode eine geeignete Implementierung des <xref:System.IdentityModel.Services.WSFederationMessage> basierend auf der wa-Parameter, die in das Formular übermittelt wird, nach, z. B., wenn "wa"-Parameter auf "wsignout1. 0" ist ein <xref:System.IdentityModel.Services.SignOutRequestMessage> Objekt zurückgegeben.  
  
 Ruft die Basis-URL und die Auflistung der Formularvariablen, die vom Client aus der Anforderung gesendet werden, und ruft die <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromNameValueCollection">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection (Uri baseUrl, System.Collections.Specialized.NameValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection(class System.Uri baseUrl, class System.Collections.Specialized.NameValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromNameValueCollection (baseUrl As Uri, collection As NameValueCollection) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromNameValueCollection(Uri ^ baseUrl, System::Collections::Specialized::NameValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member CreateFromNameValueCollection : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection (baseUrl, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseUrl">Die Basis-URL für die Verbund-Nachricht ist beabsichtigt.</param>
        <param name="collection">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" />, die die Parameter für die Nachricht enthält.</param>
        <summary>Erstellt eine WS-Verbund-Meldung aus einer <see cref="T:System.Collections.Specialized.NameValueCollection" /> von Parametern.</summary>
        <returns>Die Meldung, die erstellt wurde, oder <see langword="null" />, wenn eine Nachricht nicht erstellt werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameterauflistung darf einen Eintrag für den wa-Parameter, der die durchzuführende Aktion angibt. Wenn der wa-Eintrag nicht über eine erkannte Aktion ist, wird eine Ausnahme ausgelöst. Die Parameterauflistung sollte die entsprechenden Parameter für die Art der Meldung gemäß der wa-Parameter in der Auflistung enthalten. Die Methode gibt eine geeignete Implementierung des <xref:System.IdentityModel.Services.WSFederationMessage> basierend auf der wa-Parameter. Die folgende Tabelle enthält die <xref:System.IdentityModel.Services.WSFederationMessage> -Implementierung, die bei verschiedenen Parameter zurückgegeben.  
  
|Zurückgegebener Typ|WA-Query-Parameter angegeben|Kommentare|  
|-------------------|----------------------------------|--------------|  
|<xref:System.IdentityModel.Services.AttributeRequestMessage>|wattr1.0|--|  
|<xref:System.IdentityModel.Services.PseudonymRequestMessage>|wpseudo1.0|--|  
|<xref:System.IdentityModel.Services.SignInRequestMessage>|wsignin1.0|`collection` Hierbei muss es sich um eine Wtrealm oder einen Wreply-Parameter enthalten. Wenn `collection` enthält eine wresult- oder Wresultptr-Parameter, eine Anmeldung Response-Nachricht wird zurückgegeben (siehe folgende Zeile).|  
|<xref:System.IdentityModel.Services.SignInResponseMessage>|wsignin1.0|Zurückgegeben, wenn `collection` enthält einen wresult- oder Wresultptr-Parameter. Nur eine kann vorhanden sein. Wenn beide vorhanden sind, wird eine Ausnahme ausgelöst.|  
|<xref:System.IdentityModel.Services.SignOutRequestMessage>|wsignout1.0|--|  
|<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage>|wsignoutcleanup1.0|--|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseUrl" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="collection" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">Der wa-Parameter in der Parameterauflistung wurde nicht erkannt.</exception>
        <exception cref="T:System.ArgumentException">Eine Anmeldungsantwortnachricht hat die wresult- und wresultptr-Parameter in der Parametersammlung. (Eine gültige Anmeldungsantwortmeldung verfügt über den „wa“-Parameter, der gleich „wsignin1.0“ und entweder gleich „wresult“- oder „wresultptr“-Parameter ist, aber nicht beide.)</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUri">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromUri (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromUri(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUri (requestUri As Uri) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromUri(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateFromUri : Uri -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromUri requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">Der URI, aus dem die neue Meldung erstellt werden soll. Parameter für Meldungen werden in der Abfragezeichenfolge angegeben. Der wa-Parameter muss vorhanden sein.</param>
        <summary>Erstellt eine WS-Verbund-Meldung aus dem angegebenen URI. Die Parameter werden in der Abfragezeichenfolge erwartet.</summary>
        <returns>Die Meldung, die erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt eine geeignete Implementierung des <xref:System.IdentityModel.Services.WSFederationMessage> basierend auf der wa-Parameter in der Abfragezeichenfolge; Wenn "wa"-Parameter auf "wsignout1. 0" wird z. B. ein <xref:System.IdentityModel.Services.SignOutRequestMessage> Objekt zurückgegeben.  
  
 Andere Ausnahmen können abhängig von der Kombination aus und die Werte der Parameter in der Abfragezeichenfolge vorhanden ausgelöst werden.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">Eine Nachricht kann nicht aus dem angegebenen URI erstellt werden.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den wencoding-Parameter der Nachricht ab, bzw. legt ihn fest.</summary>
        <value>Der Wert des wencoding-Parameters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt an, die Art der Codierung für beliebige XML-Daten verwendet werden, in die Nachricht eingebettet. Der Wencoding-Parameter ist optional. Legen Sie die <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> Eigenschaft `null` oder eine leere Zeichenfolge, die den Wencoding-Parameter aus der Nachricht zu entfernen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromUri">
      <MemberSignature Language="C#" Value="public static bool TryCreateFromUri (Uri requestUri, out System.IdentityModel.Services.WSFederationMessage fedMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFromUri(class System.Uri requestUri, [out] class System.IdentityModel.Services.WSFederationMessage&amp; fedMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFromUri (requestUri As Uri, ByRef fedMsg As WSFederationMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFromUri(Uri ^ requestUri, [Runtime::InteropServices::Out] System::IdentityModel::Services::WSFederationMessage ^ % fedMsg);" />
      <MemberSignature Language="F#" Value="static member TryCreateFromUri : Uri *  -&gt; bool" Usage="System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri (requestUri, fedMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="fedMsg" Type="System.IdentityModel.Services.WSFederationMessage" RefType="out" />
      </Parameters>
      <Docs>
        <param name="requestUri">Der URI, aus dem die neue Meldung erstellt werden soll. Parameter für Meldungen werden in der Abfragezeichenfolge angegeben. Der wa-Parameter muss vorhanden sein.</param>
        <param name="fedMsg">Enthält nach dem Beenden dieser Methode die Meldung, die erstellt wurde, oder <see langword="null" />, wenn eine Nachricht nicht erstellt werden konnte. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <summary>Versucht, eine WS-Verbund-Meldung aus dem angegebenen URI zu erstellen. Die Parameter werden als Abfragezeichenfolge erwartet.</summary>
        <returns>
          <see langword="true" />, wenn die Fehlernachricht erfolgreich erstellt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Nachricht erstellt werden kann, gibt die Methode eine geeignete Implementierung des <xref:System.IdentityModel.Services.WSFederationMessage> basierend auf der wa-Parameter in der Abfragezeichenfolge; Wenn "wa"-Parameter auf "wsignout1. 0" wird z. B. ein <xref:System.IdentityModel.Services.SignOutRequestMessage> Objekt zurückgegeben.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>