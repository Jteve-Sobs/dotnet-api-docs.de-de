<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36558375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> ist ein HTTP-Modul, das für die Sicherung einer ASP.NET-Anwendung verwendet wird, indem Verbundauthentifizierungseinstellungen für eingehende Anforderungen erzwungen werden. Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> ist das Hauptmodul, das WIF vorkonfiguriert für das Behandeln von anspruchsbasierten Identitätszugriffen in ASP.NET-Anwendungen anbietet.  
  
Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> löst mehrere Ereignisse aus, die es ASP.NET-Entwicklern erlauben, das Standardverhalten zu ändern und im Detail zu steuern, wie die Authentifizierungs- und Anspruchsverarbeitung stattfindet. Die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Funktionalität wird in aufgabenbezogene Methoden unterteilt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> -Klasse implementiert, ein HTTP-Modul, das als WS-Verbund-Authentifizierungs-Modul (WSFAM) bezeichnet. Das WSFAM wird standardmäßig von Windows Identity Foundation (WIF) implementiert. Das WSFAM wird an die Pipeline von ASP.NET über einen Eintrag in der Datei "Web.config" hinzugefügt. Es leitet sich von <xref:System.IdentityModel.Services.HttpModuleBase>, implementiert <xref:System.Web.IHttpModule>. Registriert mit der ASP.NET-Laufzeit zum Lauschen auf die <xref:System.Web.HttpApplication.EndRequest> und <xref:System.Web.HttpApplication.AuthenticateRequest> Ereignisse. Überwachen der <xref:System.Web.HttpApplication.EndRequest> -Ereignis, können das WSFAM Umleiten von Clients zu einem Sicherheitstokendienst (STS), um ein Sicherheitstoken abzurufen, bei der Autorisierung nicht erfolgreich auf eine angeforderte Ressource ist. Überwachen der <xref:System.Web.HttpApplication.AuthenticateRequest> Ereignis können Sie das WSFAM HTTP-Anforderungen für eine Antwort vom STS zu überwachen, die das angeforderte Token enthält. Wenn ein derartiges Token vorhanden und gültig ist, erstellt er eine Instanz des <xref:System.Security.Claims.ClaimsPrincipal> für den authentifizierten Benutzer mit die Ansprüche, die im Token vorhanden sind.  
  
 Wenn Sie das WSFAM verwenden zu können, erfolgt sitzungsverwaltung über ein Modul authentifizierungssitzung (SAM), die eine Instanz von der <xref:System.IdentityModel.Services.SessionAuthenticationModule> Klasse oder einer Klasse abgeleitet wird. SAM ist der ASP.NET-Pipeline in der Konfigurationsdatei ebenfalls hinzugefügt. Das SAM überwacht die Anforderungen für Authentifizierungscookies (Sitzung). Beim diese Cookies vorhanden und gültig sind, extrahiert das Modul die <xref:System.Security.Claims.ClaimsPrincipal> für den authentifizierten Benutzer aus der <xref:System.IdentityModel.Tokens.SessionSecurityToken> und legt die <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> -Eigenschaft und den Thread-Prinzipal <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> Eigenschaften.  
  
 Das WSFAM stellt bereit:  
  
-   Die Fähigkeit einer ASP.NET-Anwendung zur Auslagerung der Authentifizierung an einen Sicherheitstokendienst (STS) mit dem WS-Verbund-Protokoll. Identität über eine oder mehrere Identitätsbereichen verbunden werden können und umfassen mehrere Sicherheitstokendienste (STS).  
  
-   Anspruchsbasierte Identität für ASP.NET-Anwendungen. Das WSFAM erstellt einen Prinzipal aus den Ansprüchen im Sicherheitstoken vom STS gesendet und wird von diesem anspruchsprinzipal als den Thread-Prinzipal, während der Authentifizierung. Klicken Sie dann können diesen Prinzipal weitere Autorisierung, Präsentation und Logik Entscheidungen für den Benutzer, den es darstellt in Ihrem Code vornehmen.  
  
 Das WSFAM stellt mehrere Eigenschaften, die standardmäßige Message-Parameter für die Verwendung bei WS-Verbund-Anmeldung und Abmeldung Anforderungen bereitstellen. Diese Eigenschaften werden in der Regel aus initialisiert die [ &lt;WsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) Element in einer Konfigurationsdatei. Die wichtigste dieser Eigenschaften sind:  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft, die die Adresse für den Sicherheitstokendienst (STS), der zum Senden von Anforderungen für WS-Verbund-Anmeldung und Abmeldung angibt.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> Eigenschaft, die mit den Wtrealm-Parameter in WS-Verbund-anmeldeanforderungen angibt. Der Wtrealm-Parameter gibt den Sicherheitsbereich der Anwendung der vertrauenden Seite (Relying Party, RP) an den STS.  
  
 Parameter Sign-in-Nachrichten können auch auf einer Basis pro Anforderung geändert werden, durch die Bereitstellung einer Ereignishandlerdelegaten für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis.  
  
 Zwei Eigenschaften steuern das Verhalten des Moduls. Diese beiden Eigenschaften sind in der Regel auch aus initialisiert die `<wsFederation>` Element in der Konfiguration.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Eigenschaft gibt an, ob das Modul passive umleitungen an den STS für die Authentifizierung durchführen soll.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> Eigenschaft gibt an, ob Sitzungen persistent sein sollte. Wenn diese Eigenschaft "true" festgelegt ist, wird der SAM verwendet, an den Client einen Sitzungscookie zu schreiben. Bei nachfolgenden Anforderungen vom Client bietet das SAM an, dass die Authentifizierung mit dem Token im Sitzungscookie beibehalten.  
  
 Das WSFAM löst mehrere Ereignisse aus, bei der Anmeldung und Abmeldung der ASP.NET-Entwicklern ermöglichen, ändern Sie das Standardverhalten des Moduls und steuern die Details wie Authentifizierungs- und anspruchsverarbeitung stattfindet.  
  
 Die folgenden Ereignisse werden ausgelöst, bevor die WS-Verbund-anmeldungsanforderung an den Sicherheitstokendienst gesendet wird:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Wird ausgelöst, wenn der passiver Umleitung aktiviert ist und die Autorisierung nicht erfolgreich ist, auf eine angeforderte Ressource.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Wird ausgelöst, kurz bevor das WSFAM wird das WS-Verbund-anmeldungsanforderung an den STS sendet. Sie können dieses Ereignis verwenden, um die Parameter in der anmeldeanforderung zu ändern.  
  
 Die folgenden Ereignisse werden ausgelöst, wenn eine anmeldungs-Antwortnachrichten (Sicherheitstoken ausgestellt) aus dem STS empfangen wird:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Wird ausgelöst, unmittelbar nachdem das Sicherheitstoken vom STS gesendet, die aus der Antwort gelesen wird.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Wird ausgelöst, unmittelbar nach dem Abschluss der Überprüfung des Tokens. Sie können dieses Ereignis zu filtern, Transformieren oder Hinzufügen von Ansprüchen, mit dem anforderungsprinzipal (<xref:System.Security.Claims.ClaimsPrincipal>) vom Sicherheitstoken erstellt.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Wird ausgelöst, unmittelbar vor das Sitzungstoken (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) aus der Ansprüche im Prinzipal wird verwendet, um den Sicherheitsprinzipal festzulegen, den Thread und den aktuellen Benutzer erstellt und in das Sitzungscookie geschrieben. Bietet Ihnen die Möglichkeit zum Ändern der Sitzungstoken, das oder aktivieren oder deaktivieren, die das Sitzungscookie zu schreiben.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Wird ausgelöst, am Ende der Authentifizierung unmittelbar nach dem Abschluss der Thread-Prinzipal und den aktuellen Benutzer festgelegt wurden.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Wird ausgelöst, wenn eine Ausnahme, während der Anmeldung auftritt. Sie können die Anforderung abbrechen und zu verhindern, dass die Ausnahme, die an den Aufrufer zurückgegeben wird.  
  
 Wenn Sie aus einer Sitzung oder beim Verarbeiten einer WS-Verbund-abmeldeanforderungen bereinigen Anforderung (wsignoutcleanup1. 0) zu signieren, werden die folgenden Ereignisse ausgelöst:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Wird ausgelöst, kurz bevor die Sitzung gelöscht wird, um Bereinigungen ausführen, die möglicherweise von der Sitzung abhängen oder Abmelden abbrechen können.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Wird ausgelöst, unmittelbar nach dem Abschluss die Sitzung gelöscht wurde.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Wird ausgelöst, wenn eine Ausnahme während der Abmeldung auftritt. Sie können die Abmeldung Abbrechen und zu verhindern, dass die Ausnahme, die an den Aufrufer zurückgegeben wird.  
  
> [!NOTE]
>  Die Abmeldung Ereignisse werden nicht ausgelöst, wenn durch den Aufruf des STS Abmelden der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 Es gibt zwei Möglichkeiten zum Anmelden bei einem STS WSFAM verwenden. Die erste ist die passive umleitungen durch Aktivieren der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Eigenschaft. In diesem Fall, wenn Autorisierung kann für eine angeforderte Ressource, und gibt keinen `401:Access Denied` Antwort an den Client, WSFAM erstellt eine WS-Verbund-anmeldungsanforderung Nachricht aus seinen Eigenschaften und leitet den Client an den STS um ein Sicherheitstoken abzurufen. Die zweite Möglichkeit ist, explizit den Client an den STS umleitet, durch den Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Methode aus einer Webseite oder ein benutzerdefiniertes Steuerelement in Ihrer Anwendung. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Methode verwendet auch die Eigenschaften der WSFAM, um die anmeldeanforderung zu erstellen.  
  
 Mit den überladenen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> Methoden können verwendet werden, um die Sitzung abgemeldet. Dies löscht das Sitzungscookie auf dem Client. Es wird eine WS-Verbund-Abmeldenachricht ("wsignout1. 0") nicht an den Sicherheitstokendienst gesendet. Zum Abmelden des STS, müssen Sie verwenden die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 Das WSFAM behandelt die WS-Verbund-Abmelde-Cleanup-Anforderungen ("wsignoutcleanup1. 0"), durch das Löschen einer Sitzungs mit dem Client. Wenn der Wreply-Parameter in der-abmeldungscleanupmeldung nicht festgelegt ist, gibt das WSFAM ein Abbild von einem grünen Häkchen markiert, an den STS an, die Nachricht gesendet. Diese Funktion kann von einem STS als Bestätigung verwendet werden, dass die vertrauende Seite die Abmeldung abgeschlossen wurde.  
  
 Das WSFAM stellt seine Funktionen – z. B. die Pipeline zur anforderungsverarbeitung – über mehrere aufgabenbezogene Methoden. Sie können diese Methoden in abgeleiteten Klassen zum Ändern des Verhaltens der WSFAM überschreiben.  
  
 Verwendet werden soll, muss das Modul an die Pipeline wie die folgende XML-Code hinzugefügt werden:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Nach der Konfiguration, die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> löst Ereignisse in verschiedenen Phasen der Verarbeitung einer HTTP-Anforderung. Entwickler können diese Ereignisse in der Datei "Global.asax" behandeln.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Klasse zu initialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wauth“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der den Authentifizierungstyp angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wauth-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wauth-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Modul ermittelt, ob es den Benutzer zur Authentifizierung auf die konfigurierten Aussteller umleiten soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Ereignis wird ausgelöst, wenn Autorisierung für eine HTTP-Anforderung fehlgeschlagen ist. Es wird ausgelöst, innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandlerdelegaten durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> Methode.  
  
 Sie können festlegen, die <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> Eigenschaft zu steuern, ob die Anforderung an den Identitätsanbieter umgeleitet wird. Das Framework initialisiert, diese Eigenschaft auf `false` , wenn der Benutzer bereits authentifiziert wurde. In diesem Fall das Festlegen von `true` kann dazu führen, dass eine Dauerschleife mit dem STS.  
  
> [!NOTE]
>  Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> -Ereignis kann verwendet werden, ändern Sie die URL oder die Umleitung Abbrechen.  
  
 Um dieses Ereignis in einer ASP.NET-Anwendung zu verarbeiten, erstellen Sie eine Methode namens `WSFederationAuthentication_AuthorizationFailed` in der Datei "Global.asax".  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anmeldung Response-Nachricht wird auf die vertrauende Seite (RP) von einem Sicherheitstokendienst (STS) als Reaktion auf eine anmeldeanforderung-Nachricht gesendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene HTTP-Anforderung eine Formularbereitstellung enthält, in dem der „wa“-Parameter auf „wsignout1.0“ festgelegt und der „wresult“-Parameter nicht leer ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, von der Pipeline zur anforderungsverarbeitung zu bestimmen, ob die eingehende HTTP-Anforderung eine formularbereitstellung ist, die eine WS-Verbund-anmeldungsantwortnachricht enthält.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> -Überladung mit dem `onPage` Parametersatz `false` um anzugeben, dass der Aufruf nicht während der Verarbeitung einer Seite stammt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <param name="onPage">
          <see langword="true" />, wenn der Aufruf bei der Bearbeitung einer Seitenanforderung auftritt. <see langword="false" />, wenn der Aufrufer ein HTTP-Modul ist. Dieser Parameter bestimmt, wie die Verarbeitung beendet wird, oder sendet Umleitungen, wenn die eingehende Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“).</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene HTTP-Anforderung eine Formularbereitstellung enthält, in dem der „wa“-Parameter auf „wsignout1.0“ festgelegt und der „wresult“-Parameter nicht leer ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, von der Anforderungsverarbeitungspipeline über die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> -Überladung verwenden, um zu bestimmen, ob die eingehende HTTP-Anforderung eine Formular-POST ist, die eine WS-Verbund-anmeldungsantwortnachricht enthält.  
  
 Die Standardimplementierung führt Folgendes aus:  
  
-   Wenn die eingehende Anforderung eine Formular-POST ist, ruft es die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> Methode, um zu bestimmen, ob das Formular POST eine Anmeldeantwort enthält.  
  
-   Wenn die eingehende Anforderung kein Formular POST ist, und die Anforderung enthält eine WS-Verbund bereinigen abmeldungsanforderung (der wa-Parameter ist "wsignoutcleanup1. 0"), wird die Abmeldung Cleanup ausgeführt. In diesem Fall die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> -Methode wird aufgerufen (mit den Parameter auf `true` an eine Abmeldung Bereinigung) der Sitzung abmelden. Dies führt dazu, dass die Abmeldung Ereignisse ausgelöst werden soll.  
  
     Dann, wenn die Anforderung zur Abmelde und Bereinigung einen Wreply Parameter enthält, der Client wird an die URL umgeleitet zurückgegebenes der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> Methode; andernfalls wird ein Bild eines grünen Häkchens an den STS zurückgegeben. Der Empfang von diesem Image kann vom STS als Bestätigung verwendet werden, dass die Anforderung zur Abmelde und Bereinigung wurde empfangen und erfolgreich von der vertrauenden Seite verarbeitet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein.</param>
        <param name="returnUrl">Die URL, zu der das Modul nach der Authentifizierung zurückkehren soll.</param>
        <param name="rememberMeSet">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können den Wert auf <see langword="true" /> oder <see langword="false" /> festlegen.</param>
        <summary>Erstellt einen WS-Verbund in Anforderungnachricht mithilfe der WS-Verbund-Parameter, die im Modul konfiguriert werden.</summary>
        <returns>Die WS-Verbund-Anmeldungsanforderungsnachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt eine WS-Verbund-anmeldungsanforderung, der durch dargestellt wird ein <xref:System.IdentityModel.Services.SignInRequestMessage> Objekt. Die Eigenschaften der neuen <xref:System.IdentityModel.Services.SignInRequestMessage> Objekt sind folgendermaßen festgelegt:  
  
-   Die <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (den Wctx-Parameter)-Eigenschaftensatz auf einen Wert, der mit den Methodenparametern erstellt.  
  
-   Die <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> Eigenschaft (der Wct-Parameter) auf die aktuelle Uhrzeit festgelegt ist.  
  
-   Alle anderen Eigenschaften werden mithilfe der entsprechenden Eigenschaften der aktuellen Instanz festgelegt.  
  
 Die an die Methode übergebenen Parameter werden verwendet, um den Wctx-Parameter-Nachricht zu erstellen. Dies ist eine Zeichenfolge mit dem folgenden Format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   Die `ru` Wert wird festgelegt, auf den Wert des der `returnUrl` an die Methode übergebene Parameter und gibt an, die URL an, dass das Modul den Browser nach der erfolgreichen Authentifizierung weiterleiten soll. Dies ist der einzige Wert, der in den Wctx-Zeichenfolge, die der von WSFAM verwendet wird gespeichert. Die Modul-Aufrufe der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> Methode, um diesen Wert aus den Wctx-Parameter zu extrahieren, wenn eine WS-Verbund-anmeldungs-Antwortnachrichten verarbeitet. Es dürfen nicht mit den Wreply-Nachrichtenparameters, die von angegeben wird verwechselt werden die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> -Eigenschaft und die die Adresse, an die vertrauende Seite bereitstellt, der Sicherheitstokendienst (STS) die Antwort weiterleiten sollten.  
  
-   Die `cx` Parametersatz wird auf den Wert des der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> Eigenschaft. Diese Eigenschaft wird verfügbar gemacht, damit Sie Sie jede Anwendung definierte Kontext festlegen, die in den Wctx-Zeichenfolge gespeichert werden soll; Allerdings macht eine Methode, um diesen Wert in der Antwort Extrahieren von WSFAM nicht verfügbar. Wenn der Wert von der Anwendung erforderlich ist, müssen Sie den Code, um den Wctx-Zeichenfolge zu analysieren und Lesen diesen Wert beim Verarbeiten der Antwort angeben. Sie können dies erreichen, indem das Überschreiben der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> Methode.  
  
-   Weder die `rm` -Wert, der auf den Wert der festgelegt ist die `rememberMeSet` -Parameter noch die `id` -Parameter, der auf den Wert der festgelegt ist die `uniqueId` Parameter von WSFAM verwendet werden. Dies können auf einen beliebigen Wert festgelegt werden.  
  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft ist <see langword="null" /> oder enthält eine leere Zeichenfolge ("").  
  
- oder -  
Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />-Eigenschaft ist <see langword="null" /> oder enthält eine leere Zeichenfolge ("").</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">Die URL des STS zum Empfangen der WS-Verbund-Abmeldungsanforderungsnachricht. Kann nicht <see langword="null" /> sein.</param>
        <param name="replyUrl">Die URL, die als wreply-Wert in der Abmeldungsanforderungsnachricht gesendet werden sollen.</param>
        <summary>Meldet sich beim angegebenen Sicherheitstokendienst (STS) mithilfe des WS-Verbund-Protokolls ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode, um eine WS-Verbund-abmeldungsanforderungsnachricht auf den angegebenen STS zu senden. Sie können optional einen Wert für den Wreply-Parameter in der Anforderung zur Abmeldung angeben.  
  
 Die Methode führt Folgendes aus:  
  
1.  Erstellt eine WS-Verbund-abmeldungsanforderungsnachricht mit den angegebenen Parametern.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> Methode für die SAM-Sitzungscookie gelöscht.  
  
3.  Leitet an den STS mithilfe der abmeldungsanforderungsnachricht aus dem ersten Schritt.  
  
 Keines der Abmeldung Ereignisse: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, oder <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> werden von dieser Methode ausgelöst. Zum Löschen der Sitzung, ohne eine Anforderung zur Abmeldung und-Nachricht an den STS zu senden, rufen Sie eine der überladenen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> Methoden.  
  
> [!NOTE]
>  Um passiven Abmelden das Sitzungstoken, das mit ausführen, verwendet das Modul ein Wert, der in gespeicherten der <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> Eigenschaft bei der Anmeldung, Weitere Informationen finden Sie unter den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> ist nicht <see langword="null" /> und ist kein absoluter URI.  
  
- oder -  
 <paramref name="replyUrl" /> ist nicht <see langword="null" /> und ist kein absoluter URI.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wfresh“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Der gewünschte Höchstalter für Authentifizierungsanforderungen in Minuten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wfresh-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wfresh-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Die Ausstelleradresse. Die Adresse des Sicherheitstokendiensts (STS), an die die Anforderung zu verweisen ist.</param>
        <param name="signOutReply">Eine URL, die die zurückzugebende Adresse nach der Abmeldung angibt. Dies legt den wreply-Parameter in der Abmeldungsanforderung fest. Kann <see langword="null" /> oder leer sein, wenn kein wreply-Parameter in der generierten Abmeldungsanforderung enthalten sein soll. Dies sollte ein absoluter URI sein.</param>
        <param name="signOutQueryString">Zusätzliche Abfragezeichenfolgen-Parameter, die in der Abmeldungsanforderung eingeschlossen werden sollen. Kann <see langword="null" /> oder leer sein, wenn keine zusätzlichen Parameter, in der generierten Abmeldungsanforderungen enthalten sein sollen. Dies sollte ein relativer URI sein.</param>
        <summary>Gibt eine URL zurück, die eine WS-Verbund-Abmeldungsanforderung darstellt, die an den angegebenen Aussteller adressiert wurde und den angegebenen wreply-Parameter und die angegebenen zusätzlichen Parameter enthält.</summary>
        <returns>Eine URL, die eine passive Abmeldungsanforderungen des WS-Verbundes enthält, die erstellt wird, indem die angegebenen Parameter verwendet werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der URL, die zurückgegeben werden: die Basis-URI, um festgelegt ist `issuer`der wa-Parameter auf "wsignout1. 0" festgelegt wird; der Wreply-Parameter wird festgelegt, um `signOutReply`; und die angegebenen Parameter `signOutQueryString` als zusätzliche Abfragezeichenfolgen-Parameter vorhanden sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">Die URL, die die Adresse des Ausstellungsergebnisses angibt.</param>
        <summary>Ruft das Ausstellungsergebnis (in der Regel das ausgestellte Token) aus der angegebenen URL ab. Löst die URL auf, die im wresultptr-Parameter in einer Anmeldungsantwortnachricht angegeben wird.</summary>
        <returns>Das Ausstellungsergebnis, das durch die URL referenziert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> Methode innerhalb der Verarbeitungspipeline Auflösung die URL angegeben, die im Wresultptr-Parameter in der Anmeldung Response-Nachricht, die von einem Sicherheitstokendienst (STS) empfangen.  
  
 Standardmäßig löst diese Methode eine <xref:System.NotSupportedException>. Überschreiben Sie diese Methode in einer abgeleiteten Klasse zur Unterstützung des Wresultptr-Parameters. Die URL verweist auf das ausstellungsergebnis, der einen der folgenden sein soll: ein `<wst:RequestSecurityTokenResponse>` -Element, ein `<wst:RequestSecurityTokenResponseCollection>` Element, das eine SOAP-Antwort oder ein SOAP- `<S:Fault>` Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Diese Methode wird in der Basisklasse nicht unterstützt. Sie müssen dies in einer abgeleiteten Klasse überschreiben.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, die ein POST-Element enthält, das die WS-Verbund-Anmeldungsantwortnachricht enthält.</param>
        <summary>Extrahiert die URL der Seite, die ursprünglich von der Anmeldungsantwort angefordert wurde.</summary>
        <returns>Der URL der Seite, die ursprünglich vom Client angefordert wurde. Dies ist der URL (auf vertrauender Seite), zu dem der Client nach erfolgreicher Anmeldung umgeleitet werden sollte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, aus der Pipeline für die Verarbeitung von Anforderungen (die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Methode) um die URL der Seite, auf die vertrauende Seite (RP), um den Client weiterzuleiten. nach der erfolgreichen Anmeldung abzurufen. Dies ist in der Regel die URL der RP-Ressource, die auf die der Client ursprünglich Zugriff angefordert.  
  
 WSFAM speichert standardmäßig die Rückgabe-URL in den Wctx-Message-Parameter beim Senden der WS-Verbund-anmeldungsanforderung an den Sicherheitstokendienst (STS). Der Wctx-Parameter wird in Übereinstimmung mit der WS-Verbund-Spezifikation für Entitäten, die über den die Nachricht übergibt und beibehalten zurückgegeben in der WS-Verbund-anmeldungsantwortnachricht, die vom Sicherheitstokendienst gesendet wird.  
  
 Die Standardimplementierung Ruft die Rückgabe-URL aus den Wctx-Parameter in der Antwort-Anmeldung ab. Weitere Informationen zum Format des WCT-Parameters, der von WSFAM verwendet wird, finden Sie unter den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Liest ein Sicherheitstoken aus der angegebenen Anforderung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der das Token gelesen werden soll.</param>
        <summary>Liest ein Sicherheitstoken aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
        <returns>Das Sicherheitstoken, das aus der Nachricht gelesen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> Methode, um das Token abzurufen und ihn mit den entsprechenden Handler aus der konfigurierten Sicherheitstokenhandler liest.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, aus der der Token gelesen werden soll.</param>
        <summary>Liest ein Sicherheitstoken aus der angegebenen XML-Anfrage.</summary>
        <returns>Das gelesene Sicherheitstoken.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der Pipeline zur anforderungsverarbeitung beim Abrufen der WS-Verbund-anmeldungsanforderung Meldung als einen <xref:System.IdentityModel.Tokens.SecurityToken> Objekt.  
  
 Die Standardimplementierung Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> -Methode zum Abrufen einer <xref:System.IdentityModel.Services.SignInResponseMessage> -Objekt und ruft dann die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> überladen.  
  
 Verwenden Sie eine abgeleitete Klasse, um eine bestimmte Art von Anforderung zu interpretieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, der mit dem Sitzungscookie in der <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />-Eigenschaft beibehalten werden soll.</summary>
        <returns>Die Zeichenfolge, die im Sitzungscookie beibehalten werden sollen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Methode wird von der Pipeline zur anforderungsverarbeitung aufgerufen, bei der Verarbeitung einer WS-Verbund-anmeldungsantwortnachricht, die zum Speichern von in zu nutzen die <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> Eigenschaft in das Sitzungscookie.  
  
 Sie können diese Methode, um eine anwendungsspezifische Wert im Cookie gespeichert werden, überschreiben. WSFAM macht keine Methoden zum Abrufen des Werts aus dem Cookie nicht verfügbar. Sie müssen die Logik bereitstellen, in der Anwendung für den Wert wieder aus dem Cookie gelesen wird, wenn sie benötigt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft ist <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, aus der die Anmeldungsantwortnachricht zu lesen ist. Die Anforderung sollte einen Formular-POST darstellen.</param>
        <summary>Liest ein <see cref="T:System.IdentityModel.Services.SignInResponseMessage" />-Objekt aus dem Formular POST, das durch die angegebene HTTP-Anforderung dargestellt wird.</summary>
        <returns>Die Anmeldungsantwortnachricht, die erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> -Methode in der Pipeline zur anforderungsverarbeitung, erhalten eine Anmeldung Response-Nachricht aus dem Formular POST, die in der HTTP-Anforderung enthalten sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Eine Anmeldungsantwortnachricht konnte nicht aus der angegebenen Anforderung gelesen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Die Anforderung zur Abmeldung und Bereinigung.</param>
        <summary>Bestimmt die URL, zu der umgeleitet werden soll, wenn eine WS-Verbund-Anforderung zur Abmeldung und Bereinigung (wsignoutcleanup1.0) verarbeitet wird, die einen wreply-Parameter enthält.</summary>
        <returns>Die URL, zur der umgeleitet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> -Methode in der Pipeline zur anforderungsverarbeitung die URL zum Umleiten an, nach der Verarbeitung von leeren von Volltextkatalogen einer WS-Verbund-abmeldungsanforderung fest. Es wird nur aufgerufen, wenn die Nachricht einen Wreply Parameter enthält (die `signOutMessage` Parameter hat eine <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> -Eigenschaft, die keine ist `null` noch leer).  
  
 Die standardmäßige Implementierung überprüft die Antwort-URL, die in der Nachricht enthaltenen (die <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> Eigenschaft) für die Adresse des dem Sicherheitstokendienst (STS), die angegeben wird die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft. Die folgenden Bedingungen müssen für die Antwort-URL gültig ist "true" sein:  
  
1.  Die Antwort-URL ist eine absolute URL.  
  
2.  Die Antwort-URL hat das gleiche Schema als Aussteller.  
  
3.  Die Antwort-URL hat den gleichen Port als Aussteller.  
  
4.  Die Antwort-URL hat den gleichen Host als Aussteller verwendet oder die Antwort-URL gibt eine Unterdomäne des Ausstellers an.  
  
 Wenn alle diese Bedingungen "true" sind, die Antwort-URL (Reply) zurückgegeben wird. andernfalls die URL angegeben, durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft zurückgegeben wird.  
  
 Überschreiben Sie diese Methode, um zusätzliche Validierung für die Antwort-URL bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> hat eine <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" />-Eigenschaft, die <see langword="null" /> oder leer ist.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrahiert den ausgestellten Token aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der der Token extrahiert werden soll. Die Anmeldungsantwort enthält das Token, das durch das STS ausgegeben wird.</param>
        <summary>Extrahiert den ausgestellten Token aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
        <returns>Eine Zeichenfolge mit dem XML-Code, der den ausgestellten Token darstellt. Dies ist ein <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein Wresult-Parameter vorhanden, in der Nachricht anmeldungs-Antwortnachrichten ist die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> Methode wird aufgerufen, um zu versuchen, das Abrufen des Tokens mithilfe des Wresultptr-Parameters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="message" /> enthält kein Token. (Es enthält keinen gültigen wresult- oder wresultptr-Parameter.)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der der Token extrahiert werden soll. Die Anmeldungsantwort enthält das Token, das durch das STS ausgegeben wird.</param>
        <param name="federationSerializer">Der WS-Verbundserialisier, der verwendet werden soll, um die Anmeldungsantwortnachricht zu deserialisieren.</param>
        <summary>Extrahiert das ausgestellte Token aus der angegebenen WS-Verbund-Anmeldungsantwortnachricht mithilfe des angegebenen WS-Verbund-Serialisierungsprogramms.</summary>
        <returns>Eine Zeichenfolge mit dem XML-Code, der den ausgestellten Token darstellt. Dies ist ein <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />-Element.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „whr“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Die Adresse des Identitätsanbieters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Whr-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Whr-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Das HTTP-Anwendungsobjekt, das dieses Modul enthält.</param>
        <summary>Initialisiert das Modul und bereitet es auf die Verarbeitung von Ereignissen des [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]-Anwendungsobjekts des Moduls vor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügt Handler für ASP.NET-Pipelineereignisse gemäß der folgenden Tabelle.  
  
|event|Ereignishandler|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Die Moduleigenschaften, z. B. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , initialisiert werden, aus der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Moduleigenschaften auf Grundlage der Konfiguration, die von der <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />-Eigenschaft des Moduls angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduleigenschaften werden initialisiert, die mithilfe der entsprechenden Eigenschaften der <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> angegebene Objekt der <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Sie können Einstellungen in einer Konfigurationsdatei durch Angeben der [ &lt;WsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist.</summary>
        <returns>
          <see langword="true" />, wenn die Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> -Methode in der Pipeline zur anforderungsverarbeitung zu bestimmen, ob die eingehende HTTP-Anforderung eine WS-Verbund-anmeldungsantwortnachricht ist.  
  
 Die Standardimplementierung gibt `true` , wenn der wa-Parameter "wsignin1. 0" und den Wreq und Wreqptr-Parameter nicht festgelegt sind.  
  
 Sie können diese Methode in abgeleiteten Klassen, führen Sie zusätzliche Überprüfungen überschreiben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen URI ab oder legt diesen fest, der den beabsichtigten Aussteller des Sicherheitstoken identifiziert.</summary>
        <value>Der URI, der den Sicherheitstokendienst (STS) identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine erforderliche Eigenschaft. Es muss festgelegt werden, wenn der passive umleitungen aktiviert sind. Es gibt die URL der den Sicherheitstokendienst (STS), der, den WS-Verbund-Anforderungen ausgestellt werden soll.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> oder eine leere Zeichenfolge festzulegen.  
  
- oder -  
Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> -Methode implementiert die WS-Verbund-Pipeline zur anforderungsverarbeitung. Es hinzugefügt wird die <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> Ereignis in der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] pipeline nach der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> Methode.  
  
 Die Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> Methode, um zu bestimmen, ob eine WS-Verbund-anmeldungsantwortnachricht ("wsignin1. 0") empfangen wurde. Wenn die Antwort eine WS-Verbund bereinigen abmeldungsanforderung ("wsignoutcleanup1. 0"), wird <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> die Nachricht verarbeitet, beendet die Anforderung und leitet den Client gemäß der WS-Verbund-Parameter in der Anforderung. Wenn die Nachricht keine Anmeldeantwort oder eine Anforderung zur Abmeldung bereinigen, das Modul nur zurückgibt ist; Andernfalls führt es die folgenden Schritte aus, um die Verarbeitung der Antwort-Anmeldung.  
  
2.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> Methode zum Deserialisieren einer <xref:System.IdentityModel.Tokens.SecurityToken> Objekt aus der Anforderung.  
  
3.  Löst das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>-Ereignis aus. Sie können weitere Verarbeitung abzubrechen, oder ändern das empfangene Sicherheitstoken in einen Handler für dieses Ereignis. Ein Handler dient normalerweise zum Ändern der <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> oder <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> Eigenschaften.  
  
4.  Überprüft das Sicherheitstoken und erstellt eine <xref:System.Security.Claims.ClaimsPrincipal> Objekt aus den Ansprüchen im Sicherheitstoken.  
  
5.  Löst das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>-Ereignis aus. Sie können weitere Verarbeitung abzubrechen, oder Ändern von der Anspruchs-Prinzipal in einem Ereignishandler für dieses Ereignis.  
  
6.  Verwendet das konfigurierte sitzungsauthentifizierungsmodul (SAM) zum Erstellen einer <xref:System.IdentityModel.Tokens.SessionSecurityToken> Objekt. (Das konfigurierte SAM ist der <xref:System.IdentityModel.Services.SessionAuthenticationModule> zurückgegebenes Objekt der <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> Eigenschaft.) Das Sitzungstoken wird erstellt, mit der Anspruchs-Prinzipal, der in Schritt 5 zurückgegeben. Die <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> und <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> Eigenschaften einrichten, indem die <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> und <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> Eigenschaften der <xref:System.IdentityModel.Tokens.SecurityToken> in Schritt 3 zurückgegeben und werden anhand der aktuellen Uhrzeit und die Lebensdauer des Tokens angegeben werden, indem Sie entweder die überprüft<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>oder <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> Eigenschaft der <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Objekt in der Auflistung der Tokenhandler, der von WSFAM verwendet wird. Die Lebensdauer des Tokens auf den Handler für Sitzungstoken kann angegeben werden, in der Konfiguration über die [ &lt;auf "sessiontokenrequirement"&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) Element. Hinweis: Die <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> Eigenschaft für den cookiehandler konfiguriert wird, für der SAM nicht verwendet wird.  
  
7.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> -Methode mit das Sitzungstoken, das Sitzungscookie zu schreiben. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> -Methode zuerst löst der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> Ereignis. Sie können Eigenschaften für das Sitzungstoken, das Ändern oder zu ändern, ob das Cookie in einem Ereignishandler für dieses Ereignis beibehalten werden soll. Nachdem das Ereignis ausgelöst wurde, gibt die Methode klicken Sie dann das Cookie über den SAM.  
  
    > [!NOTE]
    >  Die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Satz in der Konfiguration wird nicht verwendet, um das Cookie schreiben.  
  
8.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> Ereignis.  
  
9. Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> Methode zum Abrufen der RP-Seite, der zum Umleiten des Clients. Standardmäßig liest diese Methode die Rückgabe-URL aus den Wctx-Parameter in der Antwort-Anmeldung. Weitere Informationen dazu, wie die Rückgabe-URL von WSFAM speichert, finden Sie unter den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandlerdelegaten, wenn Autorisierung fehlgeschlagen ist.  
  
 Initialisiert die <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> Eigenschaft vor dem Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Ereignis um zirkuläre umleitungen zu verhindern, wenn der Benutzer bereits authentifiziert wurde. Wenn der Benutzer bereits authentifiziert ist, wird die Eigenschaft mit initialisiert `false` leitet um zu verhindern; andernfalls wird es mit initialisiert `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ereignis wird ignoriert, es sei denn, die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Eigenschaft `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig ist dies ein leerer Handler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode unmittelbar nach dem Abschluss die Sitzung gelöscht wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode auf, kurz bevor die Sitzung gelöscht wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode, wenn eine Ausnahme während der Verarbeitung auftritt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modul aktiviert wurde, um Umleitungen von WS-Federation-Protokollen zu initiieren.</summary>
        <value>
          <see langword="true" /> zum Aktivieren von Umleitungen, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Modul wird protokollumleitungen des WS-Verbund nicht initiiert, wenn dieser Modus nicht aktiviert ist. Wenn diese Eigenschaft `true`, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft muss festgelegt werden, an die URL von der Sicherheit Sicherheitstokendienst (STS), die der Aufrufer umgeleitet werden soll.  
  
> [!WARNING]
>  Anwendungscode WS-Verbund-anmeldeanforderungen explizit mithilfe der Ausstellen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Methode unabhängig vom Wert für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob ein persistentes Sitzungscookie nach erfolgreicher Authentifizierung ausgegeben werden soll.</summary>
        <value>
          <see langword="true" />, um einen permanenten Sitzungscookie auszugeben; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> Ereignis. Dieses Ereignis wird von der Anforderungsverarbeitungspipeline, beim Verarbeiten einer WS-Verbund-anmeldungs-Antwortnachrichten-Nachricht von einem Sicherheitstokendienst (STS) ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wp“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die die zu verwendende Richtlinie angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wp-Parameters ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge und wp-Parameters ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wtrealm“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der die vertrauende Seite (RP) an den Sicherheitstokendienst (STS) identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine erforderliche Eigenschaft für WS-Verbund-anmeldeanforderungen. Es muss festgelegt werden, wenn der passive umleitungen aktiviert sind. Der URI identifiziert die vertrauende Seite an den STS. (Dem STS, um die vertrauende Seite ermittelt haben, finden Sie unter den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft).  
  
 Der Wert dieser Eigenschaft wird als den Wtrealm Abfragezeichenfolgen-Parameter in WS-verbundprotokoll serialisiert. Er gibt die vertrauende Seite an den STS. Es wird vom STS verwendet, um zu entscheiden, welche Richtlinie, die für die tokenausstellung und der Benutzer nach der Ausstellung von token weitergeleitet, wo angewendet. (Dem STS, um die vertrauende Seite ermittelt haben, finden Sie unter <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> oder eine leere Zeichenfolge festzulegen.  
  
- oder -  
Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Modul den Benutzer auf den Identitätsanbieter umleitet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können Zugriff auf und ändern Sie die WS-Verbund-anmeldungsanforderung über die <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> Eigenschaft. Sie können z. B. Ändern der <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> Eigenschaft in der Meldung "Anmeldung" So ändern Sie den betreffenden Identitätsanbieter anzeigt, die Anforderung umgeleitet werden wird. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis ist ein abbrechbares Ereignis aus, und Sie können festlegen, die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true` zum Abbrechen der umleitungs.  
  
 Das Ereignis wird ausgelöst, von innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Methode durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> Methode.  
  
 Um dieses Ereignis in einer ASP.NET-Anwendung zu verarbeiten, erstellen Sie eine Methode namens `WSFederationAuthentication_RedirectingToIdentityProvider` in der Datei "Global.asax".  
  
   
  
## Examples  
 Der folgende Code zeigt das Hinzufügen ein Handlers für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis in der `Application_Init` Ereignis in der Datei "Global.asax". Der Code stammt aus dem `FederationForWebApps` Beispiel. Weitere Informationen zu diesem Beispiel finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Der folgende Code zeigt den Handler für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis in der in der Datei "Global.asax" als vertrauende Seite. Der Code überprüft, ob die eingehende HTTP-Anforderung den Whr-Parameter enthält, und wenn dies der Fall, wird dieser Parameter auf den WS-Verbund-anmeldungsanforderung, der an den Sicherheitstokendienst gesendet werden. Der Code stammt aus dem `FederationForWebApps` Beispiel. Weitere Informationen zu diesem Beispiel finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Der folgende Code zeigt den Handler für die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis in der in der Datei "Global.asax" verbundanbieter STS. Der Code überprüft, um festzustellen, ob die eingehende HTTP-Anforderung einen Whr-Parameter enthält. Wenn die Anforderung den Whr-Parameter enthält, wird der Client auf IP-STS für die Anmeldung umgeleitet. Wenn dies nicht der Fall ist, wird der Client ist, wählen Sie die IP-STS, melden Sie sich auf einer Seite zur startbereichsermittlung weitergeleitet. Der Code stammt aus dem `FederationForWebApps` Beispiel. Weitere Informationen zu diesem Beispiel finden Sie unter [Index für WIF-Codebeispiele](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein. Weitere Informationen finden Sie unter der Methode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">Die URL, zu der das Modul nach der Authentifizierung zurückkehren soll.</param>
        <param name="persist">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können den Wert auf <see langword="true" /> oder <see langword="false" /> festlegen.</param>
        <summary>Leitet den Benutzer zum Sicherheitstokendienst (STS) weiter, der von der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft angegeben wird, um ein Sicherheitstoken mit dem WS-Verbund-Protokoll zu erhalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Methode, wenn die Anforderung ausgegeben wird, von einer Webseite angezeigt wird, durch die vertrauende Seite (RP) oder aus der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandler-Delegat, der eine passive Umleitung an den Identitätsanbieter auf Autorisierungsfehler.  
  
 Die an die Methode übergebenen Parameter werden verwendet, um den Wctx-Parameter-Nachricht zu erstellen. Der einzige wichtige Parameter ist der `returnUrl` Parameter. Gibt die URL an, dass die Anwendung die vertrauenden Seite den Browser nach der erfolgreichen Authentifizierung weiterleiten soll. Es dürfen nicht mit den Wreply-Nachrichtenparameters, die von angegeben wird verwechselt werden die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> -Eigenschaft und die die Adresse, an die vertrauende Seite bereitstellt, der Sicherheitstokendienst (STS) die Antwort weiterleiten sollten.  
  
 Die Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> Methode, um sicherzustellen, dass das Modul eine gültige anmeldeanforderung ausgestellt werden kann.  
  
2.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Methode zum Erstellen der anmeldeanforderung aus den Eigenschaften, die im Modul konfiguriert.  
  
3.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Sie können die Umleitung abbrechen oder ändern Sie die anmeldeanforderung-Nachricht im Ereignishandler für dieses Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder -  
 Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder -  
Die <see cref="P:System.Web.HttpContext.Current" />-Eigenschaft ist <see langword="null" /> oder leer.  
  
- oder -  
Die <see cref="P:System.Web.HttpContext.Response" />-Eigenschaft des Kontexts, zurückgegeben von <see cref="P:System.Web.HttpContext.Current" />, ist <see langword="null" /> oder leer.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreply“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die die Adresse angibt, an der die Applikation der vertrauende Seite (RP) Antworten vom Sicherheitstokendienst (STS) empfangen möchte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wreply-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wreply-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Der Wreply-Parameter wird vom STS verwendet, um zu entscheiden, wohin den Benutzer nach der Ausstellung von token umzuleiten. Es ist nicht ratsam, für den STS Blind diese Adresse verwenden, um den Benutzer umzuleiten, wie diese Umleitung Sicherheitsrisiken aufweist. Die Antwortadresse muss vom STS (möglicherweise durch Vergleich auf einen Satz von vorkonfigurierten Antwortadressen für die Zwecke oder eine andere Methode) überprüft werden, um sicherzustellen, dass die Antwort an bekannten bekannte und sichere Standort gesendet werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreq“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Die Tokenausstellungsanforderungen ausgedrückt als <see langword="&lt;wst:RequestSecurityToken&gt;" />-Element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wreq-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wreq-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreqptr“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die den Speicherort der Tokenausstellungsanforderungen angibt, die als <see langword="&lt;wst:RequestSecurityToken&gt;" />-Element angegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wreqptr-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wreq-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für die Kommunikation mit dem Sicherheitstokendienst (Security Token Service, STS) ein HTTPS-Protokoll verwendet werden muss.</summary>
        <value>
          <see langword="true" />, wenn die Kommunikation mit dem STS mit HTTPS gesichert werden muss; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wres“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der die Ressource identifiziert, auf die zugegriffen wird, die vertrauende Seite (RP) auf dem Sicherheitstokendienst (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Den Wtrealm-Parameter, der festgelegt wird, durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> -Eigenschaft sollte anstelle dieses Parameters verwendet werden.  
  
 Der Wres-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wres-Parameter ist nicht in der anmeldeanforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Sicherheitstoken von einem Sicherheitstokendienst (STS) empfangen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler, um das Token zu ändern, bevor es überprüft wird, hinzufügen. In dieser Handler Sie erreichen des Sicherheitstokens über die <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> Eigenschaft. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Ereignis ist ein abbrechbares Ereignis, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true` in einem Ereignishandler zum Beenden der Verarbeitung von der WS-Verbund-anmeldungsantwortnachricht.  
  
 Dieses Ereignis wird ausgelöst, von innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten beim Verarbeiten einer WS-Verbund-anmeldungs-Antwortnachrichten-Nachricht ("wsignin1. 0") von den Sicherheitstokendienst (STS) empfangen. Es wird ausgelöst, unmittelbar nach der ein Sicherheitstoken in die wresult- oder Wresultptr-Parameter in der Antwortnachricht-Anmeldung, aber bevor das Sicherheitstoken überprüft wird deserialisiert wurde.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem ein vom Sicherheitstokendienst (STS) empfangener Sicherheitstoken überprüft wurde, jedoch bevor der Sitzungssicherheitstoken erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler, um den Prinzipal erstellt, die beim Verarbeiten einer WS-Verbund-anmeldungsantwortnachricht von einem Sicherheitstokendienst (STS), bevor sie verwendet wird, um das Sitzungstoken, das Erstellen zu ändern, hinzufügen. In dieser Handler auf, es stehen des Prinzipals über die <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> Eigenschaft. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Ereignis ist ein abbrechbares Ereignis, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true` in einem Ereignishandler zum Beenden der Verarbeitung von der WS-Verbund-anmeldungsantwortnachricht.  
  
 Dieses Ereignis wird ausgelöst, von innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten beim Verarbeiten einer WS-Verbund-anmeldungs-Antwortnachrichten-Nachricht ("wsignin1. 0") von den Sicherheitstokendienst (STS) empfangen. Es wird nur nach dem das Sicherheitstoken, das aus der Wresult deserialisiert wurde ausgelöst oder der Wresultptr-Parameter in der Antwortnachricht Anmeldung bestätigt wurde, und bevor der sitzungssicherheitstoken Token erstellt wird.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Sitzungssicherheitstoken vom Sicherheitstoken erstellt wurde, der von einem Sicherheitstokendienst (STS) ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler, um das Sitzungstoken, das zu ändern, bevor er verwendet wird, um den Thread-Prinzipal festgelegt und sich an das Sitzungscookie richtet hinzufügen. In dieser Handler auf, Sie können Zugriff auf das Sitzungstoken, das über die <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> Eigenschaft. Sie können angeben, ob ein Sitzungscookie soll, durch Festlegen geschrieben werden der <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Dieses Ereignis wird ausgelöst, von innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten beim Verarbeiten einer WS-Verbund-anmeldungs-Antwortnachrichten-Nachricht ("wsignin1. 0") von den Sicherheitstokendienst (STS) empfangen. Es wird nur nach dem das Sicherheitstoken, das aus der Wresult deserialisiert wurde ausgelöst oder der Wresultptr-Parameter in der Antwortnachricht Anmeldung überprüft wurde und vor die Ansprüche dem Prinzipal festgelegt ist, auf die <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (und klicken Sie auf die <xref:System.Web.HttpContext.User%2A> Eigenschaft <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Sitzungen im Verweismodus empfiehlt Microsoft die Bereitstellung eines Handlers für Betrieb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> Ereignis in die Datei "global.asax.cs" und die Einstellung der <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> -Eigenschaft im Token übergeben wird, der <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> Eigenschaft. Dadurch wird sichergestellt, dass das Sitzungstoken, das für jede Anforderung im Verweismodus arbeitet und sitzungsauthentifizierungsmodul bevorzugt wird allein durch Festlegen der <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> Eigenschaft für das Sitzungsauthentifizierungsmodul.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Das Sitzungssicherheitstoken, das von der WS-Verbund-Anmeldungsantwortnachricht vom STS erstellt wurde.</param>
        <param name="isSession">
          <see langword="true" />, um ein Cookie schreiben, das die Sitzung darstellt, die in die Antwort eingeschlossen ist; andernfalls <see langword="false" />.</param>
        <summary>Legt den Thread-Prinzipal fest und schreibt optional den Sitzungscookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird aufgerufen, von der anforderungsverarbeitungs-Pipeline in implementiert die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten. Diese Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> Ereignis. Sie können dieses Ereignis verwenden, um das Sitzungstoken, das zu ändern, bevor es verwendet, um den Thread-Prinzipal festgelegt ist und das Sitzungscookie geschrieben und angeben, ob das Sitzungscookie geschrieben werden soll.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> Methode für das konfigurierte sitzungsauthentifizierungsmodul (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) legen Sie den Thread-Prinzipal und optional den Sitzungscookie zu schreiben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem der Benutzer angemeldet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anforderung an die Anmeldeseite gesendet wird, wird ein Steuerelement auf der Seite Auslösen dieses Ereignisses nicht in diesem Modul.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt unmittelbar nach dem Löschen der Sitzung während der Abmeldung auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> -Methode verwenden, während die Sitzung an die vertrauende Seite (RP) abmelden. Das Ereignis wird nicht ausgelöst, wenn dies Abmeldung durch Verbund die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 Sie können hinzufügen, dass ein Ereignishandler an eine beliebige zusätzliche Verarbeitungsschritte, die von der Anwendung benötigt wird, nachdem das Sitzungscookie gelöscht wurde.  
  
 Dieses Ereignis wird nicht unbedingt für jede Sitzung aufgerufen werden. Cookies können beispielsweise auf der Clientseite gelöscht werden, damit dieses Ereignis nicht ausgelöst werden würde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein. Weitere Informationen finden Sie unter der Methode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Führt Anmeldung bei einem Sicherheitstokendienst (STS) durch das WS-Verbund-Protokoll aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Methode, um die Anmeldung auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen anwendungsspezifischen Kontextwert ab, der in den wctx-Parameter in WS-Verbund-Anmeldungsanforderungen eingeschlossen werden soll, oder legt diesen fest.</summary>
        <value>Der anwendungsspezifische Kontextwert, der in den wctx-Parameter für Anmeldungsanforderungen aufgenommen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> -Methode wird aufgerufen, die Anmeldung-Nachricht, die generiert wird, enthält einen Wctx-Parameter, der im folgenden Format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Der Wert des der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> befindet sich in der `cx` Parameter. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> kann direkt aus Ihrem Code aufgerufen werden. Wird auch aufgerufen, wenn das WSFAM passive umleitungen ausführt und auch wenn entweder die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Methode oder die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Methode wird vom Anwendungscode aufgerufen.  
  
 Obwohl das WSFAM speichert die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> Wert anmeldeanforderung Nachrichten führen, wenn der Wert von der Anwendung während der Verarbeitung von Antwort verwendet wird, müssen Sie die Logik für das Extrahieren es aus den Wctx-Parameter in der Antwortnachricht Anmeldung angeben.  
  
 Weitere Informationen über das Format und die Verarbeitung von den Wctx-Parameter finden Sie unter den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn während des Anmeldens ein Fehler auftritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anforderung an die Anmeldeseite gesendet wird, wird ein Steuerelement auf der Seite Auslösen dieses Ereignisses nicht in diesem Modul.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor die Sitzung während der Abmeldung gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> -Methode verwenden, während die Sitzung an die vertrauende Seite (RP) abmelden. Das Ereignis wird nicht ausgelöst, wenn dies Abmeldung durch Verbund die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 Sie können einen Ereignishandler, um eine zusätzliche Verarbeitung auszuführen, die von Ihrer Anwendung erforderlich ist, bevor das Sitzungscookie gelöscht wird, hinzufügen. Sie erhalten die <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> -Eigenschaft in der Ereignishandler, um zu bestimmen, ob die Abmeldung das Ergebnis des Empfangs einer WS-Verbund-Anforderung zur Abmeldung und Bereinigung-Nachricht ("wsignoutcleanup1. 0") von einem Sicherheitstokendienst (STS) ist, oder gibt an, ob sie am initiiert wurde Anwendung der vertrauenden Seite.  
  
 Dieses Ereignis wird nicht unbedingt für jede Sitzung aufgerufen werden. Cookies können beispielsweise auf der Clientseite gelöscht werden, damit dieses Ereignis nicht ausgelöst werden würde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Abfragezeichenfolge ab, die alle zusätzlichen Parameter enthält, die an die WS-Verbund-Anmeldungsanforderungen („wsignin1.0“) gesendet werden sollen, oder legt sie fest.</summary>
        <value>Ein URL-Fragment, das die zusätzlichen Meldungsparameter im folgenden Format enthält: <c>param1 = value1&amp;param2 = value2&amp;ParamN = Wertn</c>. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zusätzliche Parameter in eine anmeldeanforderung zu senden. Dies wäre anwendungsspezifische-Parameter, die nicht einer der Parameter, die durch das WS-Verbund-Protokoll angegeben werden. Legen die Eigenschaft auf eine leere Zeichenfolge, um zusätzliche Parameter aus der Anforderung zu entfernen.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung außer Kraft setzen, durch Hinzufügen eines ereignishandlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit der WS-Verbund-anmeldungsanforderung Meldung umleitet. Der STS wird angegeben, indem die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Meldet sich von der aktuellen Sitzung ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung.  
  
 Keine abmeldungsanforderungsnachricht ("wsignout1. 0") wird an den Sicherheitstokendienst (STS) gesendet. Verwenden Sie zum Abmelden des STS mithilfe von WS-Verbund-Protokoll, das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur URL an, die in der aktuellen HTTP-Anforderung angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung, und leitet den Browser zurück an die URL, die in der aktuellen HTTP-Anforderung angegeben.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> -Methode mit der `redirectUrl` Parameter festgelegt wird, an die URL der aktuellen Anforderung.  
  
 Keine abmeldungsanforderungsnachricht ("wsignout1. 0") wird an den Sicherheitstokendienst (STS) gesendet. Verwenden Sie zum Abmelden des STS mithilfe von WS-Verbund-Protokoll, das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">
          <see langword="true" />, wenn die Anforderung vom IP-STS über eine WS-Verbund-Abmeldungscleanupanforderungs-Nachricht initiiert wurde („wsignoutcleanup1.0“); andernfalls <see langword="false" />.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und löst die entsprechenden Ereignisse aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt die eigentliche Arbeit beim Löschen der aktuellen Sitzungs und die entsprechenden Abmeldung Ereignisse auslösen. Die Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> Ereignis. Ein Ereignishandler bieten alle erforderlichen Verarbeitung aus, bevor die Sitzung gelöscht wird. Die <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> -Eigenschaftensatz gemäß der `isIPRequest` Parameter.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> Methode für die aktuelle Sitzung Authentifizierungs-Manager das Sitzungscookie zu löschen.  
  
     Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> Ereignis.  
  
3.  Wenn ein Fehler während der Verarbeitung der Abmeldung auftritt, ruft der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> Methode zum Auslösen der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Ereignis. Ein Ereignishandler kann die Verarbeitung abzubrechen und zu verhindern, dass eine Ausnahme zurückgegeben wird, an den Aufrufer der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Rufen Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> -Methode mit dem `isIPRequest` Parametersatz `false` einer Sitzung abmelden, ohne eine Umleitung ausgeführt werden. Die Methode wird von allen anderen überladenen letztlich aufgerufen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> Methoden (mit der `isIPRequest` Parametersatz zu `false`) die Abmelde-Verarbeitung ausführen. Die Methode wird aufgerufen, von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> -Methode mit dem `isIPRequest` Parametersatz `true` der Sitzung abmelden, wenn er verarbeitet eine WS-Verbund-abmeldungscleanupmeldung ("wsignoutcleanup1. 0").  
  
 Keine abmeldungsanforderungsnachricht ("wsignout1. 0") wird an den Sicherheitstokendienst (STS) gesendet. Verwenden Sie zum Abmelden des STS mithilfe von WS-Verbund-Protokoll, das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Die URL, an die der Browser umgeleitet werden soll, nachdem die Sitzung gelöscht wird.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur angegebenen URL an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung, und leitet den Browser an der angegebenen URL.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> -Methode mit der `redirectUrl` Parameter und die `initiateSignoutCleanup` festgelegt `false`.  
  
 Keine abmeldungsanforderungsnachricht ("wsignout1. 0") wird an den Sicherheitstokendienst (STS) gesendet. Verwenden Sie zum Abmelden des STS mithilfe von WS-Verbund-Protokoll, das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> ist kein gültiger URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Die URL, an die der Browser nach der Abmeldung umgeleitet werden soll.</param>
        <param name="initiateSignoutCleanup">Wird immer auf <see langword="false" /> festgelegt. Das Festlegen dieses Parameters auf <see langword="true" /> wird nicht unterstützt.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur angegebenen URL an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung, und leitet den Browser an der angegebenen URL.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> -Methode mit dem `initiateSignoutCleanup` Parametersatz `false`.  
  
 Keine abmeldungsanforderungsnachricht ("wsignout1. 0") wird an den Sicherheitstokendienst (STS) gesendet. Verwenden Sie zum Abmelden des STS mithilfe von WS-Verbund-Protokoll, das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> ist kein gültiger URI.</exception>
        <exception cref="T:System.NotImplementedException">Die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Klasse löst diese Ausnahme aus, wenn <paramref name="initiateSignoutCleanup" /><see langword="true" /> ist. Legen Sie diesen Parameter nicht als <see langword="true" /> fest.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn während der Abmeldens ein Fehler auftritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> -Methode verwenden, während die Sitzung an die vertrauende Seite (RP) abmelden. Das Ereignis wird nicht ausgelöst, wenn dies Abmeldung durch Verbund die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode.  
  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Ereignis ist ein Ereignis abgebrochen werden können. Sie können festlegen, die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft in einem Ereignishandler, um zu verhindern, dass die Ausnahme, die den Fehler verursacht hat, die für den Initiator die Abmeldung zurückgegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Abfragezeichenfolge ab oder legt sie fest, die alle zusätzlichen Parameter enthält, die an die WS-Verbund-Abmeldungsanforderungen („wsignout1.0“) gesendet werden sollen.</summary>
        <value>Ein URL-Fragment, das die zusätzlichen Meldungsparameter im folgenden Format enthält: <c>param1 = value1&amp;param2 = value2&amp;ParamN = Wertn</c>. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird standardmäßig von initialisiert die `signOutQueryString` Attribut der [ &lt;WsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) Element in der Konfigurationsdatei. Es soll enthalten anwendungsspezifische Parameter an eine WS-Verbund-abmeldungsanforderung gesendet werden sollen. Um diese Parameter zu entfernen, können Sie die Eigenschaft auf eine leere Zeichenfolge festlegen.  
  
 Das WSFAM wird diese Eigenschaft nicht direkt verwendet. Sie können jedoch übergeben, damit die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> Methode, um eine vollständige WS-Verbund-Abmelde-URL zu erstellen, die von Ihrem Code verwendet werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreply“-Parameters für die Verwendung bei WS-Verbund-Abmeldeanforderungen („wsignout1.0“) ab oder legt diesen fest.</summary>
        <value>Die URL, an die der Client vom Sicherheitstokendienst (STS) nach der Abmeldung durch das WS-Verbund-Protokoll umgeleitet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird standardmäßig von initialisiert die `signOutReply` Attribut der [ &lt;WsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) Element in der Konfigurationsdatei. Es soll den Wreply-Parameter in einer WS-Verbund-abmeldungsanforderung darstellt.  
  
 Der Wreply-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> -Eigenschaftensatz auf `null` oder eine leere Zeichenfolge, die den Wreply-Parameter ist nicht in der abmeldungsanforderung enthalten.  
  
 Das WSFAM verwendet diese Eigenschaft nicht direkt auf. Sie können jedoch übergeben, damit die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> Methode, wenn das Ausführen von WS-Verbund-abmeldeanforderungen von Code oder Sie es zu übergeben, kann der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> Methode, um eine vollständige WS-Verbund-Abmelde-URL zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />- und die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />-Eigenschaft nicht leer sind, und dass, wenn die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />-Eigenschaft <see langword="true" /> ist, die für <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> angegebenen URIs HTTPS-kompatibel sind.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder -  
 Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder -  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> ist <see langword="true" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> nicht HTTPS-kompatibel.  
  
- oder -  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> ist <see langword="true" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> nicht HTTPS-kompatibel.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt ab, das verwendet wird, wenn WS-Verbund-Anmeldungsantwortnachrichten deserialisiert werden, um das Token abzurufen, das vom Sicherheitstokendienst (STS) ausgestellt wird, oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das verwendet wird, wenn WS-Verbund-Anmeldungsantwortnachrichten deserialisiert werden, um den Token abzurufen, der vom Sicherheitstokendienst (STS) ausgegeben wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>