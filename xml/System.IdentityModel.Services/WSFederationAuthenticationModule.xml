<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccd9e98c9caf6e7a2c90d60f35251e47ad147e20" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964799" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> ist ein HTTP-Modul, das für die Sicherung einer ASP.NET-Anwendung verwendet wird, indem Verbundauthentifizierungseinstellungen für eingehende Anforderungen erzwungen werden. Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> ist das Hauptmodul, das WIF vorkonfiguriert für das Behandeln von anspruchsbasierten Identitätszugriffen in ASP.NET-Anwendungen anbietet.  
  
Das <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> löst mehrere Ereignisse aus, die es ASP.NET-Entwicklern erlauben, das Standardverhalten zu ändern und im Detail zu steuern, wie die Authentifizierungs- und Anspruchsverarbeitung stattfindet. Die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Funktionalität wird in aufgabenbezogene Methoden unterteilt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule>-Klasse implementiert ein HTTP-Modul, das als WS-Verbund-Authentifizierungs Modul (wsfam) bezeichnet wird. Die wsfam wird von Windows Identity Foundation (WIF) standardmäßig implementiert. Der wsfam wird der ASP.NET-Pipeline hinzugefügt, indem ein Eintrag in der Datei "Web. config" vorgenommen wird. Sie wird von <xref:System.IdentityModel.Services.HttpModuleBase>abgeleitet, die <xref:System.Web.IHttpModule>implementiert. Er wird mit der ASP.NET-Laufzeit registriert, um auf die <xref:System.Web.HttpApplication.EndRequest> und <xref:System.Web.HttpApplication.AuthenticateRequest> Ereignisse zu lauschen. Wenn Sie das <xref:System.Web.HttpApplication.EndRequest>-Ereignis lauschen, kann das wsfam Clients an einen Sicherheitstokendienst (STS) umleiten, um ein Sicherheits Token abzurufen, wenn die Autorisierung für eine angeforderte Ressource fehlschlägt. Wenn Sie das <xref:System.Web.HttpApplication.AuthenticateRequest>-Ereignis lauschen, kann das wsfam HTTP-Anforderungen für eine Antwort vom STS überwachen, die das angeforderte Token enthält. Wenn ein solches Token vorhanden und gültig ist, erstellt es eine Instanz des <xref:System.Security.Claims.ClaimsPrincipal> für den authentifizierten Benutzer mithilfe der Ansprüche, die im Token vorhanden sind.  
  
 Wenn Sie wsfam verwenden, wird die Sitzungsverwaltung von einem Sitzungs Authentifizierungs Modul (Sam) bereitgestellt, bei dem es sich um eine Instanz der <xref:System.IdentityModel.Services.SessionAuthenticationModule>-Klasse oder eine von ihr abgeleitete Klasse handelt. Sam wird auch der ASP.NET-Pipeline in der Konfigurationsdatei hinzugefügt. Sam überwacht Anforderungen für Authentifizierungs-(Sitzungs-) Cookies. Wenn diese Cookies vorhanden und gültig sind, extrahiert das Modul die <xref:System.Security.Claims.ClaimsPrincipal> für den authentifizierten Benutzer aus dem <xref:System.IdentityModel.Tokens.SessionSecurityToken> und legt die Eigenschaften <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> und Thread Prinzipal <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> fest.  
  
 Die wsfam bietet Folgendes:  
  
-   Die Fähigkeit einer ASP.NET-Anwendung, die Authentifizierung mithilfe des WS-Verbund Protokolls an einen Sicherheitstokendienst (Security Token Service, STS) auszulagern. Die Identität kann in einem oder mehreren Identitäts Bereichen einen Verbund aufweisen und mehrere Sicherheitstokendienste umfassen.  
  
-   Anspruchs basierte Identität für ASP.NET-Anwendungen. Während der Authentifizierung erstellt das wsfam einen Prinzipal aus den Ansprüchen in dem vom STS gesendeten Sicherheits Token und legt diesen Anspruchs Prinzipal als Thread Prinzipal fest. Anschließend können Sie diesen Prinzipal verwenden, um weitere Autorisierungs-, Präsentations-und Logik Entscheidungen über den Benutzer zu treffen, den er im Code darstellt.  
  
 Die wsfam macht mehrere Eigenschaften verfügbar, die Standard Nachrichten Parameter zur Verwendung bei der WS-Verbund-Anmeldungs-und Abmelde Anforderungen bereitstellen. Diese Eigenschaften werden in der Regel vom [&lt;wsfederation-&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation) Element in einer Konfigurationsdatei initialisiert. Die wichtigsten dieser Eigenschaften sind:  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft, die die Adresse des Sicherheitstokendiensts (STS) angibt, an den die WS-Verbund-Anmeldungs-und Abmelde Anforderungen gesendet werden sollen.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>-Eigenschaft, die den wtrealm-Parameter angibt, der bei WS-Verbund-Anmeldungs Anforderungen verwendet werden soll. Der wtrealm-Parameter identifiziert den Sicherheitsbereich der Anwendung der vertrauenden Seite (RP) für den STS.  
  
 Anmelde Nachrichten Parameter können auch auf Anforderungs Basis geändert werden, indem ein Ereignishandlerdelegat für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis bereitgestellt wird.  
  
 Zwei Eigenschaften steuern das Verhalten des Moduls. Beide Eigenschaften werden in der Regel auch aus dem `<wsFederation>`-Element in der Konfiguration initialisiert.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>-Eigenschaft gibt an, ob das Modul für die Authentifizierung passive Umleitungen an den STS durchführen soll.  
  
-   Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A>-Eigenschaft gibt an, ob Sitzungen persistent sein sollen. Wenn diese Eigenschaft auf true festgelegt ist, wird Sam zum Schreiben eines Sitzungs Cookies an den Client verwendet. Bei nachfolgenden Anforderungen vom Client bietet Sam die Authentifizierung mithilfe des im Sitzungs Cookie beibehaltenen Tokens.  
  
 Das wsfam löst bei der Anmeldung und Abmeldung mehrere Ereignisse aus, mit denen ASP.NET-Entwickler das Standardverhalten des Moduls ändern und die Details der Authentifizierung und der Anspruchs Verarbeitung steuern können.  
  
 Die folgenden Ereignisse werden ausgelöst, bevor die WS-Verbund-Anmeldungs Anforderung an den STS gesendet wird:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: wird ausgelöst, wenn die passive Umleitung aktiviert ist und die Autorisierung für eine angeforderte Ressource fehlschlägt.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: wird ausgelöst, kurz bevor das wsfam die WS-Verbund-Anmeldungs Anforderung an den STS sendet. Sie können dieses Ereignis verwenden, um die Parameter in der Anmelde Anforderung zu ändern.  
  
 Die folgenden Ereignisse werden ausgelöst, wenn eine Anmeldungs Antwort (ausgestelltes Sicherheits Token) vom STS empfangen wird:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: wird ausgelöst, unmittelbar nachdem das vom STS gesendete Sicherheits Token aus der Antwort gelesen wurde.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: wird ausgelöst, unmittelbar nachdem das Token überprüft wurde. Mit diesem Ereignis können Sie den Anspruchs Prinzipal (<xref:System.Security.Claims.ClaimsPrincipal>), der aus dem Sicherheits Token erstellt wurde, Filtern, transformieren oder Ansprüche hinzufügen.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: wird ausgelöst, kurz bevor das Sitzungs Token (<xref:System.IdentityModel.Tokens.SessionSecurityToken>), das aus dem Anspruchs Prinzipal erstellt wurde, verwendet wird, um den Thread Prinzipal und den aktuellen Benutzer festzulegen und in das Sitzungs Cookie geschrieben wird. Bietet Ihnen die Möglichkeit, das Sitzungs Token zu ändern oder das Schreiben des Sitzungs Cookies zu aktivieren bzw. zu deaktivieren.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: wird am Ende der Authentifizierung unmittelbar nach dem Festlegen des Thread Prinzipals und des aktuellen Benutzers ausgelöst.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: wird ausgelöst, wenn während der Anmeldung eine Ausnahme auftritt. Sie können die Anforderung abbrechen und verhindern, dass die Ausnahme an den Aufrufer zurückgegeben wird.  
  
 Beim Abmelden von einer Sitzung oder bei der Verarbeitung einer WS-Verbund-Abmeldungs Bereinigungs Anforderung (wsignoutcleanup 1.0) werden die folgenden Ereignisse ausgelöst:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: wird unmittelbar vor dem Löschen der Sitzung ausgelöst, damit Sie alle Bereinigungs Vorgänge ausführen können, die von der Sitzung abhängen, oder die Abmeldung abbrechen.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: wird unmittelbar nach dem Löschen der Sitzung ausgelöst.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: wird ausgelöst, wenn während der Abmeldung eine Ausnahme auftritt. Sie können die Abmeldung abbrechen und verhindern, dass die Ausnahme an den Aufrufer zurückgegeben wird.  
  
> [!NOTE]
>  Die Abmelde Ereignisse werden nicht ausgelöst, wenn Sie sich beim STS abmelden, indem Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode aufrufen.  
  
 Es gibt zwei Möglichkeiten, sich mit wsfam bei einem STS anzumelden. Der erste besteht darin, passive Umleitungen durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>-Eigenschaft zu aktivieren. Wenn in diesem Fall die Autorisierung für eine angeforderte Ressource fehlschlägt, anstatt eine `401:Access Denied` Antwort an den Client zurückzugeben, erstellt wsfam eine WS-Verbund-Anmeldungs Anforderungs Nachricht aus den Eigenschaften und leitet den Client an den STS um, um ein Sicherheits Token abzurufen. Die zweite Möglichkeit besteht darin, den Client explizit an den STS umzuleiten, indem Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>-Methode von einer Webseite oder einem benutzerdefinierten Steuerelement in der Anwendung aufrufen. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>-Methode verwendet auch die Eigenschaften des wsfam, um die Anmelde Anforderung zu erstellen.  
  
 Alle überladenen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> Methoden können verwendet werden, um sich von der Sitzung abmelden. Dadurch wird das Sitzungs Cookie auf dem Client gelöscht. Eine WS-Verbund-Abmelde Nachricht ("wsignout 1.0") wird nicht an den STS gesendet. Zum Abmelden beim STS müssen Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode verwenden.  
  
 Das wsfam verarbeitet Anforderungen für die WS-Verbund-Abmelde Bereinigung ("wsignoutcleanup 1.0"), indem seine Sitzung mit dem Client gelöscht wird. Wenn der wreply-Parameter in der Abmelde Bereinigungs Meldung nicht festgelegt ist, gibt das wsfam ein Bild eines grünen Häkchens an den STS zurück, der die Nachricht gesendet hat. Diese Funktion kann von einem STS als Bestätigung verwendet werden, dass die RP-Abmeldung abgeschlossen wurde.  
  
 Der wsfam stellt seine Funktionalität (z. b. die Pipeline für die Anforderungs Verarbeitung) mithilfe mehrerer Aufgaben spezifischer Methoden zur Verfügung. Sie können diese Methoden in abgeleiteten Klassen überschreiben, um das Verhalten der wsfam zu ändern.  
  
 Um verwendet werden zu können, muss das Modul wie im folgenden XML-Code der Pipeline hinzugefügt werden:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Nach der Konfiguration löst die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Ereignisse in verschiedenen Phasen der Verarbeitung einer HTTP-Anforderung aus. ASP.NET-Entwickler können diese Ereignisse in der Datei "Global. asax" behandeln.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Klasse zu initialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wauth“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der den Authentifizierungstyp angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der WAUTH-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der WAUTH-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Modul ermittelt, ob es den Benutzer zur Authentifizierung auf die konfigurierten Aussteller umleiten soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>-Ereignis wird ausgelöst, wenn die Autorisierung für eine HTTP-Anforderung fehlgeschlagen ist. Sie wird aus dem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandlerdelegaten durch einen Aufruf der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A>-Methode ausgelöst.  
  
 Sie können die <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>-Eigenschaft festlegen, um zu steuern, ob die Anforderung an den Identitäts Anbieter umgeleitet wird. Das Framework initialisiert diese Eigenschaft, um zu `false`, wenn der Benutzer bereits authentifiziert wurde. In diesem Fall kann das Festlegen der-Eigenschaft auf `true` eine zirkuläre Schleife mit dem STS verursachen.  
  
> [!NOTE]
>  Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis kann verwendet werden, um die URL zu ändern oder die Umleitung abzubrechen.  
  
 Um dieses Ereignis in einer ASP.NET-Anwendung zu behandeln, erstellen Sie eine Methode mit dem Namen `WSFederationAuthentication_AuthorizationFailed` in der Datei Global. asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anmeldungs Antwortnachricht wird von einem Sicherheitstokendienst (Security Token Service, STS) als Antwort auf eine Anmelde Anforderungs Nachricht an die vertrauende Seite (RP) gesendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <returns><see langword="true" />, wenn die angegebene HTTP-Anforderung eine Formularbereitstellung enthält, in dem der „wa“-Parameter auf „wsignout1.0“ festgelegt und der „wresult“-Parameter nicht leer ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der Anforderungs Verarbeitungs Pipeline aufgerufen, um zu bestimmen, ob die eingehende HTTP-Anforderung eine Formular Bereitstellung ist, die eine WS-Verbund-Anmeldungs Antwortnachricht enthält.  
  
 Er ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>-Überladung mit dem `onPage` Parametersatz `false` auf, um anzugeben, dass der Aufruf nicht während der Verarbeitung einer Seite entstanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <param name="onPage"><see langword="true" />, wenn der Aufruf bei der Bearbeitung einer Seitenanforderung auftritt. <see langword="false" />, wenn der Aufrufer ein HTTP-Modul ist. Dieser Parameter bestimmt, wie die Verarbeitung beendet wird, oder sendet Umleitungen, wenn die eingehende Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“).</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die angegebene HTTP-Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist. Wenn die Meldung eine WS-Verbund-Abmeldungscleanupmeldung ist („wsignoutcleanup1.0“), verarbeitet diese Methode die Anforderung.</summary>
        <returns><see langword="true" />, wenn die angegebene HTTP-Anforderung eine Formularbereitstellung enthält, in dem der „wa“-Parameter auf „wsignout1.0“ festgelegt und der „wresult“-Parameter nicht leer ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der Anforderungs Verarbeitungs Pipeline durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> Überladung aufgerufen, um zu bestimmen, ob die eingehende HTTP-Anforderung ein Formular Beitrag ist, der eine WS-Verbund-Anmeldungs Antwortnachricht enthält.  
  
 Die Standard Implementierung führt Folgendes aus:  
  
-   Wenn die eingehende Anforderung ein Formular Beitrag ist, ruft Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A>-Methode auf, um zu bestimmen, ob die Formular Bereitstellung eine Anmelde Antwort enthält.  
  
-   Wenn es sich bei der eingehenden Anforderung nicht um eine Formular Bereitstellung handelt und die Anforderung eine WS-Verbund-Abmeldungs Bereinigungs Anforderung enthält (der WA-Parameter lautet "wsignoutcleanup 1.0"), erfolgt die Abmelde Bereinigung. In diesem Fall wird die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>-Methode aufgerufen (wobei der-Parameter auf `true` festgelegt ist, um eine Abmelde Bereinigung anzugeben), um sich bei der Sitzung anzumelden. Dies bewirkt auch, dass die Abmelde Ereignisse ausgelöst werden.  
  
     Wenn die Abmelde Anforderung zum Bereinigen einen wreply-Parameter enthält, wird der Client dann an die URL umgeleitet, die von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A>-Methode zurückgegeben wird. Andernfalls wird ein Bild eines grünen Häkchens an den STS zurückgegeben. Der Empfang dieses Abbilds kann vom STS als Bestätigung verwendet werden, dass die Anforderung zum Bereinigen des Abmelde Vorgangs von der RP empfangen und erfolgreich verarbeitet wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein.</param>
        <param name="returnUrl">Die URL, zu der das Modul nach der Authentifizierung zurückkehren soll.</param>
        <param name="rememberMeSet">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können den Wert auf <see langword="true" /> oder <see langword="false" /> festlegen.</param>
        <summary>Erstellt einen WS-Verbund in Anforderungnachricht mithilfe der WS-Verbund-Parameter, die im Modul konfiguriert werden.</summary>
        <returns>Die WS-Verbund-Anmeldungsanforderungsnachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt eine WS-Verbund-Anmeldungs Anforderung, die durch ein <xref:System.IdentityModel.Services.SignInRequestMessage>-Objekt dargestellt wird. Die Eigenschaften des neuen <xref:System.IdentityModel.Services.SignInRequestMessage> Objekts werden wie folgt festgelegt:  
  
-   Die <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A>-Eigenschaft (der wctx-Parameter) wird auf einen Wert festgelegt, der mit den Methoden Parametern erstellt wurde.  
  
-   Die <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A>-Eigenschaft (der WCT-Parameter) wird auf die aktuelle Zeit festgelegt.  
  
-   Alle anderen Eigenschaften werden mithilfe der entsprechenden Eigenschaften der aktuellen Instanz festgelegt.  
  
 Die an die-Methode übergebenen Parameter werden verwendet, um den wctx-Nachrichten Parameter zu erstellen. Dies ist eine Zeichenfolge mit dem folgenden Format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   Der `ru`-Wert wird auf den Wert des `returnUrl`-Parameters festgelegt, der an die-Methode übergeben wird, und gibt die URL an, die das Modul nach erfolgreicher Authentifizierung an den Browser weiterleiten soll. Dies ist der einzige Wert, der in der von wsfam verwendeten wctx-Zeichenfolge gespeichert wird. Das Modul ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>-Methode auf, um diesen Wert aus dem wctx-Parameter zu extrahieren, wenn eine WS-Verbund-Anmeldungs Antwort verarbeitet wird. Er sollte nicht mit dem wreply-Nachrichten Parameter verwechselt werden, der durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>-Eigenschaft angegeben wird und die die Adresse in der RP bereitstellt, an die der Sicherheitstokendienst (STS) seine Antwort leiten soll.  
  
-   Der `cx`-Parameter ist auf den Wert der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>-Eigenschaft festgelegt. Diese Eigenschaft wird verfügbar gemacht, damit Sie beliebige Anwendungs definierte Kontexte festlegen können, die in der wctx-Zeichenfolge gespeichert werden sollen. Allerdings macht wsfam keine Methode verfügbar, um diesen Wert in der Antwort zu extrahieren. Wenn der Wert von der Anwendung benötigt wird, müssen Sie den Code bereitstellen, um die wctx-Zeichenfolge zu analysieren und bei der Verarbeitung der Antwort diesen Wert zu lesen. Dies können Sie erreichen, indem Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>-Methode überschreiben.  
  
-   Weder der `rm` Wert, der auf den Wert des `rememberMeSet`-Parameters festgelegt ist, noch der `id`-Parameter, der auf den Wert des `uniqueId`-Parameters festgelegt wird, wird von wsfam verwendet. Diese können auf einen beliebigen Wert festgelegt werden.  
  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>-Methode aufgerufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft ist <see langword="null" /> oder enthält eine leere Zeichenfolge ("").  
  
- oder - 
Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />-Eigenschaft ist <see langword="null" /> oder enthält eine leere Zeichenfolge ("").</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">Die URL des STS zum Empfangen der WS-Verbund-Abmeldungsanforderungsnachricht. Darf nicht <see langword="null" /> sein.</param>
        <param name="replyUrl">Die URL, die als wreply-Wert in der Abmeldungsanforderungsnachricht gesendet werden sollen.</param>
        <summary>Meldet sich beim angegebenen Sicherheitstokendienst (STS) mithilfe des WS-Verbund-Protokolls ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird eine WS-Verbund-Abmelde Anforderungs Nachricht an den angegebenen STS gesendet. Sie können optional einen Wert für den wreply-Parameter in der Abmelde Anforderung angeben.  
  
 Die-Methode führt Folgendes aus:  
  
1.  Erstellt eine WS-Verbund-Abmelde Anforderungs Nachricht mithilfe der angegebenen Parameter.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>-Methode für Sam auf, um das Sitzungs Cookie zu löschen.  
  
3.  Leitet mithilfe der Abmelde-Anforderungs Nachricht aus dem ersten Schritt an den STS um.  
  
 Keines der Abmelde Ereignisse: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>oder <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> werden von dieser Methode ausgelöst. Um die Sitzung zu löschen, ohne eine Abmelde Anforderungs Nachricht an den STS zu senden, müssen Sie eine der überladenen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> Methoden aufzurufen.  
  
> [!NOTE]
>  Um die passive Abmeldung mithilfe des Sitzungs Tokens auszuführen, basiert das Modul auf einem Wert, der während der Anmeldung in der <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>-Eigenschaft gespeichert wurde. Weitere Informationen finden Sie in der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" /> ist nicht <see langword="null" /> und ist kein absoluter URI.  
  
- oder - 
 <paramref name="replyUrl" /> ist nicht <see langword="null" /> und ist kein absoluter URI.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="signOutUrl" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wfresh“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Der gewünschte Höchstalter für Authentifizierungsanforderungen in Minuten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wfresh-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wfresh-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Die Ausstelleradresse. Die Adresse des Sicherheitstokendiensts (STS), an die die Anforderung zu verweisen ist.</param>
        <param name="signOutReply">Eine URL, die die zurückzugebende Adresse nach der Abmeldung angibt. Dies legt den wreply-Parameter in der Abmeldungsanforderung fest. Kann <see langword="null" /> oder leer sein, wenn kein wreply-Parameter in der generierten Abmeldungsanforderung enthalten sein soll. Dies sollte ein absoluter URI sein.</param>
        <param name="signOutQueryString">Zusätzliche Abfragezeichenfolgen-Parameter, die in der Abmeldungsanforderung eingeschlossen werden sollen. Kann <see langword="null" /> oder leer sein, wenn keine zusätzlichen Parameter, in der generierten Abmeldungsanforderungen enthalten sein sollen. Dies sollte ein relativer URI sein.</param>
        <summary>Gibt eine URL zurück, die eine WS-Verbund-Abmeldungsanforderung darstellt, die an den angegebenen Aussteller adressiert wurde und den angegebenen wreply-Parameter und die angegebenen zusätzlichen Parameter enthält.</summary>
        <returns>Eine URL, die eine passive Abmeldungsanforderungen des WS-Verbundes enthält, die erstellt wird, indem die angegebenen Parameter verwendet werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der URL, die zurückgegeben wird: der Basis-URI ist auf "`issuer`;" festgelegt. der WA-Parameter ist auf "wsignout 1.0" festgelegt. der wreply-Parameter ist auf "`signOutReply`;" festgelegt. und die in `signOutQueryString` angegebenen Parameter sind als zusätzliche Parameter für die Abfrage Zeichenfolge vorhanden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">Die URL, die die Adresse des Ausstellungsergebnisses angibt.</param>
        <summary>Ruft das Ausstellungsergebnis (in der Regel das ausgestellte Token) aus der angegebenen URL ab. Löst die URL auf, die im wresultptr-Parameter in einer Anmeldungsantwortnachricht angegeben wird.</summary>
        <returns>Das Ausstellungsergebnis, das durch die URL referenziert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>-Methode aus der Verarbeitungs Pipeline aufgerufen, um die im wresultptr-Parameter angegebene URL in der Anmeldungs Antwortnachricht aufzulösen, die von einem Sicherheitstokendienst (Security Token Service, STS) empfangen wurde.  
  
 Standardmäßig löst diese Methode eine <xref:System.NotSupportedException>aus. Überschreiben Sie diese Methode in einer abgeleiteten Klasse, um den wresultptr-Parameter zu unterstützen. Die URL verweist auf das Ausstellungs Ergebnis, das eines der folgenden sein sollte: ein `<wst:RequestSecurityTokenResponse>`-Element, ein `<wst:RequestSecurityTokenResponseCollection>`-Element, eine SOAP-Antwort oder ein SOAP `<S:Fault>`-Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Diese Methode wird in der Basisklasse nicht unterstützt. Sie müssen dies in einer abgeleiteten Klasse überschreiben.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, die ein POST-Element enthält, das die WS-Verbund-Anmeldungsantwortnachricht enthält.</param>
        <summary>Extrahiert die URL der Seite, die ursprünglich von der Anmeldungsantwort angefordert wurde.</summary>
        <returns>Der URL der Seite, die ursprünglich vom Client angefordert wurde. Dies ist der URL (auf vertrauender Seite), zu dem der Client nach erfolgreicher Anmeldung umgeleitet werden sollte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der Anforderungs Verarbeitungs Pipeline (der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>-Methode) aufgerufen, um die URL der Seite auf der vertrauenden Seite (RP) zu erhalten, um den Client nach erfolgreicher Anmeldung zu weiterzuleiten. Dies ist normalerweise die URL der RP-Ressource, auf die der Client ursprünglich zugegriffen hat.  
  
 Standardmäßig speichert wsfam die Rückgabe-URL im wctx-Nachrichten Parameter, wenn die WS-Verbund-Anmelde Anforderung an den Sicherheitstokendienst (Security Token Service, STS) gesendet wird. In Übereinstimmung mit der WS-Verbund-Spezifikation wird der wctx-Parameter über Entitäten hinweg beibehalten, über die die Nachricht übergeben und unverändert in der WS-Verbund-Anmeldungs Antwortnachricht zurückgegeben wird, die vom STS gesendet wird.  
  
 Die Standard Implementierung ruft die Rückgabe-URL aus dem wctx-Parameter in der Anmeldungs Antwort ab. Weitere Informationen zum Format des wctx-Parameters, der von wsfam verwendet wird, finden Sie unter <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Liest ein Sicherheitstoken aus der angegebenen Anforderung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der das Token gelesen werden soll.</param>
        <summary>Liest ein Sicherheitstoken aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
        <returns>Das Sicherheitstoken, das aus der Nachricht gelesen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standard Implementierung ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType>-Methode auf, um das Token zu erhalten, und liest Sie mithilfe des entsprechenden Handlers aus den konfigurierten Sicherheitstokenhandlern.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, aus der der Token gelesen werden soll.</param>
        <summary>Liest ein Sicherheitstoken aus der angegebenen XML-Anfrage.</summary>
        <returns>Das gelesene Sicherheitstoken.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der Anforderungs Verarbeitungs Pipeline aufgerufen, um die WS-Verbund-Anmeldungs Anforderungs Nachricht als <xref:System.IdentityModel.Tokens.SecurityToken> Objekt zu erhalten.  
  
 Die Standard Implementierung ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A>-Methode auf, um ein <xref:System.IdentityModel.Services.SignInResponseMessage> Objekt zu erhalten, und ruft dann die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>-Überladung auf.  
  
 Verwenden Sie eine abgeleitete Klasse, um einen bestimmten Typ von Anforderung zu interpretieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, der mit dem Sitzungscookie in der <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />-Eigenschaft beibehalten werden soll.</summary>
        <returns>Die Zeichenfolge, die im Sitzungscookie beibehalten werden sollen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>-Methode wird von der Anforderungs Verarbeitungs Pipeline aufgerufen, wenn eine WS-Verbund-Anmeldungs Antwortnachricht verarbeitet wird, um den Wert zu erhalten, der in der <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>-Eigenschaft innerhalb des Sitzungs Cookies gespeichert werden soll.  
  
 Sie können diese Methode überschreiben, um einen anwendungsspezifischen Wert bereitzustellen, der im Cookie gespeichert werden soll. Wsfam macht keine Methoden verfügbar, um den Wert aus dem Cookie abzurufen. Sie müssen die Logik in der Anwendung bereitstellen, um den Wert bei Bedarf wieder aus dem Cookie zu lesen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft ist <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die HTTP-Anforderung, aus der die Anmeldungsantwortnachricht zu lesen ist. Die Anforderung sollte einen Formular-POST darstellen.</param>
        <summary>Liest ein <see cref="T:System.IdentityModel.Services.SignInResponseMessage" />-Objekt aus dem Formular POST, das durch die angegebene HTTP-Anforderung dargestellt wird.</summary>
        <returns>Die Anmeldungsantwortnachricht, die erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType>-Methode in der Anforderungs Verarbeitungs Pipeline aufgerufen, um eine Anmeldungs Antwortnachricht aus dem in der HTTP-Anforderung enthaltenen Formular Beitrag zu erhalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Eine Anmeldungsantwortnachricht konnte nicht aus der angegebenen Anforderung gelesen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Die Anforderung zur Abmeldung und Bereinigung.</param>
        <summary>Bestimmt die URL, zu der umgeleitet werden soll, wenn eine WS-Verbund-Anforderung zur Abmeldung und Bereinigung (wsignoutcleanup1.0) verarbeitet wird, die einen wreply-Parameter enthält.</summary>
        <returns>Die URL, zur der umgeleitet werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A>-Methode in der Anforderungs Verarbeitungs Pipeline aufgerufen, um die URL zu bestimmen, zu der nach der Verarbeitung einer WS-Verbund-Abmelde Bereinigungs Anforderung umgeleitet werden soll. Sie wird nur aufgerufen, wenn die Nachricht über einen wreply-Parameter verfügt (der `signOutMessage`-Parameter verfügt über eine <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A>-Eigenschaft, die weder `null` noch leer ist).  
  
 Die Standard Implementierung überprüft die Antwort-URL, die in der Meldung (der <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType>-Eigenschaft) enthalten ist, mit der Adresse des Sicherheitstokendiensts (STS), der durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben wird. Die folgenden Bedingungen müssen erfüllt sein, damit die Antwort-URL gültig ist:  
  
1.  Die Antwort-URL ist eine absolute URL.  
  
2.  Die Antwort-URL hat das gleiche Schema wie der Aussteller.  
  
3.  Die Antwort-URL hat denselben Port wie der Aussteller.  
  
4.  Entweder hat die Antwort-URL denselben Host wie der Aussteller, oder die Antwort-URL gibt eine Unterdomäne des Ausstellers an.  
  
 Wenn alle diese Bedingungen erfüllt sind, wird die Antwort-URL (Antwort) zurückgegeben. Andernfalls wird die von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegebene URL zurückgegeben.  
  
 Überschreiben Sie diese Methode, um eine zusätzliche Validierung für die Antwort-URL bereitzustellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutMessage" /> hat eine <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" />-Eigenschaft, die <see langword="null" /> oder leer ist.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="signOutMessage" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrahiert den ausgestellten Token aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der der Token extrahiert werden soll. Die Anmeldungsantwort enthält das Token, das durch das STS ausgegeben wird.</param>
        <summary>Extrahiert den ausgestellten Token aus der angegebenen WS-Verbundanmeldungs-Antwortnachricht.</summary>
        <returns>Eine Zeichenfolge mit dem XML-Code, der den ausgestellten Token darstellt. Dies ist ein <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn in der Anmeldungs Antwortnachricht kein wresult-Parameter vorhanden ist, wird die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A>-Methode aufgerufen, um zu versuchen, das Token mit dem wresultptr-Parameter zu erhalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" /> enthält kein Token. (Es enthält keinen gültigen wresult- oder wresultptr-Parameter.)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Die Anmeldungsantwortnachricht, aus der der Token extrahiert werden soll. Die Anmeldungsantwort enthält das Token, das durch das STS ausgegeben wird.</param>
        <param name="federationSerializer">Der WS-Verbundserialisier, der verwendet werden soll, um die Anmeldungsantwortnachricht zu deserialisieren.</param>
        <summary>Extrahiert das ausgestellte Token aus der angegebenen WS-Verbund-Anmeldungsantwortnachricht mithilfe des angegebenen WS-Verbund-Serialisierungsprogramms.</summary>
        <returns>Eine Zeichenfolge mit dem XML-Code, der den ausgestellten Token darstellt. Dies ist ein <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />-Element.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „whr“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Die Adresse des Identitätsanbieters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der whr-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der whr-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Das HTTP-Anwendungsobjekt, das dieses Modul enthält.</param>
        <summary>Initialisiert das Modul und bereitet es auf die Verarbeitung von Ereignissen des [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]-Anwendungsobjekts des Moduls vor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügt der folgenden Tabelle Handler für ASP.NET-Pipeline Ereignisse hinzu.  
  
|event|Handler|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Die Modul Eigenschaften, z. b. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>, werden mit der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A>-Methode initialisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Moduleigenschaften auf Grundlage der Konfiguration, die von der <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />-Eigenschaft des Moduls angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modul Eigenschaften werden mit den entsprechenden Eigenschaften des <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> Objekts initialisiert, das von der <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird.  
  
 Sie können Einstellungen in einer Konfigurationsdatei über das [&lt;wsfederation&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation) -Element angeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Die eingehende HTTP-Anforderung.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist.</summary>
        <returns><see langword="true" />, wenn die Anforderung eine WS-Verbund-Anmeldungsantwortnachricht ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A>-Methode in der Anforderungs Verarbeitungs Pipeline aufgerufen, um zu bestimmen, ob die eingehende HTTP-Anforderung eine WS-Verbund-Anmeldungs Antwortnachricht ist.  
  
 Die Standard Implementierung gibt `true` zurück, wenn der WA-Parameter auf "wsignin 1.0" festgelegt ist und die wreq-und wreqptr-Parameter nicht beide festgelegt sind.  
  
 Sie können diese Methode in abgeleiteten Klassen überschreiben, um eine zusätzliche Validierung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen URI ab oder legt diesen fest, der den beabsichtigten Aussteller des Sicherheitstoken identifiziert.</summary>
        <value>Der URI, der den Sicherheitstokendienst (STS) identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine erforderliche Eigenschaft. Dieser Wert muss festgelegt werden, wenn passive Umleitungen aktiviert sind. Gibt die URL des Sicherheitstokendiensts (STS) an, an den WS-Verbund Anforderungen ausgegeben werden sollen.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> oder eine leere Zeichenfolge festzulegen.  
  
- oder - 
Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>-Methode implementiert die Pipeline für die WS-Verbund-Anforderungs Verarbeitung. Sie wird dem <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>-Ereignis in der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A>-Methode hinzugefügt.  
  
 Die-Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29>-Methode auf, um zu bestimmen, ob eine WS-Verbund-Anmeldungs Antwortnachricht ("wsignin 1.0") empfangen wurde. Wenn die Antwort eine WS-Verbund-Abmelde Anforderung ist ("wsignoutcleanup 1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> die Nachricht verarbeitet und den Client entsprechend den WS-Verbund-Parametern in der Anforderung umleitet. Wenn es sich bei der Nachricht nicht um eine Anmeldungs Antwort oder eine Bereinigungs Anforderung handelt, gibt das Modul einfach zurück. Andernfalls führt er die folgenden Schritte aus, um die Anmeldungs Antwort zu verarbeiten.  
  
2.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29>-Methode auf, um ein <xref:System.IdentityModel.Tokens.SecurityToken> Objekt aus der Anforderung zu deserialisieren.  
  
3.  Löst das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>-Ereignis aus. Sie können die weitere Verarbeitung abbrechen oder das empfangene Sicherheits Token in einem Handler für dieses Ereignis ändern. Ein Handler wird normalerweise verwendet, um die Eigenschaften des <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> oder <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> zu ändern.  
  
4.  Überprüft das-Sicherheits Token und erstellt ein <xref:System.Security.Claims.ClaimsPrincipal>-Objekt aus den Ansprüchen im-Sicherheits Token.  
  
5.  Löst das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>-Ereignis aus. Sie können die weitere Verarbeitung abbrechen oder den Anspruchs Prinzipal in einem Handler für dieses Ereignis ändern.  
  
6.  Verwendet das konfigurierte Sitzungs Authentifizierungs Modul (Sam) zum Erstellen eines <xref:System.IdentityModel.Tokens.SessionSecurityToken> Objekts. (Der konfigurierte Sam ist das <xref:System.IdentityModel.Services.SessionAuthenticationModule> Objekt, das von der <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird.) Das Sitzungs Token wird mithilfe des Anspruchs Prinzipals erstellt, der in Schritt 5 zurückgegeben wurde. Die Eigenschaften <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> und <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> werden mithilfe der Eigenschaften <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> und <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> der in Schritt 3 zurückgegebenen <xref:System.IdentityModel.Tokens.SecurityToken> festgelegt und anhand der aktuellen Uhrzeit und der Tokengültigkeitsdauer überprüft, die entweder durch die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>-Eigenschaft oder die <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>-Eigenschaft des <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Objekts in der von wsfam verwendeten tokenhandlerauflistung festgelegt wurde. Die Tokengültigkeitsdauer des Sitzungs Token-Handlers kann in der Konfiguration über das [&lt;sessiontokenrequirements-&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement) Element angegeben werden. Hinweis: die <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>-Eigenschaft für den cookiehandler, der für Sam konfiguriert ist, wird nicht verwendet.  
  
7.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>-Methode mit dem Sitzungs Token auf, um das Sitzungs Cookie zu schreiben. Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>-Methode löst zuerst das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>-Ereignis aus. Sie können Eigenschaften für das Sitzungs Token ändern oder ändern, ob das Cookie in einem Handler für dieses Ereignis persistent gespeichert werden soll. Nachdem das-Ereignis ausgelöst wurde, schreibt die-Methode das Cookie mithilfe von Sam.  
  
    > [!NOTE]
    >  Der in der Konfiguration festgelegte <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> wird nicht zum Schreiben des Cookies verwendet.  
  
8.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>-Ereignis zu erhöhen.  
  
9. Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>-Methode auf, um die RP-Seite zu erhalten, an die der Client umgeleitet werden soll. Standardmäßig liest diese Methode die Rückgabe-URL aus dem wctx-Parameter in der Anmeldungs Antwort. Weitere Informationen dazu, wie wsfam die Rückgabe-URL speichert, finden Sie unter <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird vom <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandlerdelegaten aufgerufen, wenn die Autorisierung fehlgeschlagen ist.  
  
 Initialisiert die <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>-Eigenschaft, bevor das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Ereignis erhöht wird, um zirkuläre Umleitungen zu verhindern, wenn der Benutzer bereits authentifiziert wurde. Wenn der Benutzer bereits authentifiziert ist, wird die-Eigenschaft zum `false` initialisiert, um Umleitungen zu verhindern. Andernfalls wird Sie mit `true`initialisiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.EndRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ereignis wird ignoriert, es sei denn, die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>-Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle für das Ereignis. Dies ist ein <see cref="T:System.Web.HttpApplication" />-Objekt.</param>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Behandelt das <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />-Ereignis aus der [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Pipeline.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig handelt es sich hierbei um einen leeren Handler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>-Methode aufgerufen, unmittelbar nachdem die Sitzung gelöscht wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>-Methode aufgerufen, kurz bevor die Sitzung gelöscht wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>-Methode aufgerufen, wenn während der Verarbeitung eine Ausnahme auftritt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modul aktiviert wurde, um Umleitungen von WS-Federation-Protokollen zu initiieren.</summary>
        <value><see langword="true" /> zum Aktivieren von Umleitungen, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Modul initiiert keine WS-Verbund-Protokoll Umleitungen, wenn dieser Modus nicht aktiviert ist. Wenn diese Eigenschaft `true`ist, muss die Eigenschaft <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> auf die URL des Sicherheitstokendiensts (STS) festgelegt werden, an den der Aufrufer umgeleitet werden soll.  
  
> [!WARNING]
>  Anwendungscode kann WS-Verbund-Anmelde Anforderungen explizit mit der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>-Methode ausstellen, unabhängig vom Wert der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob ein persistentes Sitzungscookie nach erfolgreicher Authentifizierung ausgegeben werden soll.</summary>
        <value><see langword="true" />, um einen permanenten Sitzungscookie auszugeben; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>-Ereignis hinzufügen. Dieses Ereignis wird von der Anforderungs Verarbeitungs Pipeline ausgelöst, wenn eine WS-Verbund-Anmeldungs Antwortnachricht von einem Sicherheitstokendienst (STS) verarbeitet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wp“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die die zu verwendende Richtlinie angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der WP-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der WP-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wtrealm“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der die vertrauende Seite (RP) an den Sicherheitstokendienst (STS) identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine erforderliche Eigenschaft für WS-Verbund-Anmeldungs Anforderungen. Dieser Wert muss festgelegt werden, wenn passive Umleitungen aktiviert sind. Der URI identifiziert die RP für den STS. (Informationen zum Identifizieren des STS für die RP finden Sie in der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft).  
  
 Der Wert dieser Eigenschaft wird als wtrealm-Abfrage Zeichenfolgen-Parameter im WS-Verbund Protokoll serialisiert. Die RP identifiziert den Dienstanbieter. Sie wird vom STS verwendet, um zu entscheiden, welche Richtlinie für die Tokenausstellung gelten soll und wohin der Benutzer nach der Tokenausstellung umgeleitet werden soll. (Informationen zum Identifizieren des STS für die RP finden Sie unter <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> oder eine leere Zeichenfolge festzulegen.  
  
- oder - 
Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Modul den Benutzer auf den Identitätsanbieter umleitet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mit der <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType>-Eigenschaft auf die WS-Verbund-Anmeldungs Anforderung zugreifen und diese ändern. Beispielsweise können Sie die <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A>-Eigenschaft in der Anmelde Nachricht ändern, um den Identitäts Anbieter zu ändern, an den die Anforderung umgeleitet wird. Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Ereignis ist ein Ereignis, das abgebrochen werden kann, und Sie können die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true` festlegen, um die Umleitung abzubrechen.  
  
 Das-Ereignis wird in der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>-Methode durch einen-Aufrufder <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>-Methode ausgelöst.  
  
 Um dieses Ereignis in einer ASP.NET-Anwendung zu behandeln, erstellen Sie eine Methode namens `WSFederationAuthentication_RedirectingToIdentityProvider` in der Datei Global. asax.  
  
   
  
## Examples  
 Der folgende Code zeigt, wie Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis im `Application_Init`-Ereignis in der Datei Global. asax hinzufügen. Der Code wird aus dem `FederationForWebApps`-Beispiel entnommen. Weitere Informationen zu diesem Beispiel finden Sie unter [Beispiel Index für WIF-Code](/dotnet/framework/security/wif-code-sample-).  
  
  
  
 Der folgende Code zeigt den Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis in der Datei Global. asax eines RP. Der Code prüft, ob die eingehende HTTP-Anforderung einen whr-Parameter enthält. wenn dies der Fall ist, wird dieser Parameter für die WS-Verbund-Anmeldungs Anforderung festgelegt, die an den STS gesendet wird. Der Code wird aus dem `FederationForWebApps`-Beispiel entnommen. Weitere Informationen zu diesem Beispiel finden Sie unter [Beispiel Index für WIF-Code](/dotnet/framework/security/wif-code-sample-).  
  
  
  
 Der folgende Code zeigt den Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis in der Datei "Global. asax" eines Verbund Anbieter-STS. Der Code prüft, ob die eingehende HTTP-Anforderung einen whr-Parameter enthält. Wenn die Anforderung den whr-Parameter enthält, wird der Client zur Anmeldung an den IP-STS weitergeleitet. Andernfalls wird der Client an eine Seite zur Startbereichs Ermittlung umgeleitet, um den IP-STS auszuwählen, bei dem die Anmeldung erfolgt. Der Code wird aus dem `FederationForWebApps`-Beispiel entnommen. Weitere Informationen zu diesem Beispiel finden Sie unter [Beispiel Index für WIF-Code](/dotnet/framework/security/wif-code-sample-).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein. Weitere Informationen finden Sie unter der Methode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">Die URL, zu der das Modul nach der Authentifizierung zurückkehren soll.</param>
        <param name="persist">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können den Wert auf <see langword="true" /> oder <see langword="false" /> festlegen.</param>
        <summary>Leitet den Benutzer zum Sicherheitstokendienst (STS) weiter, der von der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />-Eigenschaft angegeben wird, um ein Sicherheitstoken mit dem WS-Verbund-Protokoll zu erhalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>-Methode wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>-Methode aufgerufen, wenn die Anforderung von einer Webseite ausgegeben wird, die von der vertrauenden Seite (RP) oder vom <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> Ereignishandlerdelegaten zur Ausführung einer passiven Umleitung an den Identitäts Anbieter bei Autorisierungs Fehlern angezeigt wird.  
  
 Die an die-Methode übergebenen Parameter werden verwendet, um den wctx-Nachrichten Parameter zu erstellen. Der einzige bedeutende Parameter ist der `returnUrl` Parameter. Hiermit wird die URL angegeben, die der RP nach erfolgreicher Authentifizierung an den Browser weiterleiten soll. Er sollte nicht mit dem wreply-Nachrichten Parameter verwechselt werden, der durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>-Eigenschaft angegeben wird und die die Adresse in der RP bereitstellt, an die der Sicherheitstokendienst (STS) seine Antwort leiten soll.  
  
 Die-Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A>-Methode auf, um sicherzustellen, dass eine gültige Anmelde Anforderung vom Modul ausgegeben werden kann.  
  
2.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode auf, um die Anmelde Anforderung aus den Eigenschaften zu erstellen, die für das Modul konfiguriert sind.  
  
3.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis zu erhöhen. Sie können die Umleitung abbrechen oder die Anmelde Anforderungs Nachricht im Ereignishandler für dieses Ereignis ändern.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder - 
 Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder - 
Die <see cref="P:System.Web.HttpContext.Current" />-Eigenschaft ist <see langword="null" /> oder leer.  
  
- oder - 
Die <see cref="P:System.Web.HttpContext.Response" />-Eigenschaft des Kontexts, zurückgegeben von <see cref="P:System.Web.HttpContext.Current" />, ist <see langword="null" /> oder leer.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreply“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die die Adresse angibt, an der die Applikation der vertrauende Seite (RP) Antworten vom Sicherheitstokendienst (STS) empfangen möchte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wreply-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wreply-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Der wreply-Parameter wird vom STS verwendet, um zu entscheiden, wohin der Benutzer nach der Tokenausstellung umgeleitet werden soll. Es ist nicht ratsam, dass der STS diese Adresse Blind zum Umleiten des Benutzers verwendet, da eine solche Umleitung Sicherheitslücken aufweist. Die Antwortadresse muss vom STS überprüft werden (möglicherweise durch Vergleichen mit einem Satz vorkonfigurierter Antwort Adressen für die Zwecke oder eine andere Methode), um sicherzustellen, dass die Antwort an einen bekannten und sicheren Speicherort gesendet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreq“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Die Tokenausstellungsanforderungen ausgedrückt als <see langword="&lt;wst:RequestSecurityToken&gt;" />-Element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wreq-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wreq-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreqptr“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Eine URL, die den Speicherort der Tokenausstellungsanforderungen angibt, die als <see langword="&lt;wst:RequestSecurityToken&gt;" />-Element angegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wreqptr-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wreq-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die Eigenschaft auf einen Wert festzulegen, der kein gültiger, absoluter URI ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für die Kommunikation mit dem Sicherheitstokendienst (Security Token Service, STS) ein HTTPS-Protokoll verwendet werden muss.</summary>
        <value><see langword="true" />, wenn die Kommunikation mit dem STS mit HTTPS gesichert werden muss; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wres“-Parameters für die Verwendung bei WS-Verbund-Anmeldeanforderungen („wsignin1.0“) ab oder legt diesen fest.</summary>
        <value>Ein URI, der die Ressource identifiziert, auf die zugegriffen wird, die vertrauende Seite (RP) auf dem Sicherheitstokendienst (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der wtrealm-Parameter, der durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>-Eigenschaft festgelegt wird, sollte anstelle dieses Parameters verwendet werden.  
  
 Der wres-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wres-Parameter nicht in der Anmelde Anforderung enthalten.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Sicherheitstoken von einem Sicherheitstokendienst (STS) empfangen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler hinzufügen, um das Token zu ändern, bevor es überprüft wird. Im-Ereignishandler können Sie über die <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType>-Eigenschaft auf das-Sicherheits Token zugreifen. Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Ereignis ist ein Ereignis, das abgebrochen werden kann. Sie können die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true` in einem Ereignishandler festlegen, um die Verarbeitung der WS-Verbund-Anmeldungs Antwortnachricht zu beenden.  
  
 Dieses Ereignis wird aus dem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten ausgelöst, wenn eine WS-Verbund-Anmeldungs Antwortnachricht ("wsignin 1.0") vom Sicherheitstokendienst (Security Token Service, STS) verarbeitet wird. Er wird ausgelöst, wenn ein Sicherheits Token aus dem wresult-oder wresultptr-Parameter in der Anmeldungs Antwortnachricht deserialisiert wurde, jedoch bevor das Sicherheits Token überprüft wird.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem ein vom Sicherheitstokendienst (STS) empfangener Sicherheitstoken überprüft wurde, jedoch bevor der Sitzungssicherheitstoken erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler hinzufügen, um den Prinzipal zu ändern, der beim Verarbeiten einer WS-Verbund-Anmeldungs Antwortnachricht von einem Sicherheitstokendienst (STS) erstellt wurde, bevor er zum Erstellen des Sitzungs Tokens verwendet wird. Im-Ereignishandler können Sie über die <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A>-Eigenschaft auf den Prinzipal zugreifen. Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Ereignis ist ein Ereignis, das abgebrochen werden kann. Sie können die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true` in einem Ereignishandler festlegen, um die Verarbeitung der WS-Verbund-Anmeldungs Antwortnachricht zu beenden.  
  
 Dieses Ereignis wird aus dem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten ausgelöst, wenn eine WS-Verbund-Anmeldungs Antwortnachricht ("wsignin 1.0") vom Sicherheitstokendienst (Security Token Service, STS) verarbeitet wird. Sie wird ausgelöst, wenn das Sicherheits Token, das aus dem wresult-oder wresultptr-Parameter in der Anmeldungs Antwortnachricht deserialisiert wurde, überprüft wurde und bevor das Sitzungs Sicherheits Token erstellt wird.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Sitzungssicherheitstoken vom Sicherheitstoken erstellt wurde, der von einem Sicherheitstokendienst (STS) ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler hinzufügen, um das Sitzungs Token zu ändern, bevor es verwendet wird, um den Thread Prinzipal festzulegen und in das Sitzungs Cookie geschrieben wird. Im-Ereignishandler können Sie über die <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>-Eigenschaft auf das Sitzungs Token zugreifen. Sie können angeben, ob ein Sitzungs Cookie geschrieben werden soll, indem Sie die <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType>-Eigenschaft festlegen.  
  
 Dieses Ereignis wird aus dem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten ausgelöst, wenn eine WS-Verbund-Anmeldungs Antwortnachricht ("wsignin 1.0") vom Sicherheitstokendienst (Security Token Service, STS) verarbeitet wird. Sie wird ausgelöst, wenn das Sicherheits Token, das aus dem wresult-oder wresultptr-Parameter in der Anmeldungs Antwortnachricht deserialisiert wurde, überprüft wurde, und bevor der Anspruchs Prinzipal für die <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (und für die <xref:System.Web.HttpContext.User%2A>-Eigenschaft von <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>) festgelegt wurde.  
  
> [!IMPORTANT]
>  Um Sitzungen im Verweis Modus zu betreiben, empfiehlt Microsoft die Bereitstellung eines Handlers für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>-Ereignis in der Global.asax.cs-Datei und das Festlegen der <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>-Eigenschaft für das Token, das in der Eigenschaft <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> übergebenen wird Dadurch wird sichergestellt, dass das Sitzungs Token für jede Anforderung im Verweis Modus ausgeführt wird, und es wird bevorzugt, wenn lediglich die <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>-Eigenschaft für das Sitzungs Authentifizierungs Modul festgelegt wird.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Das Sitzungssicherheitstoken, das von der WS-Verbund-Anmeldungsantwortnachricht vom STS erstellt wurde.</param>
        <param name="isSession"><see langword="true" />, um ein Cookie schreiben, das die Sitzung darstellt, die in die Antwort eingeschlossen ist; andernfalls <see langword="false" />.</param>
        <summary>Legt den Thread-Prinzipal fest und schreibt optional den Sitzungscookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von der Anforderungs Verarbeitungs Pipeline aufgerufen, die im <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Ereignishandlerdelegaten implementiert ist. Diese Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>-Ereignis zu erhöhen. Sie können dieses Ereignis verwenden, um das Sitzungs Token zu ändern, bevor es verwendet wird, um den Thread Prinzipal festzulegen und in das Sitzungs Cookie zu schreiben und anzugeben, ob das Sitzungs Cookie geschrieben werden soll.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>-Methode für das konfigurierte Sitzungs Authentifizierungs Modul (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) auf, um den Thread Prinzipal festzulegen und optional das Sitzungs Cookie zu schreiben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sessionToken" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SignedIn As EventHandler " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem der Benutzer angemeldet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anforderung an die Anmeldeseite gesendet wird, wird dieses Ereignis von einem Steuerelement auf der Seite, nicht von diesem Modul, ausgegeben.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SignedOut As EventHandler " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt unmittelbar nach dem Löschen der Sitzung während der Abmeldung auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird durch einen aufzurufenden <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode ausgelöst, während die Anmeldung bei der vertrauenden Seite (RP) von der Sitzung abgemeldet wird. Das Ereignis wird nicht ausgelöst, wenn die Verbund Abmeldung über die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode ausgeführt wird.  
  
 Sie können einen Ereignishandler hinzufügen, um zusätzliche Verarbeitungsschritte auszuführen, die von der Anwendung benötigt werden, nachdem das Sitzungs Cookie gelöscht wurde.  
  
 Es ist nicht garantiert, dass für jede Sitzung aufgerufen wird. Cookies können z. b. auf Clientseite gelöscht werden, sodass dieses Ereignis nie ausgelöst wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM speichert diesen Wert im wctx-Parameter in der WS-Verbund-Anmeldungsanforderung. Allerdings verwendet das Modul den Wert nicht, wenn es Anmeldungsanforderungen oder Anmeldungsantworten verarbeitet. Sie können jeden beliebigen Wert festlegen. Er muss nicht eindeutig sein. Weitere Informationen finden Sie unter der Methode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Führt Anmeldung bei einem Sicherheitstokendienst (STS) durch das WS-Verbund-Protokoll aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standard Implementierung ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>-Methode auf, um die Anmeldung auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen anwendungsspezifischen Kontextwert ab, der in den wctx-Parameter in Anmeldungsanforderungen für WS-Verbund eingeschlossen werden soll, oder legt diesen fest.</summary>
        <value>Der anwendungsspezifische Kontextwert, der in den wctx-Parameter für Anmeldungsanforderungen aufgenommen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode aufgerufen wird, enthält die generierte Anmelde Nachricht einen wctx-Parameter mit dem folgenden Format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Der Wert des <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> wird im Parameter `cx` gespeichert. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> können direkt aus dem Code aufgerufen werden. Sie wird auch aufgerufen, wenn das wsfam passive Umleitungen ausführt, und auch wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>-Methode oder die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>-Methode von Anwendungscode aufgerufen wird.  
  
 Wenngleich der wsfam den <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> Wert in Anmeldungs Anforderungs Nachrichten speichert, müssen Sie die Logik zum Extrahieren des Werts aus dem wctx-Parameter in der Anmeldungs Antwortnachricht bereitstellen, wenn der Wert von der Anwendung während der Antwort Verarbeitung verwendet wird.  
  
 Weitere Informationen zum Format und zur Verarbeitung des wctx-Parameters finden Sie in der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SignInError As EventHandler(Of ErrorEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn während des Anmeldens ein Fehler auftritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anforderung an die Anmeldeseite gesendet wird, wird dieses Ereignis von einem Steuerelement auf der Seite, nicht von diesem Modul, ausgegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SigningOut As EventHandler(Of SigningOutEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor die Sitzung während der Abmeldung gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird durch einen aufzurufenden <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode ausgelöst, während die Anmeldung bei der vertrauenden Seite (RP) von der Sitzung abgemeldet wird. Das Ereignis wird nicht ausgelöst, wenn die Verbund Abmeldung über die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode ausgeführt wird.  
  
 Sie können einen Ereignishandler hinzufügen, um zusätzliche Verarbeitungsschritte auszuführen, die von der Anwendung benötigt werden, bevor das Sitzungs Cookie gelöscht wird. Sie können die <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*>-Eigenschaft im-Ereignishandler lesen, um zu bestimmen, ob die Abmeldung das Ergebnis des Empfangens einer WS-Verbund-Abmeldungs-Cleanup-Anforderungs Nachricht ("wsignoutcleanup 1.0") von einem Sicherheitstokendienst (Security Token Service, STS) ist oder ob Sie bei der RP initiiert wurde.  
  
 Es ist nicht garantiert, dass für jede Sitzung aufgerufen wird. Cookies können z. b. auf Clientseite gelöscht werden, sodass dieses Ereignis nie ausgelöst wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Abfragezeichenfolge ab, die alle zusätzlichen Parameter enthält, die an die WS-Verbund-Anmeldungsanforderungen („wsignin1.0“) gesendet werden sollen, oder legt sie fest.</summary>
        <value>Ein URL-Fragment, das die zusätzlichen Nachrichten Parameter im folgenden Format enthält: <c>Param1 = Value1&amp;Param2 = Value2&amp;paramN = valueN</c>. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zusätzliche Parameter in einer Anmelde Anforderung zu senden. Dabei handelt es sich um anwendungsspezifische Parameter, bei denen es sich nicht um einen der Parameter handelt, die durch das WS-Verbund Protokoll angegeben werden. Um zusätzliche Parameter aus der Anforderung zu entfernen, legen Sie die-Eigenschaft auf eine leere Zeichenfolge fest.  
  
 Sie können diese Einstellung für jede HTTP-Anforderung überschreiben, indem Sie einen Handler für das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>-Ereignis hinzufügen. Dieses Ereignis wird ausgelöst, kurz bevor das Modul an den Sicherheitstokendienst (STS) mit einer WS-Verbund-Anmeldungs Anforderungs Nachricht umgeleitet wird. Der STS wird durch die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>-Eigenschaft angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Meldet sich von der aktuellen Sitzung ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung.  
  
 Es wird keine Abmelde Anforderungs Nachricht ("wsignout 1.0") an den Sicherheitstokendienst (Security Token Service, STS) gesendet. Verwenden Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode, um sich beim STS mit dem WS-Verbund Protokoll anzumelden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur URL an, die in der aktuellen HTTP-Anforderung angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung und leitet den Browser zurück an die URL, die in der aktuellen HTTP-Anforderung angegeben ist.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType>-Methode auf, wobei der `redirectUrl`-Parameter auf die URL der aktuellen Anforderung festgelegt ist.  
  
 Es wird keine Abmelde Anforderungs Nachricht ("wsignout 1.0") an den Sicherheitstokendienst (Security Token Service, STS) gesendet. Verwenden Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode, um sich beim STS mit dem WS-Verbund Protokoll anzumelden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest"><see langword="true" />, wenn die Anforderung vom IP-STS über eine WS-Verbund-Abmeldungscleanupanforderungs-Nachricht initiiert wurde („wsignoutcleanup1.0“); andernfalls <see langword="false" />.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und löst die entsprechenden Ereignisse aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt das Löschen der aktuellen Sitzung und das Ausführen der entsprechenden Abmelde Ereignisse aus. Die-Methode führt Folgendes aus:  
  
1.  Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>-Ereignis zu erhöhen. Ein Ereignishandler kann jede erforderliche Verarbeitung bereitstellen, bevor die Sitzung gelöscht wird. Die <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType>-Eigenschaft wird entsprechend des `isIPRequest`-Parameters festgelegt.  
  
2.  Ruft die <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>-Methode für den aktuellen Sitzungs Authentifizierungs-Manager auf, um das Sitzungs Cookie zu löschen.  
  
     Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>-Ereignis zu erhöhen.  
  
3.  Wenn während der Abmelde Verarbeitung ein Fehler auftritt, ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A>-Methode auf, um das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>-Ereignis zu erhöhen. Ein Ereignishandler kann die Verarbeitung abbrechen und verhindern, dass eine Ausnahme an den Aufrufer von zurückgegeben wird <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Sie können die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType>-Methode mit dem `isIPRequest` Parametersatz `false` aufrufen, um sich von einer Sitzung zu abmelden, ohne eine Umleitung auszuführen. Die-Methode wird letztendlich von allen anderen überladenen <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>-Methoden aufgerufen (wobei der `isIPRequest`-Parameter auf `false`festgelegt ist), um die Abmelde Verarbeitung auszuführen. Die-Methode wird von der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>-Methode aufgerufen, wobei der `isIPRequest` Parameter festgelegt wurde `true` um sich bei der Verarbeitung einer WS-Verbund-Abmeldungs Bereinigungs Nachricht ("wsignoutcleanup 1.0") bei der Verarbeitung von der Sitzung anzumelden.  
  
 Es wird keine Abmelde Anforderungs Nachricht ("wsignout 1.0") an den Sicherheitstokendienst (Security Token Service, STS) gesendet. Verwenden Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode, um sich beim STS mit dem WS-Verbund Protokoll anzumelden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Die URL, an die der Browser umgeleitet werden soll, nachdem die Sitzung gelöscht wird.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur angegebenen URL an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung und leitet den Browser zurück an die angegebene URL.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Methode mit dem `redirectUrl`-Parameter und dem `initiateSignoutCleanup` festgelegten `false`auf.  
  
 Es wird keine Abmelde Anforderungs Nachricht ("wsignout 1.0") an den Sicherheitstokendienst (Security Token Service, STS) gesendet. Verwenden Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode, um sich beim STS mit dem WS-Verbund Protokoll anzumelden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> ist kein gültiger URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Die URL, an die der Browser nach der Abmeldung umgeleitet werden soll.</param>
        <param name="initiateSignoutCleanup">Wird immer auf <see langword="false" /> festgelegt. Das Festlegen dieses Parameters auf <see langword="true" /> wird nicht unterstützt.</param>
        <summary>Meldet sich von der aktuellen Sitzung ab und fordert eine Umleitung zurück zur angegebenen URL an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löscht die aktuelle Sitzung und leitet den Browser zurück an die angegebene URL.  
  
 Ruft die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>-Methode mit dem `false`festgelegten `initiateSignoutCleanup` Parameter auf.  
  
 Es wird keine Abmelde Anforderungs Nachricht ("wsignout 1.0") an den Sicherheitstokendienst (Security Token Service, STS) gesendet. Verwenden Sie die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode, um sich beim STS mit dem WS-Verbund Protokoll anzumelden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> ist kein gültiger URI.</exception>
        <exception cref="T:System.NotImplementedException">Die <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />-Klasse löst diese Ausnahme aus, wenn <paramref name="initiateSignoutCleanup" /><see langword="true" /> ist. Legen Sie diesen Parameter nicht als <see langword="true" /> fest.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SignOutError As EventHandler(Of ErrorEventArgs) " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn während der Abmeldens ein Fehler auftritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird durch einen aufzurufenden <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> Methode innerhalb der <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> Methode ausgelöst, während die Anmeldung bei der vertrauenden Seite (RP) von der Sitzung abgemeldet wird. Das Ereignis wird nicht ausgelöst, wenn die Verbund Abmeldung über die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode ausgeführt wird.  
  
 Das <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Ereignis ist ein Ereignis, das abgebrochen werden kann. Sie können die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft in einem Ereignishandler festlegen, um zu verhindern, dass die Ausnahme, die den Fehler verursacht hat, an den Initiator der Abmeldung zurückgegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Abfragezeichenfolge ab oder legt sie fest, die alle zusätzlichen Parameter enthält, die an die WS-Verbund-Abmeldungsanforderungen („wsignout1.0“) gesendet werden sollen.</summary>
        <value>Ein URL-Fragment, das die zusätzlichen Nachrichten Parameter im folgenden Format enthält: <c>Param1 = Value1&amp;Param2 = Value2&amp;paramN = valueN</c>. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird diese Eigenschaft aus dem `signOutQueryString`-Attribut des [&lt;wsfederation-&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation) -Elements in der Konfigurationsdatei initialisiert. Sie soll alle anwendungsspezifischen Parameter enthalten, die in einer WS-Verbund-Abmelde Anforderung gesendet werden sollen. Um diese Parameter zu entfernen, können Sie die-Eigenschaft auf eine leere Zeichenfolge festlegen.  
  
 Die wsfam verwendet diese Eigenschaft nicht direkt. Sie können es jedoch an die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>-Methode übergeben, um eine komplette WS-Verbund-Abmelde-URL zu erstellen, die dann von Ihrem Code verwendet werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des „wreply“-Parameters für die Verwendung bei WS-Verbund-Abmeldeanforderungen („wsignout1.0“) ab oder legt diesen fest.</summary>
        <value>Die URL, an die der Client vom Sicherheitstokendienst (STS) nach der Abmeldung durch das WS-Verbund-Protokoll umgeleitet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird diese Eigenschaft aus dem `signOutReply`-Attribut des [&lt;wsfederation-&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation) -Elements in der Konfigurationsdatei initialisiert. Er soll den wreply-Parameter in einer WS-Verbund-Abmelde Anforderung darstellen.  
  
 Der wreply-Parameter ist optional. Wenn die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A>-Eigenschaft auf `null` oder eine leere Zeichenfolge festgelegt ist, ist der wreply-Parameter nicht in der Abmelde Anforderung enthalten.  
  
 Die wsfam verwendet diese Eigenschaft nicht direkt. Sie können Sie jedoch an die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>-Methode übergeben, wenn Sie die WS-Verbund-Abmeldung aus Ihrem Code ausführen, oder Sie können Sie an die <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>-Methode übergeben, um eine komplette WS-Verbund-Abmelde-URL zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />- und die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />-Eigenschaft nicht leer sind, und dass, wenn die <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />-Eigenschaft <see langword="true" /> ist, die für <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> angegebenen URIs HTTPS-kompatibel sind.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder - 
 Der <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> ist <see langword="null" /> oder eine leere Zeichenfolge.  
  
- oder - 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> ist <see langword="true" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> nicht HTTPS-kompatibel.  
  
- oder - 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> ist <see langword="true" /> und <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> nicht HTTPS-kompatibel.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt ab, das verwendet wird, wenn WS-Verbund-Anmeldungsantwortnachrichten deserialisiert werden, um das Token abzurufen, das vom Sicherheitstokendienst (STS) ausgestellt wird, oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das verwendet wird, wenn WS-Verbund-Anmeldungsantwortnachrichten deserialisiert werden, um den Token abzurufen, der vom Sicherheitstokendienst (STS) ausgegeben wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Es wurde versucht, die Eigenschaft auf <see langword="null" /> festzulegen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
