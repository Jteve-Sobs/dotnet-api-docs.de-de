<Type Name="ClaimsPrincipalPermissionAttribute" FullName="System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6857b0241c051efe9b3a64cc495e1102811ddd6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69283100" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClaimsPrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Sicherheitsattribut dar, das verwendet wird, um auf Grundlage der Logik, die von der <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />-Instanz im aktuellen Anwendungskontext bereitgestellt wird, Zugangsprüfungen deklarativ zuzuweisen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird verwendet, um eine Zugriffs Überprüfung deklarativ mithilfe der konfigurierten <xref:System.Security.Claims.ClaimsAuthorizationManager>anzufordern. <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>  
  
 <xref:System.Security.Permissions.SecurityAction> Sie müssen einen der `Resource` -Werte, und `Operation` in der <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> Deklaration angeben. Die `Resource` Eigenschaften `Operation` und geben die Ressource und die Aktion an, für die der<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>aktuelle Prinzipal () für die Ausführung autorisiert werden muss, um den Vorgang fortzusetzen. Wenn der aktuelle Prinzipal nicht zum Ausführen der angegebenen Aktion (Vorgang) für die angegebene Ressource autorisiert ist, <xref:System.Security.SecurityException> wird eine ausgelöst.  
  
> [!IMPORTANT]
>  Die <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> -Klasse verwendet den anspruchsautorisierungs- <xref:System.IdentityModel.Configuration.IdentityConfiguration> Manager <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> , der von der-Eigenschaft konfiguriert wird Dies gilt in allen Fällen, auch in Szenarien, in denen der WS-Verbund nicht verwendet wird. beispielsweise aktive (WCF) Webanwendungen und Konsolen Anwendungen. Sie können den Anspruchs Autorisierungs-Manager entweder in der Konfiguration oder Programm gesteuert angeben. Um den Anspruchs Autorisierungs-Manager in einer Konfigurationsdatei anzugeben, legen Sie das [ &lt;ClaimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) -Element unter einem [ &lt;&gt; identityconfiguration](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) -Element fest, und stellen Sie sicher, dass dies auf die Identitäts Konfiguration wird durch das [ &lt;federationconfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) -Element verwiesen, das von der Laufzeit geladen wird (z. `identityConfigurationName` b. durch Festlegen des-Attributs). Um den Anspruchs Autorisierungs-Manager Programm gesteuert festzulegen, stellen Sie <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> einen Handler für das-Ereignis bereit.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie eine Methode schützen, indem Sie <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> Sie mit dem-Attribut versehen. Das-Attribut wertet aus, ob dem aktuellen Prinzipal der Zugriff gewährt werden soll, indem die von <xref:System.Security.Claims.ClaimsAuthorizationManager> der-Instanz im Anwendungskontext bereitgestellte Logik genutzt wird. Wenn der aktuelle Prinzipal für die angegebene Aktion für die angegebene Ressource nicht autorisiert ist, <xref:System.Security.SecurityException> wird eine ausgelöst. andernfalls wird die Ausführung fortgesetzt.  
  
 [!code-csharp[WifCppWithCam#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#4)]  
  
 Der folgende XML-Code zeigt die Mindestanforderungen für die Verwendung eines benutzerdefinierten Anspruchs Autorisierungs <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> -Managers mit der-Klasse. Sie müssen `system.identityModel` mindestens die `system.identityModel.services` Abschnitte und im `<configSection>` -Element deklarieren und dann Ihren Autorisierungs-Manager in einem [ &lt;ClaimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) -Element unter der standardmäßige Identitäts Konfiguration. Dadurch wird sichergestellt, dass auf den Autorisierungs-Manager von der Standard Verbund Konfiguration verwiesen wird. Alternativ können Sie den Namen der Identitäts Konfiguration angeben, unter der der Autorisierungs-Manager im `identityConfigurationName` -Attribut [ &lt;des federationconfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) -Elements angegeben ist.  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/8b14054c-6d07-46ab-ab58-03f14beac0f2">&lt;federationConfiguration&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" Usage="new System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">Einer der Werte, der die Sicherheitsaktionen angibt, die über die Deklarationssicherheit ausgeführt werden können.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Außerdem müssen Sie die- `Operation` Eigenschaft `Resource` und die- <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> Eigenschaft in der Deklaration angeben, oder es <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> wird eine Ausnahme ausgelöst, wenn die-Methode aufgerufen wird, um die Berechtigung zu erstellen  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="claimsPrincipalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />-Klasse auf Grundlage der aktuellen Instanz ist.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> mit dem Vorgang und der Ressource, die dieser Instanz zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> -Objekt wird mit dem Wert <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> der-Eigenschaft und der <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> -Eigenschaft erstellt. Sie müssen die- `Operation` Eigenschaft `Resource` und die- <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> Eigenschaft in der Deklaration angeben, oder eine <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> Ausnahme wird ausgelöst, wenn die-Methode aufgerufen wird, um die Berechtigung zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public string Operation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Operation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation" />
      <MemberSignature Language="VB.NET" Value="Public Property Operation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Operation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Operation : string with get, set" Usage="System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Vorgang ab (bzw. legt diesen fest), für den der aktuelle Prinzipal für die angegebene Ressource autorisiert werden soll.</summary>
        <value>Die Aktion, für die der aktuelle Prinzipal autorisiert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Vorgang ist die Aktion, für die der aktuelle Prinzipal für die angegebene Ressource autorisiert werden soll. Sie müssen die- `Operation` Eigenschaft <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> in der Deklaration festlegen, oder es wird eine Ausnahme <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> ausgelöst, wenn die-Methode aufgerufen wird, um die Berechtigung zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ressource ab, für die der Prinzipal berechtigt werden soll, die angegebene Aktion (den Vorgang) auszuführen, oder legt diese fest.</summary>
        <value>Die Ressource, auf der der aktuelle Prinzipal autorisiert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressource, für die der aktuelle Prinzipal zum Ausführen der angegebenen Aktion autorisiert werden soll. Sie müssen die- `Resource` Eigenschaft <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> in der Deklaration festlegen, oder es wird eine Ausnahme <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> ausgelöst, wenn die-Methode aufgerufen wird, um die Berechtigung zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
