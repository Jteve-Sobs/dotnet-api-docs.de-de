<Type Name="WSFederationSerializer" FullName="System.IdentityModel.Services.WSFederationSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54d1e5720d22bdc7a11fffc658899b25d0366231" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69282274" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationSerializer" />
  <TypeSignature Language="F#" Value="type WSFederationSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, um eine WS-Verbund-Meldung zu <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />- und <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekten zu konvertieren, die WS-Trust-Protokoll-spezifisch sind.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.WSFederationSerializer" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.WSFederationSerializer" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die neue Instanz serialisiert WS-Verbund Nachrichten in WS-Trust Feb 2005-Protokollnachrichten. eine Instanz der <xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer> -Klasse wird zum Serialisieren von Anforderungen verwendet, und eine Instanz der- <xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer> Klasse wird verwendet, um Antworten zu serialisieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationSerializer (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationSerializer(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationSerializer : System.Xml.XmlDictionaryReader -&gt; System.IdentityModel.Services.WSFederationSerializer" Usage="new System.IdentityModel.Services.WSFederationSerializer reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein geöffneter <see cref="T:System.Xml.XmlDictionaryReader" /> in der Antwort-XML.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.WSFederationSerializer" />-Klasse auf Grundlage des Namespaces der Antwort-XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anforderungs-und Antwort Nachrichten werden basierend auf dem Namespace der Antwort-XML serialisiert (die entsprechenden WS-Trust-serialisierungssoren werden basierend auf dem Namespace verwendet).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationSerializer (System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, class System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestSerializer As WSTrustRequestSerializer, responseSerializer As WSTrustResponseSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationSerializer(System::IdentityModel::Protocols::WSTrust::WSTrustRequestSerializer ^ requestSerializer, System::IdentityModel::Protocols::WSTrust::WSTrustResponseSerializer ^ responseSerializer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer -&gt; System.IdentityModel.Services.WSFederationSerializer" Usage="new System.IdentityModel.Services.WSFederationSerializer (requestSerializer, responseSerializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" />
        <Parameter Name="responseSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" />
      </Parameters>
      <Docs>
        <param name="requestSerializer">Das WS-Trust-Serialisierungsprogramm, das zum Lesen der Anforderung (RST) verwendet werden soll.</param>
        <param name="responseSerializer">Das WS-Trust-Serialisierungsprogramm, das zum Schreiben der Antwort (RSTR) verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.WSFederationSerializer" />-Klasse mit den angegebenen Anforderungs- und Antwortserialisierer.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestSerializer" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="responseSerializer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadRequest">
      <MemberSignature Language="C#" Value="public virtual bool CanReadRequest (string trustMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadRequest(string trustMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadRequest (trustMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadRequest(System::String ^ trustMessage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadRequest : string -&gt; bool&#xA;override this.CanReadRequest : string -&gt; bool" Usage="wSFederationSerializer.CanReadRequest trustMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trustMessage">Die zu überprüfende WS-Trust-Nachricht.</param>
        <summary>Überprüft, ob die angegebene Zeichenfolge eine wst:RequestSecurityToken-Nachricht mit einem Namespace ist, der durch den umschlossenen <see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" /> erkannt wird.</summary>
        <returns><see langword="true" />, wenn die Nachricht eine gültige wst:RequestSecurityToken-Nachricht mit einem Namespace ist, der mit dem WS-Trust-Protokoll übereinstimmt, das diesen <see cref="T:System.IdentityModel.Services.WSFederationSerializer" /> unterstützt; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadResponse (string trustMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadResponse(string trustMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadResponse (trustMessage As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadResponse(System::String ^ trustMessage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadResponse : string -&gt; bool&#xA;override this.CanReadResponse : string -&gt; bool" Usage="wSFederationSerializer.CanReadResponse trustMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trustMessage">Die zu überprüfende WS-Trust-Nachricht.</param>
        <summary>Überprüft, ob die angegebene Zeichenfolge eine wst:RequestSecurityTokenResponse-Nachricht mit einem Namespace ist, der durch den umschlossenen <see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" /> erkannt wird.</summary>
        <returns><see langword="true" />, wenn die Nachricht eine gültige wst:RequestSecurityTokenResponse-Nachricht mit einem Namespace ist, der mit dem WS-Trust-Protokoll übereinstimmt, das diesen <see cref="T:System.IdentityModel.Services.WSFederationSerializer" /> unterstützt; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityToken CreateRequest (System.IdentityModel.Services.FederationMessage message, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken CreateRequest(class System.IdentityModel.Services.FederationMessage message, class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRequest (message As FederationMessage, context As WSTrustSerializationContext) As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ CreateRequest(System::IdentityModel::Services::FederationMessage ^ message, System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateRequest : System.IdentityModel.Services.FederationMessage * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&#xA;override this.CreateRequest : System.IdentityModel.Services.FederationMessage * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="wSFederationSerializer.CreateRequest (message, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.FederationMessage" />
        <Parameter Name="context" Type="System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, die konvertiert werden soll. Diese sollte eine Instanz von <see cref="T:System.IdentityModel.Services.SignInRequestMessage" /> sein.</param>
        <param name="context">Der aktuelle Serialisationskontext.</param>
        <summary>Konvertiert eine WS-Verbund-Anmeldungs-Anforderungnachricht zu einem <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekt, das der Sicherheitstokendienst (<see cref="T:System.IdentityModel.SecurityTokenService" />-Klasse) verarbeiten kann.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekt, das die konvertierte Anmeldungs-Anforderungnachricht darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist NULL.  
  
- oder - 
 <paramref name="context" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Meldung ist nicht vom <see cref="T:System.IdentityModel.Services.SignInRequestMessage" />-Typ.  
  
- oder - 
Im <see cref="T:System.IdentityModel.Services.SignInRequestMessage" />-Objekt fehlen erforderliche Informationen für die Erstellung eines gültigen <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekts.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResponse">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse CreateResponse (System.IdentityModel.Services.FederationMessage message, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse CreateResponse(class System.IdentityModel.Services.FederationMessage message, class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateResponse (message As FederationMessage, context As WSTrustSerializationContext) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ CreateResponse(System::IdentityModel::Services::FederationMessage ^ message, System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateResponse : System.IdentityModel.Services.FederationMessage * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.CreateResponse : System.IdentityModel.Services.FederationMessage * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="wSFederationSerializer.CreateResponse (message, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.FederationMessage" />
        <Parameter Name="context" Type="System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, die konvertiert werden soll. Diese sollte eine Instanz von <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> sein.</param>
        <param name="context">Der aktuelle Serialisationskontext.</param>
        <summary>Konvertiert ein WS-Verbund-Anmeldungs-Antwortnachrichten-Objekt in ein <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekt.</summary>
        <returns>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekt, das die konvertierte Anmeldungs-Antwortnachricht darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="context" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Meldung ist nicht vom <see cref="T:System.IdentityModel.Services.SignInResponseMessage" />-Typ.  
  
- oder - 
Im <see cref="T:System.IdentityModel.Services.SignInResponseMessage" />-Objekt fehlen erforderliche Informationen für die Erstellung eines gültigen <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekts.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedRequest">
      <MemberSignature Language="C#" Value="public virtual string GetReferencedRequest (string wreqptr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetReferencedRequest(string wreqptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedRequest (wreqptr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetReferencedRequest(System::String ^ wreqptr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedRequest : string -&gt; string&#xA;override this.GetReferencedRequest : string -&gt; string" Usage="wSFederationSerializer.GetReferencedRequest wreqptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wreqptr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="wreqptr">Die URL der Anforderungsdaten.</param>
        <summary>Ruft die wreq-Zeichenfolge aus einer URL ab, auf das verwiesen wird.</summary>
        <returns>Die Anforderungsdaten des URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode, um die wreq-Zeichenfolge aus einer Verweis-URL zu erhalten Die Standard Implementierung löst eine aus <xref:System.NotSupportedException> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ausgelöst von der Standardimplementierung.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="public virtual string GetReferencedResult (string wresultptr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetReferencedResult(string wresultptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedResult (wresultptr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ wresultptr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationSerializer.GetReferencedResult wresultptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wresultptr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="wresultptr">Die URL der Ergebnisdaten.</param>
        <summary>Ruft die wresult-Zeichenfolge aus einer URL ab, auf die verwiesen wird.</summary>
        <returns>Die Anforderungsdaten des URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie diese Methode, um die wresult-Zeichenfolge aus einer Verweis-URL zu erhalten Die Standard Implementierung löst eine aus <xref:System.NotSupportedException> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ausgelöst von der Standardimplementierung.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestAsString">
      <MemberSignature Language="C#" Value="public virtual string GetRequestAsString (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRequestAsString(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestAsString (request As RequestSecurityToken, context As WSTrustSerializationContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetRequestAsString(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestAsString : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; string&#xA;override this.GetRequestAsString : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; string" Usage="wSFederationSerializer.GetRequestAsString (request, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="context" Type="System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" />
      </Parameters>
      <Docs>
        <param name="request">Das zu serialisierende <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekt.</param>
        <param name="context">Der aktuelle Serialisationskontext.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekt in eine Zeichenfolge.</summary>
        <returns>Eine serialisierte Zeichenfolgendarstellung des aktuellen <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Objekts.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsString">
      <MemberSignature Language="C#" Value="public virtual string GetResponseAsString (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResponseAsString(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response, class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsString (response As RequestSecurityTokenResponse, context As WSTrustSerializationContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetResponseAsString(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response, System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsString : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; string&#xA;override this.GetResponseAsString : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; string" Usage="wSFederationSerializer.GetResponseAsString (response, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
        <Parameter Name="context" Type="System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" />
      </Parameters>
      <Docs>
        <param name="response">Das zu serialisierende <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekt.</param>
        <param name="context">Der aktuelle Serialisationskontext.</param>
        <summary>Serialisiert das angegebene <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekt in eine Zeichenfolge.</summary>
        <returns>Eine serialisierte Zeichenfolgendarstellung des aktuellen <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />-Objekts.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="response" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
