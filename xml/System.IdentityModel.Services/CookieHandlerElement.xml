<Type Name="CookieHandlerElement" FullName="System.IdentityModel.Services.CookieHandlerElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7059cc467974c2bb144dd398891fef1600d92d51" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70448996" /></Metadata><TypeSignature Language="C#" Value="public class CookieHandlerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CookieHandlerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandlerElement" />
  <TypeSignature Language="VB.NET" Value="Public Class CookieHandlerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandlerElement : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type CookieHandlerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das <see langword="&lt;cookieHandler&gt;" />-Konfigurationselement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<cookieHandler>` -Element ist ein untergeordnetes Element `<federatedAuthentication>` des-Elements <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler%2A?displayProperty=nameWithType> . die- <xref:System.IdentityModel.Services.CookieHandlerElement> Eigenschaft wird auf eine Instanz der-Klasse festgelegt. Das `<cookieHandler>` -Element wird zum Konfigurieren des cookiehandlers verwendet, der vom Sitzungs Authentifizierungs Modul (Sam) verwendet wird <xref:System.IdentityModel.Services.SessionAuthenticationModule> , das durch die-Klasse dargestellt wird.  
  
 Ein Cookie-Handler kann auf eine der folgenden Arten konfiguriert werden:  
  
-   Um einen segmentierten cookiehandler <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> zu konfigurieren, <xref:System.IdentityModel.Services.CookieHandlerMode.Default> legen Sie die- <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft entweder auf oder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked> fest, und legen Sie die-Eigenschaft mit dem Konfigurationselement für den segmentierten Cookie Die <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> -Eigenschaft darf nicht festgelegt werden.  
  
-   Wenn Sie einen segmentierten cookiehandler mit der Standard Segmentgröße konfigurieren möchten <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> , können Sie die-Eigenschaft wie oben beschrieben <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> festlegen, <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> wobei jedoch die Eigenschaften und nicht festgelegt bleiben.  
  
-   Um einen benutzerdefinierten cookiehandler <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> zu konfigurieren <xref:System.IdentityModel.Services.CookieHandlerMode.Custom> , legen Sie <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> die-Eigenschaft auf fest, und legen Sie die-Eigenschaft mit dem Konfigurationselement fest, das den Typ des benutzerdefinierten Cookie Dieser Typ muss von der <xref:System.IdentityModel.Services.CookieHandler>-Klasse abgeleitet sein. Die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> -Eigenschaft darf nicht festgelegt werden.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieHandlerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieHandlerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.CookieHandlerElement" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkedCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ChunkedCookieHandler As ChunkedCookieHandlerElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::ChunkedCookieHandlerElement ^ ChunkedCookieHandler { System::IdentityModel::Services::ChunkedCookieHandlerElement ^ get(); void set(System::IdentityModel::Services::ChunkedCookieHandlerElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChunkedCookieHandler : System.IdentityModel.Services.ChunkedCookieHandlerElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("chunkedCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.ChunkedCookieHandlerElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen segmentierten Cookiehandler ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />, das zusätzliche Konfiguration für den segmentierten Cookie Ereignishandler bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft entspricht dem `<chunkedCookieHandler>` untergeordneten-Element `<cookieHandler>` des-Elements. Gibt einen segmentierten cookiehandler, eine <xref:System.IdentityModel.Services.ChunkedCookieHandler> Instanz der-Klasse, an, die verwendet werden soll. Wenn Sie festgelegt ist, <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> sollte die-Eigenschaft entweder <xref:System.IdentityModel.Services.CookieHandlerMode.Default> auf oder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked>festgelegt werden. Wenn die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> -Eigenschaft auf einen dieser Werte festgelegt ist, <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> die-Eigenschaft jedoch nicht festgelegt ist, wird ein segmentierter cookiehandler mit der Standard Blockgröße (<xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize?displayProperty=nameWithType>) konfiguriert.  
  
 Entweder kann <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> die-Eigenschaft <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> oder die-Eigenschaft festgelegt werden, aber nicht beides.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7220de45-1d14-4aec-a29e-4a2ea8ac861f">&lt;chunkedcookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="CustomCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCookieHandler As CustomTypeElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::CustomTypeElement ^ CustomCookieHandler { System::IdentityModel::Configuration::CustomTypeElement ^ get(); void set(System::IdentityModel::Configuration::CustomTypeElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomCookieHandler : System.IdentityModel.Configuration.CustomTypeElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.CustomTypeElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Handlertyp der benutzerdefinierten Cookies ab oder legt diesen fest. Diese Eigenschaft muss festgelegt werden, wenn ein benutzerdefinierter Cookiehandler konfiguriert wird.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Configuration.CustomTypeElement" />, das den Handlertyp der benutzerdefinierten Cookies definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft entspricht dem `<customCookieHandler>` untergeordneten-Element `<cookieHandler>` des-Elements. Gibt einen zu verwendenden benutzerdefinierten cookiehandlertyp an. Wenn diese Eigenschaft festgelegt ist, <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> muss die-Eigenschaft auf <xref:System.IdentityModel.Services.CookieHandlerMode.Custom>festgelegt werden. Der von dieser Eigenschaft angegebene benutzerdefinierte Typ muss von der <xref:System.IdentityModel.Services.CookieHandler> -Klasse abgeleitet werden.  
  
 Entweder kann <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> die-Eigenschaft <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> oder die-Eigenschaft festgelegt werden, aber nicht beides.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a03b153d-5ec6-4915-9031-6f0c3fd348be">&lt;customcookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Domänenwert für Cookies ab, die von diesem Handler geschrieben wurden, oder legt diesen fest.</summary>
        <value>Der Domänenwert. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt das `domain` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="GetConfiguredCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfiguredCookieHandler () As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::CookieHandler ^ GetConfiguredCookieHandler();" />
      <MemberSignature Language="F#" Value="member this.GetConfiguredCookieHandler : unit -&gt; System.IdentityModel.Services.CookieHandler" Usage="cookieHandlerElement.GetConfiguredCookieHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen neuen Cookiehandler auf Grundlage der Konfigurationseigenschaften ab.</summary>
        <returns>Der Cookie-Handler. Dies wird eine Instanz von <see cref="T:System.IdentityModel.Services.CookieHandler" /> oder <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />, abhängig von der Art des Handlers, der von den Eigenschaften der aktuellen Instanz konfiguriert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt einen cookiehandler zurück, der mit der Konfiguration konsistent ist. Der zurückgegebene cookiehandler ist entweder ein segmentierter Cookie-Handler oder ein benutzerdefinierter cookiehandler, je nachdem, wie die Konfigurations Eigenschaften fest Weitere Informationen finden Sie unter <xref:System.IdentityModel.Services.CookieHandlerElement>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Ein Cookiehandler kann nicht von den Eigenschaften der aktuellen Instanz erstellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="HideFromScript">
      <MemberSignature Language="C#" Value="public bool HideFromScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberSignature Language="VB.NET" Value="Public Property HideFromScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideFromScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hideFromScript", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die <see langword="httpOnly" />-Eigenschaft des Cookies, das von diesem Handler geschrieben wurde, festgelegt werden soll.</summary>
        <value><see langword="true" />, wenn die <see langword="httpOnly" />-Eigenschaft festgelegt werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuert, ob das Flag "HttpOnly" für geschriebene Cookies ausgegeben wird. Bestimmte Webbrowser berücksichtigen dieses Flag, indem das Client seitige Skript keinen Zugriff auf den Cookie-Wert hat.  
  
 Stellt das `hideFromScript` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandlerMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IdentityModel.Services.CookieHandlerMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CookieHandlerMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandlerMode Mode { System::IdentityModel::Services::CookieHandlerMode get(); void set(System::IdentityModel::Services::CookieHandlerMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IdentityModel.Services.CookieHandlerMode with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandlerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Cookiehandlermodus ab oder legt diesen fest.</summary>
        <value>Ein gültiger <see cref="T:System.IdentityModel.Services.CookieHandlerMode" />-Wert, der die Art des Cookiehandlers angibt, der konfiguriert wird. Der Standardwert ist <see cref="F:System.IdentityModel.Services.CookieHandlerMode.Default" />, womit ein segmentierten Cookiehandler angegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei segmentierten Cookie-Handlern <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> (die-Eigenschaft ist festgelegt) sollte der Modus entweder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked> auf <xref:System.IdentityModel.Services.CookieHandlerMode.Default>oder festgelegt werden. Für einen benutzerdefinierten cookiehandler (die <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> -Eigenschaft ist festgelegt), sollte der Modus auf <xref:System.IdentityModel.Services.CookieHandlerMode.Custom>festgelegt werden.  
  
 Stellt das `mode` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basisnamen für alle Cookies ab, die vom Handler geschrieben wurden, oder legt diesen fest.</summary>
        <value>Der Basisname für die Cookies. Der Standardwert ist "fedauth".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt das `name` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfadwert für vom Handler geschriebene Cookies ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Pfad enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein Pfad definiert ist, wird der Pfad verwendet, <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> der von der-Eigenschaft definiert wird.  
  
 Stellt das `path` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentSessionLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PersistentSessionLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("persistentSessionLifetime", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="365.0:0:0", MinValueString="0:0:0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Lebensdauer von vom Handler ausgegebenen Cookies ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />, das die Lebensdauer von Cookies angibt. Der Standardwert ist 0 Tage ("0.0:0: 0"). Der Wert muss ein Wert zwischen 0 (0,0:0: 0) und 365 ("365.0:0: 0") Tage sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt das `persistentSessionLifetime` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireSsl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Cookie nur mit SSL verwendet werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Cookie nur über eine SSL-Verbindung verwendet werden soll; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuert, ob das Flag "Secure" für geschriebene Cookies ausgegeben wird. Wenn dieser Wert lautet `true`, sind die Anmelde Sitzungs Cookies nur über HTTPS verfügbar.  
  
 Stellt das `requireSSL` -Attribut [ &lt;des cookiehandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) -Elements dar.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookiehandler&gt;</related>
      </Docs>
    </Member>
  </Members>
</Type>
