<Type Name="CookieHandlerElement" FullName="System.IdentityModel.Services.CookieHandlerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36f2c74eefa2cd41ae08b023eb12b6629a5edfe6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39923717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CookieHandlerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CookieHandlerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandlerElement" />
  <TypeSignature Language="VB.NET" Value="Public Class CookieHandlerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandlerElement : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type CookieHandlerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das <see langword="&lt;cookieHandler&gt;" />-Konfigurationselement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `<cookieHandler>` Element ist ein untergeordnetes Element von der `<federatedAuthentication>` Element; die <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.CookieHandler%2A?displayProperty=nameWithType> -Eigenschaftensatz auf einer Instanz von der <xref:System.IdentityModel.Services.CookieHandlerElement> Klasse. Die `<cookieHandler>` Element wird zum Konfigurieren des Cookie-Handlers verwendet, indem Sie die Sitzung Authentifizierung Modul (SAM), der durch dargestellt wird die <xref:System.IdentityModel.Services.SessionAuthenticationModule> Klasse.  
  
 Ein cookiehandler kann in einem der folgenden Arten konfiguriert werden:  
  
-   Um einen segmentierten cookiehandler konfigurieren zu können, legen die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> Eigenschaft entweder <xref:System.IdentityModel.Services.CookieHandlerMode.Default> oder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked> und legen Sie die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft mit dem das Konfigurationselement für Ihre segmentierten Cookie Ereignishandler. Die <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> Eigenschaft sollte nicht festgelegt werden.  
  
-   Um einen segmentierten cookiehandler mit die standardmäßige Segmentgröße konfigurieren zu können, Sie können festlegen, die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> Eigenschaft wie bereits zuvor erwähnt, aber lassen Sie die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> und <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> Eigenschaften nicht festgelegt.  
  
-   Um einen benutzerdefinierten cookiehandler konfigurieren zu können, legen die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> Eigenschaft <xref:System.IdentityModel.Services.CookieHandlerMode.Custom> und legen Sie die <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> Eigenschaft mit dem das Konfigurationselement, das den Typ des Ihrer benutzerdefinierten cookiehandler identifiziert. Dieser Typ muss von der <xref:System.IdentityModel.Services.CookieHandler>-Klasse abgeleitet sein. Die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft sollte nicht festgelegt werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CookieHandlerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CookieHandlerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Services.CookieHandlerElement" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkedCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Services.ChunkedCookieHandlerElement ChunkedCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ChunkedCookieHandler As ChunkedCookieHandlerElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::ChunkedCookieHandlerElement ^ ChunkedCookieHandler { System::IdentityModel::Services::ChunkedCookieHandlerElement ^ get(); void set(System::IdentityModel::Services::ChunkedCookieHandlerElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChunkedCookieHandler : System.IdentityModel.Services.ChunkedCookieHandlerElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("chunkedCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.ChunkedCookieHandlerElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen segmentierten Cookiehandler ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />, das zusätzliche Konfiguration für den segmentierten Cookie Ereignishandler bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft entspricht der `<chunkedCookieHandler>` untergeordnetes Element von der `<cookieHandler>` Element. Es gibt einen segmentierten cookiehandler, der eine Instanz von der <xref:System.IdentityModel.Services.ChunkedCookieHandler> -Klasse zu verwenden. Wenn sie festgelegt ist, die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> legen Sie entweder <xref:System.IdentityModel.Services.CookieHandlerMode.Default> oder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked>. Wenn die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> -Eigenschaftensatz auf beide Werte jedoch <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft nicht festgelegt ist, wird einen segmentierten cookiehandler mit die standardmäßige Segmentgröße (<xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize?displayProperty=nameWithType>) konfiguriert ist.  
  
 Entweder die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft oder das <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> Eigenschaft ist möglicherweise Satz, aber nicht beides.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.CustomTypeElement CustomCookieHandler" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCookieHandler As CustomTypeElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::CustomTypeElement ^ CustomCookieHandler { System::IdentityModel::Configuration::CustomTypeElement ^ get(); void set(System::IdentityModel::Configuration::CustomTypeElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomCookieHandler : System.IdentityModel.Configuration.CustomTypeElement with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("customCookieHandler", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.CustomTypeElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Handlertyp der benutzerdefinierten Cookies ab oder legt diesen fest. Diese Eigenschaft muss festgelegt werden, wenn ein benutzerdefinierter Cookiehandler konfiguriert wird.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Configuration.CustomTypeElement" />, das den Handlertyp der benutzerdefinierten Cookies definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft entspricht der `<customCookieHandler>` untergeordnetes Element von der `<cookieHandler>` Element. Es gibt ein Handlertyp der benutzerdefinierten Cookies verwenden. Wenn diese Eigenschaft festgelegt ist, die <xref:System.IdentityModel.Services.CookieHandlerElement.Mode%2A> Eigenschaft muss festgelegt werden, um <xref:System.IdentityModel.Services.CookieHandlerMode.Custom>. Der benutzerdefinierte Typ, der von dieser Eigenschaft angegebene abgeleitet werden muss die <xref:System.IdentityModel.Services.CookieHandler> Klasse.  
  
 Entweder die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> Eigenschaft oder das <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> Eigenschaft ist möglicherweise Satz, aber nicht beides.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("domain", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Domänenwert für Cookies ab, die von diesem Handler geschrieben wurden, oder legt diesen fest.</summary>
        <value>Der Domänenwert. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die `domain` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfiguredCookieHandler">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.CookieHandler GetConfiguredCookieHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfiguredCookieHandler () As CookieHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::CookieHandler ^ GetConfiguredCookieHandler();" />
      <MemberSignature Language="F#" Value="member this.GetConfiguredCookieHandler : unit -&gt; System.IdentityModel.Services.CookieHandler" Usage="cookieHandlerElement.GetConfiguredCookieHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen neuen Cookiehandler auf Grundlage der Konfigurationseigenschaften ab.</summary>
        <returns>Der Cookie-Handler. Dies wird eine Instanz von <see cref="T:System.IdentityModel.Services.CookieHandler" /> oder <see cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />, abhängig von der Art des Handlers, der von den Eigenschaften der aktuellen Instanz konfiguriert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt einen cookiehandler, der mit der Konfiguration übereinstimmt. Der cookiehandler, der zurückgegeben werden, entweder einen segmentierten cookiehandler oder einen benutzerdefinierten cookiehandler, je nachdem, wie die Eigenschaften festgelegt werden. Weitere Informationen finden Sie unter <xref:System.IdentityModel.Services.CookieHandlerElement>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">Ein Cookiehandler kann nicht von den Eigenschaften der aktuellen Instanz erstellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="HideFromScript">
      <MemberSignature Language="C#" Value="public bool HideFromScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberSignature Language="VB.NET" Value="Public Property HideFromScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideFromScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("hideFromScript", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die <see langword="httpOnly" />-Eigenschaft des Cookies, das von diesem Handler geschrieben wurde, festgelegt werden soll.</summary>
        <value>
          <see langword="true" />, wenn die <see langword="httpOnly" />-Eigenschaft festgelegt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuert, ob das Flag "HttpOnly" für jede geschriebene Cookies ausgegeben wird. Bestimmte Webbrowser berücksichtigt dieses Flag werden, da der Client-seitige Skript Zugriff auf den Cookiewert an.  
  
 Stellt die `hideFromScript` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.CookieHandlerMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IdentityModel.Services.CookieHandlerMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CookieHandlerMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Services::CookieHandlerMode Mode { System::IdentityModel::Services::CookieHandlerMode get(); void set(System::IdentityModel::Services::CookieHandlerMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IdentityModel.Services.CookieHandlerMode with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.CookieHandlerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Cookiehandlermodus ab oder legt diesen fest.</summary>
        <value>Ein gültiger <see cref="T:System.IdentityModel.Services.CookieHandlerMode" />-Wert, der die Art des Cookiehandlers angibt, der konfiguriert wird. Der Standardwert ist <see cref="F:System.IdentityModel.Services.CookieHandlerMode.Default" />, womit ein segmentierten Cookiehandler angegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für den segmentierten Cookie Ereignishandler (die <xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A> festgelegt wird), der Modus sollten nastavit entweder <xref:System.IdentityModel.Services.CookieHandlerMode.Chunked> oder <xref:System.IdentityModel.Services.CookieHandlerMode.Default>. Für einen benutzerdefinierten cookiehandler (die <xref:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler%2A> festgelegt wird), der Modus sollte festgelegt werden, um <xref:System.IdentityModel.Services.CookieHandlerMode.Custom>.  
  
 Stellt die `mode` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("name", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basisnamen für alle Cookies ab, die vom Handler geschrieben wurden, oder legt diesen fest.</summary>
        <value>Der Basisname für die Cookies. Der Standardwert ist "FedAuth".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die `name` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("path", IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfadwert für vom Handler geschriebene Cookies ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Pfad enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein Pfad definiert ist, wird der Pfad von definiert die <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> Eigenschaft wird verwendet.  
  
 Stellt die `path` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentSessionLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PersistentSessionLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("persistentSessionLifetime", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="365.0:0:0", MinValueString="0:0:0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Lebensdauer von vom Handler ausgegebenen Cookies ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />, das die Lebensdauer von Cookies angibt. Der Standardwert ist 0 Tage ("0.0:0:0"). Der Wert muss es sich um einen Wert zwischen 0 ("0.0:0:0") und 365 Tagen im ("365.0:0:0") sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die `persistentSessionLifetime` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Configuration.ConfigurationProperty("requireSsl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Cookie nur mit SSL verwendet werden soll, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das Cookie nur über eine SSL-Verbindung verwendet werden soll; andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuert, ob die Kennzeichen "Secure" für jede geschriebene Cookies ausgegeben werden. Wenn dieser Wert ist `true`, die Anmeldung Sitzungscookies werden nur über HTTPS verfügbar sein.  
  
 Stellt die `requireSSL` Attribut der [ &lt;CookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>