<Type Name="MsmqIntegrationBindingElement" FullName="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23c89ec9782b04e9a746e4d3e883a5bffae0380c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83909853" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqIntegrationBindingElement : System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqIntegrationBindingElement extends System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqIntegrationBindingElement&#xA;Inherits MsmqBindingElementBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqIntegrationBindingElement sealed : System::ServiceModel::Channels::MsmqBindingElementBase" />
  <TypeSignature Language="F#" Value="type MsmqIntegrationBindingElement = class&#xA;    inherit MsmqBindingElementBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MsmqBindingElementBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mit diesem Bindungselement können Sie zulassen, dass Windows Communication Foundation-Anwendungen Meldungen senden und von vorhandenen MSMQ-Anwendungen empfangen können, die COM, MSMQ-native APIs oder APIs in <see cref="N:System.Messaging" /> verwenden. Verwenden Sie diese Klasse, um Nachrichten von MSMQ-basierten Messaginganwendungen zu senden und zu empfangen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqIntegrationBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqIntegrationBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="msmqIntegrationBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Der Typ des Kanals.</typeparam>
        <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> zum Erstellen der Kanalfactory.</param>
        <summary>Erstellt eine Kanalfactory mit dem bereitgestellten Kontext.</summary>
        <returns>Eine Kanalfactory zur MSMQ-Integration, mit der Kanäle zum Senden von Nachrichten an vorhandene MSMQ-Anwendungen erstellt werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird eine Kanalfactory erstellt, mit der Entwickler einen Clientkanal für die Kommunikation mit einem Dienst erstellen können. Die Kanalfactory ist kein Kanal, sondern eine Factory, die einen Kanal erstellen kann. Sie erstellen einen Kanal, indem Sie `IChannelFactory<TChannel>.CreateChannel` aufrufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Kontextwert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="TChannel" /> ist nicht <see langword="IOutputChannel" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="ExactlyOnce" /> ist <see langword="true" />, und <paramref name="Durable" /> ist <see langword="false" />.

Oder

Die CustomDeadLetterQueue-Eigenschaft ist ungleich NULL, und die DeadLetterQueue-Eigenschaft ist nicht auf Custom festgelegt.

Oder

DeadLetterQueue ist unter Windows 2003/XP auf Custom festgelegt.

Oder

Die ExactlyOnce-Eigenschaft ist auf FALSE festgelegt, und die DeadLetterQueue-Eigenschaft ist auf Custom festgelegt.

Oder

Die CustomDeadLetterQueue-Eigenschaft ist festgelegt, und es besteht keine Schreibberechtigung für die Warteschlange, oder die Warteschlange ist nicht vorhanden.

Oder

CustomDeadLetterQueue ist nicht transaktional.

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist auf WindowsDomain gesetzt. Falls MSMQ ohne Active Directory-Integration installiert ist:

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist None, <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> ist None.

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist Zertifikat oder WindowsDomain, <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> ist None.</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Der Typ des Kanals.</typeparam>
        <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> zum Erstellen des Kanallisteners.</param>
        <summary>Erstellt einen Kanallistener mit dem bereitgestellten Kontext.</summary>
        <returns>Ein Kanallistener für die MSMQ-Integration, mit dem Kanäle zum Empfangen von Nachrichten von vorhandenen MSMQ-Anwendungen erstellt werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kanallistener werden auf dem Dienst erstellt und werden zum Empfangen von Nachrichten verwendet, die vom Clientkanal gesendet werden. Der Dienst muss `IChannelListener.Open` und dann `IChannelListener.AcceptChannel` aufrufen, um einen Verweis auf den tatsächlichen Kanal abzurufen. Dann muss `IChannel.Open` aufgerufen werden, um den Kanal zu öffnen. An diesem Punkt kann der Kanal verwendet werden, um Nachrichten abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Kontextwert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="TChannel" /> ist nicht <see langword="IInputChannel" />.</exception>
        <exception cref="T:System.InvalidOperationException">ExactlyOnce ist <see langword="true" /> und Durable ist <see langword="false" />.

Oder

Die Warteschlange kann nicht gelesen werden.

Oder

ExactlyOnce ist <see langword="true" />, und die Warteschlange ist nicht transaktional.

Oder

ExactlyOnce ist <see langword="false" />, und die Warteschlange ist transaktional.

Oder

Der ReceiveErrorHandling-Parameter ist auf Move festgelegt, und der Warteschlangenname enthält ein ";" in Windows Vista.

Oder

ExactlyOnce ist auf <see langword="true" /> festgelegt und kann keine untergeordnete Warteschlange zur Wiederholung in Windows Vista öffnen.

Oder

Der ReceiveErrorHandling-Parameter ist auf Reject oder Move festgelegt, und die Plattform ist Windows Vista.

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist auf WindowsDomain gesetzt. Falls MSMQ ohne Active Directory-Integration installiert ist:

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist None, <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> ist None.

Oder

<see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode" /> ist Zertifikat oder WindowsDomain, <see cref="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel" /> ist None.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="msmqIntegrationBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Der Typ des Kanals.</typeparam>
        <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> zum Erstellen der Kanalfactory.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob eine Kanalfactory mit dem bereitgestellten Kontext erstellt werden kann.</summary>
        <returns><see langword="true" />, wenn eine Kanalfactory mit dem Kontext erstellt werden kann, andernfalls <see langword="false" />. Diese Methode gibt nur dann <see langword="true" /> zurück, wenn <paramref name="TChannel" /><see cref="T:System.ServiceModel.Channels.IOutputChannel" /> ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqIntegrationBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Der Typ des Kanals.</typeparam>
        <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> zum Erstellen des Kanallisteners.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob ein Kanallistener mit dem bereitgestellten Kontext erstellt werden kann.</summary>
        <returns><see langword="true" />, wenn ein Kanallistener mit dem Kontext erstellt werden kann, andernfalls <see langword="false" />.  
  
Diese Methode gibt nur dann <see langword="true" /> zurück, wenn <paramref name="TChannel" /><see cref="T:System.ServiceModel.Channels.IInputChannel" /> ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="msmqIntegrationBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Klon des Bindungselements zurück.</summary>
        <returns>Ein Klon des Bindungselements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="msmqIntegrationBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Eigenschaft.</typeparam>
        <param name="context">Der Bindungskontext.</param>
        <summary>Ruft eine Eigenschaft des angeforderten Typs vom angegebenen <see langword="BindingContext" /> ab.</summary>
        <returns>Ein Objekt des Typs <paramref name="T" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode stellt die Funktionalität bereit, um Fähigkeiten und Schutzanforderungen vom Element abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Kontext ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.String" /> ab, der das vom Bindungselement verwendete Schema enthält.</summary>
        <value><see cref="T:System.String" />, der das vom Bindungselement verwendete Schema enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt die Zeichenfolge "msmq.formatname" zurück, um das vom MSMQ-Integrationskanal verwendete Adressierungsschema anzugeben. Weitere Informationen zur Adressierung von Warteschlangen finden Sie unter [Dienst Endpunkte und Adressierung von Warteschlangen](/dotnet/framework/wcf/feature-details/service-endpoints-and-queue-addressing).  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/service.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat SerializationFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializationFormat As MsmqMessageSerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat SerializationFormat { System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat get(); void set(System::ServiceModel::MsmqIntegration::MsmqMessageSerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationFormat : System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.SerializationFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> ab, das beim Serialisieren von MSMQ-Nachrichten verwendet werden soll, oder legt es fest.</summary>
        <value>Das <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" /> das zum Serialisieren von MSMQ-Nachrichten verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann einen der folgenden Werte haben:  
  
-   `ActiveX` – Das ActiveX-Serialisierungsprogramm wird verwendet, um Objekte zu serialisieren.  
  
-   `Binary` – Der <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> wird verwendet, um Objekte zu serialisieren.  
  
-   `ByteArray` – Das Objekt wird in ein Bytearray serialisiert.  
  
-   `Stream` – Das Objekt wird in einen Stream serialisiert.  
  
-   `Xml` – Der <xref:System.Xml.Serialization.XmlSerializer> wird verwendet, um Objekte zu serialisieren.  
  
-   Standardwert: `Xml`.  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert liegt nicht im Bereich der Werte von <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetSerializationTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetSerializationTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetSerializationTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetSerializationTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetSerializationTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetSerializationTypes : Type[] with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von <see cref="T:System.Type" />-Objekten, das die Typen enthält, zu denen Nachrichten deserialisiert werden sollen, ab oder legt es fest.</summary>
        <value>Ein Array von <see cref="T:System.Type" />, das die Typen enthält, zu denen Nachrichten deserialisiert werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Text einer MSMQ-Nachricht wird nicht eingegeben. Mit der <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement.TargetSerializationTypes%2A>-Eigenschaft können Sie die Typen angeben, an die Nachrichten deserialisiert werden, wenn Sie von einer MSMQ-Anwendung an eine empfangende Anwendung Windows Communication Foundation (WCF) gesendet werden. Diese Eigenschaft wird nur verwendet, wenn <xref:System.ServiceModel.MsmqIntegration.MsmqMessageSerializationFormat> auf `Xml` festgelegt wurde.  
  
   
  
## Examples  
 [!code-csharp[S_UE_MsmqToWcf#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_msmqtowcf/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
