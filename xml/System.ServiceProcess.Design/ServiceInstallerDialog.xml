<Type Name="ServiceInstallerDialog" FullName="System.ServiceProcess.Design.ServiceInstallerDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e84fd6097ffb5386a44020588f10ed746ee6974" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590878" /></Metadata><TypeSignature Language="C#" Value="public class ServiceInstallerDialog : System.Windows.Forms.Form" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstallerDialog extends System.Windows.Forms.Form" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceInstallerDialog&#xA;Inherits Form" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceInstallerDialog : System::Windows::Forms::Form" />
  <TypeSignature Language="F#" Value="type ServiceInstallerDialog = class&#xA;    inherit Form" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Form</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Dialogfeld zum Anfordern von Kontoinformationen einer Windows-Dienstanwendung bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise verwenden Sie die- <xref:System.ServiceProcess.Design.ServiceInstallerDialog> Klasse nicht direkt in Ihrem Code. dieses Dialogfeld wird in der Regel vom Installations Dienstprogramm für eine Windows-Dienst Anwendung verwendet.  
  
 Wenn ein <xref:System.ServiceProcess.ServiceProcessInstaller> <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> -Objekt auf festgelegt ist `User` und entweder <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> oder <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> eine leere Zeichenfolge ("") ist, verwendet das Installations Dienstprogramm, <xref:System.ServiceProcess.Design.ServiceInstallerDialog> um diese Werte einzugeben.  
  
 <xref:System.ServiceProcess.Design.ServiceInstallerDialog> wird von abgeleitet <xref:System.Windows.Forms.Form> . verwenden <xref:System.Windows.Forms.Form> Sie die Klassen Methoden und-Eigenschaften, um das Dialogfeld anzuzeigen und zu bearbeiten. Verwenden Sie z. b., <xref:System.Windows.Forms.Form.ShowDialog%2A> um das Formular anzuzeigen, und überprüfen Sie dann das, <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Result%2A> bevor Sie den Eingabetext für die <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> Eigenschaften und überprüfen <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> .  
  
> [!NOTE]
>  <xref:System.ServiceProcess.Design.ServiceInstallerDialog> die Anmelde Informationen und Berechtigungen für das angegebene Konto werden nicht überprüft. Beispielsweise kann der Benutzer einen ungültigen Kontonamen und ein Kennwort für den Computer eingeben, oder das Konto verfügt möglicherweise nicht über die richtigen Berechtigungen zum Ausführen als Dienst. Überprüfen Sie die Benutzereingaben, um sicherzustellen, dass der installierte Dienst erfolgreich ausgeführt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein verwendet <xref:System.ServiceProcess.Design.ServiceInstallerDialog> , um den Benutzer zur Eingabe eines Dienst Installations Kontos aufzufordern.  
  
 [!code-cpp[ServiceInstallConfig#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceInstallConfig/CPP/source.cpp#1)]
 [!code-csharp[ServiceInstallConfig#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceInstallConfig/CS/source.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialogResult" />
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstallerDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.Design.ServiceInstallerDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceInstallerDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz des Dienstkontoformulars.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für ein neues <xref:System.ServiceProcess.Design.ServiceInstallerDialog> Formular ist <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Result%2A> auf festgelegt <xref:System.ServiceProcess.Design.ServiceInstallerDialogResult.OK> , der <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> auf eine leere Zeichenfolge ("") und <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> auf eine leere Zeichenfolge festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Main">
      <MemberSignature Language="C#" Value="public static void Main ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Main() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.Design.ServiceInstallerDialog.Main" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Main ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Main();" />
      <MemberSignature Language="F#" Value="static member Main : unit -&gt; unit" Usage="System.ServiceProcess.Design.ServiceInstallerDialog.Main " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.STAThread]</AttributeName>
          <AttributeName Language="F#">[&lt;System.STAThread&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beginnt die Ausführung der Nachrichtenschleife einer Standardanwendung und zeigt das Dienstkontoformular an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht dem Aufrufen <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> von in einem neuen <xref:System.ServiceProcess.Design.ServiceInstallerDialog> Formular. Sie wird in der Regel zu Testzwecken verwendet.  
  
 Aufrufen <xref:System.Windows.Forms.Form.ShowDialog%2A> im <xref:System.ServiceProcess.Design.ServiceInstallerDialog> Formular, um das Dialogfeld in der Anwendung anzuzeigen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="M:System.Windows.Forms.Application.Run" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.Design.ServiceInstallerDialog.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.Design.ServiceInstallerDialog.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Kennwort für das Dienstkontoformular ab oder legt es fest.</summary>
        <value>Eine Zeichenfolge, die das Kennwort im Dienstkontoformular darstellt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüft <xref:System.ServiceProcess.Design.ServiceInstallerDialog> die <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> Werte und nicht <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> . Im Dialogfeld wird überprüft, ob der Benutzer das Kennwort bestätigt, aber die Anmelde Informationen des Kontos auf dem Computer werden nicht authentifiziert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.Design.ServiceInstallerDialogResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.Design.ServiceInstallerDialogResult Result" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.Design.ServiceInstallerDialog.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As ServiceInstallerDialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::Design::ServiceInstallerDialogResult Result { System::ServiceProcess::Design::ServiceInstallerDialogResult get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : System.ServiceProcess.Design.ServiceInstallerDialogResult" Usage="System.ServiceProcess.Design.ServiceInstallerDialog.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.Design.ServiceInstallerDialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Dialogfeldergebnis für das Dienstkontoformular ab.</summary>
        <value>Ein <see cref="T:System.ServiceProcess.Design.ServiceInstallerDialogResult" />, das die Benutzerantwort auf das Dialogfeld angibt. Der Standardwert lautet <see langword="OK" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Windows.Forms.Form.ShowDialog%2A> Sie, um den Benutzer zur Eingabe des Dienst Installations Kontos aufzufordern, und überprüfen Sie dann den <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Result%2A> Wert. Wenn der Wert ist <xref:System.ServiceProcess.Design.ServiceInstallerDialogResult.OK> , überprüfen Sie, ob die Eingabe <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> und <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> gültig sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.Design.ServiceInstallerDialog.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.Design.ServiceInstallerDialog.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzernamen für das Dienstkontoformular ab oder legt ihn fest.</summary>
        <value>Eine Zeichenfolge, die den Benutzernamen im Dienstkontoformular darstellt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüft <xref:System.ServiceProcess.Design.ServiceInstallerDialog> den- <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Username%2A> Wert oder den- <xref:System.ServiceProcess.Design.ServiceInstallerDialog.Password%2A> Wert nicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
