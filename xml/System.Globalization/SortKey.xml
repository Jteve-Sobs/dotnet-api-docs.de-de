<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97a018440b3927aabd0772df0854ef55e076bc2a" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006432" /></Metadata><TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Ergebnis der Zuordnung einer Zeichenfolge zum zugehörigen Sortierschlüssel dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein kulturabhängiger Vergleich von zwei Zeichenfolgen abhängig jedes Zeichens in die Zeichenfolge mehrere Sortiergewichtungskategorien zugeordnet, z. B. Skript, alphabetischer, Groß-/Kleinschreibung und diakritische Gewichtungen ist. Ein Sortierschlüssel dient als Repository für diese Gewichtungen für eine bestimmte Zeichenfolge.  
  
 Die <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> Methode gibt eine Instanz der <xref:System.Globalization.SortKey> -Klasse, die kulturabhängige-Zuordnung für Zeichen in einer angegebenen Zeichenfolge angibt. Der Wert des einem <xref:System.Globalization.SortKey> Objekt ist, die wichtigen Daten, die von zurückgegeben wird die <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaft. Diese wichtigen Daten besteht aus einer Reihe von Bytes, die die Zeichenfolge, die kulturabhängigen Sortierregeln und die Benutzer angegebenen Vergleichsoptionen zu codieren. Ein Vergleich mit Sortierschlüsseln besteht aus einen bitweisen Vergleich der entsprechenden Schlüsseldaten in jedem Sortierschlüssel.  Beispielsweise wird bei der Erstellung eines Sortierschlüssels durch Aufrufen der <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> Methode mit einem Wert von <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, einem Zeichenfolgenvergleich, der den Sortierschlüssel verwendet wird Groß-/Kleinschreibung.  
  
 Nach der Erstellung eines Sortierschlüssels für eine Zeichenfolge, vergleichen Sie Sortierschlüssel durch Aufrufen der statischen <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> Methode. Diese Methode führt einen einfachen Byte-pro-Byte-Vergleich, daher ist es wesentlich schneller als die <xref:System.String.Compare%2A?displayProperty=nameWithType> oder <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methode.  

> [!NOTE]
> Sie können die [sortieren Gewichtung Tabellen](https://www.microsoft.com/download/details.aspx?id=10921), einen Satz von Textdateien, die Informationen auf der Zeichen Gewichtung verwendet bei Sortier- und Vergleichsregeln für Windows-Betriebssysteme enthalten die [Unicode Standard Sortierung-Elementtabelle](https://www.unicode.org/Public/UCA/latest/allkeys.txt), die Gewichtung Sortiertabelle für Linux und MacOS.

## <a name="performance-considerations"></a>Überlegungen zur Leistung  
 Wenn Sie einen Zeichenfolgenvergleich durch die <xref:System.Globalization.SortKey.Compare%2A> und <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methoden führen die gleichen Ergebnisse, aber sie Zielen auf andere Szenarien.  
  
 Auf einer hohen Ebene der <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methode den Sortierschlüssel für jede Zeichenfolge generiert, führt der Vergleich durch, und klicken Sie dann verwirft den Sortierschlüssel und gibt das Ergebnis des Vergleichs zurück. Allerdings die <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methode nicht tatsächlich einen gesamte Sortierung-Schlüssel zum Ausführen des Vergleichs generieren. Die Methode generiert stattdessen die Schlüsseldaten für jeden Text-Element (d. h. Basiszeichen, Surrogate-Paar oder Zeichenfolge kombinieren) in jeder Zeichenfolge. Die Methode vergleicht dann die Schlüsseldaten für die entsprechenden Textelemente. Der Vorgang wird beendet, sobald das endgültige Ergebnis des Vergleichs bestimmt wird. Die Sortierschlüssel wird berechnet, aber kein <xref:System.Globalization.SortKey> Objekt erstellt wird. Diese Strategie ist effizient, wenn beide Zeichenfolgen einmal verglichen werden, aber es ist teuer, wenn die gleichen Zeichenfolgen oft verglichen werden.  
  
 Die <xref:System.Globalization.SortKey.Compare%2A> Methode erfordert die Generierung einer <xref:System.Globalization.SortKey> Objekt für jede Zeichenfolge vor dem Vergleich. Diese Strategie ist aufgrund der Zeit und Arbeitsspeicher, die zum Generieren von investiert Leistung für den ersten Vergleich der <xref:System.Globalization.SortKey> Objekte. Allerdings wird es wirtschaftlicher, wenn die gleichen Sortierschlüssel oft verglichen werden.  
  
 Nehmen wir beispielsweise an, dass Sie eine Anwendung schreiben, die in einer Datenbanktabelle für die Zeile sucht, in der Zeichenfolge-basierte Indexspalte mit einer angegebenen Zeichenfolge übereinstimmt. Die Tabelle enthält Tausende von Zeilen, und vergleichen die Suchzeichenfolge für den Index in jeder Zeile wird sehr lange dauern. Aus diesem Grund bei die Anwendung eine Zeile und die Indexspalte gespeichert werden, außerdem generiert und speichert den Sortierschlüssel für den Index in einer Spalte, die speziell für die Verbesserung der Leistung der Suche. Wenn die Anwendung nach einer bestimmten Zeile sucht, vergleicht er den Sortierschlüssel für die Suchzeichenfolge für den Sortierschlüssel für die Indexzeichenfolge, anstatt zu vergleichen die Suchzeichenfolge für die Indexzeichenfolge.  
  
## <a name="security-considerations"></a>Sicherheitsüberlegungen  
 Die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Methode gibt eine <xref:System.Globalization.SortKey> Objekt mit dem Wert auf Grundlage einer angegebenen Zeichenfolge und <xref:System.Globalization.CompareOptions> Wert und die zugeordnete, zugrunde liegenden Kultur <xref:System.Globalization.CompareInfo> Objekt. Wenn eine sicherheitsentscheidung auf einem Zeichenfolgenvergleich oder Änderung abhängig ist, verwenden Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> -Methode der invarianten Kultur, um sicherzustellen, dass das Verhalten des Vorgangs, unabhängig von den kultureinstellungen des Betriebssystems übereinstimmt.  
  
 Verwenden Sie die folgenden Schritte aus, um den Schlüssel für die Sortierung zu erhalten:  
  
1.  Abrufen die invariante Kultur aus der <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> Eigenschaft.  
  
2.  Abrufen einer <xref:System.Globalization.CompareInfo> Objekt für die invariante Kultur aus der <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> Eigenschaft.  
  
3.  Rufen Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>-Methode auf.  
  
 Arbeiten mit dem Wert von einem <xref:System.Globalization.SortKey> Objekt entspricht dem Aufrufen der Windows `LCMapString` Methode mit dem angegebenen LCMAP_SORTKEY-Wert. Beachten Sie jedoch bei der <xref:System.Globalization.SortKey> Objekt, das Sortierschlüssel für englische Zeichen die Sortierschlüssel für die koreanische Zeichen vorangestellt.  
  
 <xref:System.Globalization.SortKey> Objekte können serialisiert werden, aber nur, damit sie überschreiten <xref:System.AppDomain> Objekte. Wenn eine Anwendung serialisiert eine <xref:System.Globalization.SortKey> Objekt ist, wird die Anwendung muss die Sortierschlüssel erneut generieren, wenn eine neue Version von .NET Framework vorhanden ist.  
  
 Weitere Informationen zu Sortierschlüsseln finden Sie unter Unicode Technical Standard #10, "Unicode Collation Algorithm" in der [Website des Unicode Consortium](https://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Zeichenfolge "Llama" mit "En-US" und "es-ES" Kulturen und herkömmlichen Kulturen "En-US" und "es-ES".  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 Das folgende Beispiel zeigt Informationen zur Verwendung der <xref:System.Globalization.SortKey> Klasse zur Verbesserung der Leistung in einer Anwendung, die umfassend sortieren und suchen ein großes Array benötigen. Das Beispiel erstellt ein nicht geordnete Array von Namen, die 13 Elementen in diesem Fall hat. Speichert dann den Schlüssel für die Sortierung des jeweiligen Namens in ein paralleles Array, das er an übergibt die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> Methode. Das Ergebnis ist ein sortiertes Array. Das Beispiel sucht dann das Array für drei Zeichenfolgen. Für jede Suchzeichenfolge, ruft der <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Methode zum Abrufen der Zeichenfolge Sortierschlüssel, und ruft dann die <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> Methode, um den Index des Sort-Schlüssel, das Array von Sortierschlüsseln abzurufen. Da die Schlüssel und die Sortierreihenfolge-Arrays parallel sind, der zurückgegebene Index ist auch der Index mit dem Namen in der `names` Array.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Der erste zu vergleichende Sortierschlüssel.</param>
        <param name="sortkey2">Der zweite zu vergleichende Sortierschlüssel.</param>
        <summary>Vergleicht zwei Sortierschlüssel.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die Beziehung zwischen <paramref name="sortkey1" /> und <paramref name="sortkey2" /> angibt.  
  
 <list type="table"><listheader><term> Wert 
 </term><description> Bedingung 
 </description></listheader><item><term> Kleiner als 0 (null) 
 </term><description><paramref name="sortkey1" /> ist kleiner als <paramref name="sortkey2" />.  
  
 </description></item><item><term> Zero 
 </term><description><paramref name="sortkey1" /> ist gleich <paramref name="sortkey2" />.  
  
 </description></item><item><term> Größer als 0 (null) 
 </term><description><paramref name="sortkey1" /> ist größer als <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.SortKey.Compare%2A> -Methode vergleicht die <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaften der `sortkey1` und `sortkey2` Parameter. Die Methode liefert die gleichen Ergebnisse wie die <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methode.  
  
 Weitere Informationen zu den <xref:System.Globalization.SortKey.Compare%2A> -Methode und der Vergleich von Sortierschlüsseln, finden Sie unter den <xref:System.Globalization.SortKey> Thema-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird vergleicht zwei Zeichenfolgen unter Verwendung der <xref:System.Globalization.SortKey.Compare%2A> -Methode und die entsprechende <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> Methode.  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sortkey1" /> oder <paramref name="sortkey2" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das mit dem aktuellen <see cref="T:System.Globalization.SortKey" />-Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn der <paramref name="value" />-Parameter gleich dem aktuellen <see cref="T:System.Globalization.SortKey" />-Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortKey> Objekte werden als gleich betrachtet, wenn ihre <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaften gleich sind.  
  
 Diese Methode überschreibt <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Ergebnisse der <xref:System.Globalization.SortKey.Equals%2A> beim Vergleich mit anderen <xref:System.Globalization.SortKey> Objekte.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als Hashfunktion für das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt, die sich für die Verwendung in Hashalgorithmen und -datenstrukturen eignet, z. B. in einer Hashtabelle.</summary>
        <returns>Ein Hashcode für das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode generiert für zwei Objekte, die gemäß der <xref:System.Globalization.SortKey.Equals%2A>-Methode gleich sind, denselben Hashcode.  
  
 Diese Methode überschreibt <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bytearray ab, das das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</summary>
        <value>Ein Bytearray, das das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung der vom zurückgegebenen Daten die <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaft beim Vergleichen von Zeichenfolgen finden Sie unter der <xref:System.Globalization.SortKey> Thema-Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, einer ursprünglichen Zeichenfolge und die entsprechende Zeichenfolge und die wichtigen Daten für einen Sortierschlüssel für die Groß-/Kleinschreibung beachtet und einen Sortierschlüssel für die Groß-/Kleinschreibung.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ursprüngliche Zeichenfolge ab, mit der das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt erstellt wurde.</summary>
        <value>Die ursprüngliche Zeichenfolge, mit der das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt erstellt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt, einer ursprünglichen Zeichenfolge und die entsprechende Zeichenfolge und die wichtigen Daten für einen Sortierschlüssel für die Groß-/Kleinschreibung beachtet und einen Sortierschlüssel für die Groß-/Kleinschreibung.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert ist die Verkettung der Zeichenfolge "kein" Sortierschlüssel -, die Kultur-ID und die Vergleichsoptionen des aktuellen <xref:System.Globalization.SortKey> -Objekt, und der Wert von der <xref:System.Globalization.SortKey.OriginalString%2A> Eigenschaft.  
  
 Diese Methode überschreibt <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Zeichenfolge, die Zeichenfolgen, die sich ergibt, der <xref:System.Globalization.SortKey.ToString%2A> Methode für die Beachtung der Groß- und Kleinschreibung Sortierschlüssel, und die Schlüsseldaten für Groß-/Kleinschreibung beachtet und Groß-/Kleinschreibung Sortierschlüssel.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>