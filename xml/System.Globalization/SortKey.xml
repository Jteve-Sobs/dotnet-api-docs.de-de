<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa44ad8bf534ca8588e40c76f36ec64aab0270a5" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82490637" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortKey" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SortKey extends System.Object" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortKey" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey sealed" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <TypeSignature Language="C#" Value="public class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SortKey extends System.Object" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortKey extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Ergebnis der Zuordnung einer Zeichenfolge zum zugehörigen Sortierschlüssel dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Kultur abhängiger Vergleich von zwei Zeichen folgen ist von jedem Zeichen in den Zeichen folgen abhängig, das über mehrere Kategorien von Sortierungs Gewichtungen verfügt, einschließlich Skript-, alphabe tischer, Groß-/Kleinschreibung und diakritischer Gewichtung Ein Sortierschlüssel dient als Repository dieser Gewichtungen für eine bestimmte Zeichenfolge.  
  
 Die <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType>-Methode gibt eine Instanz der <xref:System.Globalization.SortKey>-Klasse zurück, die die Kultur abhängige Zuordnung von Zeichen in einer angegebenen Zeichenfolge widerspiegelt. Der Wert eines <xref:System.Globalization.SortKey> Objekts ist die Schlüsseldaten, die von der <xref:System.Globalization.SortKey.KeyData%2A>-Eigenschaft zurückgegeben werden. Diese Schlüsseldaten bestehen aus einer Reihe von Bytes, die die Zeichenfolge, kulturspezifische Sortierregeln und benutzerdefinierte Vergleichs Optionen codieren. Ein Vergleich mit Sortier Schlüsseln besteht aus einem bitweisen Vergleich der entsprechenden Schlüsseldaten in jedem Sortierschlüssel.  Wenn Sie z. b. einen Sortierschlüssel erstellen, indem Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>-Methode mit dem Wert <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>aufrufen, wird bei einer Zeichen folgen Vergleichsoperation, die den Sortierschlüssel verwendet, die Groß-/Kleinschreibung nicht beachtet  
  
 Nachdem Sie einen Sortierschlüssel für eine Zeichenfolge erstellt haben, vergleichen Sie Sortierschlüssel, indem Sie die statische <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType>-Methode aufrufen. Diese Methode führt einen einfachen Byte-für-Byte-Vergleich durch, sodass Sie viel schneller ist als die <xref:System.String.Compare%2A?displayProperty=nameWithType> oder <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Methode.  

> [!NOTE]
> Sie können die [Sortierungs Gewichtungs Tabellen](https://www.microsoft.com/download/details.aspx?id=10921)herunterladen, eine Reihe von Textdateien, die Informationen zu den in Sortier-und Vergleichs Vorgängen für Windows-Betriebssysteme verwendeten Zeichen Gewichtungen, die [standardmäßige Unicode-Sortierungs Element Tabelle](https://www.unicode.org/Public/UCA/latest/allkeys.txt), die Sortier Gewichtungs Tabelle für Linux und macOS enthalten.

## <a name="performance-considerations"></a>Leistungserwägungen  
 Beim Durchführen eines Zeichen folgen Vergleichs ergeben die Methoden <xref:System.Globalization.SortKey.Compare%2A> und <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> die gleichen Ergebnisse, aber Sie zielen auf andere Szenarien ab.  
  
 Auf hoher Ebene generiert die <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>-Methode den Sortierschlüssel für jede Zeichenfolge, führt den Vergleich aus und verwirft dann den Sortierschlüssel und gibt das Ergebnis des Vergleichs zurück. Die <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>-Methode generiert jedoch tatsächlich keinen kompletten Sortierschlüssel, um den Vergleich durchzuführen. Stattdessen generiert die-Methode in jeder Zeichenfolge die Schlüsseldaten für jedes Textelement (d. h. Basiszeichen, Ersatz Zeichenpaar oder kombinierte Zeichenfolge). Die-Methode vergleicht dann die Schlüsseldaten für die entsprechenden Textelemente. Der Vorgang wird beendet, sobald das Endergebnis des Vergleichs bestimmt wird. Sortierschlüssel Informationen werden berechnet, es wird jedoch kein <xref:System.Globalization.SortKey> Objekt erstellt. Diese Strategie ist in Bezug auf die Leistung wirtschaftlich, wenn beide Zeichen folgen einmal verglichen werden. Dies wird jedoch teuer, wenn die gleichen Zeichen folgen mehrmals verglichen werden.  
  
 Die <xref:System.Globalization.SortKey.Compare%2A>-Methode erfordert die Generierung eines <xref:System.Globalization.SortKey>-Objekts für jede Zeichenfolge, bevor der Vergleich durchgeführt wird. Diese Strategie ist im Hinblick auf die Leistung für den ersten Vergleich aufgrund der Zeit und des Arbeitsspeichers, die zum Generieren der <xref:System.Globalization.SortKey> Objekte investiert wurden, aufwändig. Dies wird jedoch wirtschaftlich, wenn die gleichen Sortierschlüssel mehrmals verglichen werden.  
  
 Nehmen Sie beispielsweise an, Sie schreiben eine Anwendung, die eine Datenbanktabelle nach der Zeile durchsucht, in der die Zeichen folgen basierte Index Spalte mit einer angegebenen Such Zeichenfolge übereinstimmt. Die Tabelle enthält Tausende von Zeilen, und das Vergleichen der Such Zeichenfolge mit dem Index in den einzelnen Zeilen nimmt einige Zeit in Anspruch. Wenn die Anwendung also eine Zeile und Ihre Index Spalte speichert, generiert und speichert Sie auch den Sortierschlüssel für den Index in einer Spalte, die für die Verbesserung der Suchleistung reserviert ist. Wenn die Anwendung nach einer Zielzeile sucht, vergleicht Sie den Sortierschlüssel für die Such Zeichenfolge mit dem Sortierschlüssel für die Index Zeichenfolge, anstatt die Such Zeichenfolge mit der Index Zeichenfolge zu vergleichen.  
  
## <a name="security-considerations"></a>Sicherheitshinweise  
 Die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>-Methode gibt ein <xref:System.Globalization.SortKey> Objekt mit dem Wert zurück, der auf einer angegebenen Zeichenfolge und <xref:System.Globalization.CompareOptions> Wert basiert, sowie die Kultur, die dem zugrunde liegenden <xref:System.Globalization.CompareInfo> Objekt zugeordnet ist. Wenn eine Sicherheits Entscheidung von einem Zeichen folgen Vergleich oder einer Änderung der Groß-/Kleinschreibung abhängt, sollten Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>-Methode der invarianten Kultur verwenden, um sicherzustellen, dass das Verhalten des Vorgangs unabhängig von den Kultur Einstellungen des Betriebssystems konsistent ist.  
  
 Verwenden Sie die folgenden Schritte zum Abrufen eines Sortier Schlüssels:  
  
1.  Rufen Sie die invariante Kultur aus der <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>-Eigenschaft ab.  
  
2.  Rufen Sie ein <xref:System.Globalization.CompareInfo>-Objekt für die invariante Kultur aus der <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType>-Eigenschaft ab.  
  
3.  Rufen Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> -Methode auf.  
  
 Das Arbeiten mit dem Wert eines <xref:System.Globalization.SortKey> Objekts entspricht dem Aufrufen der Windows `LCMapString`-Methode mit dem angegebenen LCMAP_SORTKEY Wert. Für das <xref:System.Globalization.SortKey> Objekt stellen die Sortierschlüssel für englische Zeichen den Sortier Schlüsseln für koreanische Zeichen voran.  
  
 <xref:System.Globalization.SortKey> Objekte können serialisiert werden, dies ist jedoch nur möglich, damit Sie <xref:System.AppDomain> Objekten überqueren können. Wenn eine Anwendung ein <xref:System.Globalization.SortKey> Objekt serialisiert, muss die Anwendung alle Sortierschlüssel erneut generieren, wenn eine neue Version der .NET Framework vorhanden ist.  
  
 Weitere Informationen zu Sortier Schlüsseln finden Sie unter Unicode Technical Standard #10 "Unicode COLLATIONS Algorithmus" auf der [Website des Unicode-Consortium](https://go.microsoft.com/fwlink/?linkid=37123).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Zeichenfolge "Llama" mithilfe der Kulturen "en-US" und "es-es" und der herkömmlichen Kulturen "en-US" und "es-es" verglichen.  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Globalization.SortKey>-Klasse verwenden können, um die Leistung in einer Anwendung zu verbessern, die häufig beim Sortieren und Durchsuchen eines großen Arrays basiert. Im Beispiel wird ein ungeordneter Array von Namen erstellt, das in diesem Fall 13 Elemente enthält. Anschließend wird der Sortierschlüssel jedes namens in einem parallelen Array gespeichert, das an die <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>-Methode weitergeleitet wird. Das Ergebnis ist ein sortiertes Array. Im Beispiel wird dann das Array nach drei Zeichen folgen durchsucht. Für jede Such Zeichenfolge ruft Sie die <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>-Methode auf, um den Sortierschlüssel der Zeichenfolge abzurufen, und ruft dann die <xref:System.Array.FindIndex%2A?displayProperty=nameWithType>-Methode auf, um den Index dieses Sortier Schlüssels im Array von Sortier Schlüsseln abzurufen. Da die Schlüssel Arrays Name und Sort parallel sind, ist der zurückgegebene Index auch der Index des Namens im `names` Array.  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">Der erste zu vergleichende Sortierschlüssel.</param>
        <param name="sortkey2">Der zweite zu vergleichende Sortierschlüssel.</param>
        <summary>Vergleicht zwei Sortierschlüssel.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die Beziehung zwischen <paramref name="sortkey1" /> und <paramref name="sortkey2" /> angibt.  
  
 <list type="table"><listheader><term> Wert 
 </term><description> Bedingung 
 </description></listheader><item><term> Kleiner als 0 (null) 
 </term><description><paramref name="sortkey1" /> ist kleiner als <paramref name="sortkey2" />.  
  
 </description></item><item><term> Null 
 </term><description><paramref name="sortkey1" /> ist gleich <paramref name="sortkey2" />.  
  
 </description></item><item><term> Größer als 0 (null) 
 </term><description><paramref name="sortkey1" /> ist größer als <paramref name="sortkey2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Globalization.SortKey.Compare%2A>-Methode werden die <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaften der Parameter `sortkey1` und `sortkey2` verglichen. Die-Methode ergibt dieselben Ergebnisse wie die <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>-Methode.  
  
 Weitere Informationen zur <xref:System.Globalization.SortKey.Compare%2A>-Methode und zum Vergleich von Sortier Schlüsseln finden Sie im Thema <xref:System.Globalization.SortKey>-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden zwei Zeichen folgen mit der <xref:System.Globalization.SortKey.Compare%2A>-Methode und der entsprechenden <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>-Methode verglichen.  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sortkey1" /> oder <paramref name="sortkey2" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das mit dem aktuellen <see cref="T:System.Globalization.SortKey" />-Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn der <paramref name="value" />-Parameter gleich dem aktuellen <see cref="T:System.Globalization.SortKey" />-Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortKey> Objekte werden als gleich betrachtet, wenn Ihre <xref:System.Globalization.SortKey.KeyData%2A> Eigenschaften gleich sind.  
  
 Diese Methode überschreibt <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Ergebnisse der <xref:System.Globalization.SortKey.Equals%2A> im Vergleich mit verschiedenen <xref:System.Globalization.SortKey> Objekten.  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" /></exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als Hashfunktion für das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt, die sich für die Verwendung in Hashalgorithmen und -datenstrukturen eignet, z. B. in einer Hashtabelle.</summary>
        <returns>Ein Hashcode für das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode generiert für zwei Objekte, die gemäß der <xref:System.Globalization.SortKey.Equals%2A>-Methode gleich sind, denselben Hashcode.  
  
 Diese Methode überschreibt <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public byte[] KeyData { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Byte()" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bytearray ab, das das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</summary>
        <value>Ein Bytearray, das das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung der Daten, die von der <xref:System.Globalization.SortKey.KeyData%2A>-Eigenschaft zum Vergleichen von Zeichen folgen zurückgegeben werden, finden Sie im Thema <xref:System.Globalization.SortKey>-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden eine ursprüngliche Zeichenfolge und die entsprechenden Zeichen folgen-und Schlüsseldaten für einen Sortierschlüssel mit Berücksichtigung von Groß-und Kleinschreibung angezeigt.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public string OriginalString { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalString As String" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalString { System::String ^ get(); };" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ursprüngliche Zeichenfolge ab, mit der das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt erstellt wurde.</summary>
        <value>Die ursprüngliche Zeichenfolge, mit der das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt erstellt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden eine ursprüngliche Zeichenfolge und die entsprechenden Zeichen folgen-und Schlüsseldaten für einen Sortierschlüssel mit Berücksichtigung von Groß-und Kleinschreibung angezeigt.  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle <see cref="T:System.Globalization.SortKey" />-Objekt darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert ist die Verkettung der Zeichenfolge "SortKey-", des Kultur Bezeichners und der Vergleichs Optionen des aktuellen <xref:System.Globalization.SortKey> Objekts und des Werts der <xref:System.Globalization.SortKey.OriginalString%2A>-Eigenschaft.  
  
 Diese Methode überschreibt <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ursprüngliche Zeichenfolge, die Zeichen folgen, die von der <xref:System.Globalization.SortKey.ToString%2A>-Methode für die Groß-/Kleinschreibung beachtet werden, und die Groß-/Kleinschreibung nicht beachtet, und die Schlüsseldaten für Sortierschlüssel, die Groß-/Kleinschreibung  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
