<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a86cd09498332dd1b8f6c37c1d1306aa8b9fffa5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48623290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht das Aufteilen einer Zeichenfolge in Textelemente sowie das Durchlaufen dieser Textelemente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

.NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Der Unicode-Standard definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
Die <xref:System.Globalization.StringInfo> -Klasse können Sie die Arbeit mit Zeichenfolgen als eine Reihe von Text-Elemente und nicht auf einzelne <xref:System.Char> Objekte.  
  
Instanziiert eine <xref:System.Globalization.StringInfo> Objekt, das eine angegebene Zeichenfolge darstellt. Führen Sie einen der folgenden:  
 
- Rufen Sie die <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> Konstruktor und übergeben sie die Zeichenfolge, die die <xref:System.Globalization.StringInfo> Objekt als Argument dargestellt wird.  
  
- Rufen Sie die Standardeinstellung <xref:System.Globalization.StringInfo.%23ctor> -Konstruktor, und weisen Sie der Zeichenfolge, die die <xref:System.Globalization.StringInfo> Objekt wird zum Darstellen der <xref:System.Globalization.StringInfo.String%2A> Eigenschaft.  
  
 Sie können mit der einzelne Text-Elemente in einer Zeichenfolge auf zwei Arten arbeiten:  
  
- Durch die Enumeration jedes Textelement. Zu diesem Zweck rufen Sie die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> -Methode, und rufen dann wiederholt die <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> Methode für das zurückgegebene <xref:System.Globalization.TextElementEnumerator> Objekt, bis die Methode gibt `false`.  
  
- Durch Aufrufen der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> Methode, um ein Array abrufen, die der Startindex für jedes Textelement enthält. Sie können dann einzelne Elemente abrufen, indem Sie diese Indizes zu übergeben die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> Methode.  
  
Das folgende Beispiel veranschaulicht beide Methoden zum Arbeiten mit die Textelemente einer Zeichenfolge. Sie erstellt zwei Zeichenfolgen:  
  
- `strCombining`, dies ist eine Zeichenfolge mit arabischen Zeichen, die drei Textelemente mit mehreren enthält <xref:System.Char> Objekte. Das erste Textelement ist der Basiszeichen Arabische Buchstaben ALEF (U +-627) gefolgt von Arabische HAMZA unten (U +-655) und arabische KASRA (U + 0650 für). Das zweite Element der Text wird Arabische Buchstaben HEH (U + 0647) gefolgt von Arabische FATHA (U +-64E). Das dritte Element der Text wird Arabische LETTTER BEH (U + 0628) gefolgt von Arabische DAMMATAN (U + 064C).  
  
- `strSurrogates`, dies ist eine Zeichenfolge, drei Ersatzzeichenpaare enthält: griechischen ACROPHONIC (U + 10148) für fünf damit über die zusätzliche Multilingual Plane, U + 20026 aus dem zusätzliche ideografischen Ebene und U + F1001 aus dem Bereich privater Benutzer. Die UTF-16-Codierung der einzelnen Zeichen ist ein Ersatzzeichenpaar, der ein hohes Ersatzzeichen, gefolgt von einem niedrigen Ersatzzeichen besteht.  
  
Jede Zeichenfolge wird einmal vom analysiert die <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> Methode und anschließend nach der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> Methode. Beide Methoden analysieren Sie die Textelemente in den beiden Zeichenfolgen ordnungsgemäß und zeigt die Ergebnisse des Analysevorgangs.  
  
[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
## Examples  

Dieses Beispiel verwendet die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> und <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> Methoden der <xref:System.Globalization.StringInfo> Klasse, um eine Zeichenfolge zu bearbeiten, der Ersatz- und enthält.  
  
[!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
[!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
[!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  

 ]]></format>
      <related type="ExternalDocumentation" href="https://www.microsoft.com/en-us/download/details.aspx?id=10921">Sorting Weight Tables for Windows operating systems</related>
    </remarks>
    <block subset="none" type="usage">
      <para>Intern die Methoden der <see cref="T:System.Globalization.StringInfo" /> Klasse rufen die Methoden des der <see cref="T:System.Globalization.CharUnicodeInfo" /> -Klasse Zeichenkategorien bestimmen. Ab .NET Framework 4.6.2 können zeichenklassifizierung basiert auf [Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0). Für die .NET Framework 4 über das .NET Framework 4.6.1, basieren auf [Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/). In .NET Core basiert auf [Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</para>
    </block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/en-us/download/details.aspx?id=10921">Sortieren die Gewichtung Tabellen für die Windows-Betriebssysteme</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Unicode-Sortierung Elemeent Standardtabelle, für Linux und macOS</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der neuen <xref:System.Globalization.StringInfo> -Objekt initialisiert wird, auf die leere Zeichenfolge (""). Sie können eine andere Zeichenfolge darauf zuweisen, mit der <xref:System.Globalization.StringInfo.String%2A> Eigenschaft.  Sie können auch instanziieren ein <xref:System.Globalization.StringInfo> -Objekt, das eine angegebene Zeichenfolge in einem einzigen Schritt stellt, durch den Aufruf dar der <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Eine Zeichenfolge, die dieses <see cref="T:System.Globalization.StringInfo" />-Objekt initialisiert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse für eine angegebene Zeichenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor weist das Wertargument des Objekts <xref:System.Globalization.StringInfo.String%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt.</param>
        <summary>Gibt an, ob das aktuelle <see cref="T:System.Globalization.StringInfo" />-Objekt einem angegebenen Objekt entspricht.</summary>
        <returns>
          <see langword="true" />, wenn der <paramref name="value" />-Parameter ein <see cref="T:System.Globalization.StringInfo" />-Objekt ist und dessen <see cref="P:System.Globalization.StringInfo.String" />-Eigenschaft mit der <see cref="P:System.Globalization.StringInfo.String" />-Eigenschaft dieses <see cref="T:System.Globalization.StringInfo" />-Objekts übereinstimmt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Berechnet einen Hashcode für den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts.</summary>
        <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen, der auf dem Zeichenfolgenwert dieses <see cref="T:System.Globalization.StringInfo" />-Objekts basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Verhalten der <xref:System.Globalization.StringInfo.GetHashCode%2A> richtet sich nach der Implementierung, die von einer Version der common Language Runtime auf einen anderen ändern kann. Dies kann vorkommen, zum Verbessern der Leistung von <xref:System.Globalization.StringInfo.GetHashCode%2A>. Um das Verhalten der machen <xref:System.Globalization.StringInfo.GetHashCode%2A> Konstante, die Anwendung sollte außer Kraft setzen der laufzeitimplementierung des <xref:System.Globalization.StringInfo.GetHashCode%2A> mit einer Implementierung, die bekanntermaßen nicht ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das erste Textelement in einer angegebenen Zeichenfolge ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, aus der das Textelement abgerufen werden soll.</param>
        <summary>Ruft das erste Textelement in einer angegebenen Zeichenfolge ab.</summary>
        <returns>Eine Zeichenfolge, die das erste Textelement aus der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
.NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
 Diese Methode gibt nur das erste Textelement. Um mit die Textelemente der Zeichenfolge zu durchlaufen, sollte die Anwendung verwenden die <xref:System.Globalization.TextElementEnumerator> Objekt, das generiert wird, durch die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, aus der das Textelement abgerufen werden soll.</param>
        <param name="index">Der nullbasierte Index, an dem das Textelement beginnt.</param>
        <summary>Ruft das Textelement am angegebenen Index der angegebenen Zeichenfolge ab.</summary>
        <returns>Eine Zeichenfolge, die das Textelement am angegebenen Index der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
.NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Der Unicode-Standard definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
 Diese Methode gibt nur das erste Textelement der Teilzeichenfolge, die am angegebenen Index beginnt. Um mit die Textelemente der Zeichenfolge zu durchlaufen, sollte die Anwendung verwenden die <xref:System.Globalization.TextElementEnumerator> generiert, indem die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die Textelemente einer Zeichenfolge durchläuft.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, die durchlaufen werden soll.</param>
        <summary>Gibt einen Enumerator zurück, der die Textelemente der gesamten Zeichenfolge durchläuft.</summary>
        <returns>Ein <see cref="T:System.Globalization.TextElementEnumerator" /> für die gesamte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Der Unicode-Standard definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
 Der Text-Element-Enumerator wird nur zum Lesen von Daten in der Zeichenfolge verwendet. Sie können die zugrunde liegenden Zeichenfolge nicht ändern. Der Enumerator keinen exklusiven Zugriff auf die Zeichenfolge.  
  
 Der Enumerator befindet sich in einem ungültigen Zustand, wenn er vor dem ersten Textelement in der Zeichenfolge oder nach dem letzten Textelement in der Zeichenfolge positioniert ist. Wenn der Enumerator in einem ungültigen Zustand befindet, Aufrufen <xref:System.Globalization.TextElementEnumerator.Current%2A> löst eine Ausnahme aus.  
  
 Zunächst wird der Enumerator vor dem ersten Textelement in der Zeichenfolge. <xref:System.Globalization.TextElementEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück. Aus diesem Grund nach dem Erstellen eines Enumerators oder nach <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Textelement der Zeichenfolge vor dem Lesen des Werts von <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.  
  
 Nach das Ende der Zeichenfolge übergeben wird, wird der Enumerator wieder in einen ungültigen Status und ein Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gibt `false`. Aufrufen von <xref:System.Globalization.TextElementEnumerator.Current%2A> löst eine Ausnahme aus, wenn der letzte Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zurückgegebenen `false`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Aufrufen der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode veranschaulicht. In diesem Beispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Globalization.StringInfo> Klasse.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, die durchlaufen werden soll.</param>
        <param name="index">Der nullbasierte Index, an dem das Durchlaufen begonnen werden soll.</param>
        <summary>Gibt einen Enumerator zurück, der die Textelemente der Zeichenfolge beginnend am angegebenen Index durchläuft.</summary>
        <returns>Ein <see cref="T:System.Globalization.TextElementEnumerator" /> für die am <paramref name="index" /> beginnende Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Der Unicode-Standard definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
 Der Text-Element-Enumerator wird nur zum Lesen von Daten in der Zeichenfolge verwendet. Sie können die zugrunde liegenden Zeichenfolge nicht ändern. Der Enumerator keinen exklusiven Zugriff auf die Zeichenfolge.  
  
 Der Enumerator befindet sich in einem ungültigen Zustand, wenn er vor dem ersten Textelement in der Zeichenfolge oder nach dem letzten Textelement in der Zeichenfolge positioniert ist. Wenn der Enumerator in einem ungültigen Zustand befindet, Aufrufen <xref:System.Globalization.TextElementEnumerator.Current%2A> löst eine Ausnahme aus.  
  
 Zunächst wird der Enumerator vor dem ersten Textelement in der Zeichenfolge. <xref:System.Globalization.TextElementEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück. Aus diesem Grund nach dem Erstellen eines Enumerators oder nach <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Textelement der Zeichenfolge vor dem Lesen des Werts von <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.  
  
 Nach das Ende der Zeichenfolge übergeben wird, wird der Enumerator wieder in einen ungültigen Status und ein Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gibt `false`. Aufrufen von <xref:System.Globalization.TextElementEnumerator.Current%2A> löst eine Ausnahme aus, wenn der letzte Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zurückgegebenen `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Bits im aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab.</summary>
        <value>Die Anzahl der Basiszeichen, Ersatzzeichenpaare und die Kombination von Zeichenfolgen in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die zu durchsuchende Zeichenfolge.</param>
        <summary>Gibt die Indizes aller Basiszeichen, hohen Ersatzzeichen oder Steuerzeichen in der angegebenen Zeichenfolge zurück.</summary>
        <returns>Ein Array von Ganzzahlen, das die nullbasierten Indizes aller Basiszeichen, hohen Ersatzzeichen oder Steuerzeichen in der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatzzeichenpaar als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, die eine Sequenz von zwei Codeeinheiten, bestehen aus, wobei die erste Einheit des Paars ist ein hohes Ersatzzeichen und die zweite mit niedriger Ersatzzeichen. Ein hohes Ersatzzeichen ist eine Unicode-Codepunkt im Bereich U + D800 und U + DBFF liegt und ein niedriges Ersatzzeichen ist eine Unicode-Codepunkt im Bereich U + DC00 und U + DFFF.  
  
 Ein Steuerzeichen ist ein Zeichen für die der Unicode-Wert-U + 007F ist oder im Bereich U + 0000 bis U + 001F oder U + 0080 bis U + 009F liegt.  
  
 .NET definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird. Ein Textelement kann es sich um ein Basiszeichen, ein Ersatzzeichenpaar oder eine Kombination von Zeichen Sequenz. Die [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert eine Kombination von Zeichen der Sequenz als eine Kombination aus einem Basiszeichen und mindestens eine Kombination von Zeichen. Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.  
  
 Wenn eine Kombination ungültig ist, wird auch jede Kombination von Zeichen in dieser Reihenfolge zurückgegeben.  
  
 Jeder Index in der sich ergebenden Array ist der Anfang eines Textelements, d. h. der Index des Basiszeichens oder das hohe Ersatzzeichen.  
  
 Der Unterschied zwischen zwei aufeinander folgenden Indizes wird einfach die Länge der einzelnen Elemente berechnet. Die Länge des Arrays werden immer kleiner als oder gleich der Länge der Zeichenfolge. Beispielsweise gibt diese Methode die Zeichenfolge "\u4f00\u302a\ud800\udc00\u4f01" wird angegeben, die Indizes 0, 2 und 4.  
  
## <a name="equivalent-members"></a>Entsprechende Elemente  
 Ab Version 2.0 von .NET Framework, die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> Methode und <xref:System.Globalization.StringInfo.LengthInTextElements%2A> Eigenschaft bieten eine benutzerfreundliche Implementierung der Funktionsumfang der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Aufrufen der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>-Methode veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Globalization.StringInfo> Klasse.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> ist <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts ab oder legt diesen fest.</summary>
        <value>Die Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts bildet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Globalization.StringInfo> -Objekt instanziiert wird, seine <xref:System.Globalization.StringInfo.String%2A> Eigenschaft auf einen der folgenden Werte festgelegt:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Wenn der Standardwert <xref:System.Globalization.StringInfo.%23ctor> aufgerufen wird. Verwenden Sie dann die <xref:System.Globalization.StringInfo.String%2A> Eigenschaft, um die Zeichenfolge, die dieses <xref:System.Globalization.StringInfo> Rperesents Objekt.  
  
-   Die Zeichenfolge angegeben wird, als die `value` Argument für die <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert in einem set-Vorgang ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine untergeordnete Zeichenfolge von Textelementen aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Der nullbasierte Index eines Textelements in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</param>
        <summary>Ruft eine Teilzeichenfolge der Textelemente aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab (beginnend am angegebenen Textelement bis zum letzten Textelement).</summary>
        <returns>Eine Teilzeichenfolge der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt, beginnend mit dem vom <paramref name="startingTextElement" />-Parameter vorgegebenen Index des Textelements bis zum letzten Textelement in diesem Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erwägen Sie eine Zeichenfolge, die besteht aus fünf Textelemente, die Indizierung von 0 bis 4 aus. Wenn die `startingTextElement` -Parameter ist 1, die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> Methode gibt eine Teilzeichenfolge, die aus die Textelemente besteht für die die Indizes 1, 2, 3 und 4 sind zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> ist kleiner als Null.  
  
- oder -  
Die Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts angibt, ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Der nullbasierte Index eines Textelements in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</param>
        <param name="lengthInTextElements">Die Anzahl der abzurufenden Textelemente.</param>
        <summary>Ruft eine Teilzeichenfolge der Textelemente aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab (beginnend am angegebenen Textelement bis zur angegebenen Anzahl der Textelemente).</summary>
        <returns>Eine Teilzeichenfolge der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt. Die Teilzeichenfolge besteht aus der Anzahl der vom <paramref name="lengthInTextElements" />-Parameter angegebenen Textelemente und beginnt bei dem Index des Textelements, der durch den <paramref name="startingTextElement" />-Parameter angegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erwägen Sie eine Zeichenfolge, die besteht aus fünf Textelemente, die Indizierung von 0 bis 4 aus. Wenn die `startingTextElement` -Parameter den Wert 1 und der `lengthInTextElements` Parameter 3 beträgt, wird die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> Methode gibt eine Teilzeichenfolge, die aus die Textelemente besteht für die die Indizes 1, 2 und 3 sind zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> ist kleiner als Null.  
  
- oder -  
 <paramref name="startingTextElement" /> ist gleich der oder größer als die Länge der Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts bildet.  
  
- oder -  
 <paramref name="lengthInTextElements" /> ist kleiner als Null.  
  
- oder -  
Die Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts angibt, ist eine leere Zeichenfolge ("").  
  
- oder -  
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> geben einen Index an, der die Anzahl der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt übersteigt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>