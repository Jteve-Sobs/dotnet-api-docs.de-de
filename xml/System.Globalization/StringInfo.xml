<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb3a7ae51bb2a06f73bfcc02f0b229046d502f5a" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83532328" /></Metadata><TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht das Aufteilen einer Zeichenfolge in Textelemente sowie das Durchlaufen dieser Textelemente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

.Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Der Unicode-Standard definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
Die <xref:System.Globalization.StringInfo>-Klasse ermöglicht es Ihnen, mit einer Zeichenfolge als eine Reihe von Textelementen anstelle einzelner <xref:System.Char> Objekte zu arbeiten.  
  
Um ein <xref:System.Globalization.StringInfo> Objekt zu instanziieren, das eine angegebene Zeichenfolge darstellt, können Sie eine der folgenden Aktionen ausführen:  
 
- Nennen Sie den <xref:System.Globalization.StringInfo.%23ctor%28System.String%29>-Konstruktor, und übergeben Sie ihm die Zeichenfolge, die das <xref:System.Globalization.StringInfo> Objekt als Argument darstellen soll.  
  
- Nennen Sie den Standardkonstruktor <xref:System.Globalization.StringInfo.%23ctor>, und weisen Sie die Zeichenfolge zu, die das <xref:System.Globalization.StringInfo> Objekt für die Eigenschaft <xref:System.Globalization.StringInfo.String%2A> darstellen soll.  
  
 Sie können mit den einzelnen Textelementen in einer Zeichenfolge auf zwei Arten arbeiten:  
  
- Durch Aufzählen jedes Text Elements. Dazu wird die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode aufgerufen und dann wiederholt die <xref:System.Globalization.TextElementEnumerator.MoveNext%2A>-Methode für das zurückgegebene <xref:System.Globalization.TextElementEnumerator> Objekt aufgerufen, bis die Methode `false`zurückgibt.  
  
- Durch Aufrufen der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>-Methode zum Abrufen eines Arrays, das den Start Index jedes Text Elements enthält. Anschließend können Sie einzelne Textelemente abrufen, indem Sie diese Indizes an die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A>-Methode übergeben.  
  
Im folgenden Beispiel werden beide Methoden zum Arbeiten mit den Textelementen in einer Zeichenfolge veranschaulicht. Er erstellt zwei Zeichen folgen:  
  
- `strCombining`. dabei handelt es sich um eine Zeichenfolge aus arabischen Zeichen, die drei Textelemente mit mehreren <xref:System.Char> Objekten enthält. Das erste Textelement ist das Basiszeichen Arabisch Letter Alef (u +-627), gefolgt von Arabic Hamza unten (u +-655) und Arabic Kasra (u + 0650). Das zweite Textelement ist der arabische Buchstabe Heh (u + 0647), gefolgt von Arabic Fatha (u +-64E). Das dritte Textelement ist der arabische Buchstabe Beh (u + 0628), gefolgt von Arabic Dammatan (u + 064c).  
  
- `strSurrogates`. dabei handelt es sich um eine Zeichenfolge, die drei Ersatzpaare umfasst: Griechisch acrophonic Five Talents (u + 10148) aus der ergänzenden mehrsprachigen Ebene, u + 20026 von der ergänzenden ideografischen Ebene und u + F1001 aus dem privaten Benutzerbereich. Die UTF-16-Codierung jedes Zeichens ist ein Ersatz Zeichenpaar, das aus einem hohen Ersatz Zeichen gefolgt von einem niedrigen Ersatz Zeichen besteht.  
  
Jede Zeichenfolge wird einmal durch die <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>-Methode und dann durch die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode analysiert. Beide Methoden analysieren die Textelemente in den beiden Zeichen folgen ordnungsgemäß und zeigen die Ergebnisse des Analyse Vorgangs an.  
  
[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
## Examples  

In diesem Beispiel werden die Methoden <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> und <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> der <xref:System.Globalization.StringInfo>-Klasse verwendet, um eine Zeichenfolge zu bearbeiten, die Ersatz Zeichen und Kombinations Zeichen enthält.  
  
[!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
[!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
[!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para>Intern werden von den Methoden der <see cref="T:System.Globalization.StringInfo" />-Klasse die Methoden der <see cref="T:System.Globalization.CharUnicodeInfo" />-Klasse aufgerufen, um Zeichen Kategorien zu bestimmen. Beginnend mit der .NET Framework 4.6.2 basiert die Zeichen Klassifizierung auf [dem Unicode-Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0). Für die .NET Framework 4 bis .NET Framework 4.6.1 basiert Sie auf [dem Unicode-Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/). In .net Core basiert Sie auf [dem Unicode-Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</para></block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921">Sortieren von Gewichtungs Tabellen für Windows-Betriebssysteme</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Standardmäßige Unicode-Sortierungs Element Tabelle für Linux und macOS</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des neuen <xref:System.Globalization.StringInfo> Objekts wird mit der leeren Zeichenfolge ("") initialisiert. Sie können dieser eine andere Zeichenfolge zuweisen, indem Sie die <xref:System.Globalization.StringInfo.String%2A>-Eigenschaft verwenden.  Sie können auch ein <xref:System.Globalization.StringInfo> Objekt instanziieren, das eine angegebene Zeichenfolge in einem einzigen Schritt darstellt, indem Sie den <xref:System.Globalization.StringInfo.%23ctor%28System.String%29>-Konstruktor aufrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Eine Zeichenfolge zum Initialisieren dieses <see cref="T:System.Globalization.StringInfo" />-Objekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Globalization.StringInfo" />-Klasse in eine angegebene Zeichenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor weist das Wert Argument der <xref:System.Globalization.StringInfo.String%2A>-Eigenschaft des Objekts zu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Ein -Objekt.</param>
        <summary>Gibt an, ob das aktuelle <see cref="T:System.Globalization.StringInfo" />-Objekt einem angegebenen Objekt entspricht.</summary>
        <returns><see langword="true" />, wenn der <paramref name="value" />-Parameter ein <see cref="T:System.Globalization.StringInfo" />-Objekt ist und dessen <see cref="P:System.Globalization.StringInfo.String" />-Eigenschaft mit der <see cref="P:System.Globalization.StringInfo.String" />-Eigenschaft dieses <see cref="T:System.Globalization.StringInfo" />-Objekts übereinstimmt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Berechnet einen Hashcode für den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts.</summary>
        <returns>Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen, der auf dem Zeichenfolgenwert dieses <see cref="T:System.Globalization.StringInfo" />-Objekts basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Verhalten von <xref:System.Globalization.StringInfo.GetHashCode%2A> hängt von der Implementierung ab, die von einer Version des Common Language Runtime in eine andere geändert werden kann. Dies kann zur Verbesserung der Leistung von <xref:System.Globalization.StringInfo.GetHashCode%2A>passieren. Um das Verhalten <xref:System.Globalization.StringInfo.GetHashCode%2A> Konstanten zu gewährleisten, sollte die Anwendung die Lauf Zeit Implementierung von <xref:System.Globalization.StringInfo.GetHashCode%2A> überschreiben, wobei eine Implementierung bekanntermaßen nie geändert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das erste Textelement in einer angegebenen Zeichenfolge ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, aus der das Textelement abgerufen werden soll.</param>
        <summary>Ruft das erste Textelement in einer angegebenen Zeichenfolge ab.</summary>
        <returns>Eine Zeichenfolge, die das erste Textelement aus der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
.Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
 Diese Methode gibt nur das erste Textelement zurück. Um die Textelemente der Zeichenfolge zu durchlaufen, sollte die Anwendung das <xref:System.Globalization.TextElementEnumerator> Objekt verwenden, das von der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode generiert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> ist <see langword="null" /></exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, aus der das Textelement abgerufen werden soll.</param>
        <param name="index">Der nullbasierte Index, an dem das Textelement beginnt.</param>
        <summary>Ruft das Textelement am angegebenen Index der angegebenen Zeichenfolge ab.</summary>
        <returns>Eine Zeichenfolge, die das Textelement am angegebenen Index der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
.Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Der Unicode-Standard definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
 Diese Methode gibt nur das erste Textelement der Teil Zeichenfolge zurück, die am angegebenen Index beginnt. Um die Textelemente der Zeichenfolge zu durchlaufen, sollte die Anwendung die <xref:System.Globalization.TextElementEnumerator> verwenden, die von der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode generiert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die Textelemente einer Zeichenfolge durchläuft.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, die durchlaufen werden soll.</param>
        <summary>Gibt einen Enumerator zurück, der die Textelemente der gesamten Zeichenfolge durchläuft.</summary>
        <returns>Ein <see cref="T:System.Globalization.TextElementEnumerator" /> für die gesamte Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Der Unicode-Standard definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
 Der Textelement-Enumerator wird nur zum Lesen von Daten in der Zeichenfolge verwendet. die zugrunde liegende Zeichenfolge kann nicht geändert werden. Der Enumerator hat keinen exklusiven Zugriff auf die Zeichenfolge.  
  
 Der Enumerator befindet sich in einem ungültigen Zustand, wenn er vor dem ersten Textelement in der Zeichenfolge oder hinter dem letzten Textelement in der Zeichenfolge positioniert ist. Wenn sich der Enumerator in einem ungültigen Zustand befindet, löst der Aufruf von <xref:System.Globalization.TextElementEnumerator.Current%2A> eine Ausnahme aus.  
  
 Anfänglich wird der Enumerator vor dem ersten Textelement in der Zeichenfolge positioniert. <xref:System.Globalization.TextElementEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück. Nachdem ein Enumerator erstellt wurde oder nachdem <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wurde, müssen <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> aufgerufen werden, um den Enumerator vor dem Lesen des Werts von <xref:System.Globalization.TextElementEnumerator.Current%2A>auf das erste Textelement der Zeichenfolge zu setzen.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.  
  
 Nachdem das Ende der Zeichenfolge überschritten wurde, befindet sich der Enumerator wieder in einem ungültigen Zustand, und der Aufruf von <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gibt `false`zurück. Durch Aufrufen von <xref:System.Globalization.TextElementEnumerator.Current%2A> wird eine Ausnahme ausgelöst, wenn der letzte Aufruf von <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false`zurückgegeben hat.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Aufrufen der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>-Methode veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das für die <xref:System.Globalization.StringInfo>-Klasse bereitgestellt wird.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> ist <see langword="null" /></exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Die Zeichenfolge, die durchlaufen werden soll.</param>
        <param name="index">Der nullbasierte Index, an dem das Durchlaufen begonnen werden soll.</param>
        <summary>Gibt einen Enumerator zurück, der die Textelemente der Zeichenfolge beginnend am angegebenen Index durchläuft.</summary>
        <returns>Ein <see cref="T:System.Globalization.TextElementEnumerator" /> für die am <paramref name="index" /> beginnende Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Der Unicode-Standard definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
 Der Textelement-Enumerator wird nur zum Lesen von Daten in der Zeichenfolge verwendet. die zugrunde liegende Zeichenfolge kann nicht geändert werden. Der Enumerator hat keinen exklusiven Zugriff auf die Zeichenfolge.  
  
 Der Enumerator befindet sich in einem ungültigen Zustand, wenn er vor dem ersten Textelement in der Zeichenfolge oder hinter dem letzten Textelement in der Zeichenfolge positioniert ist. Wenn sich der Enumerator in einem ungültigen Zustand befindet, löst der Aufruf von <xref:System.Globalization.TextElementEnumerator.Current%2A> eine Ausnahme aus.  
  
 Anfänglich wird der Enumerator vor dem ersten Textelement in der Zeichenfolge positioniert. <xref:System.Globalization.TextElementEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück. Nachdem ein Enumerator erstellt wurde oder nachdem <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wurde, müssen <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> aufgerufen werden, um den Enumerator vor dem Lesen des Werts von <xref:System.Globalization.TextElementEnumerator.Current%2A>auf das erste Textelement der Zeichenfolge zu setzen.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.  
  
 Nachdem das Ende der Zeichenfolge überschritten wurde, befindet sich der Enumerator wieder in einem ungültigen Zustand, und der Aufruf von <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> gibt `false`zurück. Durch Aufrufen von <xref:System.Globalization.TextElementEnumerator.Current%2A> wird eine Ausnahme ausgelöst, wenn der letzte Aufruf von <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false`zurückgegeben hat.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> liegt außerhalb des Bereichs der gültigen Indizes für <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Bits im aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab.</summary>
        <value>Die Anzahl der Basiszeichen, Ersatzzeichenpaare und die Kombination von Zeichenfolgen in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Die zu durchsuchende Zeichenfolge.</param>
        <summary>Gibt die Indizes aller Basiszeichen, hohen Ersatzzeichen oder Steuerzeichen in der angegebenen Zeichenfolge zurück.</summary>
        <returns>Ein Array von Ganzzahlen, das die nullbasierten Indizes aller Basiszeichen, hohen Ersatzzeichen oder Steuerzeichen in der angegebenen Zeichenfolge enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert ein Ersatz Zeichenpaar als codierte Zeichen Darstellung für ein einzelnes abstraktes Zeichen, das aus einer Sequenz von zwei Code Einheiten besteht, wobei die erste Einheit des Paars ein hohes Ersatz Zeichen und das zweite ein niedriges Ersatz Zeichen ist. Ein hohes Ersatz Zeichen ist ein Unicode-Codepunkt im Bereich u + D800 und bis u + DBFF, und ein niedriges Ersatz Zeichen ist ein Unicode-Codepunkt im Bereich u + DC00 und bis u + DFFF.  
  
 Ein Steuerzeichen ist ein Zeichen, für das der Unicode-Wert u + 007F oder im Bereich u + 0000 bis u + 001F oder u + 0080 bis u + 009F ist.  
  
 .Net definiert ein Textelement als eine Textzeile, die als einzelnes Zeichen, d. h. als Grapheme, angezeigt wird. Ein Textelement kann ein Basiszeichen, ein Ersatz Zeichenpaar oder eine kombinierte Zeichenfolge sein. Der [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert eine kombinierte Zeichenfolge als eine Kombination aus einem Basiszeichen und einem oder mehreren kombinierten Zeichen. Ein Ersatz Zeichenpaar kann ein Basiszeichen oder ein Kombinations Zeichen darstellen.  
  
 Wenn eine kombinierte Zeichenfolge ungültig ist, wird jedes kombinierte Zeichen in dieser Sequenz ebenfalls zurückgegeben.  
  
 Jeder Index im resultierenden Array ist der Anfang eines Text Elements, d. h. der Index des Basis Zeichens oder das hohe Ersatz Zeichen.  
  
 Die Länge der einzelnen Elemente kann problemlos als Unterschied zwischen aufeinander folgenden Indizes berechnet werden. Die Länge des Arrays ist immer kleiner oder gleich der Länge der Zeichenfolge. Bei der Zeichenfolge "\u4s00\u302a\ud800\udc00\u4s01" gibt diese Methode z. b. die Indizes 0, 2 und 4 zurück.  
  
## <a name="equivalent-members"></a>Äquivalente Member  
 Ab Version 2,0 des .NET Framework bieten die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A>-Methode und die <xref:System.Globalization.StringInfo.LengthInTextElements%2A>-Eigenschaft eine benutzerfreundliche Implementierung der Funktionalität, die von der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>-Methode geboten wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Aufrufen der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>-Methode veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Globalization.StringInfo>-Klasse bereitgestellt wird.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> ist <see langword="null" /></exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert für das aktuelle <see cref="T:System.Globalization.StringInfo" />-Objekt ab oder legt diesen fest.</summary>
        <value>Die Zeichenfolge, die den Wert für das aktuelle <see cref="T:System.Globalization.StringInfo" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein <xref:System.Globalization.StringInfo> Objekt instanziiert wird, wird dessen <xref:System.Globalization.StringInfo.String%2A>-Eigenschaft auf einen der folgenden Werte festgelegt:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>, wenn die Standard <xref:System.Globalization.StringInfo.%23ctor> aufgerufen wird. Anschließend sollten Sie die <xref:System.Globalization.StringInfo.String%2A>-Eigenschaft verwenden, um die Zeichenfolge zuzuweisen, die diese <xref:System.Globalization.StringInfo>-Objekt rperesents hat.  
  
-   Die als `value` Argument für den <xref:System.Globalization.StringInfo.%23ctor%28System.String%29>-Konstruktor angegebene Zeichenfolge.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert in einem set-Vorgang ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine untergeordnete Zeichenfolge von Textelementen aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Der nullbasierte Index eines Textelements in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</param>
        <summary>Ruft eine Teilzeichenfolge der Textelemente aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab (beginnend am angegebenen Textelement bis zum letzten Textelement).</summary>
        <returns>Eine Teilzeichenfolge der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt, beginnend mit dem vom <paramref name="startingTextElement" />-Parameter vorgegebenen Index des Textelements bis zum letzten Textelement in diesem Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Angenommen, eine Zeichenfolge besteht aus fünf Textelementen, die von 0 bis 4 indiziert werden. Wenn der `startingTextElement`-Parameter 1 ist, gibt die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A>-Methode eine Teil Zeichenfolge zurück, die aus den Textelementen besteht, für die die Indizes 1, 2, 3 und 4 sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" /> ist kleiner als 0 (null).  
  
- oder - 
Die Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts angibt, ist eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Der nullbasierte Index eines Textelements in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt.</param>
        <param name="lengthInTextElements">Die Anzahl der abzurufenden Textelemente.</param>
        <summary>Ruft eine Teilzeichenfolge der Textelemente aus dem aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekt ab (beginnend am angegebenen Textelement bis zur angegebenen Anzahl der Textelemente).</summary>
        <returns>Eine Teilzeichenfolge der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt. Die Teilzeichenfolge besteht aus der Anzahl der vom <paramref name="lengthInTextElements" />-Parameter angegebenen Textelemente und beginnt bei dem Index des Textelements, der durch den <paramref name="startingTextElement" />-Parameter angegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Angenommen, eine Zeichenfolge besteht aus fünf Textelementen, die von 0 bis 4 indiziert werden. Wenn der `startingTextElement`-Parameter 1 und der `lengthInTextElements`-Parameter 3 ist, gibt die <xref:System.Globalization.StringInfo.SubstringByTextElements%2A>-Methode eine Teil Zeichenfolge zurück, die aus den Textelementen besteht, für die die Indizes 1, 2 und 3 sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" /> ist kleiner als 0 (null).  
  
- oder - 
 <paramref name="startingTextElement" /> ist gleich der oder größer als die Länge der Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts bildet.  
  
- oder - 
 <paramref name="lengthInTextElements" /> ist kleiner als 0 (null).  
  
- oder - 
Die Zeichenfolge, die den Wert des aktuellen <see cref="T:System.Globalization.StringInfo" />-Objekts angibt, ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> geben einen Index an, der die Anzahl der Textelemente in diesem <see cref="T:System.Globalization.StringInfo" />-Objekt übersteigt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
