<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbf8e17410599af369261ad8f54a24ddedaa1f83" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52375890" /></Metadata><TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6ada-101">Listet die Textelemente einer Zeichenfolge auf.</span><span class="sxs-lookup"><span data-stu-id="c6ada-101">Enumerates the text elements of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ada-102">.NET Framework definiert ein Textelement als eine Einheit der Text, der als ein einzelnes Zeichen, d. h. eine zwischen graphemgruppen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="c6ada-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="c6ada-103">Ein Textelement kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="c6ada-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="c6ada-104">Basiszeichen, der als ein einzelnes dargestellt wird <xref:System.Char> Wert.</span><span class="sxs-lookup"><span data-stu-id="c6ada-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="c6ada-105">Z. B. LATIN CAPITAL Buchstaben von A (U + 0041) und LATIN kleine Buchstabe AE (U + 00E6) sind Basiszeichen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="c6ada-106">Eine Kombination von Zeichenfolge, die aus einem Basiszeichen und mindestens eine Kombination von Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="c6ada-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="c6ada-107">Z. B. beispielsweise LATIN CAPITAL LETTER A (U + 0041) gefolgt von MACRON KOMBINIEREN (U + 0304) ist eine Kombination Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c6ada-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="c6ada-108">Ersatzpaare, die die [Unicode-Standard](https://go.microsoft.com/fwlink/?linkid=37123) definiert als eine codierte zeichendarstellung für ein einzelnes abstraktes Zeichen, das eine Sequenz von zwei Codeeinheiten besteht: ein hohes Ersatzzeichen ist, und ein niedriges Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-108">Surrogate pairs, which the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="c6ada-109">Ersatzzeichenpaare werden verwendet, um Zeichen außerhalb der grundlegenden vielsprachigen Ebene von Unicode-UTF-16-codierte Zeichen darzustellen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="c6ada-110">Beispielsweise wird GOTHIC Buchstaben SAUIL (U + 10343) in UTF-16-Codierung als ein hohes Ersatzzeichen, deren Wert 0xD800 ist, und ein niedriges Ersatzzeichen, deren Wert 0xdf43, dargestellt.</span><span class="sxs-lookup"><span data-stu-id="c6ada-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="c6ada-111">Ein Ersatzzeichenpaar kann es sich um ein Basiszeichen oder eine Kombination von Zeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="c6ada-112">Die <xref:System.Globalization.TextElementEnumerator> Klasse ermöglicht Ihnen die Arbeit mit die Textelemente einer Zeichenfolge anstatt mit einzelnen <xref:System.Char> Objekte.</span><span class="sxs-lookup"><span data-stu-id="c6ada-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="c6ada-113">Instanziieren Sie ein <xref:System.Globalization.TextElementEnumerator> Objekt, das eine bestimmte Zeichenfolge darstellt, übergeben Sie die Zeichenfolge, die die <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="c6ada-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c6ada-114">Dies gibt einen Enumerator, der vor dem ersten Textelement in der Zeichenfolge positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="c6ada-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="c6ada-115">Aufrufen der <xref:System.Globalization.TextElementEnumerator.Reset%2A> Methode setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="c6ada-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="c6ada-116">Da dies ein ungültiger Zustand ist, müssen Sie aufrufen <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> auf den Enumerator auf das erste Textelement der Zeichenfolge zu setzen, vor dem Lesen des Werts von der <xref:System.Globalization.TextElementEnumerator.Current%2A> Eigenschaft, um das aktuelle Textelement zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="c6ada-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="c6ada-117">Bei der Arbeit mit einem <xref:System.Globalization.TextElementEnumerator> Objekt, Sie sind verantwortlich für die Positionierung des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="c6ada-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="c6ada-118">Die <xref:System.Globalization.TextElementEnumerator.Current%2A> Eigenschaft gibt das Element mit demselben Text zurück, bis Sie entweder Aufrufen <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6ada-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="c6ada-119">Der Enumerator befindet sich in einem ungültigen Zustand, wenn er vor dem ersten Textelement oder hinter dem letzten Textelement in der Zeichenfolge positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="c6ada-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="c6ada-120">Wenn der Enumerator in einem ungültigen Zustand befindet, es wird versucht, zum Abrufen des Werts der <xref:System.Globalization.TextElementEnumerator.Current%2A> Eigenschaft löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c6ada-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="c6ada-121">Sie können bestimmen, ob der Enumerator in einem ungültigen Zustand durch testen, ob der Rückgabewert von der <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="c6ada-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="c6ada-122">Die <xref:System.Globalization.TextElementEnumerator> -Objekt stellt eine Momentaufnahme des aktuellen Zustands eines String-Variable oder ein Zeichenfolgenliteral zu dem Zeitpunkt dar, die die <xref:System.Globalization.TextElementEnumerator> -Objekt instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="c6ada-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="c6ada-123">Hinweis:</span><span class="sxs-lookup"><span data-stu-id="c6ada-123">Note that:</span></span>  
  
-   <span data-ttu-id="c6ada-124">Enumeratoren für Text-Element können nur verwendet werden, um Daten in einer Zeichenfolge zu lesen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="c6ada-125">Die zugrunde liegenden Zeichenfolge ändern nicht.</span><span class="sxs-lookup"><span data-stu-id="c6ada-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="c6ada-126">Ein Enumerator besitzt nicht exklusiven Zugriff auf die Zeichenfolge, die es darstellt.</span><span class="sxs-lookup"><span data-stu-id="c6ada-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="c6ada-127">Eine String-Variable kann geändert werden, nach der Erstellung des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="c6ada-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="c6ada-128">Ein <xref:System.Globalization.TextElementEnumerator> Objekt listet die Textelemente, die zum Zeitpunkt in der Zeichenfolge vorhanden, die die <xref:System.Globalization.TextElementEnumerator> Objekt instanziiert wurde.</span><span class="sxs-lookup"><span data-stu-id="c6ada-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="c6ada-129">Er berücksichtigt keine weiteren Änderungen an den String-Variable, wenn diese Variable anschließend geändert wird.</span><span class="sxs-lookup"><span data-stu-id="c6ada-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="c6ada-130">Da die <xref:System.Globalization.TextElementEnumerator> Klasse überschreibt nicht die <xref:System.Object.Equals%2A?displayProperty=nameWithType>zwei <xref:System.Globalization.TextElementEnumerator> dieselbe Zeichenfolge darstellende – Objekte werden als ungleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="c6ada-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6ada-131">Im folgenden Beispiel wird die <xref:System.Globalization.TextElementEnumerator> Klasse zum Aufzählen von die Textelemente einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c6ada-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6ada-132">Ruft das aktuelle Textelement in der Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="c6ada-132">Gets the current text element in the string.</span></span></summary>
        <value><span data-ttu-id="c6ada-133">Ein Objekt, das das aktuelle Textelement in der Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="c6ada-133">An object containing the current text element in the string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ada-134">Nach dem Erstellen eines Enumerators oder nach einem <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> muss aufgerufen werden, um den Enumerator auf das erste Textelement der Zeichenfolge vor dem Lesen des Werts von <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c6ada-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="c6ada-135">Andernfalls <xref:System.Globalization.TextElementEnumerator.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="c6ada-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="c6ada-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> Außerdem löst eine Ausnahme aus, wenn der letzte Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zurückgegeben `false`, die das Ende der Zeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="c6ada-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="c6ada-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> Verschiebt die Position des Enumerators und aufeinander folgende Aufrufe von nicht <xref:System.Globalization.TextElementEnumerator.Current%2A> dasselbe Objekt zurück, bis entweder <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> oder <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c6ada-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6ada-138">Der Enumerator ist vor dem ersten Textelement oder hinter dem letzten Textelement der Zeichenfolge positioniert.</span><span class="sxs-lookup"><span data-stu-id="c6ada-138">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6ada-139">Ruft den Index des Textelements ab, über dem sich der Enumerator gerade befindet.</span><span class="sxs-lookup"><span data-stu-id="c6ada-139">Gets the index of the text element that the enumerator is currently positioned over.</span></span></summary>
        <value><span data-ttu-id="c6ada-140">Der Index des Textelements, über dem sich der Enumerator gerade befindet.</span><span class="sxs-lookup"><span data-stu-id="c6ada-140">The index of the text element that the enumerator is currently positioned over.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6ada-141">Der Enumerator ist vor dem ersten Textelement oder hinter dem letzten Textelement der Zeichenfolge positioniert.</span><span class="sxs-lookup"><span data-stu-id="c6ada-141">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6ada-142">Ruft das aktuelle Textelement in der Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="c6ada-142">Gets the current text element in the string.</span></span></summary>
        <returns><span data-ttu-id="c6ada-143">Eine neue Zeichenfolge, die das aktuelle Textelement aus der gerade gelesenen Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="c6ada-143">A new string containing the current text element in the string being read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ada-144">Diese Methode gibt zurück, das gleiche Textelement, wie die <xref:System.Globalization.TextElementEnumerator.Current%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c6ada-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6ada-145">Der Enumerator ist vor dem ersten Textelement oder hinter dem letzten Textelement der Zeichenfolge positioniert.</span><span class="sxs-lookup"><span data-stu-id="c6ada-145">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6ada-146">Setzt den Enumerator auf das nächste Textelement der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c6ada-146">Advances the enumerator to the next text element of the string.</span></span></summary>
        <returns><span data-ttu-id="c6ada-147"><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Textelement gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Zeichenfolge überschritten hat.</span><span class="sxs-lookup"><span data-stu-id="c6ada-147"><see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ada-148">Nach dem Erstellen eines Enumerators oder nach einem <xref:System.Globalization.TextElementEnumerator.Reset%2A> wird aufgerufen, der Enumerator wird vor dem ersten Textelement der Zeichenfolge und der erste Aufruf <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> setzt den Enumerator auf das erste Textelement der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c6ada-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="c6ada-149">Wenn die Zeichenfolge geändert wird, nach dem Erstellen des Enumerators, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c6ada-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="c6ada-150">Nach das Ende der Zeichenfolge übergeben, schlagen nachfolgende Aufrufe ist <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> zurückgeben `false` bis <xref:System.Globalization.TextElementEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c6ada-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6ada-151">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Textelement in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c6ada-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6ada-152">Die <xref:System.Globalization.TextElementEnumerator.Reset%2A> Methode verschiebt den Enumerator auf den Anfang der Zeichenfolge ist, bevor Sie das erste Textelement.</span><span class="sxs-lookup"><span data-stu-id="c6ada-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="c6ada-153">Nach dem Aufruf <xref:System.Globalization.TextElementEnumerator.Reset%2A>, rufen Sie <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> auf das erste Textelement der Zeichenfolge vor dem Aufruf den Enumerator <xref:System.Globalization.TextElementEnumerator.Current%2A> , den Wert des ersten Textelements lesen.</span><span class="sxs-lookup"><span data-stu-id="c6ada-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>