<Type Name="CompareOptions" FullName="System.Globalization.CompareOptions">
  <TypeSignature Language="C#" Value="public enum CompareOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CompareOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum CompareOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class CompareOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f99e4-101">Definiert die mit <see cref="T:System.Globalization.CompareInfo" /> zu verwendenden Optionen für den Zeichenfolgenvergleich.</span><span class="sxs-lookup"><span data-stu-id="f99e4-101">Defines the string comparison options to use with <see cref="T:System.Globalization.CompareInfo" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99e4-102">Diese Optionen geben an, Groß-/Kleinschreibung oder die Notwendigkeit, um Zeichen zu ignorieren.</span><span class="sxs-lookup"><span data-stu-id="f99e4-102">These options denote case sensitivity or necessity to ignore types of characters.</span></span>  
  
 <span data-ttu-id="f99e4-103">.NET Framework verwendet drei unterschiedliche Arten der Sortierung: Sortieren, Zeichenfolge sortieren und Ordinalsortierung in word.</span><span class="sxs-lookup"><span data-stu-id="f99e4-103">The .NET Framework uses three distinct ways of sorting: word sort, string sort, and ordinal sort.</span></span> <span data-ttu-id="f99e4-104">Word sortieren führt einen kulturabhängigen Vergleich von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="f99e4-104">Word sort performs a culture-sensitive comparison of strings.</span></span> <span data-ttu-id="f99e4-105">Bestimmte nicht alphanumerischen Zeichen möglicherweise bestimmte Gewichtungen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="f99e4-105">Certain nonalphanumeric characters might have special weights assigned to them.</span></span> <span data-ttu-id="f99e4-106">Beispielsweise wird dem Bindestrich ("-") ggf. eine sehr geringe Gewichtung zugeordnet, sodass "coop" und "co-op" in einer sortierten Liste nebeneinander angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-106">For example, the hyphen ("-") might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</span></span> <span data-ttu-id="f99e4-107">Zeichenfolge Sortieren ähnelt Word sortieren, mit dem Unterschied, dass keine besondere Fälle vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="f99e4-107">String sort is similar to word sort, except that there are no special cases.</span></span> <span data-ttu-id="f99e4-108">Aus diesem Grund sind alle nicht alphanumerische Symbole vor den alphanumerischen Zeichen ein.</span><span class="sxs-lookup"><span data-stu-id="f99e4-108">Therefore, all nonalphanumeric symbols come before all alphanumeric characters.</span></span> <span data-ttu-id="f99e4-109">Ordinalsortierung vergleicht Zeichenfolgen anhand der Unicode-Werte jedes Element der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="f99e4-109">Ordinal sort compares strings based on the Unicode values of each element of the string.</span></span>  
  
 <span data-ttu-id="f99e4-110">Der Wert StringSort kann nur verwendet werden, mit <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> und <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f99e4-110">The StringSort value can only be used with <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> and <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f99e4-111"><xref:System.ArgumentException> wird ausgelöst, wenn der StringSort-Wert verwendet wird, mit <xref:System.Globalization.CompareInfo.IsPrefix%2A?displayProperty=nameWithType>, <xref:System.Globalization.CompareInfo.IsSuffix%2A?displayProperty=nameWithType>, <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, oder <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f99e4-111"><xref:System.ArgumentException> is thrown if the StringSort value is used with <xref:System.Globalization.CompareInfo.IsPrefix%2A?displayProperty=nameWithType>, <xref:System.Globalization.CompareInfo.IsSuffix%2A?displayProperty=nameWithType>, <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, or <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f99e4-112">Nach Möglichkeit die Anwendung die zu verwendende Methoden zum Zeichenfolgenvergleich, die akzeptieren einen <xref:System.Globalization.CompareOptions> Wert, der Art von Vergleich erwartet anzugeben.</span><span class="sxs-lookup"><span data-stu-id="f99e4-112">When possible, the application should use string comparison methods that accept a <xref:System.Globalization.CompareOptions> value to specify the kind of comparison expected.</span></span> <span data-ttu-id="f99e4-113">Als allgemeine Regel benutzerseitige Vergleiche am besten erfüllt werden durch die Verwendung von linguistischen Optionen (mit der aktuellen Kultur), und die Sicherheit sollten Vergleiche Ordinal oder OrdinalIgnoreCase angeben.</span><span class="sxs-lookup"><span data-stu-id="f99e4-113">As a general rule, user-facing comparisons are best served by the use of linguistic options (using the current culture), while security comparisons should specify Ordinal or OrdinalIgnoreCase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99e4-114">Im folgenden Codebeispiel wird veranschaulicht, wie der Sortierung mit StringSort unterscheidet sich von Sortierung ohne StringSort.</span><span class="sxs-lookup"><span data-stu-id="f99e4-114">The following code example shows how sorting with StringSort differs from sorting without StringSort.</span></span>  
  
 [!code-cpp[System.Globalization.CompareOptions.StringSort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareOptions.StringSort/CPP/compareoptions_stringsort.cpp#1)]
 [!code-csharp[System.Globalization.CompareOptions.StringSort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareOptions.StringSort/CS/compareoptions_stringsort.cs#1)]
 [!code-vb[System.Globalization.CompareOptions.StringSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareOptions.StringSort/VB/compareoptions_stringsort.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions IgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="IgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-115">Gibt an, dass beim Zeichenfolgenvergleich die Groß- und Kleinschreibung nicht beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="f99e4-115">Indicates that the string comparison must ignore case.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreKanaType">
      <MemberSignature Language="C#" Value="IgnoreKanaType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions IgnoreKanaType = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.IgnoreKanaType" />
      <MemberSignature Language="VB.NET" Value="IgnoreKanaType" />
      <MemberSignature Language="C++ CLI" Value="IgnoreKanaType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-116">Gibt an, dass beim Zeichenfolgenvergleich Zeichen vom Typ Kana ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-116">Indicates that the string comparison must ignore the Kana type.</span></span> <span data-ttu-id="f99e4-117">Der Kana-Zeichentyp bezieht sich auf die japanischen Hiragana- und Katakana-Schriftzeichen, die im Japanischen phonetische Laute darstellen.</span><span class="sxs-lookup"><span data-stu-id="f99e4-117">Kana type refers to Japanese hiragana and katakana characters, which represent phonetic sounds in the Japanese language.</span></span> <span data-ttu-id="f99e4-118">Hiragana wird für japanische Ausdrücke und Wörter verwendet, während Katakana für Lehnwörter aus anderen Sprachen, z. B. "Computer" oder "Internet", verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="f99e4-118">Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet".</span></span> <span data-ttu-id="f99e4-119">Ein phonetischer Laut kann sowohl in Hiragana als auch in Katakana dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-119">A phonetic sound can be expressed in both hiragana and katakana.</span></span> <span data-ttu-id="f99e4-120">Wenn dieser Wert ausgewählt ist, wird das Hiragana-Zeichen für einen Laut als gleichwertig mit dem Katakana-Zeichen für denselben Laut betrachtet.</span><span class="sxs-lookup"><span data-stu-id="f99e4-120">If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreNonSpace">
      <MemberSignature Language="C#" Value="IgnoreNonSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions IgnoreNonSpace = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.IgnoreNonSpace" />
      <MemberSignature Language="VB.NET" Value="IgnoreNonSpace" />
      <MemberSignature Language="C++ CLI" Value="IgnoreNonSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-121">Gibt an, dass bei Zeichenfolgenvergleichen Kombinationszeichen ohne horizontalen Vorschub, z. B. diakritische Zeichen, ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-121">Indicates that the string comparison must ignore nonspacing combining characters, such as diacritics.</span></span> <span data-ttu-id="f99e4-122">Der [Unicode-Standard](http://go.microsoft.com/fwlink/?linkid=37123) definiert Kombinationszeichen als Zeichen, die mit Basiszeichen kombiniert werden, um ein neues Zeichen zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="f99e4-122">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines combining characters as characters that are combined with base characters to produce a new character.</span></span> <span data-ttu-id="f99e4-123">Kombinationszeichen ohne horizontalen Vorschub nehmen bei der Darstellung keinen über die Breite des Basiszeichens hinausgehenden Platz ein.</span><span class="sxs-lookup"><span data-stu-id="f99e4-123">Nonspacing combining characters do not occupy a spacing position by themselves when rendered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSymbols">
      <MemberSignature Language="C#" Value="IgnoreSymbols" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions IgnoreSymbols = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.IgnoreSymbols" />
      <MemberSignature Language="VB.NET" Value="IgnoreSymbols" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSymbols" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-124">Gibt an, dass der Zeichenfolgenvergleich Symbole ignorieren muss, z.B. Leerräume, Satzzeichen, Währungssymbole, das Prozentzeichen, mathematische Symbole, das kaufmännische Und usw.</span><span class="sxs-lookup"><span data-stu-id="f99e4-124">Indicates that the string comparison must ignore symbols, such as white-space characters, punctuation, currency symbols, the percent sign, mathematical symbols, the ampersand, and so on.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreWidth">
      <MemberSignature Language="C#" Value="IgnoreWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions IgnoreWidth = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.IgnoreWidth" />
      <MemberSignature Language="VB.NET" Value="IgnoreWidth" />
      <MemberSignature Language="C++ CLI" Value="IgnoreWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-125">Gibt an, dass beim Zeichenfolgenvergleich die Zeichenbreite ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="f99e4-125">Indicates that the string comparison must ignore the character width.</span></span> <span data-ttu-id="f99e4-126">Japanische Katakana-Zeichen können z. B. in voller oder halber Breite geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-126">For example, Japanese katakana characters can be written as full-width or half-width.</span></span> <span data-ttu-id="f99e4-127">Wenn dieser Wert ausgewählt ist, werden die in voller Breite geschriebenen Katakana-Zeichen als denselben in halber Breite geschriebenen Zeichen gleichwertig betrachtet.</span><span class="sxs-lookup"><span data-stu-id="f99e4-127">If this value is selected, the katakana characters written as full-width are considered equal to the same characters written as half-width.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-128">Gibt die Standardeinstellungen der Optionen für Zeichenfolgenvergleiche an.</span><span class="sxs-lookup"><span data-stu-id="f99e4-128">Indicates the default option settings for string comparisons.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="Ordinal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions Ordinal = int32(1073741824)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Ordinal" />
      <MemberSignature Language="C++ CLI" Value="Ordinal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1073741824</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-129">Gibt an, dass der Zeichenfolgenvergleich aufeinanderfolgende Unicode UTF-16-codierte Werte der Zeichenfolge verwenden muss (Vergleich von Codeeinheiten). Dies führt zu einem schnellen, jedoch kulturunabhängigen Vergleich.</span><span class="sxs-lookup"><span data-stu-id="f99e4-129">Indicates that the string comparison must use successive Unicode UTF-16 encoded values of the string (code unit by code unit comparison), leading to a fast comparison but one that is culture-insensitive.</span></span> <span data-ttu-id="f99e4-130">Eine Zeichenfolge, die mit der Codeeinheit „XXXX16“ beginnt, kommt vor einer Zeichenfolge, die mit „YYYY16“ beginnt, wenn XXXX16 kleiner als YYYY16 ist.</span><span class="sxs-lookup"><span data-stu-id="f99e4-130">A string starting with a code unit XXXX16 comes before a string starting with YYYY16, if XXXX16 is less than YYYY16.</span></span> <span data-ttu-id="f99e4-131">Dieser Wert kann nicht mit anderen <see cref="T:System.Globalization.CompareOptions" />-Werten kombiniert werden und muss allein verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f99e4-131">This value cannot be combined with other <see cref="T:System.Globalization.CompareOptions" /> values and must be used alone.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions OrdinalIgnoreCase = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="OrdinalIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-132">Beim Zeichenfolgenvergleich darf die Groß- und Kleinschreibung nicht berücksichtigt werden, und anschließend muss ein ordinaler Vergleich erfolgen.</span><span class="sxs-lookup"><span data-stu-id="f99e4-132">String comparison must ignore case, then perform an ordinal comparison.</span></span> <span data-ttu-id="f99e4-133">Dieses Verfahren entspricht dem Konvertieren der Zeichenfolge in Großbuchstaben mithilfe der invarianten Kultur und dem anschließenden Ordinalvergleich mit dem Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="f99e4-133">This technique is equivalent to converting the string to uppercase using the invariant culture and then performing an ordinal comparison on the result.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StringSort">
      <MemberSignature Language="C#" Value="StringSort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Globalization.CompareOptions StringSort = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.CompareOptions.StringSort" />
      <MemberSignature Language="VB.NET" Value="StringSort" />
      <MemberSignature Language="C++ CLI" Value="StringSort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f99e4-134">Gibt an, dass beim Zeichenfolgenvergleich der Zeichenfolgensortieralgorithmus verwendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="f99e4-134">Indicates that the string comparison must use the string sort algorithm.</span></span> <span data-ttu-id="f99e4-135">Bei der Zeichenfolgensortierung werden Bindestriche und Apostrophe sowie andere nicht alphanumerische Symbole vor alphanumerischen Zeichen aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="f99e4-135">In a string sort, the hyphen and the apostrophe, as well as other nonalphanumeric symbols, come before alphanumeric characters.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>