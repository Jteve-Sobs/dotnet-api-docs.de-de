<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8f17855cb4211ea5e20648dddaa2f645dd65cd8" /><Meta Name="ms.sourcegitcommit" Value="81ab118287bf69d10df7204c332592eac20b1b60" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2019" /><Meta Name="ms.locfileid" Value="75003779" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt kulturabhängige Informationen zum Format von Datum und Zeitangaben bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften der <xref:System.Globalization.DateTimeFormatInfo> Klasse enthalten kulturspezifische Informationen zum Formatieren oder zum Formatieren von Datums-und Uhrzeitwerten wie den folgenden:  
  
-   Die Muster zum Formatieren von Datums Werten.  
  
-   Die zum Formatieren von Zeitwerten verwendeten Muster.  
  
-   Die Namen der Wochentage.  
  
-   Die Namen der Monate des Jahrs.  
  
-   Der Uhr und PM in Zeitwerten verwendete Kenn Zeichner.  
  
-   Der Kalender, in dem Datumsangaben ausgedrückt werden.  
  
 In diesem Abschnitt  
  
-   [Instanziieren eines DateTimeFormatInfo-Objekts](#instantiating)  
  
    -   [Für die invariante Kultur](#instantiating_Invariant)  
  
    -   [Für eine bestimmte Kultur](#instantiating_Specific)  
  
    -   [Für eine neutrale Kultur](#instantiating_neutral)  
  
    -   [Für die aktuelle Kultur](#instantiating_Current)  
  
-   [DateTimeFormatInfo und Dynamic Data](#dynamic)  
  
-   [Formatieren von Datum und Zeit](#Formatting_dates_times)  
  
-   [Format Zeichenfolgen und DateTimeFormatInfo-Eigenschaften](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Ändern von DateTimeFormatInfo-Eigenschaften](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Instanziieren eines DateTimeFormatInfo-Objekts  
 Ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt kann die Formatierungs Konventionen der invarianten Kultur, einer bestimmten Kultur, einer neutralen Kultur oder der aktuellen Kultur darstellen. In diesem Abschnitt wird erläutert, wie die einzelnen <xref:System.Globalization.DateTimeFormatInfo> Objekttyp instanziiert werden.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für die invariante Kultur  
 Die invariante Kultur stellt eine Kultur dar, die Kultur unabhängig ist. Es basiert auf der englischen Sprache, aber nicht auf einem bestimmten englischsprachigen Land/einer bestimmten Region. Obwohl die Daten bestimmter Kulturen dynamisch sein können und sich ändern können, um neue Kultur Konventionen oder Benutzereinstellungen widerzuspiegeln, ändern sich die Daten der invarianten Kultur nicht. Sie können ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungs Konventionen der invarianten Kultur darstellt, auf folgende Weise instanziieren:  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>-Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Aufrufen des Parameter losen <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> Konstruktors. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist Lese-/Schreibzugriff.  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>-Eigenschaft aus dem <xref:System.Globalization.CultureInfo> Objekt, das von der <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
 Im folgenden Beispiel wird jede dieser Methoden verwendet, um ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt zu instanziieren, das die invariante Kultur darstellt. Anschließend gibt es an, ob das Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für eine bestimmte Kultur  
 Eine bestimmte Kultur stellt eine Sprache dar, die in einem bestimmten Land oder einer bestimmten Region gesprochen wird. Beispielsweise ist "en-US" eine bestimmte Kultur, die die in der USA gesprochene Englische Sprache darstellt, und "en-ca" ist eine bestimmte Kultur, die die in Kanada gesprochene Englische Sprache darstellt. Sie können ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungs Konventionen einer bestimmten Kultur darstellt, auf folgende Weise instanziieren:  
  
-   Durch Aufrufen der <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType>-Methode und Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft des zurückgegebenen <xref:System.Globalization.CultureInfo> Objekts. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch übergeben der statischen <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>-Methode ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, deren <xref:System.Globalization.DateTimeFormatInfo> Objekt Sie abrufen möchten. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist Lese-/Schreibzugriff.  
  
-   Durch Aufrufen der statischen <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>-Methode und Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft des zurückgegebenen <xref:System.Globalization.CultureInfo> Objekts. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist Lese-/Schreibzugriff.  
  
-   Durch Aufrufen des <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>-Klassenkonstruktors und Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft des zurückgegebenen <xref:System.Globalization.CultureInfo> Objekts. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist Lese-/Schreibzugriff.  
  
 Das folgende Beispiel veranschaulicht jede dieser Möglichkeiten zum Instanziieren eines <xref:System.Globalization.DateTimeFormatInfo> Objekts und gibt an, ob das resultierende Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für eine neutrale Kultur  
 Eine neutrale Kultur stellt eine Kultur oder Sprache dar, die unabhängig von einem Land bzw. einer Region ist. Es ist in der Regel das übergeordnete Element einer oder mehrerer spezifischer Kulturen. Beispielsweise ist fr eine neutrale Kultur für die französische Sprache und das übergeordnete Element der fr-FR-Kultur. Sie können ein <xref:System.Globalization.DateTimeFormatInfo> Objekt instanziieren, das die Formatierungs Konventionen einer neutralen Kultur auf die gleiche Weise darstellt wie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungs Konventionen einer bestimmten Kultur darstellt. Außerdem können Sie das <xref:System.Globalization.DateTimeFormatInfo> Objekt einer neutralen Kultur abrufen, indem Sie eine neutrale Kultur aus der <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType>-Eigenschaft einer bestimmten Kultur abrufen und das <xref:System.Globalization.DateTimeFormatInfo> Objekt abrufen, das von der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Wenn die übergeordnete Kultur nicht die invariante Kultur darstellt, ist das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt Lese-/Schreibzugriff. Im folgenden Beispiel werden diese Methoden zum Instanziieren eines <xref:System.Globalization.DateTimeFormatInfo> Objekts veranschaulicht, das eine neutrale Kultur darstellt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  In den .NET Framework, Versionen 1,0 bis [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], wird beim Versuch, ein <xref:System.Globalization.DateTimeFormatInfo> Objekt abzurufen, das die Formatierungs Konventionen einer neutralen Kultur widerspiegelt, eine <xref:System.NotSupportedException> Ausnahme ausgelöst.  
  
 Bei einer neutralen Kultur gibt es jedoch keine kulturspezifischen Formatierungsinformationen, da Sie von einem bestimmten Land/einer bestimmten Region unabhängig ist. Anstatt das <xref:System.Globalization.DateTimeFormatInfo> Objekt mit generischen Werten aufzufüllen, gibt die .NET Framework ein <xref:System.Globalization.DateTimeFormatInfo> Objekt zurück, das die Formatierungs Konventionen einer bestimmten Kultur widerspiegelt, die ein untergeordnetes Element der neutralen Kultur ist. Beispielsweise spiegelt das <xref:System.Globalization.DateTimeFormatInfo>-Objekt für die neutrale Kultur "en-US" die Formatierungs Konventionen der Kultur "en-US" wider, und das <xref:System.Globalization.DateTimeFormatInfo> Objekt für die Kultur "fr" gibt die Formatierungs Konventionen der Kultur "fr-FR" wieder.  
  
 Sie können Code wie den folgenden verwenden, um zu bestimmen, welche Formatierungs Konventionen der jeweiligen Kultur eine neutrale Kultur darstellt. Im Beispiel wird Reflektion verwendet, um die <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften einer neutralen Kultur mit den Eigenschaften einer bestimmten untergeordneten Kultur zu vergleichen. Dabei werden zwei Kalender als gleichwertig betrachtet, wenn Sie denselben Kalendertyp aufweisen, und bei Gregorianischen Kalendern, wenn Ihre <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> Eigenschaften identische Werte aufweisen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für die aktuelle Kultur  
 Sie können ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungs Konventionen der aktuellen Kultur darstellt, auf folgende Weise instanziieren:  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>-Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>-Eigenschaft aus dem <xref:System.Globalization.CultureInfo> Objekt, das von der <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Aufrufen der <xref:System.Globalization.NumberFormatInfo.GetInstance%2A>-Methode mit einem <xref:System.Globalization.CultureInfo>-Objekt, das die aktuelle Kultur darstellt. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
 Im folgenden Beispiel wird jede dieser Methoden verwendet, um ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt zu instanziieren, das die Formatierungs Konventionen der aktuellen Kultur darstellt. Anschließend gibt es an, ob das Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Sie können mit einer der folgenden Methoden ein beschreibbares <xref:System.Globalization.DateTimeFormatInfo> Objekt erstellen, das die Konventionen der aktuellen Thread Kultur darstellt:  
  
-   Durch Abrufen eines <xref:System.Globalization.DateTimeFormatInfo> Objekts in einer der drei vorherigen Methoden und Aufrufen der <xref:System.Globalization.DateTimeFormatInfo.Clone%2A>-Methode für das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt. Dadurch wird eine Kopie des ursprünglichen <xref:System.Globalization.DateTimeFormatInfo> Objekts erstellt, mit der Ausnahme, dass die <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>-Eigenschaft `false`ist.  
  
-   Durch Aufrufen der <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>-Methode zum Erstellen eines <xref:System.Globalization.CultureInfo> Objekts, das die aktuelle Kultur darstellt, und anschließendes Verwenden der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft zum Abrufen des <xref:System.Globalization.DateTimeFormatInfo> Objekts.  
  
 Das folgende Beispiel veranschaulicht jede Methode zum Instanziieren eines Lese-/Schreib<xref:System.Globalization.DateTimeFormatInfo> Objekts und zeigt den Wert seiner <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>-Eigenschaft an.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 In Windows kann der Benutzer einige der <xref:System.Globalization.DateTimeFormatInfo> Eigenschaftswerte, die bei Formatierungs-und Verarbeitungsvorgängen verwendet werden, über die **Regions-und sprach** Anwendung in der Systemsteuerung überschreiben. Ein Benutzer, dessen Kultur Englisch (USA) ist, kann z. b. die Verwendung eines 24-Stunden-Tags (im Format hh: mm: SS) anstelle der standardmäßigen 12-Stunden-Uhrzeit (im Format h:mm: SS TT) zum Anzeigen von langen Zeitwerten wählen. Die <xref:System.Globalization.DateTimeFormatInfo>-Objekte, die in den zuvor erläuterten Methoden abgerufen wurden, spiegeln diese Benutzer Überschreibungen wider. Wenn dies nicht erwünscht ist, können Sie ein <xref:System.Globalization.NumberFormatInfo> Objekt erstellen, das keine Benutzer Überschreibungen widerspiegelt (und auch Lese-/Schreibzugriff anstelle von schreibgeschützt ist), indem Sie den <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Konstruktor aufrufen und den Wert `false` für das `useUserOverride`-Argument bereitstellen. Das folgende Beispiel veranschaulicht dies für ein System, dessen aktuelle Kultur Englisch (USA) und dessen langes Muster von der Standardeinstellung h:mm: ss tt in hh: mm: SS geändert wurde.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo und Dynamic Data  
 Die kulturspezifischen Daten zum Formatieren von Datums-und Uhrzeitwerten, die von der <xref:System.Globalization.DateTimeFormatInfo>-Klasse bereitgestellt werden, sind dynamisch, ebenso wie die von der <xref:System.Globalization.CultureInfo>-Klasse bereitgestellten Kultur Sie sollten keine Annahmen über die Stabilität von Werten für <xref:System.Globalization.DateTimeFormatInfo> Objekten treffen, die bestimmten <xref:System.Globalization.CultureInfo> Objekten zugeordnet sind. Nur die Daten, die von der invarianten Kultur und der zugehörigen <xref:System.Globalization.DateTimeFormatInfo> Objekt bereitgestellt werden, sind stabil. Andere Daten können sich zwischen Anwendungs Sitzungen oder sogar während der Ausführung der Anwendung ändern. Es gibt vier wichtige Änderungs Quellen:  
  
-   System Updates. Kulturelle Einstellungen wie der bevorzugte Kalender oder die üblichen Datums-und Uhrzeit Formate ändern sich im Laufe der Zeit. In diesem Fall enthält Windows Update Änderungen am <xref:System.Globalization.DateTimeFormatInfo>-Eigenschafts Wert für eine bestimmte Kultur.  
  
-   Ersetzungs Kulturen. Die <xref:System.Globalization.CultureAndRegionInfoBuilder>-Klasse kann verwendet werden, um die Daten einer vorhandenen Kultur zu ersetzen.  
  
-   Kaskadierende Änderungen an Eigenschafts Werten. Eine Reihe von kulturbezogenen Eigenschaften kann zur Laufzeit geändert werden, was wiederum bewirkt, dass sich <xref:System.Globalization.DateTimeFormatInfo> Daten ändern. Beispielsweise kann die aktuelle Kultur entweder Programm gesteuert oder durch eine Benutzeraktion geändert werden. In diesem Fall ändert sich das <xref:System.Globalization.DateTimeFormatInfo> Objekt, das von der <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>-Eigenschaft zurückgegeben wird, in ein Objekt, das der aktuellen Kultur zugeordnet ist. Ebenso kann der Kalender einer Kultur geändert werden, was zu Änderungen an zahlreichen <xref:System.Globalization.DateTimeFormatInfo> Eigenschafts Werten führen kann.  
  
-   Benutzereinstellungen. Benutzer Ihrer Anwendung können mithilfe der Regions-und Sprachoptionen in der Systemsteuerung einige der Werte überschreiben, die mit der aktuellen System Kultur verknüpft sind. Beispielsweise können Benutzer das Datum in einem anderen Format anzeigen. Wenn die <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType>-Eigenschaft auf `true`festgelegt ist, werden die Eigenschaften des <xref:System.Globalization.DateTimeFormatInfo>-Objekts auch aus den Benutzereinstellungen abgerufen. Wenn die Benutzereinstellungen mit der Kultur, die dem <xref:System.Globalization.CultureInfo> Objekt zugeordnet ist, nicht kompatibel sind (wenn der ausgewählte Kalender z. b. keiner der Kalender ist, der durch die <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>-Eigenschaft angegeben ist), sind die Ergebnisse der Methoden und die Werte der Eigenschaften nicht definiert.  
  
 Um die Möglichkeit inkonsistenter Daten zu minimieren, werden alle vom Benutzer über schreibbaren Eigenschaften eines <xref:System.Globalization.DateTimeFormatInfo> Objekts initialisiert, wenn das Objekt erstellt wird. Es besteht immer noch die Möglichkeit, Inkonsistenzen zu sein, da weder die Objekt Erstellung noch der Benutzer Überschreibungs Prozess atomarisch ist und sich die relevanten Werte während der Objekt Erstellung ändern Diese Situation sollte jedoch sehr selten auftreten.  
  
 Sie können steuern, ob Benutzer Überschreibungen in <xref:System.Globalization.DateTimeFormatInfo> Objekten reflektiert werden, die dieselbe Kultur wie die System Kultur darstellen. In der folgenden Tabelle sind die Methoden aufgeführt, mit denen ein <xref:System.Globalization.DateTimeFormatInfo> Objekt abgerufen werden kann, und es wird angegeben, ob das resultierende Objekt Benutzer Überschreibungen widerspiegelt.  
  
|Quelle des CultureInfo-Objekts und des DateTimeFormatInfo-Objekts|Spiegelt Benutzer Überschreibungen wider|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat` -Eigenschaft|Ja|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> -Eigenschaft|Ja|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>-Methode|Ja|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>-Methode|Nein|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>-Konstruktor|Ja|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Konstruktor|Hängt vom Wert `useUserOverride` Parameters ab.|  
  
 Sofern es keinen überzeugenden Grund dafür gibt, sollten Sie Benutzer Überschreibungen beachten, wenn Sie das <xref:System.Globalization.DateTimeFormatInfo>-Objekt in Client Anwendungen zum Formatieren und Analysieren von Benutzereingaben oder zum Anzeigen von Daten verwenden. Für Server Anwendungen oder unbeaufsichtigte Anwendungen sollten Sie dies nicht tun. Wenn Sie jedoch das <xref:System.Globalization.DateTimeFormatInfo> Objekt entweder explizit oder implizit verwenden, um Datums-und Uhrzeitdaten im Zeichen folgen Format beizubehalten, sollten Sie entweder ein <xref:System.Globalization.DateTimeFormatInfo> Objekt verwenden, das die Formatierungs Konventionen der invarianten Kultur widerspiegelt, oder Sie sollten eine benutzerdefinierte Format Zeichenfolge für Datum und Uhrzeit angeben, die Sie unabhängig von der Kultur verwenden.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatieren von Datum und Zeit  
 Ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt wird implizit oder explizit in allen Datums-und Uhrzeit Formatierungs Vorgängen verwendet. Hierzu gehören auch Aufrufe der folgenden Methoden:  
  
-   Alle Formatierungs Methoden für Datum und Uhrzeit, z. b. <xref:System.DateTime.ToString?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Die Hauptmethode für die kombinierte Formatierung, die <xref:System.String.Format%2A?displayProperty=nameWithType>ist.  
  
-   Andere Methoden für die kombinierte Formatierung, z. b. <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> und <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Bei allen Formatierungs Vorgängen für Datum und Uhrzeit wird eine <xref:System.IFormatProvider>-Implementierung verwendet. Die <xref:System.IFormatProvider>-Schnittstelle enthält eine einzige Methode, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Dieser Rückruf Methode wird ein <xref:System.Type> Objekt übermittelt, das den zum Bereitstellen von Formatierungsinformationen erforderlichen Typ darstellt. Die-Methode gibt entweder eine Instanz dieses Typs oder `null` zurück, wenn keine Instanz des Typs bereitgestellt werden kann. Die .NET Framework umfasst zwei <xref:System.IFormatProvider> Implementierungen zum Formatieren von Datums-und Uhrzeitwerten:  
  
-   Die <xref:System.Globalization.CultureInfo>-Klasse, die eine bestimmte Kultur (oder eine bestimmte Sprache in einem bestimmten Land oder einer bestimmten Region) darstellt. In einem Formatierungs Vorgang für Datum und Uhrzeit gibt die <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType>-Methode das <xref:System.Globalization.DateTimeFormatInfo>-Objekt zurück, das der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft zugeordnet ist.  
  
-   Die <xref:System.Globalization.DateTimeFormatInfo>-Klasse, die Informationen zu den Formatierungs Konventionen der zugeordneten Kultur bereitstellt. Die <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType>-Methode gibt eine Instanz von sich selbst zurück.  
  
 Wenn eine <xref:System.IFormatProvider> Implementierung nicht explizit für eine Formatierungs Methode bereitgestellt wird, wird das <xref:System.Globalization.CultureInfo> Objekt verwendet, das von der <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird, die die aktuelle Thread Kultur darstellt.  
  
 Im folgenden Beispiel wird die Beziehung zwischen der <xref:System.IFormatProvider>-Schnittstelle und der <xref:System.Globalization.DateTimeFormatInfo>-Klasse in Formatierungs Vorgängen veranschaulicht. Es definiert eine benutzerdefinierte <xref:System.IFormatProvider>-Implementierung, deren <xref:System.IFormatProvider.GetFormat%2A> Methode den Typ des Objekts anzeigt, das vom Formatierungs Vorgang angefordert wird. Wenn Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt anfordert, stellt die-Methode das <xref:System.Globalization.DateTimeFormatInfo>-Objekt für die aktuelle Thread Kultur bereit. Wie die Ausgabe des Beispiels zeigt, fordert die <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>-Methode ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt an, um Formatierungsinformationen bereitzustellen, während die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>-Methode <xref:System.Globalization.NumberFormatInfo>-und <xref:System.Globalization.DateTimeFormatInfo>-Objekte sowie eine <xref:System.ICustomFormatter>-Implementierung anfordert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Format Zeichenfolgen und DateTimeFormatInfo-Eigenschaften  
 Das <xref:System.Globalization.DateTimeFormatInfo>-Objekt enthält drei Arten von Eigenschaften, die bei Formatierungs Vorgängen mit Datums-und Uhrzeitwerten verwendet werden:  
  
-   Kalender bezogene Eigenschaften. Eigenschaften wie <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>und <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>werden dem von der Kultur verwendeten Kalender zugeordnet, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird. Diese Eigenschaften werden für lange Datums-und Uhrzeit Formate verwendet.  
  
-   Eigenschaften, die eine Standard definierte Ergebnis Zeichenfolge bilden. Die Eigenschaften <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>und <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> enthalten benutzerdefinierte Format Zeichenfolgen, die durch internationale Standards definierte Ergebnis Zeichenfolgen liefern. Diese Eigenschaften sind schreibgeschützt und können nicht geändert werden.  
  
-   Eigenschaften, die Kultur abhängige Ergebnis Zeichenfolgen definieren. Einige Eigenschaften, z. b. <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, enthalten [benutzerdefinierte Format](~/docs/standard/base-types/custom-date-and-time-format-strings.md) Zeichenfolgen, die das Format der Ergebnis Zeichenfolge angeben. Andere, wie z. b. <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>und <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, definieren Kultur abhängige Symbole oder Teil Zeichenfolgen, die in eine Ergebnis Zeichenfolge eingeschlossen werden können.  
  
 Die Standardformat Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md), wie z. b. "d", "d", "f" und "f", sind Aliase, die bestimmten Eigenschaften des <xref:System.Globalization.DateTimeFormatInfo> Format Musters entsprechen. Die meisten benutzerdefinierten Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md) beziehen sich auf Zeichen folgen oder Teil Zeichenfolgen, die ein Formatierungs Vorgang in den Ergebnisdaten Strom einfügt. In der folgenden Tabelle werden die standardmäßigen und benutzerdefinierten Format Bearbeiter für Datum und Uhrzeit sowie die zugehörigen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften aufgelistet. Ausführliche Informationen zur Verwendung dieser Format Bearbeiter finden Sie unter Standard Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und benutzerdefinierte Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Beachten Sie, dass jede Standardformat Zeichenfolge einer <xref:System.Globalization.DateTimeFormatInfo> Eigenschaft entspricht, deren Wert eine benutzerdefinierte Format Zeichenfolge für Datum und Uhrzeit ist. Die einzelnen Spezifizierer in dieser benutzerdefinierten Format Zeichenfolge entsprechen wiederum anderen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften. In der Tabelle werden nur die <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften aufgelistet, für die die Standardformat Zeichenfolgen Aliase sind, und es werden keine Eigenschaften aufgelistet, auf die benutzerdefinierte Format Zeichenfolgen, die diesen Alias Eigenschaften zugewiesen sind, zugreifen können. Außerdem werden in der Tabelle nur benutzerdefinierte Format Bearbeiter aufgelistet, die <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften entsprechen.  
  
|Formatbezeichner|Zugeordnete Eigenschaften|  
|----------------------|---------------------------|  
|"d" (kurzes Datum; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"D" (langes Datum; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"f" (vollständiges Datum/kurze Zeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Format der Datums Komponente der Ergebnis Zeichenfolge zu definieren.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Format der Zeitkomponente der Ergebnis Zeichenfolge zu definieren.|  
|"F" (Full Date/Long Time; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Format der Datums Komponente der Ergebnis Zeichenfolge zu definieren.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Format der Zeitkomponente der Ergebnis Zeichenfolge zu definieren.|  
|"g" (allgemeines Datum/kurze Zeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Format der Datums Komponente der Ergebnis Zeichenfolge zu definieren.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Format der Zeitkomponente der Ergebnis Zeichenfolge zu definieren.|  
|"G" (allgemeines Datum/lange Zeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Format der Datums Komponente der Ergebnis Zeichenfolge zu definieren.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Format der Zeitkomponente der Ergebnis Zeichenfolge zu definieren.|  
|"M", "m" (Monat/Tag; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"O", "o" (Roundtrip-Datum/-Uhrzeit; Standardformat Zeichenfolge)|Keine|  
|"R", "r" (RFC1123; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, um eine Ergebnis Zeichenfolge zu definieren, die dem RFC 1123-Standard entspricht. Die Eigenschaft ist schreibgeschützt.|  
|"s" (Sortier bares Datum/Uhrzeit, Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, um eine Ergebnis Zeichenfolge zu definieren, die dem ISO 8601-Standard entspricht. Die Eigenschaft ist schreibgeschützt.|  
|"t" (Kurzzeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"T" (lange Zeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"u" (universelle sortierbare Datums-/uhrzeitanzeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, um eine Ergebnis Zeichenfolge zu definieren, die dem ISO 8601-Standard für die koordinierte Weltzeit entspricht. Die Eigenschaft ist schreibgeschützt.|  
|"U" (universelles vollständiges Datum/Uhrzeit; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"Y", "y" (Year Month; Standardformat Zeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, um das Gesamt Format der Ergebnis Zeichenfolge zu definieren.|  
|"ddd" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, um den abgekürzten Namen des Wochentags in die Ergebnis Zeichenfolge einzuschließen.|  
|"g", "gg" (benutzerdefinierter Format Bezeichner)|Ruft die <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A>-Methode auf, um den ERA-Namen in die Ergebnis Zeichenfolge einzufügen.|  
|"MMM" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, um den abgekürzten Monatsnamen in die Ergebnis Zeichenfolge einzuschließen.|  
|"MMMM" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> oder <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, um den vollständigen Monatsnamen in die Ergebnis Zeichenfolge einzuschließen.|  
|"t" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> oder <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, um das erste Zeichen des am/pm-Kenn Zeichner in die Ergebnis Zeichenfolge einzuschließen.|  
|"TT" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> oder <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, um den vollständigen am/pm-Kenn Zeichner in die Ergebnis Zeichenfolge einzuschließen.|  
|":" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, um das Zeit Trennzeichen in die Ergebnis Zeichenfolge einzuschließen.|  
|"/" (benutzerdefinierter Format Bezeichner)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, um das Datums Trennzeichen in die Ergebnis Zeichenfolge einzuschließen.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Ändern von DateTimeFormatInfo-Eigenschaften  
 Sie können die von Format Zeichenfolgen für Datum und Uhrzeit erstellte Ergebnis Zeichenfolge ändern, indem Sie die zugeordneten Eigenschaften eines beschreibbaren <xref:System.Globalization.DateTimeFormatInfo> Objekts ändern. Um zu ermitteln, ob ein <xref:System.Globalization.DateTimeFormatInfo> Objekt beschreibbar ist, verwenden Sie die <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>-Eigenschaft. So passen Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt auf folgende Weise an:  
  
1.  Erstellen Sie eine Lese-/Schreibkopie eines <xref:System.Globalization.DateTimeFormatInfo> Objekts, dessen Formatierungs Konventionen Sie ändern möchten. (Weitere Informationen finden Sie im Abschnitt [Instanziieren eines DateTimeFormatInfo-Objekts](#instantiating) .)  
  
2.  Ändern Sie die-Eigenschaft oder die-Eigenschaften, die zum Entwickeln der gewünschten Ergebnis Zeichenfolge verwendet werden. (Informationen darüber, wie Formatierungs Methoden <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften zum Definieren von Ergebnis Zeichenfolgen verwenden, finden Sie im vorherigen Abschnitt [Format Strings und DateTimeFormatInfo Properties](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  Verwenden Sie das benutzerdefinierte <xref:System.Globalization.DateTimeFormatInfo> Objekt, das Sie als <xref:System.IFormatProvider>-Argument erstellt haben, in Aufrufen von Formatierungs Methoden.  
  
 Es gibt zwei weitere Möglichkeiten, das Format einer Ergebnis Zeichenfolge zu ändern:  
  
-   Sie können die <xref:System.Globalization.CultureAndRegionInfoBuilder>-Klasse verwenden, um entweder eine benutzerdefinierte Kultur (eine Kultur mit einem eindeutigen Namen, die vorhandene Kulturen ergänzt) oder eine Ersatz Kultur (die anstelle einer bestimmten Kultur verwendet wird) zu definieren. Sie können diese Kulturprogramm gesteuert speichern und darauf zugreifen, wie jedes beliebige <xref:System.Globalization.CultureInfo> Objekt, das von der .NET Framework unterstützt wird.  
  
-   Wenn die Ergebnis Zeichenfolge nicht Kultur abhängig ist und nicht einem vordefinierten Format folgt, können Sie eine benutzerdefinierte Format Zeichenfolge für Datum und Uhrzeit verwenden. Wenn Sie z. b. Datums-und Uhrzeit Daten im Format yyyymmddhhmmss serialisieren, können Sie die Ergebnis Zeichenfolge generieren, indem Sie die benutzerdefinierte Format Zeichenfolge an die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>-Methode übergeben, und Sie können die Ergebnis Zeichenfolge zurück in einen <xref:System.DateTime> Wert konvertieren, indem Sie die <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>-Methode aufrufen.  
  
### <a name="changing-the-short-date-pattern"></a>Ändern des kurzen Datums Musters  
 Im folgenden Beispiel wird das Format einer Ergebnis Zeichenfolge geändert, die von der Standardformat Zeichenfolge "d" (kurzes Datum) erzeugt wird. Die zugeordnete <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft für die Kultur "en-US" oder "Englisch" (USA) wird von der Standardeinstellung "M/d/yyyy" in "yyyy"-"mm"-"dd" geändert, und die Standardformat Zeichenfolge "d" wird verwendet, um das Datum sowohl vor als auch nach der Änderung der <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft anzuzeigen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Ändern des Datums Trennzeichens  
 Im folgenden Beispiel wird das Datums Trennzeichen in einem <xref:System.Globalization.DateTimeFormatInfo> Objekt geändert, das die Formatierungs Konventionen der fr-FR-Kultur darstellt. Im Beispiel wird die Standardformat Zeichenfolge "g" verwendet, um das Datum sowohl vor als auch nach der Änderung der <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>-Eigenschaft anzuzeigen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Ändern von Tages Namen Abkürzungen und dem langen Datums Muster  
 In einigen Fällen ist das lange Datums Muster, in dem in der Regel der vollständige Tag-und Monats Name zusammen mit der Anzahl der Tage des Monats und des Jahres angezeigt wird, möglicherweise zu lang. Im folgenden Beispiel wird das Long-Datums Muster für die Kultur "en-US" verkürzt, um eine aus einem Zeichen bestehende oder zwei Zeichen bestehende namens Abkürzung, gefolgt von der Tagesnummer, der Monatsnamen Abkürzung und dem Jahr zurückzugeben. Dies erfolgt durch Zuweisen kürzerer Tages Namen Abkürzungen zum <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> Array und durch Ändern der benutzerdefinierten Format Zeichenfolge, die der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft zugewiesen ist. Dies betrifft die Ergebnis Zeichenfolgen, die von den Standardformat Zeichenfolgen "D" und "f" zurückgegeben werden.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Normalerweise wirkt sich die Änderung an der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft auch auf die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>-Eigenschaft aus, die wiederum die von der Standardformat Zeichenfolge "F" zurückgegebene Ergebnis Zeichenfolge definiert. Um das ursprüngliche vollständige Datums-und Uhrzeit Muster beizubehalten, wird im Beispiel die ursprüngliche benutzerdefinierte Format Zeichenfolge, die der <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>-Eigenschaft zugewiesen ist, nach der Änderung der Eigenschaft <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> neu zugewiesen.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Wechsel von einer 12-Stunden-Uhr zu einem 24-Stunden-Format  
 Für viele Kulturen im .NET Framework wird die Uhrzeit mit einem 12-Stunden-Format und einem am/pm-Kenn Zeichner ausgedrückt. Im folgenden Beispiel wird eine `ReplaceWith24HourClock`-Methode definiert, die jedes Zeitformat ersetzt, das ein 12-Stunden-Format mit einem Format verwendet, das einen 24-Stunden-Takt verwendet.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 Im Beispiel wird ein regulärer Ausdruck verwendet, um die Format Zeichenfolge zu ändern. Das Muster für reguläre Ausdrücke `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` wird wie folgt definiert:  
  
|Muster|Beschreibung|  
|-------------|-----------------|  
|`^`|Beginnt die Suche am Anfang der Zeichenfolge.|  
|`(?<openAMPM>\s*t+\s*)?`|Entsprechung für NULL oder ein Vorkommen von NULL oder mehr Leerzeichen, gefolgt vom Buchstaben "t" einmal oder mehrmals, gefolgt von NULL oder mehr Leerzeichen. Diese Erfassungs Gruppe hat den Namen `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Wenn die `openAMPM` Gruppe eine Entsprechung aufweist, wird der Buchstabe "h" einmal oder mehrmals abgeglichen, gefolgt von einem oder mehreren Zeichen, die weder "h" noch "t" sind. Die Entsprechung endet am Ende der Zeichenfolge. Alle nach "h" erfassten Zeichen sind in einer Erfassungs Gruppe mit dem Namen "`nonHours`" enthalten.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Wenn für die `openAMPM` Gruppe keine Entsprechung vorliegt, finden Sie eine Entsprechung für den Buchstaben "h", gefolgt von mindestens einem Zeichen, das weder "h" noch "t" gefolgt von NULL oder mehr Leerzeichen ist. Zum Schluss finden Sie eine Entsprechung für ein oder mehrere Vorkommen des Buchstabens "t". Alle Zeichen, die nach "h" und vor den Leerräume und "t" aufgezeichnet werden, sind in einer Erfassungs Gruppe mit dem Namen "`nonHours`" enthalten.|  
  
 Die `nonHours` Erfassungs Gruppe enthält die Minute und möglicherweise die zweite Komponente einer benutzerdefinierten Format Zeichenfolge für Datum und Uhrzeit sowie alle Zeit Trennzeichen. Das Ersetzungs Muster `HH${nonHours}` dem diese Elemente die Teil Zeichenfolge "hh" voranstellen.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Anzeigen und Ändern des Zeitraums in einem Datum  
 Im folgenden Beispiel wird der benutzerdefinierte Format Bezeichner "g" zur <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft eines Objekts hinzugefügt, das die Formatierungs Konventionen der Kultur "en-US" darstellt. Diese Addition wirkt sich auf die folgenden drei Standardformat Zeichenfolgen aus:  
  
-   Die Standardformat Zeichenfolge "D" (Long Date), die direkt der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft zugeordnet wird.  
  
-   Die Standardformat Zeichenfolge "f" (Full Date/Short Time), die eine Ergebnis Zeichenfolge erzeugt, die die Teil Zeichenfolgen verkettet, die von den Eigenschaften <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> generiert werden.  
  
-   Die Standardformat Zeichenfolge "F" (Full Date/Long Time), die direkt der <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>-Eigenschaft zugeordnet wird. Da wir diesen Eigenschafts Wert nicht explizit festgelegt haben, wird er dynamisch generiert, indem die Eigenschaften "<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>" und "<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>" verkettet werden.  
  
 Das Beispiel zeigt auch, wie Sie den ERA-Namen für eine Kultur ändern können, deren Kalender einen einzelnen Zeitraum hat. In diesem Fall verwendet die Kultur "en-US" den gregorianischen Kalender, der durch ein <xref:System.Globalization.GregorianCalendar> Objekt dargestellt wird. Die <xref:System.Globalization.GregorianCalendar>-Klasse unterstützt einen einzelnen Zeitraum, der nach dem Namen n. (Anno Domini). Im Beispiel wird der Name des Zeitraums in "v" geändert (Common Era), indem der benutzerdefinierte Format Bezeichner "g" in der Format Zeichenfolge ersetzt wird, die der <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft mit einer Literalzeichenfolge zugewiesen ist. Die Verwendung einer Literalzeichenfolge ist erforderlich, da der Name des Zeitraums in der Regel von der <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> Methode aus privaten Daten in den Kultur Tabellen zurückgegeben wird, die entweder vom .NET Framework oder vom Windows-Betriebssystem bereitgestellt werden.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Verarbeiten von Zeichenfolgen für Datum und Uhrzeit  
 Bei der-Initialisierung wird die Zeichen folgen Darstellung einer Datums-und uhrzeitanzeit in eine <xref:System.DateTime> oder <xref:System.DateTimeOffset> Wert konvertiert. Beide Typen enthalten die Methoden `Parse`, `TryParse`, `ParseExact`und `TryParseExact`, um die Verarbeitung von Vorgängen zu unterstützen. Die Methoden `Parse` und `TryParse` konvertieren eine Zeichenfolge, die über eine Vielzahl von Formaten verfügen kann, wohingegen `ParseExact` und `TryParseExact` erfordern, dass die Zeichenfolge über ein definiertes Format oder Format verfügt. Wenn beim Verarbeitungsvorgang ein Fehler auftritt, `Parse` und `ParseExact` eine Ausnahme auslösen, während `TryParse` und `TryParseExact` `false`zurückgeben.  
  
 Die Analysemethoden verwenden implizit oder explizit einen <xref:System.Globalization.DateTimeStyles> Enumerationswert, um zu bestimmen, welche Stilelemente (z. b. führenden, nachfolgenden oder inneren Leerraum) in der zu testenden Zeichenfolge vorhanden sein können und wie die analysierte Zeichenfolge oder fehlende Elemente interpretiert werden. Wenn Sie keinen <xref:System.Globalization.DateTimeStyles> Wert angeben, wenn Sie die `Parse`-oder `TryParse`-Methode aufzurufen, wird der Standardwert <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, d. h. ein zusammengesetzter Stil, der die <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>-, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>-und <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType>-Flags einschließt. Der Standardwert für die Methoden `ParseExact` und `TryParseExact` ist <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; die Eingabe Zeichenfolge muss genau mit einer bestimmten benutzerdefinierten Format Zeichenfolge für Datum und Uhrzeit übereinstimmen.  
  
 Die Analysemethoden verwenden auch implizit oder explizit ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die spezifischen Symbole und Muster definiert, die in der zu testenden Zeichenfolge vorkommen können. Wenn Sie kein <xref:System.Globalization.DateTimeFormatInfo> Objekt bereitstellen, wird standardmäßig das <xref:System.Globalization.DateTimeFormatInfo> Objekt für die aktuelle Thread Kultur verwendet. Weitere Informationen zum Auswerten von Datums-und Uhrzeit Zeichenfolgen finden Sie in den einzelnen Methoden zum Auswerten, wie z. b. <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>und <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 Im folgenden Beispiel wird die Kultur abhängige Darstellung von Datums-und Uhrzeit Zeichenfolgen veranschaulicht. Es wird versucht, zwei Datums Zeichenfolgen mithilfe der Konventionen der Kultur en-US, en-GB, fr-FR und fi-fi zu analysieren. Das Datum, das in der Kultur "en-US" als 8/18/2014 interpretiert wird, löst in den anderen drei Kulturen eine <xref:System.FormatException> Ausnahme aus, da 18 als Monatsnummer interpretiert wird. 1/2/2015 wird als Zweiter Tag des ersten Monats in der Kultur "en-US" analysiert, aber als erster Tag des zweiten Monats in den verbleibenden Kulturen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Datums-und Uhrzeit Zeichenfolgen werden in der Regel aus zwei Gründen analysiert:  
  
-   , Wenn Benutzereingaben in einen Datums-und Uhrzeitwert konvertiert werden sollen.  
  
-   Um einen Roundtrip für einen Datums-und Uhrzeitwert durchzusetzen. Das heißt, dass ein Datums-und Uhrzeitwert deserialisiert werden soll, der zuvor als Zeichenfolge serialisiert wurde.  
  
 In den folgenden Abschnitten werden diese beiden Vorgänge ausführlicher erläutert.  
  
### <a name="parsing-user-strings"></a>Benutzer Zeichenfolgen werden verarbeitet.  
 Wenn Sie die Eingabe von Zeichen folgen für Datum und Uhrzeit durch den Benutzer analysieren, sollten Sie immer ein <xref:System.Globalization.DateTimeFormatInfo> Objekt instanziieren, das die Kultur Einstellungen des Benutzers widerspiegelt, einschließlich der Anpassungen, die der Benutzer möglicherweise vorgenommen hat. Andernfalls weist das Datums-und Uhrzeit Objekt möglicherweise falsche Werte auf. Weitere Informationen zum Instanziieren eines <xref:System.Globalization.DateTimeFormatInfo> Objekts, das benutzerdefinierte Benutzeranpassungen widerspiegelt, finden Sie im Abschnitt " [DateTimeFormatInfo" und "Dynamic Data](#dynamic) ".  
  
 Das folgende Beispiel veranschaulicht den Unterschied zwischen einem-Verarbeitungsvorgang, der Benutzer Kultur Einstellungen widerspiegelt, und einem, der nicht. In diesem Fall ist die Standardsystem Kultur "en-US", aber der Benutzer hat die Systemsteuerung, die **Region und die Sprache** verwendet, um das kurze Datums Muster vom Standardwert "M/d/yyyy" in "yy/mm/dd" zu ändern. Wenn der Benutzer eine Zeichenfolge eingibt, die die Benutzereinstellungen widerspiegelt, und die Zeichenfolge von einem <xref:System.Globalization.DateTimeFormatInfo> Objekt analysiert wird, das auch Benutzereinstellungen (außer Kraft setzungen) reflektiert, gibt der Analyse Vorgang ein korrektes Ergebnis zurück. Wenn die Zeichenfolge jedoch von einem <xref:System.Globalization.DateTimeFormatInfo> Objekt analysiert wird, das die standardmäßigen en-US-Kultur Einstellungen widerspiegelt, löst die Analysemethode eine <xref:System.FormatException> Ausnahme aus, da Sie 14 als die Anzahl der Monate und nicht als die letzten zwei Ziffern des Jahres interpretiert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serialisieren und Deserialisieren von Datums-und Uhrzeit Daten  
 Für die Serialisierung von Datums-und Uhrzeitdaten wird ein Roundtrip erwartet. Das heißt, alle serialisierten und deserialisierten Werte sollten identisch sein. Wenn ein Datums-und Uhrzeitwert einen bestimmten Zeitpunkt darstellt, sollte der deserialisierte Wert unabhängig von der Kultur oder Zeitzone des Systems, auf dem es wieder hergestellt wurde, denselben Zeitpunkt darstellen. Zum erfolgreichen Roundtrip von Datums-und Uhrzeitdaten müssen Sie die Konventionen der invarianten Kultur verwenden, die von der <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>-Eigenschaft zurückgegeben wird, um die Daten zu generieren und zu analysieren. Die Formatierungs-und die-Diagnose Vorgänge sollten niemals die Konventionen der Standard Kultur widerspiegeln. Wenn Sie die standardmäßigen kulturellen Einstellungen verwenden, ist die Portabilität der Daten streng eingeschränkt. Sie kann nur in einem Thread deserialisiert werden, dessen kulturspezifische Einstellungen mit denen des Threads identisch sind, in dem Sie serialisiert wurde. In einigen Fällen bedeutet dies, dass die Daten nicht einmal erfolgreich serialisiert und auf demselben System deserialisiert werden können.  
  
 Wenn die Zeitkomponente eines Datums-und Uhrzeitwerts signifikant ist, sollte Sie auch in UTC konvertiert und mit der [Standardformat Zeichenfolge](~/docs/standard/base-types/standard-date-and-time-format-strings.md)"o" oder "r" serialisiert werden. Die Zeit Daten können dann wieder hergestellt werden, indem Sie eine Analyse-Methode aufrufen und ihr die entsprechende Format Zeichenfolge zusammen mit der invarianten Kultur als `provider` Argument übergeben.  
  
 Im folgenden Beispiel wird der Prozess zum Roundtrip eines Datums-und Uhrzeitwerts veranschaulicht. Sie serialisiert ein Datum und eine Uhrzeit in einem System, das die Pacific Time (USA) und deren aktuelle Kultur en-US beobachtet.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Es deserialisiert die Daten auf einem System in der Zeitzone "Brüssel", "Kopenhagen", "Madrid" und "Paris" und deren aktuelle Kultur "fr-FR". Das wiederhergestellte Datum beträgt neun Stunden nach dem ursprünglichen Datum, das die Zeit Zonen Anpassung von 8 Stunden hinter UTC auf eine Stunde vor UTC widerspiegelt. Sowohl das ursprüngliche Datum als auch das wiederhergestellte Datum stellen denselben Zeitpunkt dar.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 Im folgenden Beispiel wird Reflektion verwendet, um die Eigenschaften des <xref:System.Globalization.DateTimeFormatInfo>-Objekts für die Kultur Englisch (USA) zu erhalten. Es zeigt den Wert dieser Eigenschaften an, die benutzerdefinierte Format Zeichenfolgen enthalten, und verwendet diese Zeichen folgen zum Anzeigen formatierter Datumsangaben.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue, schreibbare Instanz der <see cref="T:System.Globalization.DateTimeFormatInfo" />-Klasse, die kulturunabhängig (invariant) ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Datums-und Uhrzeit Informationen der invarianten Kultur darstellt. Um ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt für eine bestimmte Kultur zu erstellen, erstellen Sie ein <xref:System.Globalization.CultureInfo> Objekt für diese Kultur und rufen das <xref:System.Globalization.DateTimeFormatInfo>-Objekt ab, das von seiner <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird.  
  
 Die Eigenschaften des <xref:System.Globalization.DateTimeFormatInfo> Objekts, das von diesem Konstruktor erstellt wird, können geändert werden. Allerdings können Sie die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft nicht ändern, da die invariante Kultur nur eine lokalisierte Version des gregorianischen Kalenders unterstützt. Zum Erstellen eines <xref:System.Globalization.DateTimeFormatInfo> Objekts, das einen bestimmten Kalender verwendet, müssen Sie ein <xref:System.Globalization.CultureInfo> Objekt instanziieren, das diesen Kalender unterstützt, und den Kalender der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft des <xref:System.Globalization.DateTimeFormatInfo> Objekts zuweisen, das von der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Array vom Typ <see cref="T:System.String" /> ab, das die kulturabhängigen abgekürzten Namen der Wochentage enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Array vom Typ <see cref="T:System.String" />, das die kulturabhängigen abgekürzten Namen der Wochentage enthält. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" und "Sat".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt wird, muss das Array eindimensional sein und muss genau sieben Elemente aufweisen. Das erste Element (das Element bei Index 0) stellt den ersten Tag der Woche im Kalender dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird.  
  
 Wenn eine benutzerdefinierte Format Zeichenfolge den Format Bezeichner "ddd" enthält, schließt die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> oder <xref:System.DateTimeOffset.ToString%2A> Methode den entsprechenden Member des <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> Arrays anstelle von "ddd" in der Ergebnis Zeichenfolge ein.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert. Wenn die ausgewählte <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> keine abgekürzten Tages Namen unterstützt, enthält das Array die vollständigen Namen des Tags.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Lese-/Schreib<xref:System.Globalization.CultureInfo>-Objekt erstellt, das die Kultur Englisch (USA) darstellt und der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>-Eigenschaft abgekürzte Tagnamen zuweist. Anschließend wird der Format Bezeichner "ddd" in einer [benutzerdefinierten Format Zeichenfolge für Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md) verwendet, um die Zeichen folgen Darstellung von Datumsangaben für eine Woche ab dem 28. Mai 2014 anzuzeigen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das mehrdimensional ist oder dessen Länge nicht genau 7 beträgt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der abgekürzten Monatsnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt dieses fest.</summary>
        <value>Ein Array von abgekürzten Monatsnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Sprachen wird ein Monats Name, der Teil eines Datums ist, im Feld "geniktiv" angezeigt. Ein Datum in der Kultur ru-ru oder Russisch (Russische Föderation) besteht z. b. aus der Tagesnummer und dem Namen des genitiven Monats, z. b. 1 (1. Januar). Wenn eine benutzerdefinierte Format Zeichenfolge für diese Kulturen den Format Bezeichner "MMM" enthält, enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType>-oder <xref:System.DateTimeOffset.ToString%2A> Methode den entsprechenden Member des <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Arrays anstelle von "MMM" in der Ergebnis Zeichenfolge.  
  
 In einem Set-Vorgang muss das Array eindimensional mit genau 13 Elementen sein, da <xref:System.Globalization.Calendar>-Objekte Kalender mit 13 Monaten aufnehmen. Bei Kalendern mit 12 Monaten sollte das 13. Element <xref:System.String.Empty?displayProperty=nameWithType>werden. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird.  
  
 Wenn Sie die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>-Eigenschaft festlegen, müssen Sie auch die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Lese-/Schreib<xref:System.Globalization.CultureInfo>-Objekt erstellt, das die Kultur Englisch (USA) darstellt, und seinen <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaften abgekürzte Name des Monats namens zugewiesen. Anschließend wird die Zeichen folgen Darstellung von Datumsangaben angezeigt, die den abgekürzten Monatsnamen jedes Monats im unterstützten Kalender der Kultur enthalten.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang ist das Array mehrdimensional oder hat eine Länge, die nicht genau 13 beträgt.</exception>
        <exception cref="T:System.ArgumentNullException">In einem set-Vorgang entspricht das Array oder eines seiner Elemente <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Zeichenfolgenarray ab, das die kulturabhängigen abgekürzten Namen der Monate enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Zeichenfolgenarray mit 13 Elementen, das die kulturabhängigen abgekürzten Namen der Monate enthält. Bei Kalendern mit 12 Monaten ist das 13. Element des Arrays eine leere Zeichenfolge. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" und "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese Eigenschaft festlegen, muss das Array eindimensional mit genau 13 Elementen sein. <xref:System.Globalization.Calendar> Objekte bieten Kalender mit 13 Monaten an. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird.  
  
 Wenn Sie die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>-Eigenschaft festlegen, müssen Sie auch die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>-Eigenschaft festlegen. Die Eigenschaften <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> werden verwendet, um Datumsangaben mithilfe der folgenden Format Zeichenfolgen zu formatieren:  
  
-   Eine Standardformat Zeichenfolge für Datum und Uhrzeit, die eine benutzerdefinierte Format Zeichenfolge Aliase, die den Format Bezeichner "MMM" enthält.  
  
-   Eine benutzerdefinierte Format Zeichenfolge für Datum und Uhrzeit, die den Format Bezeichner "MMM" enthält.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert. Wenn die ausgewählte <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> keine abgekürzten Monatsnamen unterstützt, enthält das Array die vollständigen Monatsnamen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Lese-/Schreib<xref:System.Globalization.CultureInfo>-Objekt erstellt, das die Kultur Englisch (USA) darstellt, und seinen <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaften abgekürzte Name des Monats namens zugewiesen. Anschließend wird die Zeichen folgen Darstellung von Datumsangaben angezeigt, die den abgekürzten Namen jedes Monats im unterstützten Kalender der Kultur enthalten.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das multidimensional ist oder eine Länge von etwa 13 hat.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichenfolgenkennzeichner für Zeitangaben vor 12 Uhr mittags ("ante meridiem", a.m.) ab oder legt diesen fest.</summary>
        <value>Der Zeichenfolgenkennzeichner für Zeitangaben vor 12 Uhr mittags ("ante meridiem", a.m.). Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "AM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>-Eigenschaft wird für alle Zeiten von 0:00:00 (Mitternacht) bis 11:59:59.999 verwendet.  
  
 Wenn eine benutzerdefinierte Format Zeichenfolge den Format Bezeichner "TT" enthält und die Uhrzeit vor 12 Uhr mittags liegt, enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> oder <xref:System.DateTimeOffset.ToString%2A> Methode den Wert der <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>-Eigenschaft anstelle von "TT" in der Ergebnis Zeichenfolge. Wenn die benutzerdefinierte Format Zeichenfolge den benutzerdefinierten Format Bezeichner "t" enthält, ist nur das erste Zeichen des <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Eigenschafts Werts enthalten. Sie sollten "TT" für Sprachen verwenden, für die es erforderlich ist, den Unterschied zwischen den Uhr und PM Ein Beispiel hierfür ist Japanisch. und PM Kenn Zeichner unterscheiden sich im zweiten Zeichen anstelle des ersten Zeichens.  
  
 Für Kulturen, die keine Uhr verwenden Kenn Zeichner gibt diese Eigenschaft eine leere Zeichenfolge zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für die aktuelle Kultur zu verwendenden Kalender ab oder legen diesen fest.</summary>
        <value>Der für die aktuelle Kultur zu verwendende Kalender. Der Standardwert für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist ein <see cref="T:System.Globalization.GregorianCalendar" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft akzeptiert nur Kalender, die für die Kultur gültig sind, die mit dem <xref:System.Globalization.DateTimeFormatInfo> Objekt verknüpft ist. Die <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>-Eigenschaft gibt die Kalender an, die von einer bestimmten Kultur verwendet werden können, und die <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>-Eigenschaft gibt den Standardkalender für die Kultur an.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Wenn Sie den Wert dieser Eigenschaft ändern, wirkt sich dies auch auf die folgenden Eigenschaften aus: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>und <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Wenn z. b. die Kultur des aktuellen Threads Japanisch ist, akzeptiert diese Eigenschaft <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>oder <xref:System.Globalization.GregorianCalendarTypes.USEnglish><xref:System.Globalization.GregorianCalendar>. Wenn die <xref:System.Globalization.JapaneseCalendar> verwendet wird, ist der standardmäßige lange Datums Bezeichner "GG y" \x5e74 'm ' \x6708 'd ' \x65e5 ' ". Wenn die <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>verwendet wird, ist der standardmäßige Long Date-Spezifizierer "yyyy" \x5e74 'm ' \x6708 d ' \x65e5 ' ".  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine `ChangeCalendar` Methode definiert, die den aktuellen Kalender einer Kultur in einen angegebenen Kalender ändert, es sei denn, es handelt sich um den aktuellen Kalender, oder wenn Sie nicht von der Kultur unterstützt wird. Der Code, der die-Methode aufruft, instanziiert ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur Arabisch (Ägypten) darstellt, und versucht zunächst, seinen Kalender in den japanischen Kalender zu ändern. Da der japanische Kalender nicht unterstützt wird, führt die-Methode nicht zum Ändern des Kalenders der Kultur. Da der um Al-Qura-Kalender jedoch ein Member der <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Auflistung ist, ist die Methode erfolgreich, dass Sie den aktuellen Kalender für die AR-z-Kultur verwendet.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf ein <see cref="T:System.Globalization.Calendar" />-Objekt festgelegt, das für die aktuelle Kultur ungültig ist.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Regel zum Bestimmen der ersten Kalenderwoche eines Jahres angibt, oder legt diesen fest.</summary>
        <value>Ein Wert, der die erste Kalenderwoche des Jahres bestimmt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert festgelegt, der keinen gültigen <see cref="T:System.Globalization.CalendarWeekRule" />-Wert darstellt.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Clone() cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine flache Kopie von <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Ein neues <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das aus dem ursprünglichen <see cref="T:System.Globalization.DateTimeFormatInfo" /> kopiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Klon ist beschreibbar, auch wenn das ursprüngliche <xref:System.Globalization.DateTimeFormatInfo>-Objekt schreibgeschützt ist. Daher können die Eigenschaften des Klons mit benutzerdefinierten Mustern geändert werden.  
  
 Eine flache Kopie eines-Objekts ist nur eine Kopie des-Objekts. Wenn das Objekt Verweise auf andere Objekte enthält, erstellt die flache Kopie keine Kopien der referenzierten Objekte. Stattdessen verweist es auf die ursprünglichen Objekte. Im Gegensatz dazu erstellt eine tiefe Kopie eines Objekts eine Kopie des Objekts und eine Kopie aller Elemente, die direkt oder indirekt von diesem Objekt referenziert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein schreibgeschütztes <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ab, das Werte basierend auf der aktuellen Kultur formatiert.</summary>
        <value>Ein schreibgeschütztes <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das auf dem <see cref="T:System.Globalization.CultureInfo" />-Objekt für den aktuellen Thread basiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Globalization.DateTimeFormatInfo> Objekt, das von der <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>-Eigenschaft zurückgegeben wird, reflektiert Benutzer Überschreibungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>-Eigenschaft verwendet, um ein <xref:System.Globalization.DateTimeFormatInfo> Objekt abzurufen, das die Formatierungs Konventionen der aktuellen Kultur darstellt. Dies ist in diesem Fall die Kultur "en-US". Anschließend werden die Format Zeichenfolge und die Ergebnis Zeichenfolge für sechs Formatierungs Eigenschaften angezeigt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die die Datumskomponenten trennt, d. h. Jahr, Monat und Tag, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die die Datumskomponenten trennt, d. h. Jahr, Monat und Tag. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine benutzerdefinierte Format Zeichenfolge den Format Bezeichner "/" enthält, wird in der <xref:System.DateTime.ToString%2A?displayProperty=nameWithType>-Methode der Wert <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> anstelle von "/" in der Ergebnis Zeichenfolge angezeigt.  
  
 Die <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>-Eigenschaft definiert die Zeichenfolge, die das Datums Trennzeichen ("/" benutzerdefinierter Format Bezeichner für Datum und Uhrzeit) in einer Ergebnis Zeichenfolge in einem Formatierungs Vorgang ersetzt. Außerdem wird die Datums Trennzeichen-Zeichenfolge in einem Verarbeitungsvorgang definiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Globalization.CultureInfo>-Objekt für die Kultur "en-US" instanziiert, das Datums Trennzeichen in "-" geändert und ein Datum mithilfe der Standardformat Zeichenfolgen "d", "g" und "g" angezeigt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Zeichenfolgenarray ab, das die kulturabhängigen vollständigen Namen der Wochentage enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Zeichenfolgenarray, das die kulturabhängigen vollständigen Namen der Wochentage enthält. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" und "Saturday".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt wird, muss das Array eindimensional sein und muss genau sieben Elemente aufweisen. Das erste Element (das Element bei Index 0) stellt den ersten Tag der Woche im Kalender dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird.  
  
 Wenn eine benutzerdefinierte Format Zeichenfolge den Format Bezeichner "dddd" enthält, schließt die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType>-Methode den Wert des entsprechenden <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> Members anstelle von "dddd" in die Ergebnis Zeichenfolge ein.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das mehrdimensional ist oder dessen Länge nicht genau 7 beträgt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ersten Tag der Woche ab oder legt diesen fest.</summary>
        <value>Ein Enumerationswert, der den ersten Tag der Woche darstellt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert festgelegt, der keinen gültigen <see cref="T:System.DayOfWeek" />-Wert darstellt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Datums- und Uhrzeitwert ab oder legt dieses fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen langen Datums-und Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardformat Zeichenfolge "F" ist ein Alias für die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>-Eigenschaft. Das heißt, die benutzerdefinierte Format Zeichenfolge, die dieser Eigenschaft zugewiesen ist, definiert das Format der Ergebnis Zeichenfolge für die Standardformat Zeichenfolge "F". Weitere Informationen finden Sie unter Standard Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Der Wert der <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>-Eigenschaft wird dynamisch generiert, indem die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Eigenschaften getrennt durch ein Leerzeichen verkettet werden. Diese dynamische Zuweisung tritt unter den folgenden Bedingungen auf:  
  
-   , Wenn der Eigenschafts Wert abgerufen wird, bevor er explizit festgelegt wurde.  
  
-   Wenn der Wert der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft geändert wird.  
  
-   Wenn der Wert der <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>-Eigenschaft geändert wird.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Ein <see cref="T:System.DayOfWeek" />-Wert.</param>
        <summary>Gibt den kulturabhängigen abgekürzten Namen des angegebenen Wochentags entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige abgekürzte Name des Wochentags, dargestellt durch <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für das invariante-Standard <xref:System.Globalization.DateTimeFormatInfo> Objekt gibt diese Methode eine Zeichenfolge aus dem <xref:System.Globalization.GregorianCalendar>zurück:  
  
|`dayofweek`|Rückgabewert|  
|-----------------|------------------|  
|Sonntag|Liegen|  
|Monday|Mond|  
|Dienstag|Di|  
|Mittwoch|Mi|  
|Donnerstag|Do|  
|Freitag|"Fri"|  
|Samstag|Gesetzt|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> ist kein gültiger <see cref="T:System.DayOfWeek" />-Wert.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Die Ganzzahl, die den Zeitraum darstellt.</param>
        <summary>Gibt die Zeichenfolge zurück, die den abgekürzten Namen des angegebenen Zeitraums enthält, sofern eine Abkürzung vorhanden ist.</summary>
        <returns>Eine Zeichenfolge, die den abgekürzten Namen des angegebenen Zeitraums enthält, sofern eine Abkürzung vorhanden ist.  
  
 - oder -  
  
 Eine Zeichenfolge, die den vollständigen Namen des Zeitraums enthält, sofern keine Abkürzung vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Era-Name ist der Name, den ein Kalender verwendet, um auf einen Zeitraum zu verweisen, der von einem bestimmten Punkt oder Ereignis abgerechnet wird. Beispiel: "A.D." oder " der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Die gültigen Werte für `era` werden in der <xref:System.Globalization.Calendar.Eras%2A>-Eigenschaft der entsprechenden Klasse aufgeführt, die von <xref:System.Globalization.Calendar>abgeleitet ist. Beispiel: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zeigt eine Liste von Epochen an, die von dieser Implementierung unterstützt werden.  
  
 In der <xref:System.Globalization.JapaneseCalendar>-Klasse ist der abgekürzte Epochen Name das erste Zeichen des vollständigen ERA-namens. Bei diesem Zeichen handelt es sich entweder um die Groß-/Kleinschreibung für eine lateinische Alphabet Abkürzung oder um eine Kanji-Abkürzung mit einem Zeichen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> stellt keinen gültigen Zeitraum in dem Kalender dar, der in der <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />-Eigenschaft angegeben ist.</exception>
        <block subset="none" type="usage"><para>Wenn <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> die <see cref="T:System.Globalization.TaiwanCalendar" />, aber die <see cref="P:System.Threading.Thread.CurrentCulture" /> nicht "zh-tw" ist, geben <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> eine leere Zeichenfolge ("") zurück.</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Eine Ganzzahl zwischen 1 und 13, die den abzurufenden Monatsnamen darstellt.</param>
        <summary>Gibt den kulturabhängigen abgekürzten Namen des angegebenen Monats entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige abgekürzte Name des Monats, dargestellt durch <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für das invariante-Standard <xref:System.Globalization.DateTimeFormatInfo> Objekt gibt diese Methode eine Zeichenfolge aus dem <xref:System.Globalization.GregorianCalendar>-Objekt zurück.  
  
|`month`|Rückgabewert|  
|-------------|------------------|  
|1|Jan|  
|2|12.2|  
|3|Mar|  
|4|"Apr"|  
|5|Durchaus|  
|6|18.06.2015|  
|7|Zeitweise|  
|8|31.08.2015|  
|9|19.09.2014|  
|10|31.10|  
|11|24.11|  
|12|31.12.2012|  
|13|""|  
  
 <xref:System.Globalization.Calendar> Objekte können Kalender mit 13 Monaten aufnehmen. Für Kalender mit 12 Monaten wird die leere Zeichenfolge immer als Name des 13. Monats zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> ist größer als 1 oder größer als 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt alle Standardmuster zurück, in denen Datums- und Zeitwerte formatiert werden können.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle Standardmuster zurück, in denen Datums- und Zeitwerte formatiert werden können.</summary>
        <returns>Ein Array, das die Standardmuster enthält, in denen Datums- und Zeitwerte formatiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Array zurück, das alle benutzerdefinierten Format Zeichenfolgen enthält, die Standardformat Zeichenfolgen entsprechen. Eine Liste der Standardformat Zeichenfolgen finden Sie unter Standardformat Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md) .  
  
 In Formatierungs Vorgängen können Sie die benutzerdefinierten Format Zeichenfolgen in dem von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegebenen Array verwenden. Wenn Sie dies jedoch tun, kann die Zeichen folgen Darstellung eines Datums-und Uhrzeitwerts, der in diesem Formatierungs Vorgang zurückgegeben wird, nicht immer erfolgreich durch die Methoden `Parse` und `TryParse` analysiert werden. Daher können Sie nicht davon ausgehen, dass die von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegebenen benutzerdefinierten Format Zeichenfolgen für Roundtrip-Datums-und Uhrzeitwerte verwendet werden können. Dieses Problem wird anhand des folgenden Beispiels veranschaulicht. Er ruft ein <xref:System.Globalization.DateTimeFormatInfo> Objekt ab, das Formatierungsinformationen für die Kultur Italien (Italienisch) enthält. Sie übergibt jede benutzerdefinierte Format Zeichenfolge in dem von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns>-Methode zurückgegebenen Array an die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>-Methode, um die Zeichen folgen Darstellung eines Datums und einer Uhrzeit zu erstellen. In diesem Beispiel wird dann versucht, diesen Wert durch Aufrufen der <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>-Methode zu analysieren. Wie die Ausgabe des Beispiels zeigt, ergeben einige der benutzerdefinierten Format Zeichenfolgen keinen Datums-und Uhrzeitwert, der erfolgreich Roundtrips durchgeführt hat.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Zum Analysieren der Zeichen folgen Darstellung einer Datums-und uhrzeitanzahl, die in einer Reihe von vordefinierten benutzerdefinierten Formaten ausgedrückt werden kann, müssen Sie eine der folgenden Methoden aufzurufen:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Die benutzerdefinierten Format Zeichenfolgen im Array, die von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegeben werden, hängen vom aktuellen Kalender der Kultur ab, für die das <xref:System.Globalization.DateTimeFormatInfo> Objekt Formatierungsinformationen bereitstellt. Wenn sich der Kalender ändert, ändert sich auch das von dieser Methode zurückgegebene Array.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die Datums-und Uhrzeit Format Zeichenfolgen für die invariante Kultur sowie die Ergebnis Zeichenfolge angezeigt, die erzeugt wird, wenn diese Format Zeichenfolge verwendet wird, um ein bestimmtes Datum zu formatieren.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 Im Beispiel wird ein <xref:System.Globalization.DateTimeFormatInfo> Objekt instanziiert, das die invariante Kultur durch Aufrufen des <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A>-Konstruktors darstellt. Es könnte auch eine <xref:System.Globalization.DateTimeFormatInfo> abrufen, die die invariante Kultur aus der <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>-Eigenschaft darstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Eine Standardformatzeichenfolge.</param>
        <summary>Gibt alle Muster zurück, in denen Datums- und Zeitwerte mit der angegebenen Standardformatzeichenfolge formatiert werden können.</summary>
        <returns>Ein Array mit den Standardmustern, in denen Datums- und Uhrzeitwerte mit der angegebenen Formatzeichenfolge formatiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Array mit den benutzerdefinierten Format Zeichenfolgen zurück, die einer bestimmten Standardformat Zeichenfolge entsprechen. Eine Liste der Standardformat Zeichenfolgen finden Sie unter Standardformat Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md) .  
  
 In Formatierungs Vorgängen können Sie die benutzerdefinierten Format Zeichenfolgen in dem von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegebenen Array verwenden. Wenn Sie dies jedoch tun, kann die Zeichen folgen Darstellung eines Datums-und Uhrzeitwerts, der in diesem Formatierungs Vorgang zurückgegeben wird, nicht immer erfolgreich durch die Methoden `Parse` und `TryParse` analysiert werden. Daher können Sie nicht davon ausgehen, dass die von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegebenen benutzerdefinierten Format Zeichenfolgen für Roundtrip-Datums-und Uhrzeitwerte verwendet werden können. Dieses Problem wird anhand des folgenden Beispiels veranschaulicht. Er ruft ein <xref:System.Globalization.DateTimeFormatInfo> Objekt ab, das Formatierungsinformationen für die Kultur Russisch (Russisch) enthält. Er ruft die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29>-Methode für jede Standardformat Zeichenfolge auf und übergibt dann jede benutzerdefinierte Format Zeichenfolge im zurückgegebenen Array an die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>-Methode, um die Zeichen folgen Darstellung eines Datums und einer Uhrzeit zu erstellen. In diesem Beispiel wird dann versucht, diesen Wert durch Aufrufen der <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>-Methode zu analysieren. Wie die Ausgabe des Beispiels zeigt, ergeben einige der benutzerdefinierten Format Zeichenfolgen keinen Datums-und Uhrzeitwert, der erfolgreich Roundtrips durchgeführt hat.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Zum Analysieren der Zeichen folgen Darstellung einer Datums-und uhrzeitanzahl, die in einer Reihe von vordefinierten benutzerdefinierten Formaten ausgedrückt werden kann, müssen Sie eine der folgenden Methoden aufzurufen:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Die benutzerdefinierten Format Zeichenfolgen im Array, die von der <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>-Methode zurückgegeben werden, hängen vom aktuellen Kalender der Kultur ab, für die das <xref:System.Globalization.DateTimeFormatInfo> Objekt Formatierungsinformationen bereitstellt. Wenn sich der Kalender ändert, ändert sich auch das von dieser Methode zurückgegebene Array.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die Datums-und Uhrzeit Muster für den aktuellen Kalender angezeigt.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> ist keine gültige Standard-Formatzeichenfolge.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Ein <see cref="T:System.DayOfWeek" />-Wert.</param>
        <summary>Gibt den kulturabhängigen vollständigen Namen des angegebenen Wochentags entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige vollständige Name des Wochentags, dargestellt durch <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für das invariante-Standard <xref:System.Globalization.DateTimeFormatInfo> Objekt gibt diese Methode eine Zeichenfolge aus dem <xref:System.Globalization.GregorianCalendar>-Objekt zurück.  
  
|`dayofweek`|Rückgabewert|  
|-----------------|------------------|  
|Sonntag|Sunday|  
|Monday|Pfingst|  
|Dienstag|Mitteilte|  
|Mittwoch|Mittwochs|  
|Donnerstag|Mitteilte|  
|Freitag|Am|  
|Samstag|Samstag|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> ist kein gültiger <see cref="T:System.DayOfWeek" />-Wert.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Die Zeichenfolge mit dem Namen des Zeitraums.</param>
        <summary>Gibt die Ganzzahl zurück, die den angegebenen Zeitraum darstellt.</summary>
        <returns>Die Ganzzahl, die den Zeitraum darstellt, wenn <paramref name="eraName" /> gültig ist, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Era-Name ist der Name, den ein Kalender verwendet, um auf einen Zeitraum zu verweisen, der von einem bestimmten Punkt oder Ereignis abgerechnet wird. Beispiel: "A.D." oder " der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Beim Vergleich mit `eraName` wird die Groß-/Kleinschreibung nicht beachtet, z. b. "A.D.". entspricht "a.d.".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignoriert Interpunktions Zeichen in abgekürzten Zeit Namen, nur wenn die <xref:System.Globalization.GregorianCalendar> in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> ausgewählt ist und die Kultur "A.D." verwendet. als Era-Name, d. h. "A.D." entspricht "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> vergleicht `eraName` mit dem vollständigen Namen, der von <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> zurückgegeben wird, und mit dem abgekürzten Zeit Namen, der von <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 Das folgende Beispiel zeigt, dass <xref:System.Globalization.DateTimeFormatInfo> die Interpunktions Zeichen im Namen des Zeitraums ignoriert, nur wenn der Kalender Gregorianisch ist und die Kultur den ERA-Namen "A.D." verwendet.  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Die Ganzzahl, die den Zeitraum darstellt.</param>
        <summary>Gibt die Zeichenfolge mit dem Namen des angegebenen Zeitraums zurück.</summary>
        <returns>Eine Zeichenfolge mit dem Namen des Zeitraums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Era-Name ist der Name, den ein Kalender verwendet, um auf einen Zeitraum zu verweisen, der von einem bestimmten Punkt oder Ereignis abgerechnet wird. Beispiel: "A.D." oder " der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Die gültigen Werte für `era` werden in der <xref:System.Globalization.Calendar.Eras%2A>-Eigenschaft der entsprechenden Klasse aufgeführt, die von <xref:System.Globalization.Calendar>abgeleitet ist. Beispiel: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zeigt eine Liste von Epochen an, die von dieser Implementierung unterstützt werden.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> stellt keinen gültigen Zeitraum in dem Kalender dar, der in der <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />-Eigenschaft angegeben ist.</exception>
        <block subset="none" type="usage"><para>Wenn der Kalender durch <see cref="T:System.Globalization.TaiwanCalendar" /> dargestellt wird, der <see cref="P:System.Threading.Thread.CurrentCulture" /> jedoch nicht "zh-tw" ist, geben <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> eine leere Zeichenfolge ("") zurück.</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Der Typ des erforderlichen Formatierungsdiensts.</param>
        <summary>Gibt ein Objekt vom angegebenen Typ zurück, das einen Datum-und Zeit-Formatierungsdienst bereitstellt.</summary>
        <returns>Das aktuelle Objekt, wenn<paramref name="formatType" /> mit dem Typ des aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" /> übereinstimmt, andernfalls <see langword="null" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Format(String, IFormatProvider)` Methode, die von den Basis Datentypen unterstützt wird, ruft diese Methode auf, wenn das aktuelle <xref:System.Globalization.DateTimeFormatInfo> Objekt als <xref:System.IFormatProvider>-Parameter übergeben wird. Diese Methode implementiert <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Das <see cref="T:System.IFormatProvider" />, das das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt abruft.  
  
- oder - 
 <see langword="null" /> zum Abrufen von <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Gibt das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zurück, das dem angegebenen <see cref="T:System.IFormatProvider" /> zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das <see cref="T:System.IFormatProvider" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet die <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>-Methode `formatProvider` mithilfe eines <xref:System.Globalization.DateTimeFormatInfo>-Objekts als `Type` Parameter. Wenn `formatProvider` `null` oder wenn <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> `null`zurückgibt, gibt diese Methode <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>zurück.  
  
 Die Anwendung kann mit einer der folgenden Methoden ein <xref:System.Globalization.DateTimeFormatInfo> Objekt für eine bestimmte Kultur erhalten:  
  
-   Die <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft  
  
-   Die <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>-Methode, bei der `provider` ein <xref:System.Globalization.CultureInfo>-Objekt ist.  
  
 Ein <xref:System.Globalization.DateTimeFormatInfo>-Objekt kann nur für die invariante Kultur oder für bestimmte Kulturen, nicht für neutrale Kulturen, erstellt werden.  
  
 Weitere Informationen über die invariante Kultur, bestimmte Kulturen und neutrale Kulturen finden Sie in der Beschreibung der <xref:System.Globalization.CultureInfo>-Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Eine Ganzzahl zwischen 1 und 13, die den abzurufenden Monatsnamen darstellt.</param>
        <summary>Gibt den kulturabhängigen vollständigen Namen des angegebenen Monats entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige vollständige Name des Monats, dargestellt durch <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für das invariante-Standard <xref:System.Globalization.DateTimeFormatInfo> Objekt gibt diese Methode eine Zeichenfolge aus dem <xref:System.Globalization.GregorianCalendar>-Objekt zurück.  
  
|`month`|Rückgabewert|  
|-------------|------------------|  
|1|January|  
|2|22.02.2016|  
|3|Am|  
|4|Am|  
|5|Durchaus|  
|6|Juni|  
|7|Am|  
|8|August|  
|9|September|  
|10|Vom|  
|11|Bers|  
|12|Dez|  
|13|""|  
  
 <xref:System.Globalization.Calendar> Objekte können Kalender mit 13 Monaten aufnehmen. Für Kalender mit 12 Monaten wird die leere Zeichenfolge immer als Name des 13. Monats zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> ist größer als 1 oder größer als 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Einer der <see cref="T:System.DayOfWeek" />-Werte.</param>
        <summary>Ruft den am stärksten abgekürzten Tagesnamen für einen angegebenen Wochentag ab, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der abgekürzte Name der Woche, die dem <paramref name="dayOfWeek" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden verschiedene Methoden und Eigenschaften veranschaulicht, die Datums-und Uhrzeit Format Muster, den Namen des systemeigenen Kalenders sowie vollständige und abgekürzte Monats-und Tages Namen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" /> ist kein Wert in der <see cref="T:System.DayOfWeek" />-Enumeration.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das schreibgeschützte <see cref="T:System.Globalization.DateTimeFormatInfo" />-Standardobjekt ab, das kulturunabhängig (invariant) ist.</summary>
        <value>Ein schreibgeschütztes Objekt, das kulturunabhängig (invariant) ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ändert sich nicht, unabhängig von der aktuellen Kultur. Aus diesem Grund kann das <xref:System.Globalization.DateTimeFormatInfo> Objekt der invarianten Kultur verwendet werden, um konsistente, Kultur unabhängige Ergebnisse bei der Verarbeitung und Formatierung von Daten, die mehrere Kulturen sind, zu erzielen. Wenn z. b. Datums-und Uhrzeit Daten aus mehreren Kulturen in Form einer Zeichenfolge beibehalten werden sollen, können Sie mithilfe des <xref:System.Globalization.DateTimeFormatInfo> Objekts der invarianten Kultur formatiert und gespeichert werden. Sie kann dann mithilfe des <xref:System.Globalization.DateTimeFormatInfo> Objekts der invarianten Kultur analysiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Globalization.DateTimeFormatInfo" /> schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Datumswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen langen Datumswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "D" bereitgestellt werden. Das folgende Beispiel veranschaulicht die Beziehungen zwischen den folgenden: die Standardformat Zeichenfolge "D", die benutzerdefinierte Format Zeichenfolge, die von der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft zurückgegeben wird, und die kulturspezifische Darstellung eines Datums.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Weitere Informationen zum Erstellen benutzerdefinierter Format Zeichenfolgen wie "dddd, dd MMMM yyyy" finden Sie unter benutzerdefinierte Format Zeichenfolgen für [Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md) .  
  
 Sie sollten das Datums Trennzeichen im langen Datums Muster auf eine exakte Zeichenfolge festlegen, anstatt den Platzhalter für das Datums Trennzeichen zu verwenden. Um z. b. das Muster "mm-dd-yyyy" zu erhalten, legen Sie das Long Date-Muster auf "mm-dd-yyyy" fest.  
  
 Der Wert dieser Eigenschaft kann sich ändern, wenn der von einer Kultur verwendete Kalender geändert wird. Das folgende Beispiel zeigt beispielsweise, wie sich die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft eines <xref:System.Globalization.CultureInfo> Objekts, das die arabische Kultur (Syrien) darstellt, ändert, wenn sich das <xref:System.Globalization.Calendar> Objekt ändert, das von der Kultur verwendet wird.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>-Eigenschaft für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Uhrzeitwert ab oder legt diese fest.</summary>
        <value>Das Formatmuster für einen langen Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "t" bereitgestellt werden.  
  
 Es wird empfohlen, das Zeit Trennzeichen im langen Zeitmuster auf eine exakte Zeichenfolge festzulegen, anstatt den Platzhalter für Zeit Trennzeichen zu verwenden. Wenn Sie z. b. das Muster "h-mm-ss" abrufen möchten, legen Sie das Long Date-Muster auf "h-mm-ss" fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Monats- und Tageswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen Tages- und Monatswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolgen "m" und "m" bereitgestellt werden.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 Es wird empfohlen, das Datums Trennzeichen im Muster "Monat" und "Tag" auf eine exakte Zeichenfolge festzulegen, anstatt den Platzhalter für den Datums Trennzeichen zu verwenden Wenn Sie z. b. das Muster mm-dd abrufen möchten, legen Sie das Muster für Monat und Tag auf "mm-dd" fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der Monatsnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt dieses fest.</summary>
        <value>Ein Zeichenfolgenarray von Monatsnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Sprachen wird ein Monats Name, der Teil eines Datums ist, im Feld "geniktiv" angezeigt. Beispielsweise besteht ein Datum in der Kultur Russisch (Russische Föderation) oder "ru-ru" aus der Tagesnummer und dem Namen des Namen des Genies, wie z. b. 1.  
  
 Wenn diese Eigenschaft festgelegt ist, muss das Array eindimensional sein und muss genau 13 Elemente aufweisen. <xref:System.Globalization.Calendar> Objekte bieten Kalender mit 13 Monaten an. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird. Wenn Sie die <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>-Eigenschaft festlegen, müssen Sie auch die <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden verschiedene Methoden und Eigenschaften veranschaulicht, die Datums-und Uhrzeit Format Muster, den Namen des systemeigenen Kalenders sowie vollständige und abgekürzte Monats-und Tages Namen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang ist das Array mehrdimensional oder hat eine Länge, die nicht genau 13 beträgt.</exception>
        <exception cref="T:System.ArgumentNullException">Bei einem Set-Vorgang ist das Array oder eins seiner Elemente <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Array vom Typ <see cref="T:System.String" /> ab, das die kulturabhängigen vollständigen Namen der Monate enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Array vom Typ <see cref="T:System.String" />, das die kulturabhängigen vollständigen Namen der Monate enthält. In einem Kalender mit 12 Monaten ist das 13. Element des Arrays eine leere Zeichenfolge. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" und "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt ist, muss das Array eindimensional sein und muss genau 13 Elemente aufweisen. <xref:System.Globalization.Calendar> Objekte bieten Kalender mit 13 Monaten an. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres dar, der durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft definiert wird.  
  
 Wenn Sie die <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>-Eigenschaft festlegen, müssen Sie auch die <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>-Eigenschaft festlegen.  
  
 Wenn das benutzerdefinierte Muster das Format Muster "MMMM" enthält, zeigt <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> den Wert <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> anstelle von "MMMM" im Format Muster an.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das multidimensional ist oder eine Länge von etwa 13 hat.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den systemeigenen Namen des Kalenders ab, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <value>Der systemeigene Name des in der Kultur verwendeten Kalenders, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist, sofern der Name verfügbar ist, oder eine leere Zeichenfolge (""), wenn der systemeigene Kalender nicht verfügbar ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden verschiedene Methoden und Eigenschaften veranschaulicht, die Datums-und Uhrzeit Format Muster, den Namen des systemeigenen Kalenders sowie vollständige und abgekürzte Monats-und Tages Namen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Wenn <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> die <see cref="T:System.Globalization.TaiwanCalendar" />, aber die <see cref="P:System.Threading.Thread.CurrentCulture" /> nicht "zh-tw" ist, geben <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> eine leere Zeichenfolge ("") zurück.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichenfolgenkennzeichner für Zeitangaben nach 12 Uhr mittags ("post meridiem", p.m.) ab oder legt diesen fest.</summary>
        <value>Der Zeichenfolgenkennzeichner für Zeitangaben nach 12 Uhr mittags ("post meridiem", p.m.). Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>-Eigenschaft wird für alle Male von 12:00:00 (Noon) bis 23:59:59.999 verwendet.  
  
 Wenn das benutzerdefinierte Muster das Format Muster "TT" enthält und die Uhrzeit nach 12 Uhr mittags liegt, zeigt <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> den Wert <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> anstelle von "TT" im Format Muster an. Wenn das benutzerdefinierte Muster das Format Muster "t" enthält, wird nur das erste Zeichen <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> angezeigt. Die Anwendung sollte "TT" für Sprachen verwenden, für die es erforderlich ist, den Unterschied zwischen am und PM beizubehalten. Ein Beispiel hierfür ist die japanische Sprache, in der nicht das erste, sondern das zweite Zeichen des AM/PM-Bezeichners das Unterscheidungsmerkmal darstellt.  
  
 Für Kulturen, die keinen PM-Kenn Zeichner verwenden, gibt diese Eigenschaft eine leere Zeichenfolge zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">Das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, für das der Wrapper erstellt wird.</param>
        <summary>Gibt einen schreibgeschützten <see cref="T:System.Globalization.DateTimeFormatInfo" />-Wrapper zurück.</summary>
        <returns>Ein schreibgeschützter <see cref="T:System.Globalization.DateTimeFormatInfo" />-Wrapper.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Wrapper verhindert Änderungen an `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Uhrzeitwert ab, der auf der Spezifikation 1123 Request for Comments (Internet Engineering Task Force- IETF RFC ()) basiert.</summary>
        <value>Die benutzerdefinierte Formatierungszeichenfolge für einen Uhrzeitwert, die auf der RFC-Spezifikation 1123 der IETF basiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolgen "r" und "r" bereitgestellt werden.  
  
 Das RFC1123-Muster reflektiert einen definierten Standard, und die-Eigenschaft ist schreibgeschützt. Daher ist Sie unabhängig von der Kultur immer identisch. Die benutzerdefinierte Formatzeichenfolge lautet "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'".  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert von RFC1123Pattern für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Ein Array benutzerdefinierter Formatzeichenfolgen.</param>
        <param name="format">Die den im <paramref name="patterns" />-Parameter angegebenen benutzerdefinierten Formatzeichenfolgen zugeordnete Standardformatzeichenfolge.</param>
        <summary>Legt die benutzerdefinierten Formatzeichenfolgen für Datum und Uhrzeit fest, die einer angegebenen Standardformatzeichenfolge entsprechen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>-Methode definiert die benutzerdefinierten Format Zeichenfolgen, die einer bestimmten Standardformat Zeichenfolge für Datum und Uhrzeit entsprechen. Wenn ein Aufruf einer Formatierungs Methode für Datum und Uhrzeit die Standardformat Zeichenfolge für Datum und Uhrzeit enthält, die durch `format`angegeben wird, verwendet die-Methode das erste-Element im `patterns` Array, um das Format der resultierenden Zeichenfolge zu definieren.  
  
> [!WARNING]
>  Bei der Verarbeitung der Zeichen folgen Darstellung eines Datums und einer Uhrzeit durchlaufen die Methoden `Parse` und `TryParse` nicht alle Zeichen folgen in `patterns` vollständig. Wenn Sie eine Datums-und Uhrzeit Zeichenfolge für bestimmte Formate in einem Analyse-Vorgang benötigen, sollten Sie das Array gültiger Formate an die <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>-, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>-, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>-oder <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>-Methode übergeben.  
  
 Sie können benutzerdefinierte Format Zeichenfolgen definieren, die den standardmäßigen Datums-und Uhrzeit Format Zeichenfolgen "d", "d", "t", "t" und "y" oder "y" entsprechen. Wenn der Wert `format` eine beliebige andere Standardformat Zeichenfolge ist, löst die <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>-Methode eine <xref:System.ArgumentException>aus.  
  
 Wenn Ihre benutzerdefinierten Format Zeichenfolgen für Datum und Uhrzeit Datums Trennzeichen enthalten, sollten Sie explizit ein Datums Trennzeichen angeben, anstatt sich auf die Analyse-oder Formatierungs Methode zu verlassen, die den benutzerdefinierten Format Bezeichner "/" durch ein bestimmtes Datums Trennzeichen ersetzt. Um z. b. das Muster "mm-dd-yyyy" zu erhalten, verwenden Sie das Muster "mm-dd-yyyy".  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Globalization.CultureInfo> Objekt instanziiert, das die Kultur "en-US" (Englisch-USA) darstellt und es verwendet, um ein Array von Datums-und Uhrzeit Zeichenfolgen mithilfe der Standardformat Zeichenfolge "Y" zu analysieren. Anschließend wird die <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>-Methode verwendet, um eine neue benutzerdefinierte Format Zeichenfolge mit der Standardformat Zeichenfolge "Y" zuzuordnen, und versucht dann, das Array von Datums-und Uhrzeit Zeichenfolgen zu analysieren. Die Ausgabe des Beispiels zeigt, dass die neue benutzerdefinierte Format Zeichenfolge sowohl in der Verarbeitungs-als auch in der Formatierungs Operation verwendet wird.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" /> ist <see langword="null" /> oder ein Array der Länge 0 (null).  
  
- oder - 
 <paramref name="format" /> ist keine gültige Standardformatzeichenfolge oder ist eine Standardformatzeichenfolge, deren Muster nicht festgelegt werden können.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> hat ein Arrayelement, dessen Wert <see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Dieses <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen kurzen Datumswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen kurzen Datumswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "d" bereitgestellt werden.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert der <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>-Eigenschaft und der Wert eines Datums angezeigt, das mit der <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>-Eigenschaft für einige Kulturen formatiert ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 Im folgenden Beispiel wird die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>-Eigenschaft eines <xref:System.Globalization.DateTimeFormatInfo> Objekts geändert, das die Formatierungs Konventionen der Kultur Englisch (USA) darstellt. Außerdem wird ein Datumswert zweimal angezeigt, zunächst um die ursprüngliche <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft widerzuspiegeln und dann den neuen Eigenschafts Wert widerzuspiegeln.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der am stärksten abgekürzten, eindeutigen Tagesnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt diese fest.</summary>
        <value>Ein Zeichenfolgenarray von Tagesnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Das Standard Array beginnt am Sonntag.

## Examples  
 Im folgenden Beispiel werden verschiedene Methoden und Eigenschaften veranschaulicht, die Datums-und Uhrzeit Format Muster, den Namen des systemeigenen Kalenders sowie vollständige und abgekürzte Monats-und Tages Namen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang verfügt das Array nicht genau über sieben Elemente.</exception>
        <exception cref="T:System.ArgumentNullException">In einem set-Vorgang entspricht das Wertearray oder eines seiner Elemente dem Wert <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen kurzen Uhrzeitwert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen kurzen Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "t" bereitgestellt werden.  
  
 Es wird empfohlen, das Zeit Trennzeichen im kurzen Zeitmuster auf eine exakte Zeichenfolge festzulegen, anstatt den Platzhalter für Zeit Trennzeichen zu verwenden. Wenn Sie z. b. das Muster h-mm-SS abrufen möchten, legen Sie das Muster für kurze Zeit auf "h-mm-ss" fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen sortierbaren Datums-und Zeitwert ab.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen sortierbaren Datums-und Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "s" bereitgestellt werden.  
  
 Die Format Zeichenfolge, die von der <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>-Eigenschaft zurückgegeben wird, reflektiert einen definierten Standard (ISO 8601), und die-Eigenschaft ist schreibgeschützt. Daher ist Sie unabhängig von der Kultur immer identisch. Die benutzerdefinierte Formatzeichenfolge lautet "yyyy'-'MM'-'dd'T'HH':'mm':'ss".  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die die Bestandteile der Uhrzeit trennt, d. h. Stunde, Minuten und Sekunden, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die die Bestandteile der Uhrzeit trennt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das benutzerdefinierte Muster das Format Muster ":" enthält, zeigt <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> den Wert <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> anstelle von ":" im Format Muster an.  
  
 Das Zeit Trennzeichen wird von der <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>-Eigenschaft abgeleitet. Es wird empfohlen, das Zeit Trennzeichen in kurzen oder langen Zeit Mustern auf eine exakte Zeichenfolge festzulegen, anstatt den Platzhalter für Zeit Trennzeichen zu verwenden. Wenn Sie z. b. das Muster "h-mm-ss" abrufen möchten, legen Sie das Muster auf "h-mm-ss" fest. Mit dieser Vorgehensweise können Sie auch Muster wie z. b. "h' h ' mm es '" (3H 36M 12S) festlegen, die mehrere Trennzeichen Typen enthalten. Die <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>-Eigenschaft definiert die Zeichenfolge, die das Zeit Trennzeichen (":" benutzerdefinierter Format Bezeichner für Datum und Uhrzeit) in einer Ergebnis Zeichenfolge in einem Formatierungs Vorgang ersetzt. Außerdem wird die Zeit Trennzeichen-Zeichenfolge in einem Verarbeitungsvorgang definiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Globalization.CultureInfo>-Objekt für die Kultur "en-US" instanziiert, das Datums Trennzeichen in "." geändert und ein Datum mithilfe der Standardformat Zeichenfolgen "t", "t", "f", "f", "g" und "g" angezeigt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für eine universelle sortierbare Datums- und Zeitzeichenfolge gemäß ISO 8601 ab.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für eine universelle sortierbare Datums- und Zeitzeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>-Eigenschaft definiert das Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolge "u" bereitgestellt werden. Sie kann verwendet werden, um Datumsangaben und Uhrzeiten in einer sortierbaren Reihenfolge mit dem universellen Zeit Kenn Zeichner "Z" am Ende anzuzeigen. Das Format ist sortierbar, weil es führende Nullen für Jahr, Monat, Tag, Stunde, Minute und Sekunde verwendet. Die benutzerdefinierte Format Zeichenfolge ("yyyy'-' mm'-' dd HH ': ' mm ': ' ss' Z '") ist unabhängig von Kultur-oder Format Anbieter identisch.  
  
 Die Format Zeichenfolge, die von der <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>-Eigenschaft zurückgegeben wird, reflektiert einen definierten Standard, und die-Eigenschaft ist schreibgeschützt. Daher ist Sie unabhängig von der Kultur immer identisch. Die benutzerdefinierte Formatzeichenfolge lautet "yyyy'-'MM'-'dd HH':'mm':'ss'Z'".  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard mäßige DateTime-Format Zeichenfolgen</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Jahres- und Monatswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen Jahres- und Monatswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>-Eigenschaft definiert das kulturspezifische Format von Datums Zeichenfolgen, die von Aufrufen der Methoden <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> sowie von zusammengesetzten Format Zeichenfolgen zurückgegeben werden, die die Standardformat Zeichenfolgen "y" und "y" bereitgestellt werden.  
  
 Diese Eigenschaft ist betroffen, wenn sich der Wert der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>-Eigenschaft ändert.  
  
 Es wird empfohlen, das Datums Trennzeichen im Jahr-Monat-Muster auf eine exakte Zeichenfolge festzulegen, anstatt den Platzhalter für das Datums Trennzeichen zu verwenden. Um z. b. das Muster "mm-yyyy" zu erhalten, legen Sie das Jahr-Monat-Muster auf "mm-yyyy" fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> für einige Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standard-Formatzeichenfolgen für Datum und Uhrzeit</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Benutzerdefinierte Formatzeichenfolgen für Datum und Uhrzeit</related>
      </Docs>
    </Member>
  </Members>
</Type>
