<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="109eb84474f226248e8a75e5ce3bb4bbb4d38683" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt kulturabhängige Informationen zum Format von Datum und Zeitangaben bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften der <xref:System.Globalization.DateTimeFormatInfo> Klasse enthalten kulturspezifische Informationen für die Formatierung oder Datum und Uhrzeit-Werte wie z. B. Folgendes analysieren:  
  
-   Die Muster, die zum Formatieren der Datumswerte verwendet.  
  
-   Die Muster, die zum Formatieren der Time-Werten verwendet.  
  
-   Die Namen der Tage der Woche.  
  
-   Die Namen der Monate des Jahres.  
  
-   Die Uhr und Uhr. Einheitenkennzeichner in Time-Werten verwendet.  
  
-   Der Kalender, in dem Datumsangaben ausgedrückt werden.  
  
 In diesem Abschnitt  
  
-   [Instanziieren eines DateTimeFormatInfo-Objekts](#instantiating)  
  
    -   [Für die invariante Kultur](#instantiating_Invariant)  
  
    -   [Für eine bestimmte Kultur](#instantiating_Specific)  
  
    -   [Für eine neutrale Kultur](#instantiating_neutral)  
  
    -   [Für die aktuelle Kultur](#instantiating_Current)  
  
-   [DateTimeFormatInfo und dynamische Daten](#dynamic)  
  
-   [Formatieren von Datums- und Uhrzeitangaben](#Formatting_dates_times)  
  
-   [DateTimeFormatInfo-Eigenschaften und Formatzeichenfolgen](#properties)  
  
-   [DateTimeFormatInfo-Eigenschaften ändern](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Instanziieren eines DateTimeFormatInfo-Objekts  
 Ein <xref:System.Globalization.DateTimeFormatInfo> Objekt kann die Formatierungskonventionen der invarianten Kultur, eine bestimmte Kultur, eine neutrale Kultur oder die aktuelle Kultur darstellen. In diesem Abschnitt wird erläutert, wie jede Art von instanziieren <xref:System.Globalization.DateTimeFormatInfo> Objekt.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts, für die invariante Kultur  
 Die invariante Kultur darstellt, eine Kultur, die kulturunabhängig ist. Es basiert auf der englischen Sprache, jedoch nicht auf alle bestimmte englischsprachige Länder/Regionen. Obwohl die Daten für bestimmte Kulturen dynamisch sein können und können neue kulturelle Konventionen oder benutzereinstellungen entsprechend ändern, ändert sich die Daten der invarianten Kultur nicht. Instanziieren Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der invarianten Kultur auf folgende Weise darstellt:  
  
-   Durch das Abrufen des Werts der <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Aufrufen der parameterlosen <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> Konstruktor. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt wird Lese-/Schreibzugriff.  
  
-   Durch das Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> Eigenschaft aus der <xref:System.Globalization.CultureInfo> von zurückgegebene Objekt der <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
 Im folgenden Beispiel wird jede dieser Methoden zum Instanziieren einer <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das die invariante Kultur darstellt. Er gibt dann an, ob das Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für eine bestimmte Kultur  
 Eine bestimmte Kultur darstellt, eine Sprache, die in einem bestimmten Land/Region gesprochen wird. Z. B. En-US ist, eine bestimmte Kultur, die die englische Sprache, die in den Vereinigten Staaten darstellt, und de-Zertifizierungsstelle ist eine bestimmte Kultur, die die englische Sprache gesprochen in Kanada darstellt. Instanziieren Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen einer bestimmten Kultur auf folgende Weise darstellt:  
  
-   Durch Aufrufen der <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> -Methode und das Abrufen des Werts zurückgegebenen <xref:System.Globalization.CultureInfo> des Objekts <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Übergeben der statischen <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> Methode eine <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, deren <xref:System.Globalization.DateTimeFormatInfo> -Objekt abgerufen werden soll. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt wird Lese-/Schreibzugriff.  
  
-   Durch Aufrufen der statischen <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> -Methode und das Abrufen des Werts zurückgegebenen <xref:System.Globalization.CultureInfo> des Objekts <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt wird Lese-/Schreibzugriff.  
  
-   Durch Aufrufen der <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> -Konstruktor und das Abrufen des Werts zurückgegebenen <xref:System.Globalization.CultureInfo> des Objekts <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt wird Lese-/Schreibzugriff.  
  
 Das folgende Beispiel zeigt jede dieser Methoden zum Instanziieren einer <xref:System.Globalization.DateTimeFormatInfo> -Objekt und gibt an, ob das resultierende Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für eine neutrale Kultur  
 Eine neutrale Kultur darstellt, eine Kultur oder Sprache, die unabhängig von einem Land/Region ist; Es ist in der Regel das übergeordnete Element eine oder mehrere bestimmte Kulturen. Fr ist z. B. eine neutrale Kultur für die französische Sprache und das übergeordnete Element der fr-FR-Kultur. Instanziieren Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen einer neutralen Kultur in die gleiche Weise wie darstellt, die Sie erstellen eine <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen einer bestimmten Kultur darstellt. Darüber hinaus können Sie einer neutralen Kultur abrufen <xref:System.Globalization.DateTimeFormatInfo> Objekt durch eine neutrale Kultur aus einer bestimmten Kultur abrufen <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> -Eigenschaft und das Abrufen der <xref:System.Globalization.DateTimeFormatInfo> zurückgegebenes Objekt seine <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft. Wenn die übergeordnete Kultur die invariante Kultur, die den zurückgegebenen darstellt <xref:System.Globalization.DateTimeFormatInfo> Objekt wird Lese-/Schreibzugriff. Das folgende Beispiel veranschaulicht diese Methoden zum Instanziieren einer <xref:System.Globalization.DateTimeFormatInfo> Objekt, das eine neutrale Kultur darstellt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  In .NET Framework, Version 1.0 über [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], bei dem Versuch zum Abrufen einer <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das die Formatierungskonventionen einer neutralen Kultur widerspiegelt löst eine <xref:System.NotSupportedException> Ausnahme.  
  
 Eine neutrale Kultur fehlen jedoch kulturspezifische Formatierungsinformationen, da sie unabhängig von einem bestimmten Land/Region ist. Anstelle von Auffüllen der <xref:System.Globalization.DateTimeFormatInfo> -Objekt mit generischen Werte für die .NET Framework gibt eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das die Formatierungskonventionen einer bestimmten Kultur, die widerspiegelt, ist ein untergeordnetes Element der neutralen Kultur. Z. B. die <xref:System.Globalization.DateTimeFormatInfo> -Objekt für die En neutrale Kultur die Formatierungskonventionen der Kultur En-US, wiedergibt und die <xref:System.Globalization.DateTimeFormatInfo> -Objekt für die Kultur fr die Formatierungskonventionen der Kultur fr-FR widerspiegelt.  
  
 Sie können Code wie den folgenden verwenden, um zu bestimmen, welche bestimmten Kultur Formatierungskonventionen eine neutrale Kultur darstellt. Im Beispiel wird Reflektion zum Vergleichen der <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften einer neutralen Kultur mit den Eigenschaften einer bestimmten untergeordneten Kultur. Es werden Äquivalent eingestuft, wenn sie den gleichen "Calendar" sind zwei Kalender betrachtet, und für den gregorianischen Kalender, wenn ihre <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> Eigenschaften identische Werte haben.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Instanziieren eines DateTimeFormatInfo-Objekts für die aktuelle Kultur  
 Instanziieren Sie ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der aktuellen Kultur auf folgende Weise darstellt:  
  
-   Durch das Abrufen des Werts der <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch das Abrufen des Werts der <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> Eigenschaft aus der <xref:System.Globalization.CultureInfo> von zurückgegebene Objekt der <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaft. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
-   Durch Aufrufen der <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> Methode mit einem <xref:System.Globalization.CultureInfo> Objekt, das die aktuelle Kultur darstellt. Das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt.  
  
 Im folgenden Beispiel wird jede dieser Methoden zum Instanziieren einer <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der aktuellen Kultur darstellt. Er gibt dann an, ob das Objekt schreibgeschützt ist.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Sie können eine nicht schreibgeschützte erstellen <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Konventionen der aktuellen Threadkultur in eine der folgenden Weisen darstellt:  
  
-   Durch das Abrufen von einem <xref:System.Globalization.DateTimeFormatInfo> -Objekts in die drei vorherigen Methoden und Aufrufen der <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> Methode für das zurückgegebene <xref:System.Globalization.DateTimeFormatInfo> Objekt. Erstellt eine Kopie des ursprünglichen <xref:System.Globalization.DateTimeFormatInfo> -Objekt, außer dass die <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> Eigenschaft ist `false`.  
  
-   Durch Aufrufen der <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> Methode zum Erstellen einer <xref:System.Globalization.CultureInfo> -Objekt, das die aktuelle Kultur darstellt, und klicken Sie dann mithilfe seiner <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> abzurufende Eigenschaft der <xref:System.Globalization.DateTimeFormatInfo> Objekt.  
  
 Das folgende Beispiel zeigt jede Art der Instanziierung einer Lese-/Schreibzugriff <xref:System.Globalization.DateTimeFormatInfo> -Objekt und zeigt den Wert von dessen <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> Eigenschaft.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 In Windows der Benutzer kann einige überschreiben die <xref:System.Globalization.DateTimeFormatInfo> Eigenschaftswerte, die bei der Formatierung und Analysevorgängen über verwendet die **Region und Sprache** Anwendung in der Systemsteuerung. Beispielsweise empfiehlt sich ein Benutzer mit der Kultur Englisch (Vereinigte Staaten) ist lange Time-Werten, die mit einem 24-Stunden-Format (im Format hh: mm:) anstelle der Standard-12-Stunden-Format (in dem Format hh: mm: ss) angezeigt. Die <xref:System.Globalization.DateTimeFormatInfo> Objekte abgerufen, auf die Weise erörtert zuvor spiegeln diese Benutzer Außerkraftsetzungen. Wenn dies nicht erwünscht ist, können Sie erstellen eine <xref:System.Globalization.NumberFormatInfo> -Objekt, das Benutzer nicht wiedergibt überschreibt (und ist auch Lese-/Schreibzugriff, statt schreibgeschützt) durch Aufrufen der <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor und Bereitstellen eines Werts des `false` für die `useUserOverride` Argument. Das folgende Beispiel veranschaulicht dies für ein System, dessen aktuelle Kultur Englisch (Vereinigte Staaten) ist und, dessen Muster für lange Zeit in hh: mm: von der Standardeinstellung hh: mm: ss geändert wurde.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo und dynamische Daten  
 Die länderspezifische zum Formatieren von Datum und Uhrzeit von bereitgestellten Werte der <xref:System.Globalization.DateTimeFormatInfo> Klasse ist dynamisch, wie kulturellen durch bereitgestellte Daten der <xref:System.Globalization.CultureInfo> Klasse. Sie sollten keine Annahmen über die Stabilität der Werte für <xref:System.Globalization.DateTimeFormatInfo> verknüpften Objekte mit bestimmten <xref:System.Globalization.CultureInfo> Objekte. Nur die Daten, die die invariante Kultur und die zugehörigen gebotenen <xref:System.Globalization.DateTimeFormatInfo> Objekt stabil ist. Zwischen anwendungssitzungen oder sogar, wenn die Anwendung ausgeführt wird, können andere Daten ändern. Es gibt vier Hauptquellen für ändern:  
  
-   Systemupdates. Kulturelle Einstellungen wie z. B. die bevorzugte Kalender oder üblichen Datums- und Zeitformate der Zeit ändern. In diesem Fall handelt es sich bei Windows Update enthält Änderungen an der <xref:System.Globalization.DateTimeFormatInfo> Eigenschaftswert für eine bestimmte Kultur.  
  
-   Ersatzkulturen. Die <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasse kann verwendet werden, um die Daten einer vorhandenen Kultur ersetzen.  
  
-   Kaskadierende Änderungen von Eigenschaftswerten. Eine Reihe von Eigenschaften kulturbezogene kann zur Laufzeit, die wiederum eine ändern <xref:System.Globalization.DateTimeFormatInfo> Daten ändern. Beispielsweise kann für die aktuelle Kultur entweder programmgesteuert oder durch die Benutzeraktion geändert werden. In diesem Fall die <xref:System.Globalization.DateTimeFormatInfo> zurückgegebenes Objekt die <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> eigenschaftsänderungen für ein Objekt, das die aktuelle Kultur zugeordnet. Auf ähnliche Weise Kalenders der Kultur ändern kann, was zu Änderungen führen zu zahlreichen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaftswerte.  
  
-   Benutzereinstellungen. Benutzer der Anwendung empfiehlt sich die aktuelle Systemkultur, durch die Optionen "Regions- und Sprachoptionen" in der Systemsteuerung zugeordneten Werte zu überschreiben. Beispielsweise können Benutzer wählen, um das Datum in einem anderen Format anzuzeigen. Wenn die <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, die Eigenschaften der <xref:System.Globalization.DateTimeFormatInfo> Objekt wird auch von den Einstellungen des Benutzers abgerufen. Wenn die benutzereinstellungen nicht kompatibel mit der Kultur zugeordnet sind die <xref:System.Globalization.CultureInfo> Objekt (z. B., wenn die ausgewählte Kalender nicht erkennbar Kalender ist die <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> Eigenschaft), die Ergebnisse der Methoden und die Werte der Eigenschaften sind nicht definiert.  
  
 Minimieren Sie die Möglichkeit, dass inkonsistente Daten, die alle Benutzer überschreibbaren Eigenschaften des ein <xref:System.Globalization.DateTimeFormatInfo> Objekt werden initialisiert, wenn das Objekt erstellt wird. Es gibt noch Inkonsistenz, die Möglichkeit, da weder objekterstellung noch die Außerkraftsetzung Benutzerprozess atomarisch ist und die relevanten Werte können während der Erstellung des Objekts ändern. Allerdings sollten diese Situation tritt nur sehr selten sein.  
  
 Sie können steuern, ob Benutzer Außerkraftsetzungen in wiedergegeben werden <xref:System.Globalization.DateTimeFormatInfo> -Objekten, das dieselbe Kultur aufweist wie die Systemkultur darstellen. Die folgende Tabelle enthält, auf welche Weise eine <xref:System.Globalization.DateTimeFormatInfo> Objekt abgerufen werden kann, und gibt an, ob das resultierende Objekt Außerkraftsetzungen für Benutzer widerspiegeln.  
  
|Quelle CultureInfo und DateTimeFormatInfo-Objekts|Gibt die Benutzer Außerkraftsetzungen wieder|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat`-Eigenschaft|Ja|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>-Eigenschaft|Ja|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>-Methode|Ja|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>-Methode|Nein|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>-Konstruktor|Ja|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>-Konstruktor|Hängt vom Wert der `useUserOverride` Parameter|  
  
 Wenn ein zwingender Grund nicht vorhanden ist, sollten Benutzer Außerkraftsetzungen berücksichtigen, bei der Verwendung der <xref:System.Globalization.DateTimeFormatInfo> Objekt in Clientanwendungen zu formatieren und Benutzereingaben analysieren oder um Daten anzuzeigen. Für serveranwendungen oder unbeaufsichtigten Anwendungen sollten Sie nicht. Allerdings bei Verwendung von der <xref:System.Globalization.DateTimeFormatInfo> Objekt entweder explizit oder implizit um Datums- und Zeitdaten im Zeichenfolgenformat beizubehalten, sollten Sie entweder eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das die Formatierungskonventionen der invarianten Kultur, oder Sie widerspiegelt sollten angeben einer benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolge, die Sie unabhängig von der Kultur verwenden.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Formatieren von Datums- und Uhrzeitangaben  
 Ein <xref:System.Globalization.DateTimeFormatInfo> Objekt wird implizit oder explizit in alle Datums- und Zeitformat-Operationen verwendet. Dazu gehören die folgenden Methoden aufrufen:  
  
-   Alle Datums- und Zeitformat Methoden, wie z. B. <xref:System.DateTime.ToString?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Die wichtigsten Methode zur kombinierten Formatierung, also <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Andere Methoden zur kombinierten Formatierung, wie z. B. <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> und <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Alle Datums- und Uhrzeit Formatierungsvorgänge Stellen verwenden, der eine <xref:System.IFormatProvider> Implementierung. Die <xref:System.IFormatProvider> Schnittstelle enthält eine einzelne Methode <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Diese Rückrufmethode übergeben wird ein <xref:System.Type> Objekt, das zum Bereitstellen der Formatierungsinformationen darstellt. Die Methode gibt entweder eine Instanz dieses Typs oder `null` Wenn sie eine Instanz des Typs bereitstellen kann. .NET Framework enthält zwei <xref:System.IFormatProvider> Implementierungen für die Formatierung von Datums- und Uhrzeitangaben:  
  
-   Die <xref:System.Globalization.CultureInfo> Klasse, die eine bestimmte Kultur (oder eine bestimmte Sprache in einem bestimmten Land/Region) darstellt. In einem Datums- und uhrzeitformatierung Vorgang der <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> Methode gibt die <xref:System.Globalization.DateTimeFormatInfo> zugeordnete Objekt seine <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft.  
  
-   Die <xref:System.Globalization.DateTimeFormatInfo> Klasse, die Informationen über die Formatierungskonventionen der Kultur zugeordnete bereitstellt. Die <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Methode gibt eine Instanz von sich selbst zurück.  
  
 Wenn ein <xref:System.IFormatProvider> Implementierung wird nicht bereitgestellt, um einer Formatierungsmethode explizit die <xref:System.Globalization.CultureInfo> zurückgegebenes Objekt die <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaft, die die aktuelle Threadkultur darstellt, wird verwendet.  
  
 Das folgende Beispiel veranschaulicht die Beziehung zwischen der <xref:System.IFormatProvider> Schnittstelle und die <xref:System.Globalization.DateTimeFormatInfo> Klasse bei Formatierungsvorgängen. Definiert ein benutzerdefiniertes <xref:System.IFormatProvider> Implementierung, deren <xref:System.IFormatProvider.GetFormat%2A> Methode zeigt den Typ des Objekts, durch den Formatierungsvorgang angefordert. Wenn es angefordert wird eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt stellt die Methode die <xref:System.Globalization.DateTimeFormatInfo> Objekt für die aktuelle Threadkultur verwendet. Wie die Ausgabe im Beispiel gezeigt die <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> Anforderungsmethoden einer <xref:System.Globalization.DateTimeFormatInfo> Formatierungsinformationen, wohingegen zu verwendendes Objekt die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> Anforderungsmethoden <xref:System.Globalization.NumberFormatInfo> und <xref:System.Globalization.DateTimeFormatInfo> Objekte als auch ein <xref:System.ICustomFormatter> -Implementierung.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
<a name="properties"></a>   
## <a name="format-strings-and-datetimeformatinfo-properties"></a>DateTimeFormatInfo-Eigenschaften und Formatzeichenfolgen  
 Die <xref:System.Globalization.DateTimeFormatInfo> Objekt enthält drei Arten von Eigenschaften, die verwendet werden, bei der Formatierung von Operationen mit Datums-und Uhrzeitwerte:  
  
-   Calendar-bezogene Eigenschaften. Eigenschaften, z. B. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, und <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, werden verknüpft mit dem Kalender, die von der Kultur verwendet, die durch festgelegt sind die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft. Diese Eigenschaften werden verwendet, für das lange Datum und Zeitformate.  
  
-   Eigenschaften, die erzeugt eine Ergebniszeichenfolge aus Standards definiert. Die <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, und <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Eigenschaften enthalten benutzerdefinierte Formatzeichenfolgen, die von internationalen Normen definierten Ergebniszeichenfolgen zu erzeugen. Diese Eigenschaften sind schreibgeschützt und können nicht geändert werden.  
  
-   Eigenschaften, die kulturabhängige Ergebniszeichenfolgeketten zu definieren. Einige Eigenschaften, z. B. <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, enthalten [benutzerdefinierte Formatzeichenfolgen](~/docs/standard/base-types/custom-date-and-time-format-strings.md) angeben, dass das Format der Ergebniszeichenfolge. Andere, z. B. <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, und <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, definieren Sie kulturabhängige Symbole oder Teilzeichenfolgen, die in eine Ergebniszeichenfolge aufgenommen werden können.  
  
 Die [Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md), z. B. "d", "D", "f" und "F", Aliase sind, die zu bestimmten entsprechen <xref:System.Globalization.DateTimeFormatInfo> Mustereigenschaften formatieren. Die meisten der [benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/custom-date-and-time-format-strings.md) beziehen sich auf Zeichenfolgen oder Teilzeichenfolgen, die ein Formatierungsvorgang in Ergebnisdatenstrom einfügt. Die folgende Tabelle enthält die standardmäßigen und benutzerdefinierten Datums- und Uhrzeit und die zugehörigen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften. Ausführliche Informationen zum Verwenden dieser Formatbezeichner, finden Sie unter [Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und [benutzerdefinierte Datums- und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Beachten Sie, die jede Standardformatzeichenfolge entspricht einem <xref:System.Globalization.DateTimeFormatInfo> Eigenschaft, deren Wert einer benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolge. Die einzelnen Spezifizierer in dieser benutzerdefinierten Formatzeichenfolge entsprechen wiederum anderen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften. Die Tabelle enthält nur die <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften für die Standardformatzeichenfolgen sind Aliase und enthält keine Eigenschaften aufgeführt, die von benutzerdefinierten Formatzeichenfolgen, die an diesen Aliaseigenschaften zugewiesen zugegriffen werden können. Die Tabelle enthält außerdem nur benutzerdefinierte Formatbezeichner, die entsprechen <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften.  
  
|Formatbezeichner|Zugeordnete Eigenschaften|  
|----------------------|---------------------------|  
|"d" (kurzes Datum; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"D", "Langen Datumsformat; Standardformatzeichenfolge"|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"f" (vollständiges Datum / kurze Zeit; standard-Formatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Format der Datumskomponente der Ergebniszeichenfolge definiert.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Format der Zeitkomponente der Ergebniszeichenfolge definiert.|  
|"F" (vollständiges Datum / lange Zeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, um das Format der Datumskomponente der Ergebniszeichenfolge definiert.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Format der Zeitkomponente der Ergebniszeichenfolge definiert.|  
|"g" (Allgemeine Datums-/ kurzer Zeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Format der Datumskomponente der Ergebniszeichenfolge definiert.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Format der Zeitkomponente der Ergebniszeichenfolge definiert.|  
|"G" (Allgemeine Datums- / lange Zeit; standard-Formatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, um das Format der Datumskomponente der Ergebniszeichenfolge definiert.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Format der Zeitkomponente der Ergebniszeichenfolge definiert.|  
|"M", "m", "Monat/Tag; Standardformatzeichenfolge"|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"O", "o" (Roundtrip Datum/Uhrzeit: Standardformat-Zeichenfolge)|Keine|  
|"R", "R" (RFC1123; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, um eine Ergebniszeichenfolge, die entspricht dem RFC 1123-Standard definieren. Die Eigenschaft ist schreibgeschützt.|  
|"s", "sortierbares Datum/Uhrzeit; Standardformatzeichenfolge"|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, um eine Ergebniszeichenfolge, die entspricht dem ISO 8601-Standard zu definieren. Die Eigenschaft ist schreibgeschützt.|  
|"t" (kurze Zeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"T" (lange Zeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"u" (universal sortierbares Datum/Uhrzeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, um eine Ergebniszeichenfolge, die entspricht dem ISO 8601-Standard für Coordinated Universal Time zu definieren. Die Eigenschaft ist schreibgeschützt.|  
|"U" (universal für vollständiges Datum/Zeit; Standardformatzeichenfolge)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"Y", "y", "Jahr-Monat; Standardformatzeichenfolge"|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, um das Gesamtformat der Ergebniszeichenfolge zu definieren.|  
|"Ddd" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, um den abgekürzten Namen des Tags der Woche in die Ergebniszeichenfolge eingeschlossen.|  
|"g", "Gg" (benutzerdefinierte Formatbezeichner)|Ruft die <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> Methode, um den Namen des Zeitraums in die Ergebniszeichenfolge eingefügt.|  
|"MMM" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, um den abgekürzten Monatsnamen in die Ergebniszeichenfolge eingeschlossen.|  
|"MMMM" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> oder <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, um den vollständigen Monatsnamen in die Ergebniszeichenfolge eingeschlossen.|  
|"t" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> oder <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, um das erste Zeichen des AM/PM-Kennzeichners in die Ergebniszeichenfolge eingeschlossen.|  
|"Tt" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> oder <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, um den vollständigen AM/PM-Kennzeichner in die Ergebniszeichenfolge eingeschlossen werden sollen.|  
|":" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, um Trennzeichen in die Ergebniszeichenfolge eingeschlossen werden sollen.|  
|"/" (benutzerdefinierte Formatbezeichner)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, um das Trennzeichen für Datumsangaben in der Ergebniszeichenfolge einzuschließen.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>DateTimeFormatInfo-Eigenschaften ändern  
 Sie können ändern, die, die durch Ändern der zugeordneten Eigenschaften eines schreibbaren von Formatzeichenfolgen für Datum und Uhrzeit erzeugte Ergebniszeichenfolge <xref:System.Globalization.DateTimeFormatInfo> Objekt. Zum bestimmen, ob eine <xref:System.Globalization.DateTimeFormatInfo> Objekt beschreibbar ist, verwenden Sie die <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> Eigenschaft. Zum Anpassen einer <xref:System.Globalization.DateTimeFormatInfo> Objekt auf diese Weise:  
  
1.  Erstellen Sie eine Lese-/Schreibkopie der ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, deren Formatierungskonventionen ändern möchten. (Siehe die [Instanziieren eines Objekts DateTimeFormatInfo](#instantiating) Abschnitt.)  
  
2.  Ändern Sie die Eigenschaft oder Eigenschaften, die verwendet werden, um das gewünschte Ergebniszeichenfolge zu erzeugen. (Informationen wie Formatierung Methoden verwenden <xref:System.Globalization.DateTimeFormatInfo> Eigenschaften zum Definieren von Ergebniszeichenfolgen, finden Sie im vorherigen Abschnitt [Formatieren von Zeichenfolgen und DateTimeFormatInfo-Eigenschaften](#properties).)  
  
3.  Verwenden Sie die benutzerdefinierte <xref:System.Globalization.DateTimeFormatInfo> Objekt Sie erstellt haben, als die <xref:System.IFormatProvider> Argument in Aufrufe für Formatierungsmethoden angeben.  
  
 Es gibt zwei weitere Methoden zum Ändern des Formats, der eine Ergebniszeichenfolge aus:  
  
-   Sie können die <xref:System.Globalization.CultureAndRegionInfoBuilder> Klasse, um eine benutzerdefinierte Kultur (eine Kultur, besitzt einen eindeutigen Namen und die die Dokumentation zu vorhandenen, Kulturen) oder einen Ersatzkultur (eine anstelle einer bestimmten Kultur verwendet wird) definieren. Sie können speichern und diese Kultur programmgesteuert zugreifen, wie jede andere <xref:System.Globalization.CultureInfo> Objekt von .NET Framework unterstützt.  
  
-   Wenn die resultierende Zeichenfolge nicht kulturabhängig ist und ein vordefiniertes Format folgt nicht, können Sie einen benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolge. Z. B. Wenn Sie Daten von Datum und Uhrzeit im Format YYYYMMDDHHmmss serialisieren, können Sie generieren die Ergebniszeichenfolge durch Übergeben der benutzerdefinierten Formatzeichenfolge an die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> Methode, und Sie können die Ergebniszeichenfolge konvertieren an eine <xref:System.DateTime> -Wert durch Aufrufen der <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> Methode.  
  
### <a name="changing-the-short-date-pattern"></a>Ändern das Muster für kurzes Datum  
 Im folgende Beispiel wird das Format von einem von der Formatzeichenfolge "d" (kurzes Datum) standard erzeugte Ergebniszeichenfolge geändert. Es ändert die zugeordnete <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft für das de-de oder der Kultur Englisch (Vereinigte Staaten) von seinem Standardwert "M/Yyyy", "Yyyy"-"MM"-"Dd" und "d" Standardformat Datumsanzeige vor und nach der Zeichenfolge verwendet die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft ist geändert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Ändern das Datumstrennzeichen  
 Im folgende Beispiel ändert das Datumstrennzeichen in einem <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der Kultur fr-FR darstellt. Im Beispiel wird mit der Standardformatzeichenfolge "g" das Datum vor und nach dem Anzeigen der <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> -Eigenschaft geändert wird.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Ändern von Abkürzungen für Tag-Namen und dem langen Datumsmuster  
 In einigen Fällen möglicherweise das langen Datumsmuster, das den ganzen Tag und Monatsnamen zusammen mit der Anzahl der Tag des Monats, und das Jahr in der Regel angezeigt wird, zu lang. Im folgende Beispiel wird das langen Datumsmuster für die Kultur "En-US" ein Tag von einem Zeichen oder zwei Zeichen bestehenden Namen Abkürzung gefolgt von der Anzahl der Tage, die Abkürzung für den Monat und Jahr zurückzugebenden verkürzt. Dies geschieht, indem Sie kürzere Day Name Abkürzungen zum Zuweisen der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> Array- und durch ändern die benutzerdefinierten Formatzeichenfolge zugewiesen der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft. Dies wirkt sich auf die Ergebniszeichenfolgen, die von der "D" zurückgegeben und Standardformatzeichenfolgen "f".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 In der Regel, die Änderung an der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft wirkt sich auch auf die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft, die wiederum die Ergebniszeichenfolge, die der Standardformatzeichenfolge "F" zurückgegebene definiert. Um die ursprüngliche vollständige Datums- und Uhrzeitmuster beizubehalten, im Beispiel wird die ursprüngliche zugewiesen benutzerdefinierte Formatzeichenfolge weist die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft nach der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft geändert wird.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Ändern von 12-Stunden-Format in 24-Stunden-Format  
 Für viele Kulturen in .NET Framework wird die Zeit angegeben, mit 12-Stunden-Format und AM/PM-Kennzeichner. Das folgende Beispiel definiert eine `ReplaceWith24HourClock` Methode, die alle Uhrzeitformat ersetzt, das 12-Stunden-Format in einem Format verwendet, die ein 24-Stunden-Format verwendet.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 Im Beispiel wird einen regulären Ausdruck so ändern Sie die Formatzeichenfolge. Muster für reguläre Ausdrücke `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` ist wie folgt definiert:  
  
|Muster|Beschreibung |  
|-------------|-----------------|  
|`^`|Beginnt die Suche am Anfang der Zeichenfolge.|  
|`(?<openAMPM>\s*t+\s*)?`|Übereinstimmung mit 0 (null) oder einem Vorkommen von NULL oder mehr Leerzeichen Zeichen, gefolgt vom Buchstaben "t" einen oder mehrere Male, gefolgt von NULL oder mehr Leerzeichen. Diese Erfassungsgruppe heißt `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Wenn die `openAMPM` Gruppe eine Übereinstimmung aufweist, entspricht den Buchstaben "h" ein- oder mehrmals, gefolgt von einem oder mehreren Zeichen, die weder "h" noch "t" sind. Es endet die Übereinstimmung am Ende der Zeichenfolge. Alle Zeichen, die erfasst werden, nachdem in einer Erfassungsgruppe mit dem Namen "h" enthalten sind `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Wenn die `openAMPM` Gruppe verfügt nicht über eine Übereinstimmung, entspricht den Buchstaben "h" ein- oder mehrmals gefolgt von mindestens ein Zeichen, die weder "h" noch "t", gefolgt von NULL oder mehr Leerzeichen. Schließlich entsprechen Sie einem oder mehr Vorkommen des Buchstabens "t" ein. Alle Zeichen nach "h" und bevor die Leerzeichen und "t" in eine Erfassungsgruppe mit dem Namen enthalten sind erfasst `nonHours`.|  
  
 Die `nonHours` Erfassungsgruppe enthält die Minute und möglicherweise die zweite Komponente eines benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolge, zusammen mit jeder Trennzeichensymbole Zeit. Das Ersetzungsmuster `HH${nonHours}` zu diesen Elementen die Teilzeichenfolge "HH" voran.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Anzeigen und ändern den Zeitraum in ein Datum  
 Im folgenden Beispiel wird den benutzerdefinierte Formatbezeichner "g" auf die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft eines Objekts, das die Formatierungskonventionen der Kultur En-US darstellt. Diese Ergänzung wirkt sich auf die folgenden drei Standardformatzeichenfolgen:  
  
-   Der "D" (Datum)-Standardformat-Zeichenfolge, die direkt mit ordnet die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft.  
  
-   Der "f" (vollständiges Datum / kurze Zeit) Standardformatzeichenfolge, der eine Ergebniszeichenfolge, die die Teilzeichenfolgen erzeugt von erzeugten verkettet die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Eigenschaften.  
  
-   Der "F" (vollständiges Datum / lange Zeit) Standardformat-Zeichenfolge, die direkt mit ordnet die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft. Da wir Wert dieser Eigenschaft nicht explizit festgelegt haben, wird es dynamisch generiert werden, durch Verketten der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Eigenschaften.  
  
 Das Beispiel zeigt auch so ändern Sie den Namen des Zeitraums für eine Kultur, deren Kalender einen einzigen Zeitraum besitzt. In diesem Fall verwendet der Kultur En-US dem gregorianischen Kalender mit der dargestellt wird, indem ein <xref:System.Globalization.GregorianCalendar> Objekt. Die <xref:System.Globalization.GregorianCalendar> Klasse unterstützt einen einzigen Zeitraum, in dem es sich um n. Chr. benennt (Anno Domini). Im Beispiel wird der Name des Zeitraums in unserer Zeitrechnung (Common Era) durch Ersetzen den benutzerdefinierte Formatbezeichner "g" in der Formatzeichenfolge zugewiesen werden, um die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft mit einem Zeichenfolgenliteral. Die Verwendung einer Literalzeichenfolge ist notwendig, da der Name des Zeitraums in der Regel, durch zurückgegeben wird die <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> private Daten in die Kultur-Tabellen, die von .NET Framework oder das Betriebssystem Windows bereitgestellten Methode.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Verarbeiten von Zeichenfolgen für Datum und Uhrzeit  
 Analysieren werden, konvertiert die Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe in einem <xref:System.DateTime> oder <xref:System.DateTimeOffset> Wert. Beide Typen umfassen die `Parse`, `TryParse`, `ParseExact`, und `TryParseExact` Methoden zum Analysevorgänge zu unterstützen. Die `Parse` und `TryParse` Methoden konvertieren eine Zeichenfolge, die eine Vielzahl von Formaten aufweisen darf, während `ParseExact` und `TryParseExact` erfordern, dass die Zeichenfolge ein definiertes Format aufweisen oder Formate aufweisen. Wenn der Analysevorgang fehlschlägt, `Parse` und `ParseExact` eine Ausnahme auslöst, während `TryParse` und `TryParseExact` zurückgeben `false`.  
  
 Verwenden Sie die Analysemethoden implizit oder explizit eine <xref:System.Globalization.DateTimeStyles> Enumerationswert, um zu bestimmen, welche Stilelemente (z. B. führende, nachfolgende oder innere Leerzeichen) in der Zeichenfolge analysiert werden und wie der analysierten Zeichenfolge oder auf fehlende interpretiert vorhanden sein Elemente. Wenn Sie nicht Bereitstellen einer <xref:System.Globalization.DateTimeStyles> Wert, der beim Aufrufen der `Parse` oder `TryParse` -Methode, die Standardeinstellung ist <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, also in einer zusammengesetzten Stils, inklusive der <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, und <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> Flags. Für die `ParseExact` und `TryParseExact` Methoden, die Standardeinstellung ist <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; die Eingabezeichenfolge muss genau eine bestimmte benutzerdefinierte Datums- und uhrzeitformatzeichenfolge entsprechen.  
  
 Verwenden Sie die Analysemethoden auch implizit oder explizit eine <xref:System.Globalization.DateTimeFormatInfo> ist möglich, Objekt, das definiert, die bestimmte Symbole und Muster, die in der Zeichenfolge, die analysiert werden. Wenn Sie nicht bereitstellen eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das <xref:System.Globalization.DateTimeFormatInfo> -Objekt für die aktuelle Threadkultur standardmäßig verwendet wird. Weitere Informationen zum Analysieren von Zeichenfolgen für Datum und Uhrzeit finden Sie unter den einzelnen Analysemethoden, z. B. <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, und <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 Das folgende Beispiel veranschaulicht den kulturabhängige Charakter Analysethreads Datum- und Uhrzeitzeichenfolgen. Anschließend wird versucht, zwei Datumszeichenfolgen mit den Konventionen der de-de, En-GB, fr-FR und Fi-FI Kulturen zu analysieren. Das Datum, die als 8/18/2014 in En-US interpretiert wird die Kultur löst eine <xref:System.FormatException> Ausnahme in den anderen drei Kulturen, da 18 als der Monatszahl interpretiert wird. 1/2/2015 wird als zweiten Tag der ersten Monat in der Kultur En-US, sondern als den ersten Tag der zweite Monat im verbleibenden Kulturen analysiert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Datum- und Uhrzeitzeichenfolgen werden in der Regel zwei Gründen analysiert:  
  
-   Umwandeln von Benutzereingaben in einen Wert für Datum und Uhrzeit.  
  
-   Für den roundtripvorgang einen Wert für Datum und Uhrzeit; d. h. einen Datum und Uhrzeit-Wert deserialisiert, das zuvor als eine Zeichenfolge serialisiert wurde.  
  
 In den folgenden Abschnitten werden diese beiden Vorgänge ausführlicher erläutert.  
  
### <a name="parsing-user-strings"></a>Analysieren von Benutzerzeichenfolgen  
 Wenn Sie Datum- und Uhrzeitzeichenfolgen Eingabe vom Benutzer analysieren, sollten Sie immer instanziiert einen <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das kultureinstellungen des Benutzers, einschließlich der Benutzer möglicherweise vorgenommenen Anpassungen widerspiegelt. Andernfalls möglicherweise den Datums- und Uhrzeitobjekt falsche Werte. Informationen zum Instanziieren einer <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das Benutzer kulturellen Anpassungen widerspiegelt finden Sie unter der [DateTimeFormatInfo und dynamische Daten](#dynamic) Abschnitt.  
  
 Das folgende Beispiel veranschaulicht den Unterschied zwischen einem Analysevorgang, der Benutzer kultureinstellungen wiedergeben und eine, die nicht der Fall ist. In diesem Fall die Standardkultur für das System wird En-US, aber der Benutzer verfügt über systemsteuerung verwendet **Region und Sprache** um das Muster für kurzes Datum dem Standardwert des "M/Yyyy" in "Yy/MM/TT" zu ändern. Wenn der Benutzer gibt eine Zeichenfolge, die benutzereinstellungen wiedergibt, und die Zeichenfolge wird analysiert, durch eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das auch benutzereinstellungen (überschrieben), gibt der Analysevorgang gibt ein korrekte Ergebnis zurück. Jedoch, wenn die Zeichenfolge wird analysiert werden eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das standard-En-US kultureinstellungen, löst die Analyse Methode gibt ein <xref:System.FormatException> Ausnahme, da es 14 als die Anzahl der Monat, nicht die letzten zwei Ziffern des Jahres interpretiert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Serialisieren und Deserialisieren von Datums-und Uhrzeitdaten  
 Serialisiert Datums-und Uhrzeitdaten voraussichtlich Roundtrip; d. h. alle serialisiert und deserialisierte Werte sollten identisch sein. Wenn Sie ein Wert für Datum und Uhrzeit auf einen einzelnen Zeitpunkt darstellt, muss der deserialisierte Wert darstellen, den gleichen Zeitpunkt unabhängig von der Kultur oder der Zeitzone des Systems, auf dem sie wiederhergestellt wurde. Roundtrip-Datums-und Zeitdaten erfolgreich, müssen Sie verwenden die Konventionen der invarianten Kultur zurückgegeben, durch die <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> -Eigenschaft, um zu generieren und die Daten analysieren. Die Formatierung und Analyse Vorgänge sollten nie die Konventionen der Standardkultur widerspiegeln. Bei Verwendung von kulturelle Einstellungen der Standardrichtlinie ist die Übertragbarkeit der Daten streng beschränkt. Es kann nur in einem Thread erfolgreich deserialisiert werden, dessen kulturellen-spezifische Einstellungen mit denen des Threads identisch sind, auf denen er serialisiert wurde. In einigen Fällen bedeutet dies, dass die Daten können nicht selbst erfolgreich serialisiert und deserialisiert werden auf dem gleichen System.  
  
 Wenn die Zeitkomponente der einen Wert für Datum und Uhrzeit ist, muss auch werden in UTC konvertiert und mithilfe der "o" oder "R" serialisiert [Standardformatzeichenfolge](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Die Zeitdaten können dann durch Aufrufen einer Analysemethode und zur Übergabe an der entsprechenden Formatzeichenfolge zusammen mit der invarianten Kultur als wiederhergestellt werden die `provider` Argument.  
  
 Das folgende Beispiel veranschaulicht den Prozess der Roundtrip-Funktion einen Wert für Datum und Uhrzeit. Serialisiert ein Datum und Uhrzeit auf einem System, das US berücksichtigt Pacific Time und, dessen aktuelle Kultur "En-US".  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Deserialisiert sie die Daten auf einem System in der Zeitzone Brussels, Kopenhagen, Madrid und Paris und, dessen aktuelle Kultur fr-FR "" " Das wiederhergestellte Datum ist höher als das ursprüngliche Datum, das angibt, die Anpassung der Zeitzone von acht Stunden nach UTC eine Stunde vor UTC neun Stunden. Stellen Sie den gleichen Zeitpunkt dar, das ursprüngliche Datum und die wiederhergestellten Datum.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 Im folgenden Beispiel wird Reflektion zum Abrufen der Eigenschaften von der <xref:System.Globalization.DateTimeFormatInfo> Objekt für die Kultur Englisch (Vereinigte Staaten). Es zeigt den Wert dieser Eigenschaften, die benutzerdefinierten Formatzeichenfolgen enthalten und verwendet diese Zeichenfolgen zum Anzeigen formatierten Datumsangaben.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue, schreibbare Instanz der <see cref="T:System.Globalization.DateTimeFormatInfo" />-Klasse, die kulturunabhängig (invariant) ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Informationen für Datum und Uhrzeit der invarianten Kultur darstellt. Zum Erstellen einer <xref:System.Globalization.DateTimeFormatInfo> -Objekt für eine bestimmte Kultur, erstellen Sie eine <xref:System.Globalization.CultureInfo> -Objekt für die jeweilige Kultur und Abrufen der <xref:System.Globalization.DateTimeFormatInfo> zurückgegebenes Objekt seine <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Die Eigenschaften der <xref:System.Globalization.DateTimeFormatInfo> Objekt erstellt, die von diesem Konstruktor kann geändert werden. Sie können nicht geändert die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft, da die invariante Kultur nur eine lokalisierte Version des gregorianischen Kalenders unterstützt. Erstellen eine <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das einen bestimmten Kalender verwendet instanziieren Sie ein <xref:System.Globalization.CultureInfo> Objekt, das unterstützt, die "Kalender" aus, und weisen Sie den Kalender, der die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft der <xref:System.Globalization.DateTimeFormatInfo> zurückgegebenes Objekt die <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> Eigenschaft .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Array vom Typ <see cref="T:System.String" /> ab, das die kulturabhängigen abgekürzten Namen der Wochentage enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Array vom Typ <see cref="T:System.String" />, das die kulturabhängigen abgekürzten Namen der Wochentage enthält. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" und "Sat".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festlegen, wird das Array eindimensional sein und muss über genau sieben Elemente verfügen. Das erste Element (das Element bei Index 0) stellt den ersten Tag der Woche im Kalender definiert, indem Sie die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft.  
  
 Wenn eine benutzerdefinierte Formatzeichenfolge das Formatbezeichner "Ddd" enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> oder <xref:System.DateTimeOffset.ToString%2A> -Methode enthält den entsprechenden Member der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> Array anstelle von "Ddd" in der Ergebniszeichenfolge.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert. Wenn die ausgewählte <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Unterstützung abgekürzt Tag Namen nicht, enthält das Array der vollständigen Tagesnamen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Lese-/Schreibzugriff <xref:System.Globalization.CultureInfo> -Objekt, das die Kultur Englisch (Vereinigte Staaten) darstellt, und weist abgekürzt Tagesnamen, dessen <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> Eigenschaft. Es verwendet dann den Formatbezeichner "Ddd" in eine Zeichenfolgendarstellung von Datumsangaben für eine Woche beginnt am 28. Mai 2014 angezeigt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das mehrdimensional ist oder dessen Länge nicht genau 7 beträgt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der abgekürzten Monatsnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt dieses fest.</summary>
        <value>Ein Array von abgekürzten Monatsnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einigen Sprachen können wird Sie in der Genitiv ein Monatsnamen, der Teil eines Datums wird angezeigt. Ein Datum in der ru-RU oder Russisch (Russische Föderation) Kultur besteht z. B. die Tag-Anzahl und den Genitiv Monatsnamen, z. B. 1 Января (1. Januar). Für diese Kulturen, wenn eine benutzerdefinierte Formatzeichenfolge das Formatbezeichner "MMM" enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> oder <xref:System.DateTimeOffset.ToString%2A> -Methode enthält den entsprechenden Member der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Array anstelle von "MMM" in der Ergebniszeichenfolge.  
  
 In einem Set-Vorgang das Array eindimensional sein und genau 13 Elementen, da <xref:System.Globalization.Calendar> -Objekte unterstützen Kalender mit 13 Monaten. Für Kalender mit 12 Monaten, sollte das dreizehnte Element <xref:System.String.Empty?displayProperty=nameWithType>. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres, definiert durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft.  
  
 Wenn Sie festlegen, die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> -Eigenschaft, müssen Sie auch Festlegen der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Lese-/Schreibzugriff <xref:System.Globalization.CultureInfo> -Objekt, das die Kultur Englisch (Vereinigte Staaten) darstellt, und weist abgekürzt Genitiv Monatsnamen auf seine <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaften. Es zeigt eine Zeichenfolgendarstellung von Datumsangaben, die den abgekürzten Monatsnamen eines jeden Monats in der Kultur unterstützten Kalender enthalten.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang ist das Array mehrdimensional oder hat eine Länge, die nicht genau 13 beträgt.</exception>
        <exception cref="T:System.ArgumentNullException">In einem set-Vorgang entspricht das Array oder eines seiner Elemente <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Zeichenfolgenarray ab, das die kulturabhängigen abgekürzten Namen der Monate enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Zeichenfolgenarray mit 13 Elementen, das die kulturabhängigen abgekürzten Namen der Monate enthält. Bei Kalendern mit 12 Monaten ist das 13. Element des Arrays eine leere Zeichenfolge. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" und "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese Eigenschaft festlegen, muss das Array eindimensional mit genau 13 Elemente sein. <xref:System.Globalization.Calendar> Kalender mit 13 Monaten, um Objekte aufzunehmen. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres, definiert durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft.  
  
 Wenn Sie festlegen, die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> -Eigenschaft, müssen Sie auch Festlegen der <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaft. Die <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaften werden verwendet, um Daten mit den folgenden Formatzeichenfolgen formatieren:  
  
-   Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolge Aliase formatieren, eine benutzerdefinierte Zeichenfolge an, die "MMM" beinhaltet, Formatbezeichner.  
  
-   Formatbezeichner für einen benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolge, die die "MMM" enthält.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert. Wenn das ausgewählte <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> nicht abgekürzten Monatsnamen unterstützt wird, enthält das Array der vollständigen Monatsnamen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Lese-/Schreibzugriff <xref:System.Globalization.CultureInfo> -Objekt, das die Kultur Englisch (Vereinigte Staaten) darstellt, und weist abgekürzt Genitiv Monatsnamen auf seine <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> und <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> Eigenschaften. Es zeigt eine Zeichenfolgendarstellung von Datumsangaben, die den abgekürzten Namen des jeden Monat in der Kultur unterstützten Kalender enthalten.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das multidimensional ist oder eine Länge von etwa 13 hat.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichenfolgenkennzeichner für Zeitangaben vor 12 Uhr mittags („ante meridiem“, a.m.) ab oder legt diesen fest.</summary>
        <value>Der Zeichenfolgenkennzeichner für Zeitangaben vor 12 Uhr mittags ("ante meridiem", a.m.). Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "AM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Eigenschaft dient für alle Zeitangaben von 0:00:00 (Mitternacht) bis 11:59:59.999.  
  
 Wenn eine benutzerdefinierte Formatzeichenfolge, der Formatbezeichner "Tt einschließt" und die Zeit Mittag ist, die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> oder <xref:System.DateTimeOffset.ToString%2A> -Methode enthält den Wert der <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Eigenschaft anstelle von "Tt" in der Ergebniszeichenfolge. Wenn die benutzerdefinierte Formatzeichenfolge der benutzerdefinierte Formatbezeichner "t", nur das erste Zeichen des enthält die <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Eigenschaftswert enthalten ist. Sie sollte "Tt" für Sprachen verwendet für die die Unterscheidung zwischen Uhr beibehalten werden muss und Uhr. Ein Beispiel ist in Japanisch, in dem die Uhr und Uhr. Bezeichners das Unterscheidungsmerkmal in das zweite Zeichen statt dem ersten Zeichen.  
  
 Wenn in Kulturen, die einer Uhr nicht verwenden Kennzeichner, gibt diese Eigenschaft eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für die aktuelle Kultur zu verwendenden Kalender ab oder legen diesen fest.</summary>
        <value>Der für die aktuelle Kultur zu verwendende Kalender. Der Standardwert für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist ein <see cref="T:System.Globalization.GregorianCalendar" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft akzeptiert nur Kalender, die für die Kultur gültig, die sind mit zugeordnetem der <xref:System.Globalization.DateTimeFormatInfo> Objekt. Die <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Eigenschaft gibt an, verwendete Kalender, die von einer bestimmten Kultur verwendet werden können und die <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> Eigenschaft gibt den Standardkalender für die Kultur an.  
  
 Ändern des Werts dieser Eigenschaft wirkt sich auch die folgenden Eigenschaften: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , und <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Beispielsweise, wenn die Kultur des aktuellen Threads auf Japanisch festgelegt ist, diese Eigenschaft akzeptiert <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, oder <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Wenn die <xref:System.Globalization.JapaneseCalendar> verwendet wird, wird der Standardwert für das lange Datumsformat "Gg y '\x5e74 bin' \x6708 hatte '\x65e5'". Wenn die <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, verwendet wird, wird der Standardwert für das lange Datumsformat "Yyyy '\x5e74 bin' \x6708 hatte '\x65e5'".  
  
   
  
## Examples  
 Das folgende Beispiel definiert eine `ChangeCalendar` Methode, die aktuellen Kalender einer Kultur auf einen angegebenen Kalender ändert, wenn er bereits als aktueller Kalender ist oder wenn sie von der Kultur nicht unterstützt wird. Der Code, der die Methodenaufrufe instanziiert einen <xref:System.Globalization.CultureInfo> Objekt, das die Kultur Arabisch (Ägypten) darstellt und zuerst versucht, so ändern Sie die Kalender in den japanischen Kalender dar. Da der japanische Kalender nicht unterstützt wird, wird die Methode mit dem Standardkalender der Kultur nicht ändern. Jedoch, da die Umm al-Qura-Kalender ist ein Mitglied der <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> -Auflistung, die Methode erfolgreich und wird als aktuellen Kalender für die Ar-EG Kultur.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf ein <see cref="T:System.Globalization.Calendar" />-Objekt festgelegt, das für die aktuelle Kultur ungültig ist.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Regel zum Bestimmen der ersten Kalenderwoche eines Jahres angibt, oder legt diesen fest.</summary>
        <value>Ein Wert, der die erste Kalenderwoche des Jahres bestimmt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert festgelegt, der keinen gültigen <see cref="T:System.Globalization.CalendarWeekRule" />-Wert darstellt.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine flache Kopie von <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Ein neues <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das aus dem ursprünglichen <see cref="T:System.Globalization.DateTimeFormatInfo" /> kopiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Klon beschreibbar ist auch dann, wenn die ursprüngliche <xref:System.Globalization.DateTimeFormatInfo> Objekt ist schreibgeschützt. Aus diesem Grund können die Eigenschaften des Klons mit benutzerdefinierten Mustern geändert werden.  
  
 Eine flache Kopie eines Objekts ist eine Kopie des Objekts nur. Wenn das Objekt Verweise auf andere Objekte enthält, erstellt die flache Kopie keine Kopien der Objekte verwiesen wird. Er bezieht sich stattdessen auf die ursprünglichen Objekte. Im Gegensatz dazu erstellt eine tiefe Kopie eines Objekts eine Kopie des Objekts und eine Kopie aller Elemente auf die dieses Objekt direkt oder indirekt verweist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein schreibgeschütztes <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ab, das Werte basierend auf der aktuellen Kultur formatiert.</summary>
        <value>Ein schreibgeschütztes <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das auf dem <see cref="T:System.Globalization.CultureInfo" />-Objekt für den aktuellen Thread basiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo> zurückgegebenes Objekt die <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> Eigenschaft zeigt Benutzer überschreibt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> Eigenschaft zum Abrufen einer <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der aktuellen Kultur darstellt, in diesem Fall der Kultur En-US. Anschließend wird die Formatzeichenfolge und die Ergebniszeichenfolge für sechs Formatierungseigenschaften angezeigt.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die die Datumskomponenten trennt, d. h. Jahr, Monat und Tag, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die die Datumskomponenten trennt, d. h. Jahr, Monat und Tag. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine benutzerdefinierte Formatzeichenfolge der Formatbezeichner "/" enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> Methode zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> anstelle der "/" in der Ergebniszeichenfolge.  
  
 Die <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Eigenschaft definiert die Zeichenfolge, die das Datumstrennzeichen ersetzt ("/" Formatbezeichner, mit benutzerdefinierten Formatbezeichner für Datum und Uhrzeit) in eine Ergebniszeichenfolge, die bei einem Formatierungsvorgang. Außerdem wird das Datum als Zeichenfolge definiert, bei einem Analysevorgang.  
  
   
  
## Examples  
 Das folgende Beispiel instanziiert einen <xref:System.Globalization.CultureInfo> Objekt ändert sich die Trennzeichen für Datumsangaben, für die Kultur En-US "-", und zeigt ein Datum unter Verwendung der "d", "G" und "g" Standardformatzeichenfolgen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Zeichenfolgenarray ab, das die kulturabhängigen vollständigen Namen der Wochentage enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Zeichenfolgenarray, das die kulturabhängigen vollständigen Namen der Wochentage enthält. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" und "Saturday".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festlegen, wird das Array eindimensional sein und muss über genau sieben Elemente verfügen. Das erste Element (das Element bei Index 0) stellt den ersten Tag der Woche im Kalender definiert, indem Sie die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft.  
  
 Wenn eine benutzerdefinierte Formatzeichenfolge den Formatbezeichner "Dddd" enthält die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> -Methode enthält den Wert der entsprechenden <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> Member anstelle von "Dddd" in der Ergebniszeichenfolge.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das mehrdimensional ist oder dessen Länge nicht genau 7 beträgt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ersten Tag der Woche ab oder legt diesen fest.</summary>
        <value>Ein Enumerationswert, der den ersten Tag der Woche darstellt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert festgelegt, der keinen gültigen <see cref="T:System.DayOfWeek" />-Wert darstellt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Datums- und Uhrzeitwert ab oder legt dieses fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen langen Datums-und Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardformatzeichenfolge "F" ist ein Alias für die <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft. Die benutzerdefinierte Formatzeichenfolge, die dieser Eigenschaft zugewiesene definiert das heißt, das Format der Ergebniszeichenfolge für die Standardformatzeichenfolge "F". Weitere Informationen finden Sie unter [Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Der Wert von der <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> Eigenschaft dynamisch generiert wird, durch die Aneinanderreihung der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> und <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Eigenschaften durch Leerzeichen getrennt. Diese dynamische Zuordnung erfolgt in den folgenden Situationen:  
  
-   Wenn vor dem Wert der Eigenschaft abgerufen wird, hat es explizit festgelegt wurde.  
  
-   Wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> -Eigenschaft ändert.  
  
-   Wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> -Eigenschaft ändert.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Ein <see cref="T:System.DayOfWeek" />-Wert.</param>
        <summary>Gibt den kulturabhängigen abgekürzten Namen des angegebenen Wochentags entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige abgekürzte Name des Wochentags, dargestellt durch <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die invariante Standard- <xref:System.Globalization.DateTimeFormatInfo> -Objekt, diese Methode gibt eine Zeichenfolge aus der <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Rückgabewert|  
|-----------------|------------------|  
|Sonntag|"Sun"|  
|Montag|"Mo"|  
|Dienstag|"Tue"|  
|Mittwoch|"Mi"|  
|Donnerstag|"Thu"|  
|Freitag|"Fri"|  
|Samstag|"Sa"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> ist kein gültiger <see cref="T:System.DayOfWeek" />-Wert.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Die Ganzzahl, die den Zeitraum darstellt.</param>
        <summary>Gibt die Zeichenfolge zurück, die den abgekürzten Namen des angegebenen Zeitraums enthält, sofern eine Abkürzung vorhanden ist.</summary>
        <returns>Eine Zeichenfolge, die den abgekürzten Namen des angegebenen Zeitraums enthält, sofern eine Abkürzung vorhanden ist.  
  
 - oder -   
  
 Eine Zeichenfolge, die den vollständigen Namen des Zeitraums enthält, sofern keine Abkürzung vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name des Zeitraums wird der Name, der einen Kalender verwendet zum Verweisen auf eine bestimmte Zeitspanne an, die über eine Festkommazahl oder ein Ereignis gerechnet. Z. B. "A.D." oder "Christliche" wird von der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Die gültigen Werte für `era` sind aufgeführt, der <xref:System.Globalization.Calendar.Eras%2A> Eigenschaft der entsprechenden Klasse abgeleitet <xref:System.Globalization.Calendar>. Zum Beispiel: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zeigt eine Liste der Zeiträume, die von dieser Implementierung unterstützt werden.  
  
 In der <xref:System.Globalization.JapaneseCalendar> Klasse, die den abgekürzten Zeitraum Name das erste Zeichen des vollständigen Namens ist. Dieses Zeichen ist die Abkürzung für die einzelnen Zeichen, Groß-/Kleinschreibung lateinischen Alphabets oder die Abkürzung der einzelnen Zeichen Kanji-Schriftarten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> stellt keinen gültigen Zeitraum in dem Kalender dar, der in der <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />-Eigenschaft angegeben ist.</exception>
        <block subset="none" type="usage">
          <para>Wenn <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> ist der <see cref="T:System.Globalization.TaiwanCalendar" /> aber die <see cref="P:System.Threading.Thread.CurrentCulture" /> ist nicht "Zh-TW", klicken Sie dann <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zurückgeben eine leere Zeichenfolge ("").</para>
        </block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Eine Ganzzahl zwischen 1 und 13, die den abzurufenden Monatsnamen darstellt.</param>
        <summary>Gibt den kulturabhängigen abgekürzten Namen des angegebenen Monats entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige abgekürzte Name des Monats, dargestellt durch <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die invariante Standard- <xref:System.Globalization.DateTimeFormatInfo> -Objekt, diese Methode gibt eine Zeichenfolge aus der <xref:System.Globalization.GregorianCalendar> Objekt.  
  
|`month`|Rückgabewert|  
|-------------|------------------|  
|1|"Jan"|  
|2|"Feb"|  
|3|"Mrz"|  
|4|"Apr"|  
|5|"May"|  
|6|"Jun"|  
|7|"Jul"|  
|8|"August"|  
|9|"Sep"|  
|10|"Oct"|  
|11|"Nov"|  
|12|"Dec"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> -Objekte können Kalender mit 13 Monaten unterstützen. Bei Kalendern mit 12 Monaten wird die leere Zeichenfolge immer als den Namen des Monats 13. zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> ist größer als 1 oder größer als 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt alle Standardmuster zurück, in denen Datums- und Zeitwerte formatiert werden können.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle Standardmuster zurück, in denen Datums- und Zeitwerte formatiert werden können.</summary>
        <returns>Ein Array, das die Standardmuster enthält, in denen Datums- und Zeitwerte formatiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Array, das alle benutzerdefinierten Formatzeichenfolgen enthält, die Standardformatzeichenfolgen entsprechen. Finden Sie unter [Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md) eine Liste der Standardformatzeichenfolgen.  
  
 Sie können die benutzerdefinierten Formatzeichenfolgen in das zurückgegebene Array die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode bei Formatierungsvorgängen. Jedoch wenn Sie dies tun, die Zeichenfolgendarstellung eines Werts für Datum und Uhrzeit zurückgegeben Formatierung Vorgang immer erfolgreich durch nicht analysiert werden kann, die `Parse` und `TryParse` Methoden. Aus diesem Grund, Sie können nicht davon ausgehen, dass die benutzerdefinierten Formatzeichenfolgen von zurückgegeben die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode kann verwendet werden, um die Roundtrip-Datums- und-Uhrzeitwerte. Dieses Problem wird anhand des folgenden Beispiels veranschaulicht. Ruft ab einen <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das Formatierungsinformationen für die Kultur Italien (Italienisch) enthält. Im zurückgegebenen Array von einzelnen benutzerdefinierten Formatzeichenfolge übergibt die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> Methode, um die <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> Methode, um die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe erstellen. In diesem Beispiel versucht dann, diesen Wert zu analysieren, durch Aufrufen der <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> Methode. Wie die Ausgabe des Beispiels zeigt, einige der die benutzerdefinierten Formatzeichenfolgen erzeugen kein Datum und Zeit-Wert, der erfolgreich Roundtrips.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Um analysiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe, die in einer Reihe vordefinierter benutzerdefinierte Formate ausgedrückt werden kann, rufen Sie eine der folgenden Methoden:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Die benutzerdefinierten Formatzeichenfolgen in das zurückgegebene Array die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode hängt von der Kultur für den aktuellen Kalender der <xref:System.Globalization.DateTimeFormatInfo> Objekt liefert Formatierungsinformationen. Wenn der Kalender geändert wird, ändert sich auch das von dieser Methode zurückgegebene Array ein.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Datum und Uhrzeit-Formatzeichenfolgen für die invariante Kultur als auch die resultierende Zeichenfolge, die beim erzeugt wird, dass der Formatzeichenfolge verwendet wird, um ein bestimmtes Datum zu formatieren.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 Im Beispiel wird instanziiert einen <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das die invariante Kultur, durch Aufrufen darstellt der <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> Konstruktor. Es könnte auch abrufen eine <xref:System.Globalization.DateTimeFormatInfo> , die die invariante Kultur darstellt, die <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format">Eine Standardformatzeichenfolge.</param>
        <summary>Gibt alle Muster zurück, in denen Datums- und Zeitwerte mit der angegebenen Standardformatzeichenfolge formatiert werden können.</summary>
        <returns>Ein Array mit den Standardmustern, in denen Datums- und Uhrzeitwerte mit der angegebenen Formatzeichenfolge formatiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Array mit benutzerdefinierten Formatzeichenfolgen, die einer bestimmten Standardformatzeichenfolge entsprechen. Finden Sie unter [Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md) eine Liste der Standardformatzeichenfolgen.  
  
 Sie können die benutzerdefinierten Formatzeichenfolgen in das zurückgegebene Array die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode bei Formatierungsvorgängen. Jedoch wenn Sie dies tun, die Zeichenfolgendarstellung eines Werts für Datum und Uhrzeit zurückgegeben Formatierung Vorgang immer erfolgreich durch nicht analysiert werden kann, die `Parse` und `TryParse` Methoden. Aus diesem Grund, Sie können nicht davon ausgehen, dass die benutzerdefinierten Formatzeichenfolgen von zurückgegeben die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode kann verwendet werden, um die Roundtrip-Datums- und-Uhrzeitwerte. Dieses Problem wird anhand des folgenden Beispiels veranschaulicht. Ruft ab einen <xref:System.Globalization.DateTimeFormatInfo> -Objekt, das Formatierungsinformationen für die Kultur Russische Föderation (Russisch) enthält. Ruft die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> Methode für jede Standardformatzeichenfolge und übergibt dann einzelnen benutzerdefinierten Formatzeichenfolge im zurückgegebenen Array der <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> Methode, um die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe erstellen. In diesem Beispiel versucht dann, diesen Wert zu analysieren, durch Aufrufen der <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> Methode. Wie die Ausgabe des Beispiels zeigt, einige der die benutzerdefinierten Formatzeichenfolgen erzeugen kein Datum und Zeit-Wert, der erfolgreich Roundtrips.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Um analysiert die angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe, die in einer Reihe vordefinierter benutzerdefinierte Formate ausgedrückt werden kann, rufen Sie eine der folgenden Methoden:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Die benutzerdefinierten Formatzeichenfolgen in das zurückgegebene Array die <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> Methode hängt von der Kultur für den aktuellen Kalender der <xref:System.Globalization.DateTimeFormatInfo> Objekt liefert Formatierungsinformationen. Wenn der Kalender geändert wird, ändert sich auch das von dieser Methode zurückgegebene Array ein.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Datum und Uhrzeit-Muster für den aktuellen Kalender.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="format" /> ist keine gültige Standard-Formatzeichenfolge.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Ein <see cref="T:System.DayOfWeek" />-Wert.</param>
        <summary>Gibt den kulturabhängigen vollständigen Namen des angegebenen Wochentags entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige vollständige Name des Wochentags, dargestellt durch <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die invariante Standard- <xref:System.Globalization.DateTimeFormatInfo> -Objekt, diese Methode gibt eine Zeichenfolge aus der <xref:System.Globalization.GregorianCalendar> Objekt.  
  
|`dayofweek`|Rückgabewert|  
|-----------------|------------------|  
|Sonntag|"Sonntag"|  
|Montag|"Montag"|  
|Dienstag|"Dienstag"|  
|Mittwoch|"Mittwoch"|  
|Donnerstag|"Donnerstag"|  
|Freitag|"Freitag"|  
|Samstag|"Samstag"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> ist kein gültiger <see cref="T:System.DayOfWeek" />-Wert.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Die Zeichenfolge mit dem Namen des Zeitraums.</param>
        <summary>Gibt die Ganzzahl zurück, die den angegebenen Zeitraum darstellt.</summary>
        <returns>Die Ganzzahl, die den Zeitraum darstellt, wenn <paramref name="eraName" /> gültig ist, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name des Zeitraums wird der Name, der einen Kalender verwendet zum Verweisen auf eine bestimmte Zeitspanne an, die über eine Festkommazahl oder ein Ereignis gerechnet. Z. B. "A.D." oder "Christliche" wird von der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Der Vergleich mit `eraName` wird Groß-/Kleinschreibung, z. B. "N. Chr." entspricht "n. Chr.".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignoriert die Interpunktion in abgekürzten Namen, wenn nur die <xref:System.Globalization.GregorianCalendar> ausgewählt ist, im <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> und die Kultur verwendet "N. Chr." als Namen des Zeitraums, d. h. "A.D." ist äquivalent zu "AD".  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> Vergleicht `eraName` mit dem vollständigen Namen zurückgegebenes <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> und mit den Namen des abgekürzten Zeitraums zurückgegebenes <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, dass <xref:System.Globalization.DateTimeFormatInfo> ignoriert die Interpunktion im Namen Zeitraums nur, wenn den gregorianischen Kalender handelt und die Kultur den Namen des Zeitraums "N. Chr. verwendet".  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eraName" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Die Ganzzahl, die den Zeitraum darstellt.</param>
        <summary>Gibt die Zeichenfolge mit dem Namen des angegebenen Zeitraums zurück.</summary>
        <returns>Eine Zeichenfolge mit dem Namen des Zeitraums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name des Zeitraums wird der Name, der einen Kalender verwendet zum Verweisen auf eine bestimmte Zeitspanne an, die über eine Festkommazahl oder ein Ereignis gerechnet. Z. B. "A.D." oder "Christliche" wird von der aktuelle Zeitraum im gregorianischen Kalender.  
  
 Die gültigen Werte für `era` sind aufgeführt, der <xref:System.Globalization.Calendar.Eras%2A> Eigenschaft der entsprechenden Klasse abgeleitet <xref:System.Globalization.Calendar>. Zum Beispiel: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> zeigt eine Liste der Zeiträume, die von dieser Implementierung unterstützt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> stellt keinen gültigen Zeitraum in dem Kalender dar, der in der <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />-Eigenschaft angegeben ist.</exception>
        <block subset="none" type="usage">
          <para>Der Kalender durch dargestellt <see cref="T:System.Globalization.TaiwanCalendar" /> aber die <see cref="P:System.Threading.Thread.CurrentCulture" /> ist nicht "Zh-TW", klicken Sie dann <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> geben eine leere Zeichenfolge zurück ("").</para>
        </block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Der Typ des erforderlichen Formatierungsdiensts.</param>
        <summary>Gibt ein Objekt vom angegebenen Typ zurück, das einen Datum-und Zeit-Formatierungsdienst bereitstellt.</summary>
        <returns>Das aktuelle Objekt, wenn<paramref name="formatType" /> mit dem Typ des aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" /> übereinstimmt, andernfalls <see langword="null" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `Format(String, IFormatProvider)` Methode, die von den Basisdatentypen unterstützt diese Methode aufgerufen, wenn das aktuelle <xref:System.Globalization.DateTimeFormatInfo> Objekt als übergeben der <xref:System.IFormatProvider> Parameter. Diese Methode implementiert <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Das <see cref="T:System.IFormatProvider" />, das das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt abruft.  
  
 - oder -   
  
 <see langword="null" /> zum Abrufen von <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Gibt das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zurück, das dem angegebenen <see cref="T:System.IFormatProvider" /> zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, das <see cref="T:System.IFormatProvider" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet die <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> Methode `formatProvider` mit ein <xref:System.Globalization.DateTimeFormatInfo> -Objekts entsprechend der `Type` Parameter. Wenn `formatProvider` ist `null` oder, wenn <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> gibt `null`, gibt diese Methode <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Ihre Anwendung erhalte eine <xref:System.Globalization.DateTimeFormatInfo> Objekt für eine bestimmte Kultur, die mit einer der folgenden Methoden:  
  
-   Die <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>-Eigenschaft  
  
-   Die <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> -Methode, in denen `provider` ist ein <xref:System.Globalization.CultureInfo> Objekt.  
  
 Ein <xref:System.Globalization.DateTimeFormatInfo> Objekt kann nur für die invariante Kultur oder für bestimmte Kulturen, nicht für die neutralen Kulturen erstellt werden.  
  
 Weitere Informationen über die invariante Kultur, die bestimmte Kulturen und die neutralen Kulturen finden Sie unter der <xref:System.Globalization.CultureInfo> -Klasse Beschreibung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Eine Ganzzahl zwischen 1 und 13, die den abzurufenden Monatsnamen darstellt.</param>
        <summary>Gibt den kulturabhängigen vollständigen Namen des angegebenen Monats entsprechend der Kultur zurück, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der kulturabhängige vollständige Name des Monats, dargestellt durch <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für die invariante Standard- <xref:System.Globalization.DateTimeFormatInfo> -Objekt, diese Methode gibt eine Zeichenfolge aus der <xref:System.Globalization.GregorianCalendar> Objekt.  
  
|`month`|Rückgabewert|  
|-------------|------------------|  
|1|"Januar"|  
|2|"Februar"|  
|3|"März"|  
|4|"April"|  
|5|"May"|  
|6|"Juni"|  
|7|"Juli"|  
|8|"August"|  
|9|"September"|  
|10|"Oktober"|  
|11|"November"|  
|12|"Dezember"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> -Objekte können Kalender mit 13 Monaten unterstützen. Bei Kalendern mit 12 Monaten wird die leere Zeichenfolge immer als den Namen des Monats 13. zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> ist größer als 1 oder größer als 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Einer der <see cref="T:System.DayOfWeek" />-Werte.</param>
        <summary>Ruft den am stärksten abgekürzten Tagesnamen für einen angegebenen Wochentag ab, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <returns>Der abgekürzte Name der Woche, die dem <paramref name="dayOfWeek" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht verschiedene Methoden und Eigenschaften, die Datum und Uhrzeit Formatierungsmuster, systemeigene Kalendername, und vollständige und abgekürzten Monats und Tagesnamen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayOfWeek" /> ist kein Wert in der <see cref="T:System.DayOfWeek" />-Enumeration.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das schreibgeschützte <see cref="T:System.Globalization.DateTimeFormatInfo" />-Standardobjekt ab, das kulturunabhängig (invariant) ist.</summary>
        <value>Ein schreibgeschütztes Objekt, das kulturunabhängig (invariant) ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird nicht geändert, unabhängig von der aktuellen Kultur. Aus diesem Grund die invariante Kultur des <xref:System.Globalization.DateTimeFormatInfo> Objekt kann verwendet werden, um konsistente, kulturunabhängige Ergebnisse bei Analyse- und Formatierungsvorgängen auf Daten, die mit mehreren kulturellen erzeugen. Beispielsweise ist das Datum und Uhrzeit Daten aus mehreren Kulturen im Zeichenfolgenformat beibehalten werden, es kann formatiert werden mithilfe der <xref:System.Globalization.DateTimeFormatInfo> Objekt der invarianten Kultur und gespeichert. Es kann dann mit der invarianten Kultur analysiert werden <xref:System.Globalization.DateTimeFormatInfo> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Globalization.DateTimeFormatInfo" /> schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />, wenn das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Datumswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen langen Datumswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "D" angegeben. Das folgende Beispiel veranschaulicht die Beziehungen zwischen den folgenden: die Standardformatzeichenfolge "D" das benutzerdefinierte Formatieren von zurückgegebene Zeichenfolge den <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft und die kulturspezifische Darstellung eines Datums.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Finden Sie unter [benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/custom-date-and-time-format-strings.md) für die einzelnen benutzerdefinierten Formatbezeichnern, die zum Erstellen von benutzerdefinierten Formatzeichenfolgen z. B. "Dddd, Dd MMMM Yyyy" kombiniert werden können.  
  
 Sie sollten das Trennzeichen für Datumsangaben in dem langen Datumsmuster auf einer genauen Zeichenfolge anstelle der Platzhalter für das Datum als Trennzeichen festgelegt. Legen Sie zum Abrufen des Musters MM-TT-JJJJ beispielsweise das langen Datumsmuster, "MM-DD-Yyyy".  
  
 Der Wert dieser Eigenschaft möglicherweise ändern, wenn Kalender einer Kultur ändert verwendet. Z. B. das folgende Beispiel zeigt wie die <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft eine <xref:System.Globalization.CultureInfo> -Objekt, das die Kultur Arabisch (Syrien) geändert, wenn die <xref:System.Globalization.Calendar> Objekt, das von den Änderungen der Kultur verwendet.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des der <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Eigenschaft für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen langen Uhrzeitwert ab oder legt diese fest.</summary>
        <value>Das Formatmuster für einen langen Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "T" angegeben.  
  
 Es wird empfohlen, dass Sie das Trennzeichen für Zeitangaben im Muster wird viel Zeit mit einer genauen Zeichenfolge anstelle der Platzhalter als Trennzeichen festgelegt. Um Muster h-mm-ss zu erhalten, legen Sie beispielsweise das langen Datumsmuster, "h-mm-ss".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Monats- und Tageswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen Tages- und Monatswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und durch die kombinierte Formatierung Zeichenfolgen, die bereitgestellt werden soll, das "m" und "M" Standardformatzeichenfolgen.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 Es wird empfohlen, dass Sie das Trennzeichen für Datumsangaben im Monat und Tag Muster wird mit einer genauen Zeichenfolge anstelle der Platzhalter für das Datum als Trennzeichen festgelegt. Angenommen, um das Muster MM-DD zu erhalten, legen Sie den Monat und Tag Muster "MM-DD".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der Monatsnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt dieses fest.</summary>
        <value>Ein Zeichenfolgenarray von Monatsnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einigen Sprachen können wird Sie in der Genitiv ein Monatsnamen, der Teil eines Datums wird angezeigt. Beispielsweise besteht ein Datum in der Russisch (Russische Föderation) oder "ru-RU", Kultur die Tag-Anzahl und den Genitiv Monatsnamen, z. B. 1 Января.  
  
 Wenn diese Eigenschaft festgelegt ist, wird das Array eindimensional sein und muss über genau 13 Elemente verfügen. <xref:System.Globalization.Calendar> Kalender mit 13 Monaten, um Objekte aufzunehmen. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres, definiert durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft. Wenn Sie festlegen, die <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> -Eigenschaft, müssen Sie auch Festlegen der <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht verschiedene Methoden und Eigenschaften, die Datum und Uhrzeit Formatierungsmuster, systemeigene Kalendername, und vollständige und abgekürzten Monats und Tagesnamen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang ist das Array mehrdimensional oder hat eine Länge, die nicht genau 13 beträgt.</exception>
        <exception cref="T:System.ArgumentNullException">Bei einem Set-Vorgang ist das Array oder eins seiner Elemente <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein eindimensionales Array vom Typ <see cref="T:System.String" /> ab, das die kulturabhängigen vollständigen Namen der Monate enthält, oder legt dieses fest.</summary>
        <value>Ein eindimensionales Array vom Typ <see cref="T:System.String" />, das die kulturabhängigen vollständigen Namen der Monate enthält. In einem Kalender mit 12 Monaten ist das 13. Element des Arrays eine leere Zeichenfolge. Das Array für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> enthält "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" und "".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt ist, wird das Array eindimensional sein und muss über genau 13 Elemente verfügen. <xref:System.Globalization.Calendar> Kalender mit 13 Monaten, um Objekte aufzunehmen. Das erste Element (das Element bei Index 0) stellt den ersten Monat des Jahres, definiert durch die <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Eigenschaft.  
  
 Wenn Sie festlegen, die <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> -Eigenschaft, müssen Sie auch Festlegen der <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> Eigenschaft.  
  
 Wenn das benutzerdefinierte Muster das Formatmuster "MMMM", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> anstelle von "MMMM" in das Formatmuster.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die Eigenschaft wird auf ein Array festgelegt, das multidimensional ist oder eine Länge von etwa 13 hat.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den systemeigenen Namen des Kalenders ab, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist.</summary>
        <value>Der systemeigene Name des in der Kultur verwendeten Kalenders, der dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet ist, sofern der Name verfügbar ist, oder eine leere Zeichenfolge (""), wenn der systemeigene Kalender nicht verfügbar ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht verschiedene Methoden und Eigenschaften, die Datum und Uhrzeit Formatierungsmuster, systemeigene Kalendername, und vollständige und abgekürzten Monats und Tagesnamen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Wenn <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> ist der <see cref="T:System.Globalization.TaiwanCalendar" /> aber die <see cref="P:System.Threading.Thread.CurrentCulture" /> ist nicht "Zh-TW", klicken Sie dann <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, und <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> zurückgeben eine leere Zeichenfolge ("").</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichenfolgenkennzeichner für Zeitangaben nach 12 Uhr mittags ("post meridiem", p.m.) ab oder legt diesen fest.</summary>
        <value>Der Zeichenfolgenkennzeichner für Zeitangaben nach 12 Uhr mittags ("post meridiem", p.m.). Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist "PM".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Eigenschaft ist für alle Zeitangaben von 12:00:00 (Mittag) verwendet, um 23:59:59.999.  
  
 Wenn das benutzerdefinierte Muster enthält das Muster "Tt" und die Zeit nach Mittag, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> anstelle von "Tt" in das Formatmuster. Wenn das benutzerdefinierte Muster Formatmuster "t", nur das erste Zeichen des <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> wird angezeigt. Ihre Anwendung sollte "Tt" für Sprachen verwendet werden, für die die Unterscheidung zwischen AM und PM beibehalten werden muss. Ein Beispiel hierfür ist die japanische Sprache, in der nicht das erste, sondern das zweite Zeichen des AM/PM-Bezeichners das Unterscheidungsmerkmal darstellt.  
  
 Wenn in Kulturen, die keinen PM-Kennzeichner verwenden, gibt diese Eigenschaft eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">Das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt, für das der Wrapper erstellt wird.</param>
        <summary>Gibt einen schreibgeschützten <see cref="T:System.Globalization.DateTimeFormatInfo" />-Wrapper zurück.</summary>
        <returns>Ein schreibgeschützter <see cref="T:System.Globalization.DateTimeFormatInfo" />-Wrapper.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Wrapper wird verhindert, dass alle Änderungen an `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dtfi" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Uhrzeitwert ab, der auf der Spezifikation 1123 Request for Comments (Internet Engineering Task Force- IETF RFC ()) basiert.</summary>
        <value>Die benutzerdefinierte Formatierungszeichenfolge für einen Uhrzeitwert, die auf der RFC-Spezifikation 1123 der IETF basiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und durch die kombinierte Formatierung Zeichenfolgen, die bereitgestellt werden soll, der "R" und "R"-Standardformatzeichenfolgen.  
  
 Der RFC1123-Muster handelt es sich einen definierten Standard, und die Eigenschaft ist schreibgeschützt. Aus diesem Grund ist es immer gleich, unabhängig von der Kultur. Die benutzerdefinierte Formatzeichenfolge lautet "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'".  
  
   
  
## Examples  
 Im folgende Beispiel wird den Wert der RFC1123Pattern für bestimmte Kulturen angezeigt.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" />
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="patterns">Ein Array benutzerdefinierter Formatzeichenfolgen.</param>
        <param name="format">Die standardmäßige Formatierungszeichenfolge, die im <c>patterns</c>-Parameter angegebenen benutzerdefinierten Formatierungszeichenfolgen zugeordnet wird.</param>
        <summary>Legt die benutzerdefinierten Formatzeichenfolgen für Datum und Uhrzeit fest, die einer angegebenen Standardformatzeichenfolge entsprechen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Methode definiert die benutzerdefinierten Formatzeichenfolgen, die entsprechen, die ein bestimmter Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolge. Wenn ein Aufruf von einer Datums- und Uhrzeitangabe Formatierungsmethode enthält Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolge angegeben, indem `format`, die Methode verwendet das erste Element in der `patterns` Array, das das Format der Ergebniszeichenfolge definiert.  
  
> [!WARNING]
>  Die `Parse` und `TryParse` Methoden führen Sie alle Zeichenfolgen in nicht vollständig durchlaufen `patterns` beim Analysieren der angegebene Zeichenfolgendarstellung einer Datums- und Uhrzeitangabe. Wenn ein Datums- und Uhrzeitzeichenfolge damit bestimmte Formate bei einem Analysevorgang erforderlich ist, übergeben Sie das Array gültiger Formate an die <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, oder <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> Methode.  
  
 Sie können benutzerdefinierte Formatzeichenfolgen, die entsprechen der "d", "D", "t", "T" und "y" oder "Y" Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen definieren. Wenn der Wert der `format` ist eine beliebige andere Standardformatzeichenfolge der <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> -Methode löst eine <xref:System.ArgumentException>.  
  
 Wenn Ihre benutzerdefinierten Formatbezeichner für Datum und Uhrzeit-Formatzeichenfolgen Datumstrennzeichen einschließen, müssen Sie explizit einem Datumstrennzeichen, statt die standardremotedatenbank analysieren oder die Formatierung-Methode, die den benutzerdefinierte Formatbezeichner "/" mit einem bestimmten Datumstrennzeichen ersetzt angeben. Um das Muster MM-TT-JJJJ zu erhalten, verwenden Sie z. B. das Muster "MM-DD-Yyyy".  
  
   
  
## Examples  
 Das folgende Beispiel instanziiert einen <xref:System.Globalization.CultureInfo> Objekt, stellt "En-US" (Englisch - USA) Kultur und verwendet, um ein Array von Datum und Uhrzeit-Zeichenfolgen, die mit der Standardformatzeichenfolge "Y" zu analysieren. Es verwendet dann die <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Methode, um eine neue benutzerdefinierte Formatzeichenfolge mit der Standardformatzeichenfolge "Y", und dann versucht, analysieren das Array von Zeichenfolgen für Datum und Uhrzeit zuzuordnen. Ausgabe des Beispiels zeigt, dass die neue benutzerdefinierte Formatzeichenfolge in die Analyse und Formatierungsvorgängen verwendet wird.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="patterns" /> ist <see langword="null" /> oder ein Array der Länge 0 (null).  
  
 - oder -   
  
 <paramref name="format" /> ist keine gültige Standardformatzeichenfolge oder ist eine Standardformatzeichenfolge, deren Muster nicht festgelegt werden können.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patterns" /> hat ein Arrayelement, dessen Wert <see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Dieses <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen kurzen Datumswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen kurzen Datumswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "d" angegeben.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des der <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft und der Wert eines Datums mit formatiert die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft für bestimmte Kulturen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 Im folgende Beispiel ändert die <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft ein <xref:System.Globalization.DateTimeFormatInfo> Objekt, das die Formatierungskonventionen der Kultur Englisch (Vereinigte Staaten) darstellt. Es zeigt auch einen Datumswert zweimal zuerst entsprechend die ursprünglichen <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Eigenschaft und dann entsprechend den neue Eigenschaftswert.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray der am stärksten abgekürzten, eindeutigen Tagesnamen ab, die dem aktuellen <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt zugeordnet sind, oder legt diese fest.</summary>
        <value>Ein Zeichenfolgenarray von Tagesnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht verschiedene Methoden und Eigenschaften, die Datum und Uhrzeit Formatierungsmuster, systemeigene Kalendername, und vollständige und abgekürzten Monats und Tagesnamen angeben.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In einem set-Vorgang verfügt das Array nicht genau über sieben Elemente.</exception>
        <exception cref="T:System.ArgumentNullException">In einem set-Vorgang entspricht das Wertearray oder eines seiner Elemente dem Wert <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das aktuelle <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt in einem set-Vorgang ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen kurzen Uhrzeitwert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen kurzen Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "t" angegeben.  
  
 Es wird empfohlen, dass Sie Zeittrennzeichen im Muster kurzer Zeit mit einer genauen Zeichenfolge anstelle der Platzhalter als Trennzeichen festgelegt. Angenommen, um Muster h-mm-ss zu erhalten, legen Sie die Kurzes Zeitmuster, "h-mm-ss".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen sortierbaren Datums-und Zeitwert ab.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen sortierbaren Datums-und Zeitwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "s" angegeben.  
  
 Die zurückgegebene Zeichenfolge den <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Eigenschaft gibt einen definierten Standard (ISO 8601) und die Eigenschaft ist schreibgeschützt. Aus diesem Grund ist es immer gleich, unabhängig von der Kultur. Die benutzerdefinierte Formatzeichenfolge lautet "yyyy'-'MM'-'dd'T'HH':'mm':'ss".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die die Bestandteile der Uhrzeit trennt, d. h. Stunde, Minuten und Sekunden, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die die Bestandteile der Uhrzeit trennt. Die Standardeinstellung für <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> ist ":".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das benutzerdefinierte Muster das Formatmuster ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> anstelle von der ":" in das Formatmuster.  
  
 Das Zeittrennzeichen stammt aus dem <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Eigenschaft. Es wird empfohlen, dass Sie Zeittrennzeichen kurz festgelegt oder lange Mustern in einer genauen Zeichenfolge Zeit anstelle der Platzhalter als Trennzeichen. Angenommen, um Muster h-mm-ss zu erhalten, legen Sie das entsprechende Muster, "h-mm-ss". Dieses Vorgehen können Sie Muster fest, z. B. "h" mm "ss" bin "(3h 36m 12 s), die mehrere Typen von Trennzeichen enthalten. Die <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Eigenschaft definiert die Zeichenfolge, die das Trennzeichen für Zeitangaben ersetzt (":" benutzerdefinierten Formatbezeichner für Datum und Uhrzeit) in eine Ergebniszeichenfolge, die bei einem Formatierungsvorgang. Außerdem werden die Trennzeichen Zeitzeichenfolge bei einem Analysevorgang definiert.  
  
   
  
## Examples  
 Das folgende Beispiel instanziiert einen <xref:System.Globalization.CultureInfo> Objekt ändert sich die Trennzeichen für Datumsangaben, für die Kultur En-US ".", und zeigt ein Datum unter Verwendung der "t", "T", "F", "f", "G" und "g" Standardformatzeichenfolgen.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für eine universelle sortierbare Datums- und Zeitzeichenfolge ab.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für eine universelle sortierbare Datums- und Zeitzeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Eigenschaft definiert das Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und zusammengesetzten Zeichenfolgen, die die Standardformatzeichenfolge "u" angegeben. Es kann zum Anzeigen von Datumsangaben und Uhrzeiten in einer sortierbaren Reihenfolge mit der Coordinated Universal Time-Kennzeichner "Z" am Ende verwendet werden. Das Format ist sortierbar, da führende Nullen für Jahr, Monat, Tag, Stunde, Minute und Sekunde verwendet. Die benutzerdefinierte Formatzeichenfolge ("Yyyy '-' MM'-' Dd HH': 'mm':'ss ' z'") ist unabhängig von Kultur- oder Formatanbieter.  
  
 Die zurückgegebene Zeichenfolge den <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Eigenschaft gibt einen definierten Standard wieder, und die Eigenschaft ist schreibgeschützt. Aus diesem Grund ist es immer gleich, unabhängig von der Kultur. Die benutzerdefinierte Formatzeichenfolge lautet "yyyy'-'MM'-'dd HH':'mm':'ss'Z'".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Formatzeichenfolge für einen Jahres- und Monatswert ab oder legt diese fest.</summary>
        <value>Die benutzerdefinierte Formatzeichenfolge für einen Jahres- und Monatswert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> Eigenschaft definiert die kulturspezifischen Format von Datumszeichenfolgen, die durch Aufrufe von zurückgegeben werden die <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> Methoden und Zeichenfolgen, die durch die kombinierte Formatierung angegeben, die "y" und "Y" Standardformatzeichenfolgen.  
  
 Diese Eigenschaft wird beeinflusst, wenn der Wert von der <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> -Eigenschaft ändert.  
  
 Es wird empfohlen, dass Sie das Trennzeichen für Datumsangaben im Jahr-Monat-Muster auf einer genauen Zeichenfolge anstelle der Platzhalter für das Datum als Trennzeichen festgelegt. Angenommen, um das Muster MM-Yyyy zu erhalten, legen Sie die Jahr-Monat-Muster "MM-Yyyy".  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den Wert des <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> für bestimmte Kulturen.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Eigenschaft wird auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, und das <see cref="T:System.Globalization.DateTimeFormatInfo" />-Objekt ist schreibgeschützt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>