<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="258d831b0b363d984e93d2ee5da0ec538bb71d08" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52352958" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Informationen über die Unicode-Version bereit, die zum Vergleichen und Sortieren von Zeichenfolgen verwendet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

### <a name="sorting-and-string-comparison-in-the-net-framework"></a>Sortierung und Vergleich in .NET Framework

 Von der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] über die [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], jede Version von.NET Framework ist enthalten Tabellen, die sortierungsgewichtungen enthalten und Daten auf die Normalisierung von Zeichenfolgen und die basieren auf einer bestimmten Version von Unicode. In der [!INCLUDE[net_v45](~/includes/net-v45-md.md)], das Vorhandensein der Tabellen auf dem Betriebssystem abhängt:  
  
-   Auf [!INCLUDE[win7](~/includes/win7-md.md)] und früheren Versionen des Windows-Betriebssystems, die Tabellen für den Vergleich und Sortierung von Zeichenfolgen verwendet werden.  
  
-   Auf [!INCLUDE[win8](~/includes/win8-md.md)], die .NET Framework-Delegaten Zeichenfolgenvergleich und Sortieroperationen für das Betriebssystem.  
  
 Das Ergebnis eines Zeichenfolgenvergleichs kann daher nicht nur auf .NET Framework-Version, sondern auch auf die Version des Betriebssystems, wie die folgende Tabelle zeigt abhängen. Beachten Sie, dass diese Liste der unterstützten Unicode-Versionen lediglich für den Zeichenvergleich und die Sortierung gilt. Sie gilt nicht für die kategorische Klassifizierung von Unicode-Zeichen.  
  
|.NET Framework-Version|Betriebssystem|Unicode-Version|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Alle Betriebssysteme|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] und höheren Versionen von .NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] und höheren Versionen von .NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] und höheren Versionen von Windows-Betriebssystem|Unicode 6.0|  
  
 Auf [!INCLUDE[win8](~/includes/win8-md.md)], da die Version von Unicode in Zeichenfolgenvergleich verwendet und Sortierung hängt von der Version des Betriebssystems, die Ergebnisse des Zeichenfolgenvergleichs unterscheiden sich auch für Anwendungen, die auf eine bestimmte Version von .NET Framework ausgeführt.  

### <a name="sorting-and-string-comparison-in-net-core"></a>Sortierung und Vergleich in .NET Core

Alle Versionen von .NET Core basieren auf das zugrunde liegende Betriebssystem, beim Vergleichen von Zeichenfolgen. Aus diesem Grund die Ergebnisse eines Zeichenfolgenvergleichs oder die Reihenfolge, in der Zeichenfolgen sortiert werden, hängt die Version von Unicode, die vom Betriebssystem verwendet wird, beim Ausführen des Vergleichs. Unter Linux und MacOS [International Components for Unicode](http://site.icu-project.org/) Bibliotheken stellen die Implementierung für den Vergleich und Sortierung von APIs bereit.

### <a name="using-the-sortversion-class"></a>Verwenden der SortVersion-Klasse

 Die <xref:System.Globalization.SortVersion> -Klasse stellt Informationen über die Unicode-Version von .NET für Zeichenfolgenvergleich und die Sortierung verwendet wird. Sie können Entwickler Anwendungen schreiben, die erkennen und Änderungen in der Version von Unicode, die verwendet wird, zu vergleichen und Sortieren von Zeichenfolgen von der Anwendung erfolgreich verarbeiten kann.  
  
 Instanziieren Sie ein <xref:System.Globalization.SortVersion> Objekt gibt es zwei Möglichkeiten:  
  
-   Durch Aufrufen der <xref:System.Globalization.SortVersion.%23ctor%2A> -Konstruktor, der eine neue instanziiert <xref:System.Globalization.SortVersion> Objekt basierend auf einer Reihe von Version und ID sortiert Dieser Konstruktor ist besonders hilfreich beim erneuten Erstellen einer <xref:System.Globalization.SortVersion> Objekt aus der gespeicherten Daten.  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType> Eigenschaft. Diese Eigenschaft enthält Informationen über die Unicode-Version verwendet, die von der .NET-Implementierung, die auf der die Anwendung ausgeführt wird.  
  
 Die <xref:System.Globalization.SortVersion> -Klasse verfügt über zwei Eigenschaften, <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A>, anzugeben, dass die Unicode-Version und die spezifische Kultur, die für den Zeichenfolgenvergleich verwendet. Die <xref:System.Globalization.SortVersion.FullVersion%2A> -Eigenschaft ist ein beliebiger numerischer Wert, der die Unicode-Version verwendet wird, für den Zeichenfolgenvergleich, wiedergibt und die <xref:System.Globalization.SortVersion.SortId%2A> -Eigenschaft ist ein beliebiger <xref:System.Guid> , die die Kultur, deren Konventionen, für den Zeichenfolgenvergleich dazu dienen, wiedergibt. Die Werte dieser beiden Eigenschaften sind wichtig, nur, wenn Sie zwei vergleichen <xref:System.Globalization.SortVersion> Objekte mithilfe der <xref:System.Globalization.SortVersion.Equals%2A> -Methode, die <xref:System.Globalization.SortVersion.op_Equality%2A> Operator an, oder die <xref:System.Globalization.SortVersion.op_Inequality%2A> Operator.  
  
 In der Regel eine <xref:System.Globalization.SortVersion> -Objekt beim Speichern oder Abrufen eine Form der kulturabhängig, Zeichenfolgendaten, z. B. Indizes oder das Literal geordnete selbst Zeichenfolgen. Gehen Sie dazu folgendermaßen vor:  
  
1.  Wenn die geordnete Zeichenfolgendaten gespeichert werden, die <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaftswerte werden ebenfalls gespeichert.  
  
2.  Wenn die geordnete Zeichenfolgendaten abgerufen werden, können Sie neu erstellen die <xref:System.Globalization.SortVersion> Objekt, das verwendet wird, für die Sortierung der Zeichenfolgen durch Aufrufen der <xref:System.Globalization.SortVersion.%23ctor%2A> Konstruktor.  
  
3.  Diese neu instanziiert <xref:System.Globalization.SortVersion> Objekt ist im Vergleich zu einem <xref:System.Globalization.SortVersion> Objekt, das die Kultur darstellt, dessen Konventionen dazu dienen, die Zeichenfolgendaten zu sortieren.  
  
4.  Wenn die beiden <xref:System.Globalization.SortVersion> -Objekte ungleich sind, die Zeichenfolgendaten neu angeordnet werden müssen.  
  
 Dies wird im Beispiel veranschaulicht.  
  
   
  
## Examples  
 Das folgende Beispiel enthält einen Teil des Quellcodes aus einer Anwendung, verwendet der <xref:System.Globalization.SortVersion> Klasse, um sicherzustellen, dass die systemeigenen Namen der <xref:System.Globalization.RegionInfo> Objekte entsprechend für das aktuelle System und die aktuelle Kultur sortiert werden. Er verwendet den <xref:System.IO.BinaryReader> und <xref:System.IO.BinaryWriter> Objekte zu speichern und Abrufen von sortiert die Daten aus einer Datendatei, die mit dem Namen `Regions.dat` statt abrufen und Sortieren von Daten bei jeder Ausführung die Anwendung. Im Beispiel wird zunächst überprüft, um zu bestimmen, ob die Datei vorhanden ist. Wenn dies nicht der Fall ist, erstellt er die Daten und legt die `reindex` Flag, das angibt, dass die Daten neu sortiert und erneut gespeichert werden müssen. Andernfalls ruft die Daten ab und vergleicht die gespeicherten <xref:System.Globalization.SortVersion> Objekt mit der <xref:System.Globalization.SortVersion> Objekt für die aktuelle Kultur auf dem aktuellen System. Wenn sie nicht gleich sind oder wenn die `reindex` Flag hatte zuvor festgelegt wurde, wird es neu sortiert die <xref:System.Globalization.RegionInfo> Daten.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">Eine Versionsnummer.</param>
        <param name="sortId">Eine Sortierungs-ID.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Globalization.SortVersion" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor instanziiert ein <xref:System.Globalization.SortVersion> Objekt mit der angegebenen Version und ID sortiert Die `fullVersion` Argument zugewiesen wird die <xref:System.Globalization.SortVersion.FullVersion%2A> Eigenschaft. Die `sortId` Argument zugewiesen wird die <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaft.  
  
 Dieser Konstruktor ist nützlich für das Neuerstellen einer <xref:System.Globalization.SortVersion> Objekt aus Daten, die serialisiert oder gespeichert wurde. Diese Version kann mit der aktuellen Anwendungsversion zu bestimmen, ob die Version von Unicode verwendet, um anzuzeigen, und Sortieren von Zeichenfolgen von der Anwendung verfügbar ist, klicken Sie dann verglichen werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen gleich sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Globalization.SortVersion" />-Instanz gleich einem angegebenen <see cref="T:System.Globalization.SortVersion" />-Objekt ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="other" /> die gleiche Version darstellt wie diese Instanz, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn ihre <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Globalization.SortVersion" />-Instanz gleich einem angegebenen Objekt ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> ein <see cref="T:System.Globalization.SortVersion" />-Objekt ist, das dieselbe Version wie diese Instanz darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn ihre <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vollständige Versionsnummer des <see cref="T:System.Globalization.SortVersion" />-Objekts ab.</summary>
        <value>Die Versionsnummer dieses <see cref="T:System.Globalization.SortVersion" />-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.Globalization.SortVersion.FullVersion%2A> Eigenschaft spiegelt wider, die Unicode-Version zum Normalisieren und Vergleichen von Zeichenfolgen verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashcode für diese Instanz zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Gibt an, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen gleich sind.</summary>
        <returns><see langword="true" />, wenn die Werte von <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn beide `null`, oder wenn ihre <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Gibt an, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen ungleich sind.</summary>
        <returns><see langword="true" />, wenn die Werte von <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind nicht gleich, wenn eine `null` und der andere nicht der Fall, oder wenn sie unterschiedliche <xref:System.Globalization.SortVersion.FullVersion%2A> oder <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaftswerte.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen globalen eindeutigen Bezeichner für dieses <see cref="T:System.Globalization.SortVersion" />-Objekt ab.</summary>
        <value>Ein globaler eindeutiger Bezeichner für dieses <see cref="T:System.Globalization.SortVersion" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaft spiegelt wider, die Kultur, deren Konventionen Zeichenfolgenvergleich und-Sortierung zu beeinflussen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>