<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b9c2604baa325e264ef4122d8c8bb94c2dea579" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133543" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Informationen über die Unicode-Version bereit, die zum Vergleichen und Sortieren von Zeichenfolgen verwendet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

### <a name="sorting-and-string-comparison-in-the-net-framework"></a>Sortieren und Zeichen folgen Vergleich in der .NET Framework

 Vom [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] bis zum [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]enthält jede Version von The.NET Framework Tabellen, die Sortierungs Gewichtungen und Daten für die Zeichen folgen Normalisierung enthalten und auf einer bestimmten Unicode-Version basieren. Im [!INCLUDE[net_v45](~/includes/net-v45-md.md)]ist das vorhanden sein dieser Tabellen vom Betriebssystem abhängig:  
  
-   Auf [!INCLUDE[win7](~/includes/win7-md.md)] und früheren Versionen des Windows-Betriebssystems werden die Tabellen weiterhin zum Vergleichen und Anordnen von Zeichen folgen verwendet.  
  
-   Auf [!INCLUDE[win8](~/includes/win8-md.md)]delegiert die .NET Framework Zeichen folgen Vergleichs-und Bestellvorgänge an das Betriebssystem.  
  
 Folglich kann das Ergebnis eines Zeichen folgen Vergleichs nicht nur von der .NET Framework Version abhängen, sondern auch von der Betriebssystemversion, wie in der folgenden Tabelle gezeigt. Beachten Sie, dass diese Liste der unterstützten Unicode-Versionen lediglich für den Zeichenvergleich und die Sortierung gilt. Sie gilt nicht für die kategorische Klassifizierung von Unicode-Zeichen.  
  
|.NET Framework-Version|Betriebssystem|Unicode-Version|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Alle Betriebssysteme|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] und spätere Versionen des .NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] und spätere Versionen des .NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] und höhere Versionen des Windows-Betriebssystems|Unicode 6.0|  
  
 Wenn auf [!INCLUDE[win8](~/includes/win8-md.md)]die in Zeichen folgen Vergleich und-Reihenfolge verwendete Unicode-Version von der Version des Betriebssystems abhängig ist, können sich die Ergebnisse des Zeichen folgen Vergleichs auch bei Anwendungen unterscheiden, die auf einer bestimmten Version des .NET Framework ausgeführt werden.  

### <a name="sorting-and-string-comparison-in-net-core"></a>Sortieren und Zeichen folgen Vergleich in .net Core

Beim Durchführen von Zeichen folgen vergleichen basieren alle Versionen von .net Core auf dem zugrunde liegenden Betriebssystem. Daher hängt die Ergebnisse eines Zeichen folgen Vergleichs oder die Reihenfolge, in der Zeichen folgen sortiert werden, von der Unicode-Version ab, die vom Betriebssystem beim Durchführen des Vergleichs verwendet wird. Unter Linux und macOS stellen [internationale Komponenten für Unicode](http://site.icu-project.org/) -Bibliotheken die Implementierung für Vergleichs-und Sortierungs-APIs bereit.

### <a name="using-the-sortversion-class"></a>Verwenden der sortversion-Klasse

 Die <xref:System.Globalization.SortVersion>-Klasse stellt Informationen über die Unicode-Version bereit, die von .net für den Zeichen folgen Vergleich und die Reihenfolge Es ermöglicht Entwicklern das Schreiben von Anwendungen, die Änderungen in der Unicode-Version erkennen und erfolgreich verarbeiten können, die zum Vergleichen und Sortieren der Zeichen folgen einer Anwendung verwendet wird.  
  
 Ein <xref:System.Globalization.SortVersion>-Objekt kann auf zwei Arten instanziiert werden:  
  
-   Durch Aufrufen des <xref:System.Globalization.SortVersion.%23ctor%2A>-Konstruktors, der ein neues <xref:System.Globalization.SortVersion>-Objekt auf Grundlage einer Versionsnummer und Sortier-ID instanziiert. Dieser Konstruktor ist am nützlichsten, wenn ein <xref:System.Globalization.SortVersion> Objekt aus gespeicherten Daten neu erstellt wird.  
  
-   Durch Abrufen des Werts der <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType>-Eigenschaft. Diese Eigenschaft enthält Informationen über die Unicode-Version, die von der .NET-Implementierung verwendet wird, auf der die Anwendung ausgeführt wird.  
  
 Die <xref:System.Globalization.SortVersion>-Klasse verfügt über zwei Eigenschaften, <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A>, die die Unicode-Version und die spezifische Kultur angeben, die für den Zeichen folgen Vergleich verwendet wird. Die <xref:System.Globalization.SortVersion.FullVersion%2A>-Eigenschaft ist ein beliebiger numerischer Wert, der die für den Zeichen folgen Vergleich verwendete Unicode-Version widerspiegelt, und die <xref:System.Globalization.SortVersion.SortId%2A>-Eigenschaft ist eine beliebige <xref:System.Guid>, die die Kultur wieder gibt, deren Konventionen für Zeichen folgen Vergleiche verwendet werden Die Werte dieser beiden Eigenschaften sind nur wichtig, wenn Sie zwei <xref:System.Globalization.SortVersion> Objekte mit der <xref:System.Globalization.SortVersion.Equals%2A>-Methode, dem <xref:System.Globalization.SortVersion.op_Equality%2A>-Operator oder dem <xref:System.Globalization.SortVersion.op_Inequality%2A>-Operator vergleichen.  
  
 In der Regel verwenden Sie ein <xref:System.Globalization.SortVersion> Objekt, wenn Sie eine Form von Kultur abhängigen, sortierter Zeichen folgen Daten (z. b. Indizes oder Literalzeichenfolgen) speichern oder abrufen. Gehen Sie dazu folgendermaßen vor:  
  
1.  Wenn die geordneten Zeichen folgen Daten gespeichert werden, werden auch die Eigenschaften Werte <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> gespeichert.  
  
2.  Wenn die geordneten Zeichen folgen Daten abgerufen werden, können Sie das <xref:System.Globalization.SortVersion> Objekt, das zum Anordnen der Zeichen folgen verwendet wird, durch Aufrufen des <xref:System.Globalization.SortVersion.%23ctor%2A>-Konstruktors neu erstellen.  
  
3.  Dieses neu instanziierte <xref:System.Globalization.SortVersion> Objekt wird mit einem <xref:System.Globalization.SortVersion> Objekt verglichen, das die Kultur widerspiegelt, deren Konventionen zum Sortieren der Zeichen folgen Daten verwendet werden.  
  
4.  Wenn die beiden <xref:System.Globalization.SortVersion> Objekte nicht gleich sind, müssen die Zeichen folgen Daten neu angeordnet werden.  
  
 Dies wird im Beispiel veranschaulicht.  
  
   
  
## Examples  
 Das folgende Beispiel enthält einen Teil des Quellcodes einer Anwendung, die die <xref:System.Globalization.SortVersion>-Klasse verwendet, um sicherzustellen, dass die systemeigenen Namen <xref:System.Globalization.RegionInfo> Objekte entsprechend dem aktuellen System und der aktuellen Kultur geordnet sind. Dabei werden die <xref:System.IO.BinaryReader>-und <xref:System.IO.BinaryWriter> Objekte zum Speichern und Abrufen geordneter Daten aus einer Datendatei mit dem Namen `Regions.dat` verwendet, anstatt die Daten jedes Mal abzurufen und zu ordnen, wenn die Anwendung ausgeführt wird. Im Beispiel wird zuerst überprüft, ob die Datendatei vorhanden ist. Wenn dies nicht der Fall ist, werden die Daten erstellt und das `reindex`-Flag festgelegt, das angibt, dass die Daten erneut gespeichert und gespeichert werden müssen. Andernfalls werden die Daten abgerufen und das gespeicherte <xref:System.Globalization.SortVersion>-Objekt mit dem <xref:System.Globalization.SortVersion>-Objekt für die aktuelle Kultur auf dem aktuellen System verglichen. Wenn Sie nicht gleich sind oder wenn das `reindex`-Flag zuvor festgelegt wurde, werden die <xref:System.Globalization.RegionInfo> Daten an die Daten übergegangen.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">Eine Versionsnummer.</param>
        <param name="sortId">Eine Sortierungs-ID.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Globalization.SortVersion" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor instanziiert ein <xref:System.Globalization.SortVersion>-Objekt mit der angegebenen Version und Sortier-ID. Das `fullVersion`-Argument wird der <xref:System.Globalization.SortVersion.FullVersion%2A>-Eigenschaft zugewiesen. Das `sortId`-Argument wird der <xref:System.Globalization.SortVersion.SortId%2A>-Eigenschaft zugewiesen.  
  
 Dieser Konstruktor ist nützlich, um ein <xref:System.Globalization.SortVersion> Objekt aus Daten, die serialisiert oder gespeichert wurden, neu zu erstellen. Diese Version kann dann mit der aktuellen Anwendungs Version verglichen werden, um zu bestimmen, ob die Version von Unicode verfügbar ist, die zum Anzeigen und Sortieren der Zeichen folgen der Anwendung verwendet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen gleich sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Globalization.SortVersion" />-Instanz gleich einem angegebenen <see cref="T:System.Globalization.SortVersion" />-Objekt ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="other" /> die gleiche Version darstellt wie diese Instanz, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn Ihre <xref:System.Globalization.SortVersion.FullVersion%2A>-und <xref:System.Globalization.SortVersion.SortId%2A>-Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein Objekt, das mit dieser Instanz verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Globalization.SortVersion" />-Instanz gleich einem angegebenen Objekt ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> ein <see cref="T:System.Globalization.SortVersion" />-Objekt ist, das dieselbe Version wie diese Instanz darstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn Ihre <xref:System.Globalization.SortVersion.FullVersion%2A>-und <xref:System.Globalization.SortVersion.SortId%2A>-Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vollständige Versionsnummer des <see cref="T:System.Globalization.SortVersion" />-Objekts ab.</summary>
        <value>Die Versionsnummer dieses <see cref="T:System.Globalization.SortVersion" />-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Globalization.SortVersion.FullVersion%2A>-Eigenschaft gibt die Unicode-Version an, die zum normalisieren und Vergleichen von Zeichen folgen verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashcode für diese Instanz zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Gibt an, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen gleich sind.</summary>
        <returns><see langword="true" />, wenn die Werte von <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind gleich, wenn beide `null`sind oder wenn deren <xref:System.Globalization.SortVersion.FullVersion%2A> und <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaften gleich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Gibt an, ob zwei <see cref="T:System.Globalization.SortVersion" />-Instanzen ungleich sind.</summary>
        <returns><see langword="true" />, wenn die Werte von <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwei <xref:System.Globalization.SortVersion> Objekte sind nicht gleich, wenn eine `null`, die andere nicht, oder wenn Sie unterschiedliche <xref:System.Globalization.SortVersion.FullVersion%2A>-oder <xref:System.Globalization.SortVersion.SortId%2A> Eigenschaftswerte aufweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen globalen eindeutigen Bezeichner für dieses <see cref="T:System.Globalization.SortVersion" />-Objekt ab.</summary>
        <value>Ein globaler eindeutiger Bezeichner für dieses <see cref="T:System.Globalization.SortVersion" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Globalization.SortVersion.SortId%2A>-Eigenschaft gibt die Kultur wieder, deren Konventionen den Zeichen folgen Vergleich und die Sortierung beeinflussen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
