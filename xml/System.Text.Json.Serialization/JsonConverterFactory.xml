<Type Name="JsonConverterFactory" FullName="System.Text.Json.Serialization.JsonConverterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e74adb8f87c592754ac5fe1e9f8ec2016ab21c85" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75030875" /></Metadata><TypeSignature Language="C#" Value="public abstract class JsonConverterFactory : System.Text.Json.Serialization.JsonConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonConverterFactory extends System.Text.Json.Serialization.JsonConverter" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Serialization.JsonConverterFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonConverterFactory&#xA;Inherits JsonConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonConverterFactory abstract : System::Text::Json::Serialization::JsonConverter" />
  <TypeSignature Language="F#" Value="type JsonConverterFactory = class&#xA;    inherit JsonConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Json.Serialization.JsonConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7b42-101">Unterstützt das Konvertieren verschiedener Typen mithilfe eines Factorymusters.</span><span class="sxs-lookup"><span data-stu-id="a7b42-101">Supports converting several types by using a factory pattern.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7b42-102">Dies ist nützlich für Konverter, die Generika unterstützen, wie z. b. einen Konverter für <xref:System.Collections.Generic.List`1>.</span><span class="sxs-lookup"><span data-stu-id="a7b42-102">This is useful for converters supporting generics, such as a converter for <xref:System.Collections.Generic.List`1>.</span></span>

<span data-ttu-id="a7b42-103">Weitere Informationen finden Sie unter [How to Write Custom Converter for JSON Serialisierung](~/docs/standard/serialization/system-text-json-converters-how-to.md#register-a-custom-converter).</span><span class="sxs-lookup"><span data-stu-id="a7b42-103">For more information, see [How to write custom converters for JSON serialization](~/docs/standard/serialization/system-text-json-converters-how-to.md#register-a-custom-converter).</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonConverterFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonConverterFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonConverterFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7b42-104">Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.Text.Json.Serialization.JsonConverterFactory" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7b42-104">When overidden in a derived class, initializes a new instance of the <see cref="T:System.Text.Json.Serialization.JsonConverterFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConverter">
      <MemberSignature Language="C#" Value="public abstract System.Text.Json.Serialization.JsonConverter CreateConverter (Type typeToConvert, System.Text.Json.JsonSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Json.Serialization.JsonConverter CreateConverter(class System.Type typeToConvert, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Serialization.JsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateConverter (typeToConvert As Type, options As JsonSerializerOptions) As JsonConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Json::Serialization::JsonConverter ^ CreateConverter(Type ^ typeToConvert, System::Text::Json::JsonSerializerOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member CreateConverter : Type * System.Text.Json.JsonSerializerOptions -&gt; System.Text.Json.Serialization.JsonConverter" Usage="jsonConverterFactory.CreateConverter (typeToConvert, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Serialization.JsonConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToConvert" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="typeToConvert"><span data-ttu-id="a7b42-105">Der vom Konverter verarbeitete Typ.</span><span class="sxs-lookup"><span data-stu-id="a7b42-105">The type handled by the converter.</span></span></param>
        <param name="options"><span data-ttu-id="a7b42-106">Die zu verwendenden Serialisierungsoptionen.</span><span class="sxs-lookup"><span data-stu-id="a7b42-106">The serialization options to use.</span></span></param>
        <summary><span data-ttu-id="a7b42-107">Erstellt einen Konverter für einen angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="a7b42-107">Creates a converter for a specified type.</span></span></summary>
        <returns><span data-ttu-id="a7b42-108">Ein Konverter, für den <typeparamref name="T" /> mit <paramref name="typeToConvert" /> kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="a7b42-108">A converter for which <typeparamref name="T" /> is compatible with <paramref name="typeToConvert" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7b42-109">Weitere Informationen finden Sie unter [How to Write Custom Converter for JSON Serialisierung](~/docs/standard/serialization/system-text-json-converters-how-to.md#sample-factory-pattern-converter).</span><span class="sxs-lookup"><span data-stu-id="a7b42-109">For more information, see [How to write custom converters for JSON serialization](~/docs/standard/serialization/system-text-json-converters-how-to.md#sample-factory-pattern-converter).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
