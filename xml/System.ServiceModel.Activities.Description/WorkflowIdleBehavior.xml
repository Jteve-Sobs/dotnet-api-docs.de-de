<Type Name="WorkflowIdleBehavior" FullName="System.ServiceModel.Activities.Description.WorkflowIdleBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da24dec9203fe097981e3490d79a7fa9dd1bd296" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78797065" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowIdleBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowIdleBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.Description.WorkflowIdleBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowIdleBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowIdleBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type WorkflowIdleBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="76daf-101">Ein Dienstverhalten, das steuert, wann Workflowinstanzen im Leerlauf entladen und beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="76daf-101">A service behavior that controls when idle workflow instances are unloaded and persisted.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="76daf-102">Wenn <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> auf einen Wert festgelegt ist, der größer ist als der Wert von <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> und der Workflow dann in den Leerlauf wechselt (aufgrund einer Verzögerungs Aktivität), wenn die Workflow Instanz nicht geändert wurde, wird Sie aus dem Arbeitsspeicher entfernt, indem Abort aufgerufen wird, anstatt den normalen Entlade Prozess zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="76daf-102">When <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> is set to a value greater than the value of <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> and the workflow then goes idle (because of a Delay activity) if the workflow instance has not changed it will be removed from memory by calling Abort, rather than going through the normal unloading process..</span></span> <span data-ttu-id="76daf-103">Dabei handelt es sich um eine Lauf Zeitoptimierung, und es gehen keine Daten verloren. ein Entwickler, der das Ablauf Verfolgungs Protokoll prüft, kann jedoch eine Abbruch Ablauf Verfolgung sehen, wenn eine Entlade Ablauf Verfolgung</span><span class="sxs-lookup"><span data-stu-id="76daf-103">This is a runtime optimization and no data is lost, but a developer looking at trace log may see an Abort trace when expecting an Unload trace.</span></span>  
  
 <span data-ttu-id="76daf-104">Ein Beispiel für die Verwendung dieses Verhaltens finden Sie unter [Erweiterbarkeit des Workflow Dienst Hosts](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md) .</span><span class="sxs-lookup"><span data-stu-id="76daf-104">For an example of how to use this behavior see [Workflow Service Host Extensibility](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowIdleBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowIdleBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76daf-105">Initialisiert eine neue Instanz von <see cref="T:System.ServiceModel.Activities.Description.WorkflowIdleBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="76daf-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Description.WorkflowIdleBehavior" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (serviceDescription As ServiceDescription, serviceHostBase As ServiceHostBase, endpoints As Collection(Of ServiceEndpoint), bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="workflowIdleBehavior.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="76daf-106">Die Dienstbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="76daf-106">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="76daf-107">Der Diensthost.</span><span class="sxs-lookup"><span data-stu-id="76daf-107">The service host.</span></span></param>
        <param name="endpoints"><span data-ttu-id="76daf-108">Die durch den Dienst verfügbar gemachten Endpunkte.</span><span class="sxs-lookup"><span data-stu-id="76daf-108">The endpoints exposed by the service.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="76daf-109">Die Bindungsparameter, die erforderlich sind, um das Verhalten zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76daf-109">The binding parameters required to implement the behavior.</span></span></param>
        <summary><span data-ttu-id="76daf-110">Implementiert die <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="76daf-110">Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDispatchBehavior (serviceDescription As ServiceDescription, serviceHostBase As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="workflowIdleBehavior.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="76daf-111">Die Dienstbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="76daf-111">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="76daf-112">Der Diensthost.</span><span class="sxs-lookup"><span data-stu-id="76daf-112">The service host.</span></span></param>
        <summary><span data-ttu-id="76daf-113">Implementiert die <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="76daf-113">Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToPersist">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToPersist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToPersist" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToPersist As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToPersist { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToPersist : TimeSpan with get, set" Usage="System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76daf-114">Ruft einen Wert ab oder legt ihn fest, der die <see cref="T:System.TimeSpan" /> angibt, die zwischen dem Zeitpunkt, zu dem der Workflow in den Leerlauf versetzt wird, und dem Zeitpunkt auftritt, zu dem er beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-114">Gets or sets a value that specifies the <see cref="T:System.TimeSpan" /> that occurs between the time the workflow becomes idle and is persisted.</span></span></summary>
        <value><span data-ttu-id="76daf-115">Die Zeitspanne, die verwendet wurde, um zu bestimmen, wann ein Workflow beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-115">The time span used to determine when a workflow is persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76daf-116">Die <xref:System.TimeSpan> beginnt zu dem Zeitpunkt, zu dem die Workflowinstanz in den Leerlauf versetzt wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-116">The <xref:System.TimeSpan> begins to elapse when the workflow instance becomes idle.</span></span> <span data-ttu-id="76daf-117">Diese Eigenschaft ist nützlich, wenn eine Workflowinstanz auf aggressivere Weise beibehalten werden soll, während die Instanz so lange als möglich im Speicher behalten werden soll.</span><span class="sxs-lookup"><span data-stu-id="76daf-117">This property is useful if you want to persist a workflow instance more aggressively while still keeping the instance in memory for as long as possible.</span></span> <span data-ttu-id="76daf-118">Der Standardwert dieser Eigenschaft ist <xref:System.TimeSpan.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="76daf-118">The default value for this property is <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="76daf-119">Die <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A>-Eigenschaft ist nur gültig, wenn ihr Wert kleiner als die <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> ist.</span><span class="sxs-lookup"><span data-stu-id="76daf-119">The <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> property is only valid if its value is less than <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>.</span></span> <span data-ttu-id="76daf-120">Ist er größer, wird das Attribut ignoriert.</span><span class="sxs-lookup"><span data-stu-id="76daf-120">If it is greater, it is ignored.</span></span> <span data-ttu-id="76daf-121">Wenn die von der <xref:System.TimeSpan> angegebene <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> vor der von der <xref:System.TimeSpan> angegebenen <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> verstreicht, muss die Beibehaltung abgeschlossen werden, bevor der Workflow entladen wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-121">If the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist%2A> elapses before the <xref:System.TimeSpan> specified by <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A>, persistence must complete before the workflow is unloaded.</span></span> <span data-ttu-id="76daf-122">Dies bedeutet, dass der Entladevorgang möglicherweise verzögert wird, bis der Workflow beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-122">This implies that the unload operation may be delayed until the workflow is persisted.</span></span> <span data-ttu-id="76daf-123">Die Beibehaltungsebene ist für das Behandeln von Wiederholungen für flüchtige Fehler zuständig und löst nur bei nicht behebbaren Fehlern Ausnahmen aus.</span><span class="sxs-lookup"><span data-stu-id="76daf-123">The persistence layer is responsible for handling any retries for transient errors and only throws exceptions on non-recoverable errors.</span></span> <span data-ttu-id="76daf-124">Daher werden alle während der Beibehaltung ausgelöste Ausnahmen als schwerwiegend behandelt, und die Workflowinstanz wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="76daf-124">Therefore, any exceptions thrown during persistence are treated as fatal and the workflow instance is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToUnload">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToUnload { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToUnload" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToUnload As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToUnload { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToUnload : TimeSpan with get, set" Usage="System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76daf-125">Ruft einen Wert ab oder legt ihn fest, der die <see cref="T:System.TimeSpan" /> angibt, die zwischen dem Zeitpunkt, zu dem der Workflow in den Leerlauf versetzt wird, und dem Zeitpunkt auftritt, zu dem er entladen wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-125">Gets or sets a value that specifies the <see cref="T:System.TimeSpan" /> that occurs between the time workflow becomes idle and is unloaded.</span></span></summary>
        <value><span data-ttu-id="76daf-126">Die Zeitspanne, die verwendet wurde, um zu bestimmen, wann ein Workflow entladen wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-126">The time span used to determine when a workflow is unloaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76daf-127">Der Standardwert beträgt 1 Minute.</span><span class="sxs-lookup"><span data-stu-id="76daf-127">The default value is 1 minute.</span></span> <span data-ttu-id="76daf-128">Einen Workflow zu entladen impliziert, dass dieser auch beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="76daf-128">Unloading a workflow implies that it is also persisted.</span></span> <span data-ttu-id="76daf-129">Wenn die <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> mit 0 (null) festgelegt wird, wird die Workflowinstanz sofort beibehalten und entladen, nachdem der Workflow in den Leerlauf versetzt wurde.</span><span class="sxs-lookup"><span data-stu-id="76daf-129">If <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> is set to zero the workflow instance is persisted and unloaded immediately after the workflow becomes idle.</span></span> <span data-ttu-id="76daf-130">Durch das Einstellen der <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> mit dem <xref:System.TimeSpan.MaxValue> wird der Entladevorgang gewissermaßen deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="76daf-130">Setting <xref:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload%2A> to <xref:System.TimeSpan.MaxValue> effectively disables the unload operation.</span></span> <span data-ttu-id="76daf-131">Workflowinstanzen im Leerlauf werden nie entladen.</span><span class="sxs-lookup"><span data-stu-id="76daf-131">Idle workflow instances are never unloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (serviceDescription As ServiceDescription, serviceHostBase As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="workflowIdleBehavior.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="76daf-132">Die Dienstbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="76daf-132">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="76daf-133">Der Diensthost.</span><span class="sxs-lookup"><span data-stu-id="76daf-133">The service host.</span></span></param>
        <summary><span data-ttu-id="76daf-134">Implementiert die <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="76daf-134">Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
