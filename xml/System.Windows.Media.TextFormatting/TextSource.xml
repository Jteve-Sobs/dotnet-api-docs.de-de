<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8ff35ec87dac1717d16d3fbd8c9ae46073f9630" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53749608" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Klasse bereit, um vom <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt zu verwendende Zeichendaten und Formatierungseigenschaften anzugeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Zugriffe auf den Text in die <xref:System.Windows.Media.TextFormatting.TextSource> Objekt ist, über die <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, die wurde entwickelt, um Text in irgendeiner Weise zu virtualisieren, wählt das Textlayout-Clients zu ermöglichen.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> ist die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Text-Engine, die Dienste zum Formatieren von Text und Umbrechen von Textzeilen enthält. <xref:System.Windows.Media.TextFormatting.TextFormatter> kann unterschiedliche Textzeichenformate und Absatzformatvorlagen verarbeiten, und bietet Unterstützung für internationales TextLayout. Im Gegensatz zu einer herkömmlichen Text- [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], <xref:System.Windows.Media.TextFormatting.TextFormatter> interagiert mit einem Textlayoutclient durch eine Reihe von Rückrufmethoden. Der Client muss diese Methoden in einer Implementierung der Bereitstellen der <xref:System.Windows.Media.TextFormatting.TextSource> Klasse. Die folgende Liste beschreibt die drei Elemente, die Sie überschreiben müssen:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Ruft eine <xref:System.Windows.Media.TextFormatting.TextRun> ab einer angegebenen <xref:System.Windows.Media.TextFormatting.TextSource> Position.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Ruft ab, der den Textabschnitt direkt vor der angegebenen <xref:System.Windows.Media.TextFormatting.TextSource> Position.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Ruft einen Wert, der zugeordnet wird eine <xref:System.Windows.Media.TextFormatting.TextSource> -Zeichenindex einen <xref:System.Windows.Media.TextEffect> Zeichenindex.  
  
> [!NOTE]
>  Für ein umfassendes Codebeispiel, das zeigt, wie Sie eine abgeleitete Implementierung <xref:System.Windows.Media.TextFormatting.TextSource> Klasse, finden Sie unter [Advanced Text Formatting Sample](https://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Advanced Text Formatting Sample</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Die Zeichenindexposition, an der der Textabruf beendet wird.</param>
        <summary>Ruft den Textabschnitt direkt vor der angegebenen <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Position ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" />-Wert, der den Textabschnitt direkt vor <paramref name="textSourceCharacterIndexLimit" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> Methode gibt eine leere <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> Wenn der Text unmittelbar vor dem umfassen `textSourceCharacterIndexLimit` enthält keinen Text enthält, z. B. eingebettete Objekte oder eine verborgene ausführen.  
  
 Diese Methode gibt einen Textabschnitt der Länge 0 (null) zurück, wenn es keine Werte vor `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Der <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Zeichenindex für die Zuordnung.</param>
        <summary>Ruft einen Wert ab, der einem <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Zeichenindex einen <see cref="T:System.Windows.Media.TextEffect" />-Zeichenindex zuordnet.</summary>
        <returns>Ein <see cref="T:System.Int32" />-Wert, der den <see cref="T:System.Windows.Media.TextEffect" />-Zeichenindex angibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Gibt die Zeichenindexposition in der <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> an, an der der <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> abgerufen wird.</param>
        <summary>Ruft einen <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> ab einer angegebenen <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Position ab.</summary>
        <returns>Ein Wert, der einen <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> darstellt, oder ein von <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> abgeleitetes Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Lauftext ist eine Folge von Zeichen, die gemeinsame Nutzung eines einzelnen Eigenschaftensatzes. Jede Änderung in das Format, z. B. Schriftfamilie, Schriftschnitt, Vordergrundfarbe, Text-Decoration oder andere Formatierungsoptionen Auswirkung, unterbricht den Lauftext. Die <xref:System.Windows.Media.TextFormatting.TextRun> Klasse ist der Stamm einer Typhierarchie, die mehrere Typen von Textinhalt von verarbeitet darstellen <xref:System.Windows.Media.TextFormatting.TextFormatter>. Jede abgeleitete Klasse, von <xref:System.Windows.Media.TextFormatting.TextRun> stellt einen unterschiedlichen Typ von Textinhalt.  
  
|Klasse|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Der Stamm der Hierarchie. Definiert eine Gruppe von Zeichen, die den gleichen Satz von Zeicheneigenschaften gemeinsam nutzen.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Definiert eine Auflistung der Zeichensymbole aus einer eindeutigen physischen Schriftart.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Definiert einen Typ von Textinhalt in die messen, Treffertests, und Zeichnen des gesamten Inhalts erfolgt als eine eindeutige Entität. Ein Beispiel für diese Art von Inhalt ist eine Schaltfläche in der Mitte der Zeile des Texts.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Definiert einen Zeilenumbruch-Zeichencode.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Definiert einen Absatzwechsel Zeichencode. Wird von <xref:System.Windows.Media.TextFormatting.TextEndOfLine>abgeleitet.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Definiert einen Segment-Break-Marker.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Definiert einen Bereich von nicht sichtbaren Zeichen.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Definiert den Anfang eines Bereichs ändern.|  
  
   
  
## Examples  
 Im folgenden Beispiel eine Außerkraftsetzung für die <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> Methode implementiert wird.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die PixelsPerDip für das Textrendering ab oder legt sie fest.</summary>
        <value>Der aktuelle <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Klasse, die erweitert <xref:System.Windows.Media.TextFormatting.TextSource> sollten aktualisieren <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> ändert sich jedes Mal, wenn der DPI-Wert für eine Anwendung pro Monitor DPI-Werte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>