<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="071e64e5956e8901f263682e8a214081bd7cb90f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70412656" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Klasse bereit, um vom <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />-Objekt zu verwendende Zeichendaten und Formatierungseigenschaften anzugeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der gesamte Zugriff auf den Text im <xref:System.Windows.Media.TextFormatting.TextSource> Objekt erfolgt über den <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, der so konzipiert ist, dass der Text layoutclient Text in beliebiger Weise virtualisieren kann.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter>ist die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Text-Engine, die Dienste zum Formatieren von Text und zum Abbrechen von Textzeilen bereitstellt. <xref:System.Windows.Media.TextFormatting.TextFormatter>kann verschiedene Textzeichen Formate und Absatz Stile verarbeiten und bietet Unterstützung für das internationale Text Layout. Im Gegensatz zu einem [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]herkömmlichen Text <xref:System.Windows.Media.TextFormatting.TextFormatter> interagiert der mit einem Textlayoutclient durch eine Reihe von Rückruf Methoden. Der Client muss diese Methoden in einer Implementierung der <xref:System.Windows.Media.TextFormatting.TextSource> -Klasse bereitstellen. In der folgenden Liste werden die drei Mitglieder beschrieben, die Sie überschreiben müssen:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Ruft einen <xref:System.Windows.Media.TextFormatting.TextRun> ab, der an einer <xref:System.Windows.Media.TextFormatting.TextSource> angegebenen Position beginnt.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Ruft den Textabschnitt direkt vor der angegebenen <xref:System.Windows.Media.TextFormatting.TextSource> Position ab.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Ruft einen Wert ab, der einem <xref:System.Windows.Media.TextFormatting.TextSource> <xref:System.Windows.Media.TextEffect> Zeichen Index einen Zeichen Index zuordnet.  
  
> [!NOTE]
>  Ein vollständiges Codebeispiel, das zeigt, wie eine abgeleitete <xref:System.Windows.Media.TextFormatting.TextSource> Klasse implementiert wird, finden Sie unter Beispiel für die [Erweiterte Text Formatierung](https://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Beispiel für die erweiterte Text Formatierung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Die Zeichenindexposition, an der der Textabruf beendet wird.</param>
        <summary>Ruft den Textabschnitt direkt vor der angegebenen <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Position ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" />-Wert, der den Textabschnitt direkt vor <paramref name="textSourceCharacterIndexLimit" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> -Methode gibt ein <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> leeres-Objekt zurück, wenn `textSourceCharacterIndexLimit` der Textabschnitt direkt vor keinen Text enthält, z. b. Inline Objekt oder eine ausgeblendete Testlauf.  
  
 Diese Methode gibt eine Text Spanne der Länge 0 (null) zurück, wenn `textSourceCharacterIndexLimit`keine Werte vorangestellt sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Der <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Zeichenindex für die Zuordnung.</param>
        <summary>Ruft einen Wert ab, der einem <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Zeichenindex einen <see cref="T:System.Windows.Media.TextEffect" />-Zeichenindex zuordnet.</summary>
        <returns>Ein <see cref="T:System.Int32" />-Wert, der den <see cref="T:System.Windows.Media.TextEffect" />-Zeichenindex angibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Gibt die Zeichenindexposition in der <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> an, an der der <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> abgerufen wird.</param>
        <summary>Ruft einen <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> ab einer angegebenen <see cref="T:System.Windows.Media.TextFormatting.TextSource" />-Position ab.</summary>
        <returns>Ein Wert, der einen <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> darstellt, oder ein von <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> abgeleitetes Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei einem Lauftext handelt es sich um eine Sequenz von Zeichen, die einen einzelnen Eigenschaften Satz freigeben. Jede Änderung des Formats, wie z. b. Schriftfamilie, Schrift Schnitt, Vordergrundfarbe, Text Dekoration oder ein beliebiger anderer Formatierungs Effekt, unterbricht die Text Führung. Die <xref:System.Windows.Media.TextFormatting.TextRun> -Klasse ist der Stamm einer Typhierarchie, die verschiedene Text Inhaltstypen darstellt <xref:System.Windows.Media.TextFormatting.TextFormatter>, die von verarbeitet werden. Jede Klasse, die von <xref:System.Windows.Media.TextFormatting.TextRun> abgeleitet wird, stellt einen eindeutigen Text Inhaltstyp dar.  
  
|Klasse|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Der Stamm der Hierarchie. Definiert eine Gruppe von Zeichen, die denselben Satz von Zeichen Eigenschaften verwenden.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Definiert eine Auflistung von Zeichen Symbolen aus einer eindeutigen physischen Schriftart.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Definiert einen Text Inhaltstyp, in dem Messungen, Treffer Tests und das Zeichnen des gesamten Inhalts als unterschiedliche Entität durchgeführt werden. Ein Beispiel für diesen Inhaltstyp ist eine Schaltfläche in der Mitte der Textzeile.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Definiert einen Zeilenumbruch-Zeichencode.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Definiert einen Zeichencode für einen Absatz Umbruch. Wird von <xref:System.Windows.Media.TextFormatting.TextEndOfLine>abgeleitet.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Definiert einen Segment Umbruch Marker.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Definiert einen Bereich nicht sichtbarer Zeichen.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Definiert den Anfang eines Änderungs Bereichs.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überschreibung für die <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> -Methode implementiert.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die PixelsPerDip für das Textrendering ab oder legt sie fest.</summary>
        <value>Der aktuelle <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Klasse, die <xref:System.Windows.Media.TextFormatting.TextSource> erweitert, <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> sollte immer dann aktualisiert werden, wenn der dpi-Wert für eine dpi-fähige Anwendung pro Monitor  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
