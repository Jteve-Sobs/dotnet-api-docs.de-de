<Type Name="CharacterHit" FullName="System.Windows.Media.TextFormatting.CharacterHit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4bd798394d470fe2d94d7703bc2e8ce880cf607" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86644750" /></Metadata><TypeSignature Language="C#" Value="public struct CharacterHit : IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterHit extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.CharacterHit" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterHit&#xA;Implements IEquatable(Of CharacterHit)" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterHit : IEquatable&lt;System::Windows::Media::TextFormatting::CharacterHit&gt;" />
  <TypeSignature Language="F#" Value="type CharacterHit = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Informationen über ein Zeichen dar, das in einer Symbolfolge ermittelt wurde.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Windows.Media.TextFormatting.CharacterHit> Struktur stellt Informationen über den Index des ersten Zeichens, das erreicht wurde, sowie Informationen über führende oder nachfolgende Kanten bereit.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Beispiel für die erweiterte Text Formatierung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterHit (int firstCharacterIndex, int trailingLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 firstCharacterIndex, int32 trailingLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (firstCharacterIndex As Integer, trailingLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterHit(int firstCharacterIndex, int trailingLength);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.CharacterHit : int * int -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="new System.Windows.Media.TextFormatting.CharacterHit (firstCharacterIndex, trailingLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="firstCharacterIndex" Type="System.Int32" />
        <Parameter Name="trailingLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="firstCharacterIndex">Der Index des ersten ermittelten Zeichens.</param>
        <param name="trailingLength">Im Fall eines führenden Rands beträgt dieser Wert 0. Bei einem nachfolgenden Rand ist dieser Wert die Anzahl der Codepunkte bis zur nächsten gültigen Position der Einfügemarke.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />-Struktur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt gleich sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterHit.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit dem aktuellen <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt ist; andernfalls <see langword="false" />. Wenn <paramref name="obj" /> kein <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt ist, wird <see langword="false" /> zurückgegeben.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.CharacterHit obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.CharacterHit obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::CharacterHit obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="characterHit.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="obj">Die mit dem aktuellen <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt zu vergleichende <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</param>
        <summary>Bestimmt, ob die <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> und das aktuelle <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Objekt ist; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstCharacterIndex">
      <MemberSignature Language="C#" Value="public int FirstCharacterIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstCharacterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstCharacterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstCharacterIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstCharacterIndex : int" Usage="System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des ersten ermittelten Zeichens ab.</summary>
        <value>Ein <see cref="T:System.Int32" />-Wert, der den Index darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterHit.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dient als Hashfunktion für <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. Sie eignet sich für die Verwendung in Hashalgorithmen und Datenstrukturen, z. B. einer Hashtabelle.</summary>
        <returns>Ein <see cref="T:System.Int32" />-Wert, der den Hashcode für das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Equality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CharacterHit, right As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::CharacterHit left, System::Windows::Media::TextFormatting::CharacterHit right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.TextFormatting.CharacterHit * System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left">Die erste Instanz eines zu vergleichenden <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</param>
        <param name="right">Die zweite Instanz eines zu vergleichenden <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</param>
        <summary>Überprüft zwei <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Zeichenfolgen auf Gleichheit.</summary>
        <returns><see langword="true" />, wenn die Werte der <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />-Eigenschaft und der <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />-Eigenschaft für beide Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Inequality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CharacterHit, right As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::CharacterHit left, System::Windows::Media::TextFormatting::CharacterHit right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.TextFormatting.CharacterHit * System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="System.Windows.Media.TextFormatting.CharacterHit.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left">Die erste Instanz eines zu vergleichenden <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</param>
        <param name="right">Die zweite Instanz eines zu vergleichenden <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</param>
        <summary>Überprüft zwei <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />-Zeichenfolgen auf Ungleichheit.</summary>
        <returns><see langword="false" />, wenn die Werte der <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />-Eigenschaft und der <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />-Eigenschaft für beide Objekte gleich sind, andernfalls <see langword="true" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingLength">
      <MemberSignature Language="C#" Value="public int TrailingLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrailingLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrailingLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TrailingLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TrailingLength : int" Usage="System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Längenwert für den nachfolgenden Rand des Zeichen ab, das ermittelt wurde.</summary>
        <value>Ein <see cref="T:System.Int32" />-Wert, der die Länge des nachfolgenden Rands darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Fall eines führenden Rands beträgt dieser Wert 0. Bei einem nachfolgenden Rand ist dieser Wert die Anzahl der Codepunkte bis zur nächsten gültigen Position der Einfügemarke.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
