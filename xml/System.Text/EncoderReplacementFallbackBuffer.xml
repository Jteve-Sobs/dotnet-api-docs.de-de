<Type Name="EncoderReplacementFallbackBuffer" FullName="System.Text.EncoderReplacementFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="105f7042a5825d08200d770b706a7f478b4e435b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82366162" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderReplacementFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderReplacementFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderReplacementFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderReplacementFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Ersatzeingabezeichenfolge dar, die verwendet wird, wenn das ursprüngliche Eingabezeichen nicht codiert werden kann. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist möglicherweise nicht möglich, ein Zeichen in eine äquivalente codierte Byte Sequenz zu konvertieren, wenn keine passende Codierung vorhanden ist. Ein häufiger Grund für einen Fehler bei der Codierung besteht darin, dass der Konvertierungs Vorgang eine Codepage verwendet, die das zu codierende Zeichen nicht darstellen kann.  
  
 Wenn das Eingabezeichen nicht in eine Ausgabe Byte Sequenz konvertiert werden kann, stellt ein <xref:System.Text.EncoderReplacementFallback?displayProperty=nameWithType> Objekt eine Ersatz Zeichenfolge bereit, die das ursprüngliche Eingabezeichen ersetzt. Die Ersetzungs Zeichenfolge initialisiert den Wert des <xref:System.Text.EncoderReplacementFallback> Objekts, und der Wert des <xref:System.Text.EncoderReplacementFallback> Objekts initialisiert den Wert eines <xref:System.Text.EncoderReplacementFallbackBuffer> Objekts. Der Wert eines <xref:System.Text.EncoderReplacementFallbackBuffer> Objekts wird als Ersatz Fall Back Puffer bezeichnet. Der Konvertierungs Vorgang codiert den Ersatz Fall Back Puffer anstelle des ursprünglichen Eingabe Zeichens und verarbeitet dann weiterhin den Rest der Eingabe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.EncoderReplacementFallback fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallback As EncoderReplacementFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderReplacementFallbackBuffer(System::Text::EncoderReplacementFallback ^ fallback);" />
      <MemberSignature Language="F#" Value="new System.Text.EncoderReplacementFallbackBuffer : System.Text.EncoderReplacementFallback -&gt; System.Text.EncoderReplacementFallbackBuffer" Usage="new System.Text.EncoderReplacementFallbackBuffer fallback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallback" Type="System.Text.EncoderReplacementFallback" />
      </Parameters>
      <Docs>
        <param name="fallback">Ein <see cref="T:System.Text.EncoderReplacementFallback" /> -Objekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />-Klasse unter Verwendung des Werts eines <see cref="T:System.Text.EncoderReplacementFallback" />-Objekts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bereitet den Ersatzfallbackpuffer darauf vor, die aktuelle Ersatzzeichenfolge zu verwenden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Ein Eingabezeichen. Dieser Parameter wird bei diesem Vorgang ignoriert, sofern keine Ausnahme ausgelöst wird.</param>
        <param name="index">Die Indexposition des Zeichens im Eingabepuffer. Dieser Parameter wird bei diesem Vorgang ignoriert.</param>
        <summary>Bereitet den Ersatzfallbackpuffer darauf vor, die aktuelle Ersatzzeichenfolge zu verwenden.</summary>
        <returns><see langword="true" />, wenn die Ersatzzeichenfolge nicht leer ist; <see langword="false" />, wenn die Ersatzzeichenfolge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> werden <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> aufgerufen, wenn in Ihrer Eingabe ein unbekanntes Zeichen auftritt. Wenn der Rückgabewert von <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> `true`ist, kann die aufrufende Methode die <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>-Methode aufrufen, um jedes Zeichen im Ersatz Fall Back Puffer abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Diese Methode wird erneut aufgerufen, bevor die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />-Methode alle Zeichen im Ersatzfallbackpuffer gelesen hat.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Das hohe Ersatzzeichen des Eingabepaars.</param>
        <param name="charUnknownLow">Das niedrige Ersatzzeichen des Eingabepaars.</param>
        <param name="index">Die Indexposition des Ersatzzeichenpaars im Eingabepuffer.</param>
        <summary>Gibt an, ob eine Ersatzzeichenfolge verwendet werden kann, wenn ein Ersatzzeichenpaar nicht codiert oder wenn das Ersatzzeichenpaar ignoriert werden kann. Die Parameter geben das Ersatzzeichenpaar und die Indexposition des Paars in der Eingabe an.</summary>
        <returns><see langword="true" />, wenn die Ersatzzeichenfolge nicht leer ist; <see langword="false" />, wenn die Ersatzzeichenfolge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> werden <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> aufgerufen, wenn in Ihrer Eingabe ein unbekanntes Zeichen auftritt. Wenn der Rückgabewert von <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> `true`ist, kann die aufrufende Methode die <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>-Methode aufrufen, um jedes Zeichen im Ersatz Fall Back Puffer abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Diese Methode wird erneut aufgerufen, bevor die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />-Methode alle Zeichen der Ersatzzeichenfolge gelesen hat.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert von <paramref name="charUnknownHigh" /> ist kleiner als U+D800 oder größer als U+D8FF.  
  
Oder 
Der Wert von <paramref name="charUnknownLow" /> ist kleiner als U+DC00 oder größer als U+DFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderReplacementFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das nächste Zeichen im Ersatzfallbackpuffer ab.</summary>
        <returns>Das nächste Unicode-Zeichen im Ersatzfallbackpuffer, das die Anwendung codieren kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> werden <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> aufgerufen, wenn in Ihrer Eingabe ein unbekanntes Ersatz Zeichenpaar oder ein unbekanntes Zeichen auftritt. Wenn der Rückgabewert von <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> `true`ist, kann die aufrufende Methode <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> aufrufen, um jedes Zeichen im Ersatz Fall Back Puffer abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderReplacementFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hierdurch greift der nächste Aufruf der <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />-Methode vor der aktuellen Zeichenposition auf die Zeichenposition im Ersatzfallbackpuffer zu.</summary>
        <returns><see langword="true" />, wenn die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />-Operation erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeichen im Ersatzfallbackpuffer ab, die noch zu verarbeiten sind.</summary>
        <value>Die Anzahl von Zeichen im Ersatzfallbackpuffer, die noch nicht verarbeitet worden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>-Methode gibt `true` zurück, wenn die <xref:System.Text.EncoderReplacementFallbackBuffer.Remaining%2A>-Eigenschaft nicht NULL ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="encoderReplacementFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert alle internen Zustandsinformationen und Daten in dieser Instanz von <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A>-Methode verwirft alle persistenten Zustandsinformationen und Daten, die die Ausgabe einer Ersetzungs Zeichenfolge steuern Unvorhersehbare Ergebnisse treten auf, wenn der Codierungs Vorgang nach dem Aufrufen der <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A>-Methode fortgesetzt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
