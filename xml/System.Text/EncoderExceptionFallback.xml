<Type Name="EncoderExceptionFallback" FullName="System.Text.EncoderExceptionFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="439438dc71ecdef6a9a9aa2a865e4c23ea3893f3" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86624821" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallback : System.Text.EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallback&#xA;Inherits EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallback sealed : System::Text::EncoderFallback" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallback = class&#xA;    inherit EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Text.EncoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2ccb2-101">Stellt einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für ein Eingabezeichen bereit, das nicht in eine Ausgabebytefolge konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="2ccb2-102">Der Fallback löst eine Ausnahme aus, wenn ein Eingabezeichen nicht in eine Ausgabebytefolge konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-102">The fallback throws an exception if an input character cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="2ccb2-103">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ccb2-104">Eine Codierung ordnet ein Unicode-Zeichen einer codierten Bytefolge zu, die anschließend an ein physisches Medium, z. b. einen Datenträger, oder über einen Kommunikationslink übertragen werden kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="2ccb2-105">Zeichen können auf verschiedene Weise zugeordnet werden, und eine bestimmte Codierung wird durch einen von der-Klasse abgeleiteten Typ dargestellt <xref:System.Text.Encoding> .</span><span class="sxs-lookup"><span data-stu-id="2ccb2-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="2ccb2-106">Insbesondere die-Methode des codierungtyps `GetBytes` codiert ein Zeichen in eine Byte Sequenz, und die- `GetChars` Methode decodiert eine Byte Sequenz in ein Zeichen.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="2ccb2-107">Ein Codierungs Vorgang kann fehlschlagen, wenn das Eingabezeichen nicht durch die Codierung dargestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-107">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="2ccb2-108">Beispielsweise kann ein- <xref:System.Text.ASCIIEncoding> Objekt kein Zeichen codieren, das einen Unicode-Code Punkt Wert ergibt, der außerhalb des Bereichs u + 0000 bis u + 007F liegt.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-108">For example, a <xref:System.Text.ASCIIEncoding> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="2ccb2-109">In Fällen, in denen eine Codierungs-oder Decodierungs Konvertierung nicht durchgeführt werden kann, stellt die .NET Framework einen als Fallback bezeichneten Fehler Behandlungs Mechanismus bereit.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="2ccb2-110">Die Anwendung kann den vordefinierten .NET Framework Encoder-Fall Back verwenden oder ein benutzerdefiniertes EncoderFallback erstellen, das von der <xref:System.Text.EncoderFallback> -Klasse und der-Klasse abgeleitet wird <xref:System.Text.EncoderFallbackBuffer> .</span><span class="sxs-lookup"><span data-stu-id="2ccb2-110">Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="2ccb2-111">Der .NET Framework stellt zwei vordefinierte Klassen bereit, die unterschiedliche Fall Back Strategien für die Behandlung von Codierungs Fehlern implementieren.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</span></span> <span data-ttu-id="2ccb2-112">Die- <xref:System.Text.EncoderReplacementFallback> Klasse ersetzt eine Zeichenfolge, die für alle Eingabezeichen bereitgestellt wird, die nicht konvertiert werden können</span><span class="sxs-lookup"><span data-stu-id="2ccb2-112">The <xref:System.Text.EncoderReplacementFallback> class substitutes a string provided for any input character that cannot be converted.</span></span> <span data-ttu-id="2ccb2-113">Die Ersatz Zeichenfolge wird anstelle des ungültigen Zeichens codiert, und der Codierungs Vorgang setzt den Rest der Eingabe fort.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-113">The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="2ccb2-114">Im Gegensatz dazu löst die- <xref:System.Text.EncoderExceptionFallback> Klasse eine aus, <xref:System.Text.EncoderFallbackException> Wenn ein ungültiges Zeichen gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-114">In contrast, the <xref:System.Text.EncoderExceptionFallback> class throws a <xref:System.Text.EncoderFallbackException> when an invalid character is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ccb2-115">Im folgenden Codebeispiel werden die <xref:System.Text.EncoderExceptionFallback> -Klasse und die- <xref:System.Text.EncoderFallbackException> Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-115">The following code example demonstrates the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cpp/fallEncExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cs/fallEncExc.cs#1)]
 [!code-vb[sys.txt.fallbackEncExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncExc/vb/fallEncExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="2ccb2-116">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="2ccb2-116">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ccb2-117">Initialisiert eine neue Instanz der <see cref="T:System.Text.EncoderExceptionFallback" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-117">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ccb2-118">Gibt einen Fallbackpuffer für einen Encoder zurück, der eine Ausnahme auslöst, wenn er eine Folge von Zeichen nicht in eine Bytefolge konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-118">Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</span></span></summary>
        <returns><span data-ttu-id="2ccb2-119">Ein Fallbackpuffer für einen Encoder, der eine Ausnahme auslöst, wenn er eine Folge von Zeichen nicht konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-119">An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ccb2-120">Ein Fall Back Puffer des Encoders ist für das empfangen und Verarbeiten von Zeichen zuständig, die ein Encoder nicht in eine Byte Sequenz konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-120">An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</span></span> <span data-ttu-id="2ccb2-121">Diese Methode gibt eine Instanz der- <xref:System.Text.EncoderExceptionFallbackBuffer> Klasse zurück, bei der es sich um eine Unterklasse der- <xref:System.Text.EncoderFallbackBuffer> Klasse handelt.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-121">This method returns an instance of the <xref:System.Text.EncoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.EncoderFallbackBuffer> class.</span></span> <span data-ttu-id="2ccb2-122">Ein- <xref:System.Text.EncoderExceptionFallbackBuffer> Objekt löst eine <xref:System.Text.EncoderFallbackException> Ausnahme aus, wenn Zeichen an seine-Methode übermittelt werden <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="2ccb2-122">An <xref:System.Text.EncoderExceptionFallbackBuffer> object throws an <xref:System.Text.EncoderFallbackException> exception whenever characters are passed to its <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2ccb2-123">Ein von der <see cref="T:System.Text.EncoderExceptionFallback" />-Klasse abgeleitetes Objekt.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-123">An object that derives from the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></param>
        <summary><span data-ttu-id="2ccb2-124">Gibt an, ob das aktuelle <see cref="T:System.Text.EncoderExceptionFallback" />-Objekt und ein angegebenes Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-124">Indicates whether the current <see cref="T:System.Text.EncoderExceptionFallback" /> object and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="2ccb2-125"><see langword="true" />, wenn <paramref name="value" /> nicht <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) ist und es sich um ein <see cref="T:System.Text.EncoderExceptionFallback" />-Objekt handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-125"><see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) and is a <see cref="T:System.Text.EncoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ccb2-126">Ruft den Hashcode für diese Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-126">Retrieves the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="2ccb2-127">Der Rückgabewert ist immer der gleiche beliebige Wert und hat keine besondere Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-127">The return value is always the same arbitrary value, and has no special significance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ccb2-128">Da die- <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> Methode immer denselben Wert zurückgibt, sollte die Anwendung diesen Wert nicht verwenden, um eine Instanz der-Klasse von einer anderen zu unterscheiden <xref:System.Text.EncoderExceptionFallback> .</span><span class="sxs-lookup"><span data-stu-id="2ccb2-128">Because the <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one instance of the <xref:System.Text.EncoderExceptionFallback> class from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ccb2-129">Die Höchstzahl von Zeichen, die diese Instanz zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="2ccb2-129">Gets the maximum number of characters this instance can return.</span></span></summary>
        <value><span data-ttu-id="2ccb2-130">Der Rückgabewert ist immer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="2ccb2-130">The return value is always zero.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
