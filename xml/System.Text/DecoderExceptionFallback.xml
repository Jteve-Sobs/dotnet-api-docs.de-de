<Type Name="DecoderExceptionFallback" FullName="System.Text.DecoderExceptionFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d7cc4129f0e5e9e245249bb359ed628c6565440" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86624925" /></Metadata><TypeSignature Language="C#" Value="public sealed class DecoderExceptionFallback : System.Text.DecoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DecoderExceptionFallback extends System.Text.DecoderFallback" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DecoderExceptionFallback&#xA;Inherits DecoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderExceptionFallback sealed : System::Text::DecoderFallback" />
  <TypeSignature Language="F#" Value="type DecoderExceptionFallback = class&#xA;    inherit DecoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DecoderExceptionFallback extends System.Text.DecoderFallback" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Text.DecoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="262a0-101">Stellt einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für eine codierte Eingabebytefolge bereit, die nicht in ein Eingabezeichen konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-101">Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character.</span></span> <span data-ttu-id="262a0-102">Der Fallback löst eine Ausnahme aus, statt die Eingabebytefolge zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="262a0-102">The fallback throws an exception instead of decoding the input byte sequence.</span></span> <span data-ttu-id="262a0-103">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="262a0-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="262a0-104">Eine Codierung ordnet ein Unicode-Zeichen einer codierten Bytefolge zu, die anschließend an ein physisches Medium, z. b. einen Datenträger, oder über einen Kommunikationslink übertragen werden kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="262a0-105">Zeichen können auf verschiedene Weise zugeordnet werden, und eine bestimmte Codierung wird durch einen von der-Klasse abgeleiteten Typ dargestellt <xref:System.Text.Encoding> .</span><span class="sxs-lookup"><span data-stu-id="262a0-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="262a0-106">Insbesondere die-Methode des codierungtyps `GetBytes` codiert ein Zeichen in eine Byte Sequenz, und die- `GetChars` Methode decodiert eine Byte Sequenz in ein Zeichen.</span><span class="sxs-lookup"><span data-stu-id="262a0-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="262a0-107">Ein Decodierungs Vorgang kann fehlschlagen, wenn die Eingabe Byte Sequenz nicht durch die Codierung zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-107">A decoding operation can fail if the input byte sequence cannot be mapped by the encoding.</span></span> <span data-ttu-id="262a0-108">Ein <xref:System.Text.ASCIIEncoding> Objekt kann z. b. keine Byte Sequenz decodieren, die ein Zeichen mit einem Code Punkt Wert ergibt, der außerhalb des Bereichs u + 0000 bis U + 007F liegt.</span><span class="sxs-lookup"><span data-stu-id="262a0-108">For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="262a0-109">In Fällen, in denen eine Codierungs-oder Decodierungs Konvertierung nicht durchgeführt werden kann, stellt die .NET Framework einen als Fallback bezeichneten Fehler Behandlungs Mechanismus bereit.</span><span class="sxs-lookup"><span data-stu-id="262a0-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="262a0-110">Die Anwendung kann den vordefinierten .NET Framework Decoder-Fall Back verwenden oder einen benutzerdefinierten Decoder-Fall Back erstellen, der von der <xref:System.Text.DecoderFallback> -Klasse und der-Klasse abgeleitet wird <xref:System.Text.DecoderFallbackBuffer> .</span><span class="sxs-lookup"><span data-stu-id="262a0-110">Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="262a0-111">Der .NET Framework stellt zwei vordefinierte Klassen bereit, die unterschiedliche Fall Back Strategien für die Behandlung von Decodierungs Fehlern implementieren.</span><span class="sxs-lookup"><span data-stu-id="262a0-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures.</span></span> <span data-ttu-id="262a0-112">Die- <xref:System.Text.DecoderReplacementFallback> Klasse ersetzt eine Zeichenfolge, die anstelle einer Eingabe Byte Sequenz bereitgestellt wird, die nicht konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-112">The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted.</span></span> <span data-ttu-id="262a0-113">Nachdem die Ersatz Zeichenfolge ausgegeben wurde, setzt der Decodierungs Vorgang den Rest der Eingabe fort.</span><span class="sxs-lookup"><span data-stu-id="262a0-113">After the substitute string is emitted, the decoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="262a0-114">Im Gegensatz dazu löst die- <xref:System.Text.DecoderExceptionFallback> Klasse eine aus, <xref:System.Text.DecoderFallbackException> Wenn eine ungültige Byte Sequenz auftritt.</span><span class="sxs-lookup"><span data-stu-id="262a0-114">In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="262a0-115">Im folgenden Codebeispiel werden die <xref:System.Text.DecoderExceptionFallback> -Klasse und die- <xref:System.Text.DecoderFallbackException> Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="262a0-115">The following code example demonstrates the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackDecExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cpp/fallDecExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackDecExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cs/fallDecExc.cs#1)]
 [!code-vb[sys.txt.fallbackDecExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackDecExc/vb/fallDecExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="262a0-116">Grundlegendes zu Codierungen</span><span class="sxs-lookup"><span data-stu-id="262a0-116">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DecoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DecoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="262a0-117">Initialisiert eine neue Instanz der <see cref="T:System.Text.DecoderExceptionFallback" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="262a0-117">Initializes a new instance of the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.DecoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::DecoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.DecoderFallbackBuffer" Usage="decoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="262a0-118">Gibt einen Fallbackpuffer für einen Decoder zurück, der eine Ausnahme auslöst, wenn er eine Bytefolge nicht in ein Zeichen konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-118">Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.</span></span></summary>
        <returns><span data-ttu-id="262a0-119">Ein Fallbackpuffer für einen Decoder, der eine Ausnahme auslöst, wenn er eine Bytefolge nicht konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-119">A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="262a0-120">Ein Decoderfallbackpuffer ist verantwortlich für das empfangen und Verarbeiten von Byte Sequenzen, die ein Decoder nicht in Zeichen konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-120">A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters.</span></span> <span data-ttu-id="262a0-121">Diese Methode gibt eine Instanz der- <xref:System.Text.DecoderExceptionFallbackBuffer> Klasse zurück, bei der es sich um eine Unterklasse der- <xref:System.Text.DecoderFallbackBuffer> Klasse handelt.</span><span class="sxs-lookup"><span data-stu-id="262a0-121">This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class.</span></span> <span data-ttu-id="262a0-122">Ein-Objekt löst eine <xref:System.Text.DecoderExceptionFallbackBuffer> <xref:System.Text.DecoderFallbackException> Ausnahme aus, wenn eine Sequenz von Bytes an die zugehörige-Methode übermittelt wird <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> .</span><span class="sxs-lookup"><span data-stu-id="262a0-122">A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="262a0-123">Ein von der <see cref="T:System.Text.DecoderExceptionFallback" />-Klasse abgeleitetes Objekt.</span><span class="sxs-lookup"><span data-stu-id="262a0-123">An object that derives from the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span></span></param>
        <summary><span data-ttu-id="262a0-124">Gibt an, ob das aktuelle <see cref="T:System.Text.DecoderExceptionFallback" />-Objekt und ein angegebenes Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="262a0-124">Indicates whether the current <see cref="T:System.Text.DecoderExceptionFallback" /> object and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="262a0-125"><see langword="true" />, wenn <paramref name="value" /> nicht <see langword="null" /> und ein <see cref="T:System.Text.DecoderExceptionFallback" />-Objekt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="262a0-125"><see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> and is a <see cref="T:System.Text.DecoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="262a0-126">Ruft den Hashcode für diese Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="262a0-126">Retrieves the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="262a0-127">Der Rückgabewert ist immer der gleiche beliebige Wert und hat keine besondere Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="262a0-127">The return value is always the same arbitrary value, and has no special significance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="262a0-128">Da die- <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> Methode immer denselben Wert zurückgibt, sollte die Anwendung diesen Wert nicht verwenden, um ein <xref:System.Text.DecoderExceptionFallback> Objekt von einem anderen zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="262a0-128">Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="262a0-129">Die Höchstzahl von Zeichen, die diese Instanz zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="262a0-129">Gets the maximum number of characters this instance can return.</span></span></summary>
        <value><span data-ttu-id="262a0-130">Der Rückgabewert ist immer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="262a0-130">The return value is always zero.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
