<Type Name="DecoderExceptionFallback" FullName="System.Text.DecoderExceptionFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34b1a4a583811027615e6a5b6ecd9ef95616109a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DecoderExceptionFallback : System.Text.DecoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DecoderExceptionFallback extends System.Text.DecoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DecoderExceptionFallback&#xA;Inherits DecoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderExceptionFallback sealed : System::Text::DecoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.DecoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="efd48-101">Stellt einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für eine codierte Eingabebytefolge bereit, die nicht in ein Eingabezeichen konvertiert werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efd48-101">Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character.</span>
      </span>
      <span data-ttu-id="efd48-102">Der Fallback löst eine Ausnahme aus, statt die Eingabebytefolge zu decodieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efd48-102">The fallback throws an exception instead of decoding the input byte sequence.</span>
      </span>
      <span data-ttu-id="efd48-103">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efd48-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd48-104">Eine Codierung ordnet ein Unicode-Zeichen eine codierte Bytefolge, die anschließend auf einem physischen Medium, z. B. einen Datenträger oder über eine kommunikationsverbindung übertragen werden kann.</span><span class="sxs-lookup"><span data-stu-id="efd48-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="efd48-105">Zeichen können auf verschiedene Weise zugeordnet werden, und einer bestimmten Codierung dargestellt wird, von einem Typ abgeleitet wurde. die <xref:System.Text.Encoding> Klasse.</span><span class="sxs-lookup"><span data-stu-id="efd48-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="efd48-106">Insbesondere des Codierungstyps des `GetBytes` Methode codiert ein Zeichen in eine Bytefolge, und die `GetChars` -Methode decodiert eine Bytefolge in Zeichen.</span><span class="sxs-lookup"><span data-stu-id="efd48-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="efd48-107">Ein Decodierungsvorgang kann fehlschlagen, wenn die Eingabebytefolge nicht von der Codierung zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="efd48-107">A decoding operation can fail if the input byte sequence cannot be mapped by the encoding.</span></span> <span data-ttu-id="efd48-108">Angenommen, ein <xref:System.Text.ASCIIEncoding> Objekt konnte nicht decodiert eine Bytefolge, die ein Zeichen mit einem Codepunktwert, die außerhalb des Bereichs U + 0000 bis U + 007F ist.</span><span class="sxs-lookup"><span data-stu-id="efd48-108">For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="efd48-109">In Fällen, in denen eine codieren oder Decodieren Konvertierung nicht durchgeführt werden kann, enthält einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="efd48-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="efd48-110">Ihre Anwendung kann die vordefinierten .NET Framework-DecoderFallback verwenden oder Erstellung einen benutzerdefinierten Decoderfallback mithilfe der <xref:System.Text.DecoderFallback> und <xref:System.Text.DecoderFallbackBuffer> Klassen.</span><span class="sxs-lookup"><span data-stu-id="efd48-110">Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="efd48-111">.NET Framework bietet zwei vordefinierte Klassen, die verschiedene Fallbackstrategien für die Behandlung von Fehler bei der Decodierung Konvertierung zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="efd48-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures.</span></span> <span data-ttu-id="efd48-112">Die <xref:System.Text.DecoderReplacementFallback> -Klasse ersetzt eine Zeichenfolge, die bereitgestellt werden, statt die Eingabebytefolge, die konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="efd48-112">The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted.</span></span> <span data-ttu-id="efd48-113">Nach der Ersatzzeichenfolge ausgegeben wird, wird der Decodierungsvorgang fortgesetzt, konvertieren den Rest der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="efd48-113">After the substitute string is emitted, the decoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="efd48-114">Im Gegensatz dazu die <xref:System.Text.DecoderExceptionFallback> -Klasse löst eine <xref:System.Text.DecoderFallbackException> Wenn eine ungültige Bytesequenz festgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="efd48-114">In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd48-115">Das folgende Codebeispiel veranschaulicht die <xref:System.Text.DecoderExceptionFallback> und <xref:System.Text.DecoderFallbackException> Klassen.</span><span class="sxs-lookup"><span data-stu-id="efd48-115">The following code example demonstrates the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackDecExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cpp/fallDecExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackDecExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cs/fallDecExc.cs#1)]
 [!code-vb[sys.txt.fallbackDecExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackDecExc/vb/fallDecExc.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DecoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DecoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efd48-116">Initialisiert eine neue Instanz der <see cref="T:System.Text.DecoderExceptionFallback" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-116">Initializes a new instance of the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.DecoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::DecoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efd48-117">Gibt einen Fallbackpuffer für einen Decoder zurück, der eine Ausnahme auslöst, wenn er eine Bytefolge nicht in ein Zeichen konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-117">Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efd48-118">Ein Fallbackpuffer für einen Decoder, der eine Ausnahme auslöst, wenn er eine Bytefolge nicht konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-118">A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd48-119">Ein Decoderfallbackpuffer ist verantwortlich für das empfangen und Behandeln von Bytefolgen, die ein Decoder Zeichen nicht konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="efd48-119">A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters.</span></span> <span data-ttu-id="efd48-120">Diese Methode gibt eine Instanz von der <xref:System.Text.DecoderExceptionFallbackBuffer> Klasse, die eine Unterklasse von der <xref:System.Text.DecoderFallbackBuffer> Klasse.</span><span class="sxs-lookup"><span data-stu-id="efd48-120">This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class.</span></span> <span data-ttu-id="efd48-121">Ein <xref:System.Text.DecoderExceptionFallbackBuffer> -Objekt löst eine <xref:System.Text.DecoderFallbackException> Ausnahme immer eine Sequenz von Bytes wird übergeben, um seine <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="efd48-121">A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="efd48-122">Ein von der <see cref="T:System.Text.DecoderExceptionFallback" />-Klasse abgeleitetes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-122">An object that derives from the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efd48-123">Gibt an, ob das aktuelle <see cref="T:System.Text.DecoderExceptionFallback" />-Objekt und ein angegebenes Objekt gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-123">Indicates whether the current <see cref="T:System.Text.DecoderExceptionFallback" /> object and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efd48-124">
            <see langword="true" />, wenn <paramref name="value" /> nicht <see langword="null" /> und ein <see cref="T:System.Text.DecoderExceptionFallback" />-Objekt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-124">
              <see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> and is a <see cref="T:System.Text.DecoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efd48-125">Ruft den Hashcode für diese Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-125">Retrieves the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efd48-126">Der Rückgabewert ist immer der gleiche beliebige Wert und hat keine besondere Bedeutung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-126">The return value is always the same arbitrary value, and has no special significance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd48-127">Da die <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> Methode gibt immer den gleichen Wert zurück, die Anwendung sollte nicht mit diesem Wert können unterscheiden <xref:System.Text.DecoderExceptionFallback> von einem anderen Objekt.</span><span class="sxs-lookup"><span data-stu-id="efd48-127">Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efd48-128">Die Höchstzahl von Zeichen, die diese Instanz zurückgeben kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-128">Gets the maximum number of characters this instance can return.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efd48-129">Der Rückgabewert ist immer 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="efd48-129">The return value is always zero.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>