<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb4d2ada5bb8d79753e89f43de48c6c0d364a8b2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallback = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für ein Eingabezeichen bereit, das nicht in eine codierte Ausgabebytefolge konvertiert werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Codierung ordnet eine codierte Bytefolge ein Unicode-Zeichen. Einer bestimmten Codierung wird dargestellt, von einem Typ abgeleitet wird, die die <xref:System.Text.Encoding> Klasse. Insbesondere ein Zeichen durch Aufrufen der Codierungstyp in eine Bytefolge codiert ist <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> -Methode und die Bytesequenz wird auf ein Array von Zeichen oder eine Zeichenfolge decodiert, durch Aufrufen der <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> oder <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> Methode.  
  
 Ein Codierungsvorgang kann fehlschlagen, wenn das eingegebene Zeichen von der Codierung dargestellt werden kann. Angenommen, ein <xref:System.Text.ASCIIEncoding> Objekt kann kein, dessen Unicode-Codepunktwert außerhalb des Bereichs U + 0000 bis U + 007F liegt, Zeichen zu codieren.  
  
 Wenn eine Codierung Konvertierung nicht durchgeführt werden kann, enthält einen als Fallback bezeichneten Fehlerbehandlungsmechanismus für .NET Framework. Die Anwendung kann mithilfe der .NET Framework-Encoder vordefinierten Zugriffe oder erstellt einen benutzerdefinierten Encoderfallback mithilfe der <xref:System.Text.EncoderFallback> und <xref:System.Text.EncoderFallbackBuffer> Klassen.  
  
 <xref:System.Text.EncoderFallback> und <xref:System.Text.EncoderFallbackBuffer> werden die Basisklassen für alle Codierung fallback-Handler in .NET Framework. Sie unterstützen die folgenden drei Arten von Fallback Behandlung von Mechanismen:  
  
-   Fallback mit ähnlichen Zeichen, das eine annähernde Entsprechung ordnet gültige Unicode-Zeichen, die nicht codiert werden können. Z. B. einen ähnlichen fallback-Handler für das <xref:System.Text.ASCIIEncoding> Klasse möglicherweise Æ (U + 00 C 6) AE (U + 0041 + U + 0045) zuordnen. Ein ähnlichen fallback-Handler möglicherweise auch implementiert, um einen Buchstaben (z. B. Kyrillisch) Markt in eine andere (z. B. Lateinisch oder römischen). .NET Framework bietet keine öffentlichen fallback mit ähnlichen Zeichen-Implementierungen.  
  
-   Ersatzfallback, welche ersetzt jedes, die Zeichen sein nicht mit einer vordefinierten Zeichenfolge codiert. .NET Framework bietet einen vordefinierten Ersatz-fallback-Handler. Die <xref:System.Text.EncoderReplacementFallback> Klasse ersetzt jede Bytesequenz, die nicht decodiert werden kann, durch ein Fragezeichen ("?", oder U + 003F) oder ein Ersatz-Zeichen (U + FFFD). Sie können die Ersetzungszeichenfolge anpassen, indem ein Ersatzzeichen angeben, im Aufruf der <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> Konstruktor. Nachdem der Ersatzzeichenfolge ausgegeben wird, wird der Codierung Vorgang fortgesetzt, konvertieren den Rest der Eingabe.  
  
-   Ausnahmefallback, die eine Ausnahme auslöst, wenn ein Zeichen nicht codiert werden kann. .NET Framework stellt einen vordefinierte Ausnahme-fallback-Handler bereit. Die <xref:System.Text.EncoderExceptionFallback> -Klasse löst ein <xref:System.Text.EncoderFallbackException> Wenn ein ungültiges Zeichen gefunden wird, und der Codierungsvorgang wird beendet.  
  
 Wenn Sie eine benutzerdefinierte Lösung implementieren möchten, müssen Sie die folgenden abstrakten Member überschreiben die <xref:System.Text.EncoderFallback> Klasse:  
  
-   Die <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Methode, die eine Instanz der Klasse abgeleitet zurückgibt <xref:System.Text.EncoderFallbackBuffer>. Je nach Art des fallback-Handler, die Sie entwickeln, die <xref:System.Text.EncoderFallbackBuffer> Implementierung ist verantwortlich für das Ausführen der Zuordnung oder einen Ersatz oder für die Ausnahme auszulösen.  
  
-   Die <xref:System.Text.EncoderFallback.MaxCharCount%2A> Eigenschaft, die die maximale Anzahl von Zeichen zurückgibt, die die fallbackimplementierung zurückgeben können. Für ein fallback Ausnahmehandler sollte der Wert 0 (null) sein.  
  
 Weitere Informationen zur Codierung, Decodierung und Fallbackstrategien finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Text.EncoderFallback" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.Text.EncoderFallbackBuffer" />-Klasse.</summary>
        <returns>Ein Objekt, das einen Fallbackpuffer für einen Encoder bereitstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Objekt abgeleitet <xref:System.Text.EncoderFallbackBuffer> , die für die Ausführung des fallback Vorgangs verantwortlich ist. Z. B. der vordefinierten <xref:System.Text.EncoderFallback> Implementierungen in .NET Framework, die <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> Methode gibt ein <xref:System.Text.EncoderReplacementFallbackBuffer> -Objekt, und die <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> Methode gibt ein <xref:System.Text.EncoderExceptionFallbackBuffer> Objekt.  
  
 Die <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> -Methode wird vom Encoder aufgerufen, wenn das erste Zeichen erkannt wird, das nicht codiert werden kann. Die <xref:System.Text.EncoderFallbackBuffer> von dieser Methode zurückgegebene Objekt stellt die fallbackimplementierung bereit und ist verantwortlich für die Rückgabe der Bytearray, das ersetzt wird, oder der Zeichen, das nicht codiert werden kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ExceptionFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das eine Ausnahme auslöst, wenn ein Eingabezeichen nicht codiert werden kann.</summary>
        <value>Ein von der <see cref="T:System.Text.EncoderFallback" />-Klasse abgeleiteter Typ. Der Standardwert ist ein <see cref="T:System.Text.EncoderExceptionFallback" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse wird die maximale Anzahl von Zeichen abgerufen, die das aktuelle <see cref="T:System.Text.EncoderFallback" />-Objekt zurückgeben kann.</summary>
        <value>Die maximale Anzahl von Zeichen, die das aktuelle <see cref="T:System.Text.EncoderFallback" />-Objekt zurückgeben kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für ein fallback Ausnahmehandler sollte diese Eigenschaft auf 0 (null) zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ReplacementFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das eine Ersatzzeichenfolge anstelle eines Eingabezeichens ausgibt, die nicht codiert werden kann.</summary>
        <value>Ein von der <see cref="T:System.Text.EncoderFallback" />-Klasse abgeleiteter Typ. Der Standardwert ist ein <see cref="T:System.Text.EncoderReplacementFallback" />-Objekt, das unbekannte Eingabezeichen durch das FRAGEZEICHEN-Zeichen ("?", U+003F) ersetzt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>