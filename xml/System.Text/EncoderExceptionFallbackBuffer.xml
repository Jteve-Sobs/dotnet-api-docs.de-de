<Type Name="EncoderExceptionFallbackBuffer" FullName="System.Text.EncoderExceptionFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37d8e2de2628b90258933786c294d34045571b07" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75119152" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderExceptionFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0606f-101">Löst eine <see cref="T:System.Text.EncoderFallbackException" /> aus, wenn ein Eingabezeichen nicht in eine codierte Ausgabebytefolge konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0606f-101">Throws <see cref="T:System.Text.EncoderFallbackException" /> when an input character cannot be converted to an encoded output byte sequence.</span></span> <span data-ttu-id="0606f-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="0606f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-103">Ein häufiger Grund für einen Fehler bei einem Codierungs-oder Decodierungs Vorgang besteht darin, dass die zugrunde liegende Codierungs Klasse keine Zuordnung zwischen einem Zeichen und einer entsprechenden Byte Sequenz bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0606f-103">A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</span></span> <span data-ttu-id="0606f-104">Wenn das Eingabezeichen nicht in eine Ausgabe Byte Sequenz konvertiert werden kann, ruft der Codierungs Vorgang die <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>-Methode auf, die <xref:System.Text.EncoderFallbackException>auslöst.</span><span class="sxs-lookup"><span data-stu-id="0606f-104">If the input character cannot be converted to an output byte sequence, the encoding operation calls the <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> method, which throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 <span data-ttu-id="0606f-105">Die <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType>-Klasse, die einen in einem Codierungs Vorgang verwendeten Datenpuffer darstellt, ist die Basisklasse für die <xref:System.Text.EncoderExceptionFallbackBuffer>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0606f-105">The <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType> class, which represents a data buffer used in an encoding operation, is the base class for the <xref:System.Text.EncoderExceptionFallbackBuffer> class.</span></span> <span data-ttu-id="0606f-106">Allerdings stellt die <xref:System.Text.EncoderExceptionFallbackBuffer>-Klasse anstelle eines Daten Puffers ein Standardverhalten dar, bei dem eine Ausnahme ausgelöst wird, wenn ein Codierungs Vorgang fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="0606f-106">However, instead of a data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</span></span> <span data-ttu-id="0606f-107">Es ist kein tatsächlicher Datenpuffer vorhanden, und die Elemente, die zum Bearbeiten eines solchen Puffers entworfen wurden, funktionieren nicht.</span><span class="sxs-lookup"><span data-stu-id="0606f-107">No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0606f-108">Initialisiert eine neue Instanz der <see cref="T:System.Text.EncoderExceptionFallbackBuffer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0606f-108">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0606f-109">Löst eine Ausnahme aus, da das Eingabezeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0606f-109">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="0606f-110">Der nominelle Rückgabewert wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="0606f-110">The nominal return value is not used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="0606f-111">Ein Eingabezeichen.</span><span class="sxs-lookup"><span data-stu-id="0606f-111">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="0606f-112">Die Indexposition des Zeichens im Eingabepuffer.</span><span class="sxs-lookup"><span data-stu-id="0606f-112">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="0606f-113">Löst eine Ausnahme aus, da das Eingabezeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0606f-113">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="0606f-114">Parameter geben den Wert und die Indexposition des Zeichens an, das nicht konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0606f-114">Parameters specify the value and index position of the character that cannot be converted.</span></span></summary>
        <returns><span data-ttu-id="0606f-115">Keine</span><span class="sxs-lookup"><span data-stu-id="0606f-115">None.</span></span> <span data-ttu-id="0606f-116">Es wird kein Wert zurückgegeben, da die <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" />-Methode immer eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="0606f-116">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-117">Die Methoden <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> werden <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> aufgerufen, wenn in Ihrer Eingabe ein unbekanntes Zeichen auftritt.</span><span class="sxs-lookup"><span data-stu-id="0606f-117">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter an unknown character in their input.</span></span> <span data-ttu-id="0606f-118">Als Antwort löst <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> immer <xref:System.Text.EncoderFallbackException>aus.</span><span class="sxs-lookup"><span data-stu-id="0606f-118">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws <xref:System.Text.EncoderFallbackException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="0606f-119">Der <paramref name="charUnknown" />-Parameter darf nicht codiert sein.</span><span class="sxs-lookup"><span data-stu-id="0606f-119"><paramref name="charUnknown" /> cannot be encoded.</span></span> <span data-ttu-id="0606f-120">Diese Methode löst immer eine Ausnahme aus, die den Wert des <paramref name="charUnknown" />-Parameters und des <paramref name="index" />-Parameters meldet.</span><span class="sxs-lookup"><span data-stu-id="0606f-120">This method always throws an exception that reports the value of the <paramref name="charUnknown" /> and <paramref name="index" /> parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="0606f-121">Das hohe Ersatzzeichen des Eingabepaars.</span><span class="sxs-lookup"><span data-stu-id="0606f-121">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="0606f-122">Das niedrige Ersatzzeichen des Eingabepaars.</span><span class="sxs-lookup"><span data-stu-id="0606f-122">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="0606f-123">Die Indexposition des Ersatzzeichenpaars im Eingabepuffer.</span><span class="sxs-lookup"><span data-stu-id="0606f-123">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="0606f-124">Löst eine Ausnahme aus, da das Eingabezeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0606f-124">Throws an exception because the input character cannot be encoded.</span></span> <span data-ttu-id="0606f-125">Die Parameter geben den Wert und die Indexposition des Ersatzzeichenpaars in der Eingabe an. Der nominelle Rückgabewert wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="0606f-125">Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</span></span></summary>
        <returns><span data-ttu-id="0606f-126">Keine</span><span class="sxs-lookup"><span data-stu-id="0606f-126">None.</span></span> <span data-ttu-id="0606f-127">Es wird kein Wert zurückgegeben, da die <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />-Methode immer eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="0606f-127">No value is returned because the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> method always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-128">Die Methoden <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> werden <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> aufgerufen, wenn Sie in Ihrer Eingabe ein Ersatz Zeichenpaar treffen.</span><span class="sxs-lookup"><span data-stu-id="0606f-128">The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Encoder.Convert%2A> methods call <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="0606f-129">Als Antwort wird von <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> immer eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0606f-129">In response, <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="0606f-130">Das vom <paramref name="charUnknownHigh" />-Parameter und vom <paramref name="charUnknownLow" />-Parameter dargestellte Zeichen kann nicht codiert werden.</span><span class="sxs-lookup"><span data-stu-id="0606f-130">The character represented by <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" /> cannot be encoded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0606f-131"><paramref name="charUnknownHigh" /> oder <paramref name="charUnknownLow" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="0606f-131">Either <paramref name="charUnknownHigh" /> or <paramref name="charUnknownLow" /> is invalid.</span></span> <span data-ttu-id="0606f-132"><paramref name="charUnknownHigh" /> liegt nicht zwischen U+D800 und U+DBFF (einschließlich), oder <paramref name="charUnknownLow" /> liegt nicht zwischen U+DC00 und U+DFFF (einschließlich).</span><span class="sxs-lookup"><span data-stu-id="0606f-132"><paramref name="charUnknownHigh" /> is not between U+D800 and U+DBFF, inclusive, or <paramref name="charUnknownLow" /> is not between U+DC00 and U+DFFF, inclusive.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderExceptionFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0606f-133">Ruft das nächste Zeichen im Ausnahmefallbackpuffer ab.</span><span class="sxs-lookup"><span data-stu-id="0606f-133">Retrieves the next character in the exception fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="0606f-134">Der Rückgabewert ist immer das Unicode-Zeichen NULL (U+0000).</span><span class="sxs-lookup"><span data-stu-id="0606f-134">The return value is always the Unicode character, NULL (U+0000).</span></span>  
  
 <span data-ttu-id="0606f-135">Es ist ein Rückgabewert definiert, der allerdings unveränderlich ist, da diese Methode eine abstrakte Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="0606f-135">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-136">Da <xref:System.Text.EncoderExceptionFallbackBuffer> keinen tatsächlichen Ausnahme Datenpuffer aufweist, gibt die <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A>-Methode immer das Unicode-Null-Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="0606f-136">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A> method always returns the Unicode NULL character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderExceptionFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0606f-137">Hierdurch kann der nächste Aufruf der <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" />-Methode auf die Zeichenposition im Ausnahmedatenpuffer vor der aktuellen Position zugreifen.</span><span class="sxs-lookup"><span data-stu-id="0606f-137">Causes the next call to the <see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> method to access the exception data buffer character position that is prior to the current position.</span></span></summary>
        <returns><span data-ttu-id="0606f-138">Der Rückgabewert ist immer <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0606f-138">The return value is always <see langword="false" />.</span></span>  
  
<span data-ttu-id="0606f-139">Es ist ein Rückgabewert definiert, der allerdings unveränderlich ist, da diese Methode eine abstrakte Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="0606f-139">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-140">Da <xref:System.Text.EncoderExceptionFallbackBuffer> keinen tatsächlichen Ausnahme Datenpuffer aufweist, gibt die <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A>-Methode immer `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="0606f-140">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A> method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0606f-141">Ruft die Anzahl von Zeichen im aktuellen <see cref="T:System.Text.EncoderExceptionFallbackBuffer" />-Objekt ab, das noch verarbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0606f-141">Gets the number of characters in the current <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="0606f-142">Der Rückgabewert ist immer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="0606f-142">The return value is always zero.</span></span>  
  
 <span data-ttu-id="0606f-143">Es ist ein Rückgabewert definiert, der allerdings unveränderlich ist, da diese Methode eine abstrakte Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="0606f-143">A return value is defined, although it is unchanging, because this method implements an abstract method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0606f-144">Da <xref:System.Text.EncoderExceptionFallbackBuffer> keinen tatsächlichen Ausnahme Datenpuffer aufweist, gibt die <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A>-Eigenschaft immer 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="0606f-144">Because <xref:System.Text.EncoderExceptionFallbackBuffer> has no actual exception data buffer, the <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A> property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
