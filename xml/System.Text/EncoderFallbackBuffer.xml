<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="116c4743750d62c78bf7a85e6e5dff453828390b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c42b2-101">Stellt einen Puffer bereit, der einen Fallback-Handler zulässt, der eine alternative Zeichenfolge an einen Encoder zurückzugibt, wenn eine Eingabezeichen nicht codiert werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c42b2-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-102">Eine Codierung definiert eine Zuordnung zwischen einem Unicode-Zeichen und eine codierte Bytefolge.</span><span class="sxs-lookup"><span data-stu-id="c42b2-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="c42b2-103">Ein Codierungsvorgang, der eine Eingabezeichen in eine Ausgabebytefolge konvertiert, schlägt fehl, wenn für ein bestimmtes Zeichen keine Zuordnung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="c42b2-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="c42b2-104">.NET Framework bietet einen Mechanismus, der als Fallback bezeichneten, wenn eine Konvertierung nicht durchgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="c42b2-105">Alle Encoder-fallback-Handler müssen Folgendes implementieren:</span><span class="sxs-lookup"><span data-stu-id="c42b2-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="c42b2-106">Ein EncoderFallback, der durch eine Klasse dargestellt wird abgeleitet aus dem <xref:System.Text.EncoderFallback> Klasse.</span><span class="sxs-lookup"><span data-stu-id="c42b2-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="c42b2-107">Ein Encoderfallbackpuffer, der dargestellt wird, von einem Typ abgeleitet wurde. die <xref:System.Text.EncoderFallbackBuffer> -Klasse, die eine Zeichenfolge an den Konvertierungsvorgang zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="c42b2-108">Drei Strategien können Zugriffe Konvertierungsfehler behandelt:</span><span class="sxs-lookup"><span data-stu-id="c42b2-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="c42b2-109">Zuordnung mit ähnlichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="c42b2-109">Best-fit mapping.</span></span> <span data-ttu-id="c42b2-110">Der Encoderfallbackpuffer kann es sich um eine Zeichenfolge zurückgeben, die eine Annäherung an die eingegebene Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="c42b2-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="c42b2-111">.NET Framework bietet einen ähnlichen öffentlichen <xref:System.Text.EncoderFallbackBuffer> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c42b2-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="c42b2-112">Ersatz.</span><span class="sxs-lookup"><span data-stu-id="c42b2-112">Replacement.</span></span> <span data-ttu-id="c42b2-113">Der Encoderfallbackpuffer kann eine Zeichenfolge zurückgeben, z. B. ein Fragezeichen ("?"), das angibt, dass ein Zeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="c42b2-114">In .NET Framework die <xref:System.Text.EncoderReplacementFallback> und <xref:System.Text.EncoderReplacementFallbackBuffer> Klassen bieten eine öffentliche Ersatz Fallbackpuffer-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="c42b2-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="c42b2-115">Der Konstruktor, der die <xref:System.Text.EncoderReplacementFallback> -Klasse können Sie die Ersetzungszeichenfolge definieren.</span><span class="sxs-lookup"><span data-stu-id="c42b2-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="c42b2-116">Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="c42b2-116">Exception.</span></span> <span data-ttu-id="c42b2-117">Die <xref:System.Text.EncoderFallbackBuffer> Implementierung löst eine Ausnahme, die angibt, dass ein Zeichen nicht codiert werden kann, und den Codierungsvorgang beendet aus.</span><span class="sxs-lookup"><span data-stu-id="c42b2-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="c42b2-118">In diesem Fall muss die fallback-Handler Bereitstellen einer <xref:System.Text.EncoderFallbackBuffer> Implementierung, obwohl er keine Zeichenfolge an den Encoder zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c42b2-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="c42b2-119">In .NET Framework die <xref:System.Text.EncoderExceptionFallback> und <xref:System.Text.EncoderExceptionFallbackBuffer> Klassen bieten eine fallbackimplementierung öffentliche Ausnahme, die auslöst, ein <xref:System.Text.EncoderFallbackException> Wenn ein Zeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="c42b2-120">Der Puffer in ein <xref:System.Text.EncoderFallbackBuffer> Implementierung stellt die gesamte Zeichenfolge, die an den Encoder als Antwort auf einen Encoder fallback zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c42b2-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="c42b2-121">Im Allgemeinen umfassen Implementierungen auch Zustandsinformationen, z. B. der Index der nächsten zurückzugebenden Zeichens an der Encoder und die Anzahl der verbleibenden Zeichen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c42b2-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="c42b2-122">Da <xref:System.Text.EncoderFallbackBuffer> ist eine abstrakte Klasse dafür, dass abgeleitete Klassen, die mindestens die folgenden Member implementieren:</span><span class="sxs-lookup"><span data-stu-id="c42b2-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="c42b2-123">Die überladenen <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> -Methode, die vom Encoder aufgerufen wird, wenn ein Zeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="c42b2-124">Der Encoder übergibt zwei Angaben für die Implementierung Fallbackpuffer: das Zeichen oder Ersatzzeichenpaar an, das nicht codiert werden kann und der Index des Zeichens in der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="c42b2-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="c42b2-125">In einem Encoder fallback-Ausnahmehandler wird die Ausnahme bei dieser Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c42b2-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="c42b2-126">Andernfalls der Methodenrückgabe `true` Wenn als Fallback vorhanden sind oder `false` Wenn dies nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="c42b2-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="c42b2-127">Die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> -Methode, die wiederholt vom Encoder aufgerufen wird die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true`.</span><span class="sxs-lookup"><span data-stu-id="c42b2-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="c42b2-128">In aufeinander folgenden Aufrufen sollte der Handler jedes Zeichen in seinem Puffer zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c42b2-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="c42b2-129">Wenn alle Zeichen zurückgegeben wurde, sollte es U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c42b2-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="c42b2-130">Ein Ausnahmehandler gibt immer U + 0000 zurück.</span><span class="sxs-lookup"><span data-stu-id="c42b2-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="c42b2-131">Die <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Methode, die versucht, verschieben Sie den Zeiger der vorherigen Position im Puffer und gibt an, ob die Verschiebung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="c42b2-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="c42b2-132">Ein Ausnahmehandler immer gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="c42b2-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="c42b2-133">Die <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> -Eigenschaft, womit die Anzahl der verbleibenden Zeichen, die an den Encoder zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="c42b2-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="c42b2-134">Ein Ausnahme-fallback-Handler gibt immer 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="c42b2-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-135">Initialisiert eine neue Instanz der <see cref="T:System.Text.EncoderFallbackBuffer" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-136">Gibt an, ob eine Ersatzzeichenfolge verfügbar ist, wenn die ursprüngliche Eingabe nicht codiert werden kann, oder ob die ursprüngliche Eingabe ignoriert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="c42b2-137">Ein Eingabezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-137">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c42b2-138">Die Indexposition des Zeichens im Eingabepuffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-138">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c42b2-139">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, das angegebene Eingabezeichen zu behandeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c42b2-140">
            <see langword="true" />, wenn der Fallbackpuffer <paramref name="charUnknown" /> verarbeiten kann; <see langword="false" />, wenn der Fallbackpuffer <paramref name="charUnknown" /> ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-140">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-141">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> und <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> -Methode <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> , wenn sie ein unbekanntes Eingabezeichen treffen, das nicht codiert werden können.</span><span class="sxs-lookup"><span data-stu-id="c42b2-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="c42b2-142">Ein Rückgabewert von `true` gibt an, dass der Fallbackpuffer des Eingabezeichens die aufrufende Methode verarbeiten kann aufrufen, wodurch die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Methode, um jedes Zeichen dem Fallbackpuffer abzurufen.</span><span class="sxs-lookup"><span data-stu-id="c42b2-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="c42b2-143">Da es keine einzelne Zeichen verarbeitet die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Methode in einem Ausnahmehandler fallback löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c42b2-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="c42b2-144">Das hohe Ersatzzeichen des Eingabepaars.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-144">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="c42b2-145">Das niedrige Ersatzzeichen des Eingabepaars.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-145">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c42b2-146">Die Indexposition des Ersatzzeichenpaars im Eingabepuffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-146">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c42b2-147">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, das angegebene Ersatzzeichenpaar zu behandeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c42b2-148">
            <see langword="true" />, wenn der Fallbackpuffer <paramref name="charUnknownHigh" /> und <paramref name="charUnknownLow" /> verarbeiten kann; <see langword="false" />, wenn der Fallbackpuffer das Ersatzzeichenpaar ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-148">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-149">Die <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> und <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> -Methode <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> treten ein Ersatzzeichenpaar in der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="c42b2-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="c42b2-150">Ein Rückgabewert von `true` gibt an, dass der Fallbackpuffer das Ersatzzeichenpaar die aufrufende Methode verarbeiten kann aufrufen, wodurch die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Methode, um jedes Zeichen dem Fallbackpuffer abzurufen.</span><span class="sxs-lookup"><span data-stu-id="c42b2-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="c42b2-151">Da es keine einzelne Zeichen verarbeitet die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Methode in einem Ausnahmehandler fallback löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="c42b2-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-152">Ruft beim Überschreiben in einer abgeleiteten Klasse das nächste Zeichen im Fallbackpuffer ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c42b2-153">Ruft das nächste Zeichen im Fallbackpuffer ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-153">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-154">Ruft ein Codierungsvorgang die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Methode, wenn der Vorgang ein unbekanntes Zeichen oder Ersatzzeichenpaar in der Eingabe gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="c42b2-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="c42b2-155">Z. B. im Fall von ein fallback, Ersatz, wenn die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true`, besteht eine Ersatzzeichenfolge, die anstelle einer unbekannten Eingabe codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="c42b2-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="c42b2-156">Ruft die Codierung der <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Methode wiederholt und ruft den Ersatz ein Zeichen zu einem Zeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="c42b2-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="c42b2-157">Wenn alle Zeichen im Fallbackpuffer an den Encoder zurückgegeben wurden die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Methode sollte U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c42b2-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="c42b2-158">Für eine Ausnahme-fallback-Handler die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Methode sollte U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="c42b2-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-159">Veranlasst beim Überschreiben in einer abgeleiteten Klasse, dass der nächste Aufruf an die <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />-Methode auf die Datenpufferzeichenposition vor der aktuellen Zeichenposition zugreift.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c42b2-160">
            <see langword="true" />, wenn die <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />-Operation erfolgreich war, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-160">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-161">Ein fallback Ausnahmehandler zurückgeben sollte `false`.</span><span class="sxs-lookup"><span data-stu-id="c42b2-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-162">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen im aktuellen <see cref="T:System.Text.EncoderFallbackBuffer" />-Objekt ab, die noch zu verarbeiten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c42b2-163">Die Anzahl der Zeichen im aktuellen Fallbackpuffer, die noch nicht verarbeitet worden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-163">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42b2-164">Die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true` Wenn <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> ein Wert ungleich NULL ist.</span><span class="sxs-lookup"><span data-stu-id="c42b2-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="c42b2-165">Für eine Ausnahme-fallback-Handler die <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> Methode sollte 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="c42b2-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c42b2-166">Initialisiert alle Daten und Zustandsinformationen, die diesen Fallbackpuffer betreffen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c42b2-166">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c42b2-167">Nach dem Aufruf der <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> -Methode, die <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> Eigenschaft sollte "0" zurückgegeben der <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> Methode sollte U + 0000 zurückgeben und die <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> -Methode zurückgeben sollte <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c42b2-167">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>