<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="748554519d020de48d8e50683dd41e5941def3d1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78785157" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d905-101">Stellt einen Puffer bereit, der einen Fallback-Handler zulässt, der eine alternative Zeichenfolge an einen Encoder zurückzugibt, wenn eine Eingabezeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-102">Eine Codierung definiert eine Zuordnung zwischen einem Unicode-Zeichen und einer codierten Bytefolge.</span><span class="sxs-lookup"><span data-stu-id="8d905-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="8d905-103">Ein Codierungs Vorgang, der ein Eingabezeichen in eine Ausgabe Byte Sequenz konvertiert, schlägt fehl, wenn für ein bestimmtes Zeichen keine Zuordnung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8d905-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="8d905-104">Der .NET Framework bietet einen Fehler Behandlungs Mechanismus, der als Fallback bezeichnet wird, wenn keine Konvertierung ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="8d905-105">Alle encoderfallbackhandler müssen Folgendes implementieren:</span><span class="sxs-lookup"><span data-stu-id="8d905-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="8d905-106">Ein EncoderFallback, der durch eine von der <xref:System.Text.EncoderFallback>-Klasse abgeleitete Klasse dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d905-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="8d905-107">Ein Fall Back Puffer für einen Encoder, der durch einen von der <xref:System.Text.EncoderFallbackBuffer>-Klasse abgeleiteten Typ dargestellt wird, der eine Zeichenfolge an den Konvertierungs Vorgang zurückgeben kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="8d905-108">Fallbacks können drei Strategien zur Behandlung von Konvertierungs Fehlern verwenden:</span><span class="sxs-lookup"><span data-stu-id="8d905-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="8d905-109">Zuordnung mit einer optimalen Anpassung.</span><span class="sxs-lookup"><span data-stu-id="8d905-109">Best-fit mapping.</span></span> <span data-ttu-id="8d905-110">Der Fall Back Puffer des Encoders kann eine Zeichenfolge zurückgeben, die eine nahe Näherung zum Eingabezeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d905-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="8d905-111">Der .NET Framework stellt keine öffentliche <xref:System.Text.EncoderFallbackBuffer> Implementierung mit optimaler Anpassung bereit.</span><span class="sxs-lookup"><span data-stu-id="8d905-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="8d905-112">Ersatz.</span><span class="sxs-lookup"><span data-stu-id="8d905-112">Replacement.</span></span> <span data-ttu-id="8d905-113">Der Fall Back Puffer des Encoders kann eine Zeichenfolge zurückgeben, z. b. ein Fragezeichen ("?"), das angibt, dass ein Zeichen nicht codiert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="8d905-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="8d905-114">In der .NET Framework stellen die Klassen <xref:System.Text.EncoderReplacementFallback> und <xref:System.Text.EncoderReplacementFallbackBuffer> eine öffentliche Ersatz Fall Back Puffer Implementierung bereit.</span><span class="sxs-lookup"><span data-stu-id="8d905-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="8d905-115">Der Konstruktor der <xref:System.Text.EncoderReplacementFallback>-Klasse ermöglicht es Ihnen, die Ersetzungs Zeichenfolge zu definieren.</span><span class="sxs-lookup"><span data-stu-id="8d905-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="8d905-116">Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="8d905-116">Exception.</span></span> <span data-ttu-id="8d905-117">Die <xref:System.Text.EncoderFallbackBuffer>-Implementierung löst eine Ausnahme aus, die angibt, dass ein Zeichen nicht codiert werden kann, und beendet den Codierungs Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8d905-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="8d905-118">In diesem Fall muss der Fall Back Handler eine <xref:System.Text.EncoderFallbackBuffer> Implementierung bereitstellen, obwohl er keine Zeichenfolge an den Encoder zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8d905-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="8d905-119">In der .NET Framework stellen die Klassen <xref:System.Text.EncoderExceptionFallback> und <xref:System.Text.EncoderExceptionFallbackBuffer> eine öffentliche Ausnahmefall Back Implementierung dar, die eine <xref:System.Text.EncoderFallbackException> auslöst, wenn ein Zeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="8d905-120">Der Puffer in einer <xref:System.Text.EncoderFallbackBuffer>-Implementierung stellt die gesamte Zeichenfolge dar, die als Reaktion auf einen EncoderFallback an den Encoder zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="8d905-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="8d905-121">Im Allgemeinen enthalten Implementierungen auch Zustandsinformationen, z. b. den Index des nächsten Zeichens, das an den Encoder zurückgegeben werden soll, und die Anzahl der verbleibenden Zeichen, die zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8d905-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="8d905-122">Da <xref:System.Text.EncoderFallbackBuffer> eine abstrakte Klasse ist, ist es erforderlich, dass abgeleitete Klassen mindestens die folgenden Member implementieren:</span><span class="sxs-lookup"><span data-stu-id="8d905-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="8d905-123">Die überladene <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Methode, die vom Encoder aufgerufen wird, wenn ein Zeichen nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="8d905-124">Der Encoder übergibt zwei Informationen an die Implementierung des Fall Back Puffers: das Zeichen oder Ersatz Zeichenpaar, das nicht codiert werden konnte, und den Index des Zeichens in der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="8d905-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="8d905-125">In einem Ausnahmehandler für einen EncoderFallback wird die Ausnahme in dieser Methode ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8d905-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="8d905-126">Andernfalls gibt die Methode `true` zurück, wenn Sie einen Fallback bereitstellt, oder `false`, wenn dies nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="8d905-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="8d905-127">Die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode, die wiederholt vom Encoder aufgerufen wird, wenn die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A>-Methode `true`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8d905-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="8d905-128">Bei aufeinander folgenden Aufrufen sollte der Handler jedes Zeichen im Puffer zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="8d905-129">Wenn alle Zeichen zurückgegeben wurden, sollte Sie U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="8d905-130">Ein Ausnahmehandler gibt immer U + 0000 zurück.</span><span class="sxs-lookup"><span data-stu-id="8d905-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="8d905-131">Die <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A>-Methode, die versucht, den Zeiger auf die vorherige Position im Puffer zu verschieben und angibt, ob die Verschiebung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="8d905-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="8d905-132">Ein Ausnahmehandler gibt immer `false`zurück.</span><span class="sxs-lookup"><span data-stu-id="8d905-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="8d905-133">Die <xref:System.Text.EncoderFallbackBuffer.Remaining%2A>-Eigenschaft, die die Anzahl der verbleibenden Zeichen angibt, die an den Encoder zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8d905-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="8d905-134">Ein Ausnahmefall Back Handler gibt immer 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="8d905-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="8d905-135">Zeichencodierung in .NET Framework</span><span class="sxs-lookup"><span data-stu-id="8d905-135">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="8d905-136">Beispiel: Cyrillic in Roman Transliterations Utility</span><span class="sxs-lookup"><span data-stu-id="8d905-136">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d905-137">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Text.EncoderFallbackBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="8d905-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d905-138">Gibt an, ob eine Ersatzzeichenfolge verfügbar ist, wenn die ursprüngliche Eingabe nicht codiert werden kann, oder ob die ursprüngliche Eingabe ignoriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8d905-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="8d905-139">Ein Eingabezeichen.</span><span class="sxs-lookup"><span data-stu-id="8d905-139">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="8d905-140">Die Indexposition des Zeichens im Eingabepuffer.</span><span class="sxs-lookup"><span data-stu-id="8d905-140">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="8d905-141">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, das angegebene Eingabezeichen zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="8d905-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns><span data-ttu-id="8d905-142"><see langword="true" />, wenn der Fallbackpuffer <paramref name="charUnknown" /> verarbeiten kann; <see langword="false" />, wenn der Fallbackpuffer <paramref name="charUnknown" /> ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8d905-142"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-143">Die Methoden <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> und <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> werden <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> aufgerufen, wenn Sie auf ein unbekanntes Eingabezeichen stoßen, das nicht codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="8d905-144">Der Rückgabewert `true` gibt an, dass der Fall Back Puffer das Eingabezeichen verarbeiten kann. Dies bewirkt, dass die aufrufende Methode die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode aufruft, um jedes Zeichen des Fall Back Puffers abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8d905-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="8d905-145">Da keine einzelnen Zeichen verarbeitet werden, löst die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A>-Methode in einem Ausnahmefall Back Handler eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="8d905-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="8d905-146">Das hohe Ersatzzeichen des Eingabepaars.</span><span class="sxs-lookup"><span data-stu-id="8d905-146">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="8d905-147">Das niedrige Ersatzzeichen des Eingabepaars.</span><span class="sxs-lookup"><span data-stu-id="8d905-147">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="8d905-148">Die Indexposition des Ersatzzeichenpaars im Eingabepuffer.</span><span class="sxs-lookup"><span data-stu-id="8d905-148">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="8d905-149">Bereitet beim Überschreiben in einer abgeleiteten Klasse den Fallbackpuffer darauf vor, das angegebene Ersatzzeichenpaar zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="8d905-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="8d905-150"><see langword="true" />, wenn der Fallbackpuffer <paramref name="charUnknownHigh" /> und <paramref name="charUnknownLow" /> verarbeiten kann; <see langword="false" />, wenn der Fallbackpuffer das Ersatzzeichenpaar ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8d905-150"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-151">Die Methoden <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> und <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> werden <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> aufgerufen, wenn Sie in Ihrer Eingabe ein Ersatz Zeichenpaar treffen.</span><span class="sxs-lookup"><span data-stu-id="8d905-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="8d905-152">Der Rückgabewert `true` gibt an, dass der Fall Back Puffer das Ersatz Zeichenpaar verarbeiten kann. Dies bewirkt, dass die aufrufende Methode die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode aufruft, um jedes Zeichen des Fall Back Puffers abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8d905-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="8d905-153">Da keine einzelnen Zeichen verarbeitet werden, löst die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A>-Methode in einem Ausnahmefall Back Handler eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="8d905-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d905-154">Ruft beim Überschreiben in einer abgeleiteten Klasse das nächste Zeichen im Fallbackpuffer ab.</span><span class="sxs-lookup"><span data-stu-id="8d905-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="8d905-155">Ruft das nächste Zeichen im Fallbackpuffer ab.</span><span class="sxs-lookup"><span data-stu-id="8d905-155">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-156">Ein Codierungs Vorgang ruft die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A>-Methode auf, wenn der Vorgang ein unbekanntes Zeichen oder Ersatz Zeichenpaar in der Eingabe findet.</span><span class="sxs-lookup"><span data-stu-id="8d905-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="8d905-157">Wenn z. b. bei einem Ersatz Fall Back die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Methode `true`zurückgibt, ist eine Ersatz Zeichenfolge vorhanden, die anstelle der unbekannten Eingabe codiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d905-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="8d905-158">Der Codierungs Vorgang ruft die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode wiederholt auf und ruft die Ersatz Zeichenfolge ein Zeichen gleichzeitig ab.</span><span class="sxs-lookup"><span data-stu-id="8d905-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="8d905-159">Wenn alle Zeichen im Fall Back Puffer an den Encoder zurückgegeben wurden, sollte die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="8d905-160">Bei einem Ausnahmefall Back Handler sollte die <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>-Methode U + 0000 zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d905-161">Veranlasst beim Überschreiben in einer abgeleiteten Klasse, dass der nächste Aufruf an die <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />-Methode auf die Datenpufferzeichenposition vor der aktuellen Zeichenposition zugreift.</span><span class="sxs-lookup"><span data-stu-id="8d905-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns><span data-ttu-id="8d905-162"><see langword="true" />, wenn die <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />-Operation erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d905-162"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-163">Ein Ausnahmefall Back Handler sollte `false`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d905-164">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeichen im aktuellen <see cref="T:System.Text.EncoderFallbackBuffer" />-Objekt ab, die noch zu verarbeiten sind.</span><span class="sxs-lookup"><span data-stu-id="8d905-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="8d905-165">Die Anzahl der Zeichen im aktuellen Fallbackpuffer, die noch nicht verarbeitet worden sind.</span><span class="sxs-lookup"><span data-stu-id="8d905-165">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d905-166">Die <xref:System.Text.EncoderFallbackBuffer.Fallback%2A>-Methode gibt `true` zurück, wenn <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> ein Wert ungleich 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="8d905-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="8d905-167">Bei einem Ausnahmefall Back Handler sollte die <xref:System.Text.DecoderFallbackBuffer.Remaining%2A>-Methode 0 (null) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d905-168">Initialisiert alle Daten und Zustandsinformationen, die diesen Fallbackpuffer betreffen.</span><span class="sxs-lookup"><span data-stu-id="8d905-168">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d905-169">Nachdem die <see cref="M:System.Text.EncoderFallbackBuffer.Reset" />-Methode aufgerufen wurde, sollte die <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" />-Eigenschaft den Wert 0 zurückgeben, die <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />-Methode sollte U + 0000 zurückgeben, und die <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />-Methode sollte <see langword="false" />zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="8d905-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
